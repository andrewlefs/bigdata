// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package myudfs;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code GangPosition}
   *
   * <pre>
   * 帮派职位枚举
   * </pre>
   */
  public enum GangPosition
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GANG_POSITION_BOSS = 1;</code>
     *
     * <pre>
     *帮主
     * </pre>
     */
    GANG_POSITION_BOSS(0, 1),
    /**
     * <code>GANG_POSITION_ELDER = 2;</code>
     *
     * <pre>
     * 长老
     * </pre>
     */
    GANG_POSITION_ELDER(1, 2),
    /**
     * <code>GANG_POSITION_MEMBER = 3;</code>
     *
     * <pre>
     * 帮众
     * </pre>
     */
    GANG_POSITION_MEMBER(2, 3),
    ;

    /**
     * <code>GANG_POSITION_BOSS = 1;</code>
     *
     * <pre>
     *帮主
     * </pre>
     */
    public static final int GANG_POSITION_BOSS_VALUE = 1;
    /**
     * <code>GANG_POSITION_ELDER = 2;</code>
     *
     * <pre>
     * 长老
     * </pre>
     */
    public static final int GANG_POSITION_ELDER_VALUE = 2;
    /**
     * <code>GANG_POSITION_MEMBER = 3;</code>
     *
     * <pre>
     * 帮众
     * </pre>
     */
    public static final int GANG_POSITION_MEMBER_VALUE = 3;


    public final int getNumber() { return value; }

    public static GangPosition valueOf(int value) {
      switch (value) {
        case 1: return GANG_POSITION_BOSS;
        case 2: return GANG_POSITION_ELDER;
        case 3: return GANG_POSITION_MEMBER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GangPosition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GangPosition>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GangPosition>() {
            public GangPosition findValueByNumber(int number) {
              return GangPosition.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return myudfs.Common.getDescriptor().getEnumTypes().get(0);
    }

    private static final GangPosition[] VALUES = values();

    public static GangPosition valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GangPosition(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:GangPosition)
  }

  /**
   * Protobuf enum {@code DFStage}
   *
   * <pre>
   * 斗法活动阶段，不同的阶段斗法面板显示的内容不同
   * </pre>
   */
  public enum DFStage
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STAGE_NOT_START_NO_CHAMPIONS = 0;</code>
     *
     * <pre>
     * 未开始阶段_无冠军
     * </pre>
     */
    STAGE_NOT_START_NO_CHAMPIONS(0, 0),
    /**
     * <code>STAGE_NOT_START = 1;</code>
     *
     * <pre>
     * 未开始阶段
     * </pre>
     */
    STAGE_NOT_START(1, 1),
    /**
     * <code>STAGE_TRIALS = 2;</code>
     *
     * <pre>
     * 选拔赛阶段
     * </pre>
     */
    STAGE_TRIALS(2, 2),
    /**
     * <code>STAGE_TOP32 = 3;</code>
     *
     * <pre>
     * 32强阶段
     * </pre>
     */
    STAGE_TOP32(3, 3),
    /**
     * <code>STAGE_TOP16 = 4;</code>
     *
     * <pre>
     * 16强阶段
     * </pre>
     */
    STAGE_TOP16(4, 4),
    /**
     * <code>STAGE_TOP8 = 5;</code>
     *
     * <pre>
     * 8强阶段
     * </pre>
     */
    STAGE_TOP8(5, 5),
    /**
     * <code>STAGE_SEMI_FINAL = 6;</code>
     *
     * <pre>
     * 半决赛
     * </pre>
     */
    STAGE_SEMI_FINAL(6, 6),
    /**
     * <code>STAGE_FINAL = 7;</code>
     *
     * <pre>
     * 决赛
     * </pre>
     */
    STAGE_FINAL(7, 7),
    ;

    /**
     * <code>STAGE_NOT_START_NO_CHAMPIONS = 0;</code>
     *
     * <pre>
     * 未开始阶段_无冠军
     * </pre>
     */
    public static final int STAGE_NOT_START_NO_CHAMPIONS_VALUE = 0;
    /**
     * <code>STAGE_NOT_START = 1;</code>
     *
     * <pre>
     * 未开始阶段
     * </pre>
     */
    public static final int STAGE_NOT_START_VALUE = 1;
    /**
     * <code>STAGE_TRIALS = 2;</code>
     *
     * <pre>
     * 选拔赛阶段
     * </pre>
     */
    public static final int STAGE_TRIALS_VALUE = 2;
    /**
     * <code>STAGE_TOP32 = 3;</code>
     *
     * <pre>
     * 32强阶段
     * </pre>
     */
    public static final int STAGE_TOP32_VALUE = 3;
    /**
     * <code>STAGE_TOP16 = 4;</code>
     *
     * <pre>
     * 16强阶段
     * </pre>
     */
    public static final int STAGE_TOP16_VALUE = 4;
    /**
     * <code>STAGE_TOP8 = 5;</code>
     *
     * <pre>
     * 8强阶段
     * </pre>
     */
    public static final int STAGE_TOP8_VALUE = 5;
    /**
     * <code>STAGE_SEMI_FINAL = 6;</code>
     *
     * <pre>
     * 半决赛
     * </pre>
     */
    public static final int STAGE_SEMI_FINAL_VALUE = 6;
    /**
     * <code>STAGE_FINAL = 7;</code>
     *
     * <pre>
     * 决赛
     * </pre>
     */
    public static final int STAGE_FINAL_VALUE = 7;


    public final int getNumber() { return value; }

    public static DFStage valueOf(int value) {
      switch (value) {
        case 0: return STAGE_NOT_START_NO_CHAMPIONS;
        case 1: return STAGE_NOT_START;
        case 2: return STAGE_TRIALS;
        case 3: return STAGE_TOP32;
        case 4: return STAGE_TOP16;
        case 5: return STAGE_TOP8;
        case 6: return STAGE_SEMI_FINAL;
        case 7: return STAGE_FINAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DFStage>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DFStage>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DFStage>() {
            public DFStage findValueByNumber(int number) {
              return DFStage.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return myudfs.Common.getDescriptor().getEnumTypes().get(1);
    }

    private static final DFStage[] VALUES = values();

    public static DFStage valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DFStage(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DFStage)
  }

  /**
   * Protobuf enum {@code DFTrialsGroup}
   *
   * <pre>
   * 选拔赛分组
   * </pre>
   */
  public enum DFTrialsGroup
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GROUP_A = 1;</code>
     *
     * <pre>
     * A组
     * </pre>
     */
    GROUP_A(0, 1),
    /**
     * <code>GROUP_B = 2;</code>
     *
     * <pre>
     * B组
     * </pre>
     */
    GROUP_B(1, 2),
    /**
     * <code>GROUP_C = 3;</code>
     *
     * <pre>
     * C组
     * </pre>
     */
    GROUP_C(2, 3),
    /**
     * <code>GROUP_D = 4;</code>
     *
     * <pre>
     * D组
     * </pre>
     */
    GROUP_D(3, 4),
    ;

    /**
     * <code>GROUP_A = 1;</code>
     *
     * <pre>
     * A组
     * </pre>
     */
    public static final int GROUP_A_VALUE = 1;
    /**
     * <code>GROUP_B = 2;</code>
     *
     * <pre>
     * B组
     * </pre>
     */
    public static final int GROUP_B_VALUE = 2;
    /**
     * <code>GROUP_C = 3;</code>
     *
     * <pre>
     * C组
     * </pre>
     */
    public static final int GROUP_C_VALUE = 3;
    /**
     * <code>GROUP_D = 4;</code>
     *
     * <pre>
     * D组
     * </pre>
     */
    public static final int GROUP_D_VALUE = 4;


    public final int getNumber() { return value; }

    public static DFTrialsGroup valueOf(int value) {
      switch (value) {
        case 1: return GROUP_A;
        case 2: return GROUP_B;
        case 3: return GROUP_C;
        case 4: return GROUP_D;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DFTrialsGroup>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DFTrialsGroup>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DFTrialsGroup>() {
            public DFTrialsGroup findValueByNumber(int number) {
              return DFTrialsGroup.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return myudfs.Common.getDescriptor().getEnumTypes().get(2);
    }

    private static final DFTrialsGroup[] VALUES = values();

    public static DFTrialsGroup valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DFTrialsGroup(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DFTrialsGroup)
  }

  /**
   * Protobuf enum {@code SecurityCodeFreezeState}
   *
   * <pre>
   * 安全码冻结状态
   * </pre>
   */
  public enum SecurityCodeFreezeState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNFREEZE = 0;</code>
     *
     * <pre>
     * 未冻结
     * </pre>
     */
    UNFREEZE(0, 0),
    /**
     * <code>FREEZE_CLEAR_CODE = 1;</code>
     *
     * <pre>
     * 密码清除冻结
     * </pre>
     */
    FREEZE_CLEAR_CODE(1, 1),
    /**
     * <code>FREEZE_INPUT_ERROR = 2;</code>
     *
     * <pre>
     * 输入错误冻结
     * </pre>
     */
    FREEZE_INPUT_ERROR(2, 2),
    ;

    /**
     * <code>UNFREEZE = 0;</code>
     *
     * <pre>
     * 未冻结
     * </pre>
     */
    public static final int UNFREEZE_VALUE = 0;
    /**
     * <code>FREEZE_CLEAR_CODE = 1;</code>
     *
     * <pre>
     * 密码清除冻结
     * </pre>
     */
    public static final int FREEZE_CLEAR_CODE_VALUE = 1;
    /**
     * <code>FREEZE_INPUT_ERROR = 2;</code>
     *
     * <pre>
     * 输入错误冻结
     * </pre>
     */
    public static final int FREEZE_INPUT_ERROR_VALUE = 2;


    public final int getNumber() { return value; }

    public static SecurityCodeFreezeState valueOf(int value) {
      switch (value) {
        case 0: return UNFREEZE;
        case 1: return FREEZE_CLEAR_CODE;
        case 2: return FREEZE_INPUT_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SecurityCodeFreezeState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SecurityCodeFreezeState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SecurityCodeFreezeState>() {
            public SecurityCodeFreezeState findValueByNumber(int number) {
              return SecurityCodeFreezeState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return myudfs.Common.getDescriptor().getEnumTypes().get(3);
    }

    private static final SecurityCodeFreezeState[] VALUES = values();

    public static SecurityCodeFreezeState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SecurityCodeFreezeState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SecurityCodeFreezeState)
  }

  /**
   * Protobuf enum {@code ArenaStage}
   *
   * <pre>
   * 竞技场活动阶段
   * </pre>
   */
  public enum ArenaStage
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NOT_STARTED = 1;</code>
     *
     * <pre>
     * 未开始阶段:该阶段显示下次比赛开始倒计时
     * </pre>
     */
    NOT_STARTED(0, 1),
    /**
     * <code>START_TEAM_SET = 2;</code>
     *
     * <pre>
     * 开始阶段_设置队伍:该阶段显示比赛结束倒计时
     * </pre>
     */
    START_TEAM_SET(1, 2),
    /**
     * <code>START_SEEK_PARTNER = 3;</code>
     *
     * <pre>
     * 开始阶段_寻找队友:1.确认队伍后进入该阶段 2.该阶段显示队友列表和寻找按钮
     * </pre>
     */
    START_SEEK_PARTNER(2, 3),
    /**
     * <code>START_SEEK_RIVAL = 4;</code>
     *
     * <pre>
     * 开始阶段_寻找对手:数据同上
     * </pre>
     */
    START_SEEK_RIVAL(3, 4),
    /**
     * <code>START_FIGHT = 5;</code>
     *
     * <pre>
     * 开始阶段_战斗:该阶段主要显示对阵双方
     * </pre>
     */
    START_FIGHT(4, 5),
    /**
     * <code>START_SEEK_NEXT_RIVAL = 6;</code>
     *
     * <pre>
     *开始阶段_寻找下一个对手:显示加上x秒后自动寻找
     * </pre>
     */
    START_SEEK_NEXT_RIVAL(5, 6),
    ;

    /**
     * <code>NOT_STARTED = 1;</code>
     *
     * <pre>
     * 未开始阶段:该阶段显示下次比赛开始倒计时
     * </pre>
     */
    public static final int NOT_STARTED_VALUE = 1;
    /**
     * <code>START_TEAM_SET = 2;</code>
     *
     * <pre>
     * 开始阶段_设置队伍:该阶段显示比赛结束倒计时
     * </pre>
     */
    public static final int START_TEAM_SET_VALUE = 2;
    /**
     * <code>START_SEEK_PARTNER = 3;</code>
     *
     * <pre>
     * 开始阶段_寻找队友:1.确认队伍后进入该阶段 2.该阶段显示队友列表和寻找按钮
     * </pre>
     */
    public static final int START_SEEK_PARTNER_VALUE = 3;
    /**
     * <code>START_SEEK_RIVAL = 4;</code>
     *
     * <pre>
     * 开始阶段_寻找对手:数据同上
     * </pre>
     */
    public static final int START_SEEK_RIVAL_VALUE = 4;
    /**
     * <code>START_FIGHT = 5;</code>
     *
     * <pre>
     * 开始阶段_战斗:该阶段主要显示对阵双方
     * </pre>
     */
    public static final int START_FIGHT_VALUE = 5;
    /**
     * <code>START_SEEK_NEXT_RIVAL = 6;</code>
     *
     * <pre>
     *开始阶段_寻找下一个对手:显示加上x秒后自动寻找
     * </pre>
     */
    public static final int START_SEEK_NEXT_RIVAL_VALUE = 6;


    public final int getNumber() { return value; }

    public static ArenaStage valueOf(int value) {
      switch (value) {
        case 1: return NOT_STARTED;
        case 2: return START_TEAM_SET;
        case 3: return START_SEEK_PARTNER;
        case 4: return START_SEEK_RIVAL;
        case 5: return START_FIGHT;
        case 6: return START_SEEK_NEXT_RIVAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ArenaStage>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ArenaStage>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ArenaStage>() {
            public ArenaStage findValueByNumber(int number) {
              return ArenaStage.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return myudfs.Common.getDescriptor().getEnumTypes().get(4);
    }

    private static final ArenaStage[] VALUES = values();

    public static ArenaStage valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ArenaStage(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ArenaStage)
  }

  public interface CardItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *数据库生成的id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *数据库生成的id
     * </pre>
     */
    long getId();

    // optional int32 cardId = 2;
    /**
     * <code>optional int32 cardId = 2;</code>
     *
     * <pre>
     * 卡片配置表中的id
     * </pre>
     */
    boolean hasCardId();
    /**
     * <code>optional int32 cardId = 2;</code>
     *
     * <pre>
     * 卡片配置表中的id
     * </pre>
     */
    int getCardId();

    // optional int32 lv = 3;
    /**
     * <code>optional int32 lv = 3;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 3;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    int getLv();

    // optional int32 stage = 4;
    /**
     * <code>optional int32 stage = 4;</code>
     *
     * <pre>
     * 阶层
     * </pre>
     */
    boolean hasStage();
    /**
     * <code>optional int32 stage = 4;</code>
     *
     * <pre>
     * 阶层
     * </pre>
     */
    int getStage();

    // optional uint64 date = 5;
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * 获得时间
     * </pre>
     */
    boolean hasDate();
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * 获得时间
     * </pre>
     */
    long getDate();

    // optional int32 trainHp = 6;
    /**
     * <code>optional int32 trainHp = 6;</code>
     *
     * <pre>
     * 修炼hp
     * </pre>
     */
    boolean hasTrainHp();
    /**
     * <code>optional int32 trainHp = 6;</code>
     *
     * <pre>
     * 修炼hp
     * </pre>
     */
    int getTrainHp();

    // optional int32 trainAtk = 7;
    /**
     * <code>optional int32 trainAtk = 7;</code>
     *
     * <pre>
     *修炼atk
     * </pre>
     */
    boolean hasTrainAtk();
    /**
     * <code>optional int32 trainAtk = 7;</code>
     *
     * <pre>
     *修炼atk
     * </pre>
     */
    int getTrainAtk();

    // optional int32 trainDef = 8;
    /**
     * <code>optional int32 trainDef = 8;</code>
     *
     * <pre>
     * 修炼def
     * </pre>
     */
    boolean hasTrainDef();
    /**
     * <code>optional int32 trainDef = 8;</code>
     *
     * <pre>
     * 修炼def
     * </pre>
     */
    int getTrainDef();

    // optional int32 trainMagicAtk = 9;
    /**
     * <code>optional int32 trainMagicAtk = 9;</code>
     *
     * <pre>
     *修炼magicAtk
     * </pre>
     */
    boolean hasTrainMagicAtk();
    /**
     * <code>optional int32 trainMagicAtk = 9;</code>
     *
     * <pre>
     *修炼magicAtk
     * </pre>
     */
    int getTrainMagicAtk();

    // optional int32 trainMagicDef = 10;
    /**
     * <code>optional int32 trainMagicDef = 10;</code>
     *
     * <pre>
     *修炼magicDef
     * </pre>
     */
    boolean hasTrainMagicDef();
    /**
     * <code>optional int32 trainMagicDef = 10;</code>
     *
     * <pre>
     *修炼magicDef
     * </pre>
     */
    int getTrainMagicDef();

    // optional int32 trainSuccessRate = 11;
    /**
     * <code>optional int32 trainSuccessRate = 11;</code>
     *
     * <pre>
     *修炼成功率
     * </pre>
     */
    boolean hasTrainSuccessRate();
    /**
     * <code>optional int32 trainSuccessRate = 11;</code>
     *
     * <pre>
     *修炼成功率
     * </pre>
     */
    int getTrainSuccessRate();

    // repeated .MapItem cardSlots = 12;
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getCardSlotsList();
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    myudfs.Common.MapItem getCardSlots(int index);
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    int getCardSlotsCount();
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getCardSlotsOrBuilderList();
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getCardSlotsOrBuilder(
        int index);

    // repeated .EquipmentItems equipments = 14;
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    java.util.List<myudfs.Common.EquipmentItems> 
        getEquipmentsList();
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    myudfs.Common.EquipmentItems getEquipments(int index);
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    int getEquipmentsCount();
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    java.util.List<? extends myudfs.Common.EquipmentItemsOrBuilder> 
        getEquipmentsOrBuilderList();
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    myudfs.Common.EquipmentItemsOrBuilder getEquipmentsOrBuilder(
        int index);

    // repeated .ShenTongItem shenTongs = 15;
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    java.util.List<myudfs.Common.ShenTongItem> 
        getShenTongsList();
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    myudfs.Common.ShenTongItem getShenTongs(int index);
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    int getShenTongsCount();
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    java.util.List<? extends myudfs.Common.ShenTongItemOrBuilder> 
        getShenTongsOrBuilderList();
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    myudfs.Common.ShenTongItemOrBuilder getShenTongsOrBuilder(
        int index);

    // optional int32 zhanFaId = 16;
    /**
     * <code>optional int32 zhanFaId = 16;</code>
     *
     * <pre>
     *当前的战法(配置id)
     * </pre>
     */
    boolean hasZhanFaId();
    /**
     * <code>optional int32 zhanFaId = 16;</code>
     *
     * <pre>
     *当前的战法(配置id)
     * </pre>
     */
    int getZhanFaId();

    // optional int32 freshZhanFaId = 17;
    /**
     * <code>optional int32 freshZhanFaId = 17;</code>
     *
     * <pre>
     * 领悟的战法(配置id)
     * </pre>
     */
    boolean hasFreshZhanFaId();
    /**
     * <code>optional int32 freshZhanFaId = 17;</code>
     *
     * <pre>
     * 领悟的战法(配置id)
     * </pre>
     */
    int getFreshZhanFaId();

    // optional int32 leaderSkillLv = 18;
    /**
     * <code>optional int32 leaderSkillLv = 18;</code>
     *
     * <pre>
     *绝技等级
     * </pre>
     */
    boolean hasLeaderSkillLv();
    /**
     * <code>optional int32 leaderSkillLv = 18;</code>
     *
     * <pre>
     *绝技等级
     * </pre>
     */
    int getLeaderSkillLv();

    // optional int32 hp = 19;
    /**
     * <code>optional int32 hp = 19;</code>
     *
     * <pre>
     * 以下战斗中借好友卡属性
     * </pre>
     */
    boolean hasHp();
    /**
     * <code>optional int32 hp = 19;</code>
     *
     * <pre>
     * 以下战斗中借好友卡属性
     * </pre>
     */
    int getHp();

    // optional int32 atk = 20;
    /**
     * <code>optional int32 atk = 20;</code>
     */
    boolean hasAtk();
    /**
     * <code>optional int32 atk = 20;</code>
     */
    int getAtk();

    // optional int32 def = 21;
    /**
     * <code>optional int32 def = 21;</code>
     */
    boolean hasDef();
    /**
     * <code>optional int32 def = 21;</code>
     */
    int getDef();

    // optional int32 magicAtk = 22;
    /**
     * <code>optional int32 magicAtk = 22;</code>
     */
    boolean hasMagicAtk();
    /**
     * <code>optional int32 magicAtk = 22;</code>
     */
    int getMagicAtk();

    // optional int32 magicDef = 23;
    /**
     * <code>optional int32 magicDef = 23;</code>
     */
    boolean hasMagicDef();
    /**
     * <code>optional int32 magicDef = 23;</code>
     */
    int getMagicDef();

    // optional int32 hit = 24;
    /**
     * <code>optional int32 hit = 24;</code>
     */
    boolean hasHit();
    /**
     * <code>optional int32 hit = 24;</code>
     */
    int getHit();

    // optional int32 agi = 25;
    /**
     * <code>optional int32 agi = 25;</code>
     */
    boolean hasAgi();
    /**
     * <code>optional int32 agi = 25;</code>
     */
    int getAgi();

    // optional int32 crit = 26;
    /**
     * <code>optional int32 crit = 26;</code>
     */
    boolean hasCrit();
    /**
     * <code>optional int32 crit = 26;</code>
     */
    int getCrit();

    // optional int32 ten = 27;
    /**
     * <code>optional int32 ten = 27;</code>
     */
    boolean hasTen();
    /**
     * <code>optional int32 ten = 27;</code>
     */
    int getTen();

    // optional int32 revenge = 28;
    /**
     * <code>optional int32 revenge = 28;</code>
     */
    boolean hasRevenge();
    /**
     * <code>optional int32 revenge = 28;</code>
     */
    int getRevenge();

    // optional int32 antiRevenge = 29;
    /**
     * <code>optional int32 antiRevenge = 29;</code>
     */
    boolean hasAntiRevenge();
    /**
     * <code>optional int32 antiRevenge = 29;</code>
     */
    int getAntiRevenge();

    // optional int32 doubleHit = 30;
    /**
     * <code>optional int32 doubleHit = 30;</code>
     */
    boolean hasDoubleHit();
    /**
     * <code>optional int32 doubleHit = 30;</code>
     */
    int getDoubleHit();

    // optional int32 antiDoubleHit = 31;
    /**
     * <code>optional int32 antiDoubleHit = 31;</code>
     */
    boolean hasAntiDoubleHit();
    /**
     * <code>optional int32 antiDoubleHit = 31;</code>
     */
    int getAntiDoubleHit();

    // optional int32 speed = 32;
    /**
     * <code>optional int32 speed = 32;</code>
     */
    boolean hasSpeed();
    /**
     * <code>optional int32 speed = 32;</code>
     */
    int getSpeed();

    // optional int32 cardStar = 33;
    /**
     * <code>optional int32 cardStar = 33;</code>
     *
     * <pre>
     * end
     * </pre>
     */
    boolean hasCardStar();
    /**
     * <code>optional int32 cardStar = 33;</code>
     *
     * <pre>
     * end
     * </pre>
     */
    int getCardStar();

    // optional int32 battleScore = 34;
    /**
     * <code>optional int32 battleScore = 34;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>optional int32 battleScore = 34;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    int getBattleScore();

    // optional .HuFaItem huFaItem = 35;
    /**
     * <code>optional .HuFaItem huFaItem = 35;</code>
     */
    boolean hasHuFaItem();
    /**
     * <code>optional .HuFaItem huFaItem = 35;</code>
     */
    myudfs.Common.HuFaItem getHuFaItem();
    /**
     * <code>optional .HuFaItem huFaItem = 35;</code>
     */
    myudfs.Common.HuFaItemOrBuilder getHuFaItemOrBuilder();

    // optional int32 stNum = 36;
    /**
     * <code>optional int32 stNum = 36;</code>
     *
     * <pre>
     * 熔炼获得神通卷轴的数量
     * </pre>
     */
    boolean hasStNum();
    /**
     * <code>optional int32 stNum = 36;</code>
     *
     * <pre>
     * 熔炼获得神通卷轴的数量
     * </pre>
     */
    int getStNum();

    // optional int32 hfNum = 37;
    /**
     * <code>optional int32 hfNum = 37;</code>
     *
     * <pre>
     * 熔炼获得护法石数量
     * </pre>
     */
    boolean hasHfNum();
    /**
     * <code>optional int32 hfNum = 37;</code>
     *
     * <pre>
     * 熔炼获得护法石数量
     * </pre>
     */
    int getHfNum();

    // optional int32 liuDaoHp = 38;
    /**
     * <code>optional int32 liuDaoHp = 38;</code>
     *
     * <pre>
     * 六道中的当前血量
     * </pre>
     */
    boolean hasLiuDaoHp();
    /**
     * <code>optional int32 liuDaoHp = 38;</code>
     *
     * <pre>
     * 六道中的当前血量
     * </pre>
     */
    int getLiuDaoHp();

    // optional int32 liuDaoMaxHp = 39;
    /**
     * <code>optional int32 liuDaoMaxHp = 39;</code>
     *
     * <pre>
     * 六道中的最大血量
     * </pre>
     */
    boolean hasLiuDaoMaxHp();
    /**
     * <code>optional int32 liuDaoMaxHp = 39;</code>
     *
     * <pre>
     * 六道中的最大血量
     * </pre>
     */
    int getLiuDaoMaxHp();

    // optional bool hasEnterLiuDao = 40;
    /**
     * <code>optional bool hasEnterLiuDao = 40;</code>
     *
     * <pre>
     * true:已经参加过六道
     * </pre>
     */
    boolean hasHasEnterLiuDao();
    /**
     * <code>optional bool hasEnterLiuDao = 40;</code>
     *
     * <pre>
     * true:已经参加过六道
     * </pre>
     */
    boolean getHasEnterLiuDao();

    // optional int32 critDamageRate = 41;
    /**
     * <code>optional int32 critDamageRate = 41;</code>
     */
    boolean hasCritDamageRate();
    /**
     * <code>optional int32 critDamageRate = 41;</code>
     */
    int getCritDamageRate();

    // optional bool leader = 42;
    /**
     * <code>optional bool leader = 42;</code>
     *
     * <pre>
     *true:是队长卡
     * </pre>
     */
    boolean hasLeader();
    /**
     * <code>optional bool leader = 42;</code>
     *
     * <pre>
     *true:是队长卡
     * </pre>
     */
    boolean getLeader();

    // optional int32 quality = 43;
    /**
     * <code>optional int32 quality = 43;</code>
     */
    boolean hasQuality();
    /**
     * <code>optional int32 quality = 43;</code>
     */
    int getQuality();

    // optional int32 shentongReturnHunyu = 44;
    /**
     * <code>optional int32 shentongReturnHunyu = 44;</code>
     *
     * <pre>
     * 卡牌熔炼,神通返回的魂玉值
     * </pre>
     */
    boolean hasShentongReturnHunyu();
    /**
     * <code>optional int32 shentongReturnHunyu = 44;</code>
     *
     * <pre>
     * 卡牌熔炼,神通返回的魂玉值
     * </pre>
     */
    int getShentongReturnHunyu();

    // optional int32 otherHunyu = 45;
    /**
     * <code>optional int32 otherHunyu = 45;</code>
     *
     * <pre>
     *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
     * </pre>
     */
    boolean hasOtherHunyu();
    /**
     * <code>optional int32 otherHunyu = 45;</code>
     *
     * <pre>
     *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
     * </pre>
     */
    int getOtherHunyu();

    // optional int32 exp = 46;
    /**
     * <code>optional int32 exp = 46;</code>
     *
     * <pre>
     *转生经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional int32 exp = 46;</code>
     *
     * <pre>
     *转生经验
     * </pre>
     */
    int getExp();

    // optional .FabaoItem fabao = 47;
    /**
     * <code>optional .FabaoItem fabao = 47;</code>
     *
     * <pre>
     * 法宝
     * </pre>
     */
    boolean hasFabao();
    /**
     * <code>optional .FabaoItem fabao = 47;</code>
     *
     * <pre>
     * 法宝
     * </pre>
     */
    myudfs.Common.FabaoItem getFabao();
    /**
     * <code>optional .FabaoItem fabao = 47;</code>
     *
     * <pre>
     * 法宝
     * </pre>
     */
    myudfs.Common.FabaoItemOrBuilder getFabaoOrBuilder();

    // optional int32 cardStage = 48;
    /**
     * <code>optional int32 cardStage = 48;</code>
     *
     * <pre>
     *神将分档
     * </pre>
     */
    boolean hasCardStage();
    /**
     * <code>optional int32 cardStage = 48;</code>
     *
     * <pre>
     *神将分档
     * </pre>
     */
    int getCardStage();
  }
  /**
   * Protobuf type {@code CardItem}
   *
   * <pre>
   * 角色:卡牌详情,只能查看自己牌的详情
   * </pre>
   */
  public static final class CardItem extends
      com.google.protobuf.GeneratedMessage
      implements CardItemOrBuilder {
    // Use CardItem.newBuilder() to construct.
    private CardItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CardItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CardItem defaultInstance;
    public static CardItem getDefaultInstance() {
      return defaultInstance;
    }

    public CardItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CardItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lv_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              stage_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              date_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              trainHp_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              trainAtk_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              trainDef_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              trainMagicAtk_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              trainMagicDef_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              trainSuccessRate_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                cardSlots_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x00000800;
              }
              cardSlots_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                equipments_ = new java.util.ArrayList<myudfs.Common.EquipmentItems>();
                mutable_bitField0_ |= 0x00001000;
              }
              equipments_.add(input.readMessage(myudfs.Common.EquipmentItems.PARSER, extensionRegistry));
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                shenTongs_ = new java.util.ArrayList<myudfs.Common.ShenTongItem>();
                mutable_bitField0_ |= 0x00002000;
              }
              shenTongs_.add(input.readMessage(myudfs.Common.ShenTongItem.PARSER, extensionRegistry));
              break;
            }
            case 128: {
              bitField0_ |= 0x00000800;
              zhanFaId_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00001000;
              freshZhanFaId_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00002000;
              leaderSkillLv_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00004000;
              hp_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00008000;
              atk_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00010000;
              def_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00020000;
              magicAtk_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00040000;
              magicDef_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00080000;
              hit_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00100000;
              agi_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00200000;
              crit_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00400000;
              ten_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00800000;
              revenge_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x01000000;
              antiRevenge_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x02000000;
              doubleHit_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x04000000;
              antiDoubleHit_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x08000000;
              speed_ = input.readInt32();
              break;
            }
            case 264: {
              bitField0_ |= 0x10000000;
              cardStar_ = input.readInt32();
              break;
            }
            case 272: {
              bitField0_ |= 0x20000000;
              battleScore_ = input.readInt32();
              break;
            }
            case 282: {
              myudfs.Common.HuFaItem.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = huFaItem_.toBuilder();
              }
              huFaItem_ = input.readMessage(myudfs.Common.HuFaItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(huFaItem_);
                huFaItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 288: {
              bitField0_ |= 0x80000000;
              stNum_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000001;
              hfNum_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000002;
              liuDaoHp_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000004;
              liuDaoMaxHp_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000008;
              hasEnterLiuDao_ = input.readBool();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000010;
              critDamageRate_ = input.readInt32();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000020;
              leader_ = input.readBool();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000040;
              quality_ = input.readInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000080;
              shentongReturnHunyu_ = input.readInt32();
              break;
            }
            case 360: {
              bitField1_ |= 0x00000100;
              otherHunyu_ = input.readInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00000200;
              exp_ = input.readInt32();
              break;
            }
            case 378: {
              myudfs.Common.FabaoItem.Builder subBuilder = null;
              if (((bitField1_ & 0x00000400) == 0x00000400)) {
                subBuilder = fabao_.toBuilder();
              }
              fabao_ = input.readMessage(myudfs.Common.FabaoItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fabao_);
                fabao_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000400;
              break;
            }
            case 384: {
              bitField1_ |= 0x00000800;
              cardStage_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          cardSlots_ = java.util.Collections.unmodifiableList(cardSlots_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          equipments_ = java.util.Collections.unmodifiableList(equipments_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          shenTongs_ = java.util.Collections.unmodifiableList(shenTongs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_CardItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_CardItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.CardItem.class, myudfs.Common.CardItem.Builder.class);
    }

    public static com.google.protobuf.Parser<CardItem> PARSER =
        new com.google.protobuf.AbstractParser<CardItem>() {
      public CardItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CardItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CardItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *数据库生成的id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *数据库生成的id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // optional int32 cardId = 2;
    public static final int CARDID_FIELD_NUMBER = 2;
    private int cardId_;
    /**
     * <code>optional int32 cardId = 2;</code>
     *
     * <pre>
     * 卡片配置表中的id
     * </pre>
     */
    public boolean hasCardId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cardId = 2;</code>
     *
     * <pre>
     * 卡片配置表中的id
     * </pre>
     */
    public int getCardId() {
      return cardId_;
    }

    // optional int32 lv = 3;
    public static final int LV_FIELD_NUMBER = 3;
    private int lv_;
    /**
     * <code>optional int32 lv = 3;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 lv = 3;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 stage = 4;
    public static final int STAGE_FIELD_NUMBER = 4;
    private int stage_;
    /**
     * <code>optional int32 stage = 4;</code>
     *
     * <pre>
     * 阶层
     * </pre>
     */
    public boolean hasStage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 stage = 4;</code>
     *
     * <pre>
     * 阶层
     * </pre>
     */
    public int getStage() {
      return stage_;
    }

    // optional uint64 date = 5;
    public static final int DATE_FIELD_NUMBER = 5;
    private long date_;
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * 获得时间
     * </pre>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * 获得时间
     * </pre>
     */
    public long getDate() {
      return date_;
    }

    // optional int32 trainHp = 6;
    public static final int TRAINHP_FIELD_NUMBER = 6;
    private int trainHp_;
    /**
     * <code>optional int32 trainHp = 6;</code>
     *
     * <pre>
     * 修炼hp
     * </pre>
     */
    public boolean hasTrainHp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 trainHp = 6;</code>
     *
     * <pre>
     * 修炼hp
     * </pre>
     */
    public int getTrainHp() {
      return trainHp_;
    }

    // optional int32 trainAtk = 7;
    public static final int TRAINATK_FIELD_NUMBER = 7;
    private int trainAtk_;
    /**
     * <code>optional int32 trainAtk = 7;</code>
     *
     * <pre>
     *修炼atk
     * </pre>
     */
    public boolean hasTrainAtk() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 trainAtk = 7;</code>
     *
     * <pre>
     *修炼atk
     * </pre>
     */
    public int getTrainAtk() {
      return trainAtk_;
    }

    // optional int32 trainDef = 8;
    public static final int TRAINDEF_FIELD_NUMBER = 8;
    private int trainDef_;
    /**
     * <code>optional int32 trainDef = 8;</code>
     *
     * <pre>
     * 修炼def
     * </pre>
     */
    public boolean hasTrainDef() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 trainDef = 8;</code>
     *
     * <pre>
     * 修炼def
     * </pre>
     */
    public int getTrainDef() {
      return trainDef_;
    }

    // optional int32 trainMagicAtk = 9;
    public static final int TRAINMAGICATK_FIELD_NUMBER = 9;
    private int trainMagicAtk_;
    /**
     * <code>optional int32 trainMagicAtk = 9;</code>
     *
     * <pre>
     *修炼magicAtk
     * </pre>
     */
    public boolean hasTrainMagicAtk() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 trainMagicAtk = 9;</code>
     *
     * <pre>
     *修炼magicAtk
     * </pre>
     */
    public int getTrainMagicAtk() {
      return trainMagicAtk_;
    }

    // optional int32 trainMagicDef = 10;
    public static final int TRAINMAGICDEF_FIELD_NUMBER = 10;
    private int trainMagicDef_;
    /**
     * <code>optional int32 trainMagicDef = 10;</code>
     *
     * <pre>
     *修炼magicDef
     * </pre>
     */
    public boolean hasTrainMagicDef() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 trainMagicDef = 10;</code>
     *
     * <pre>
     *修炼magicDef
     * </pre>
     */
    public int getTrainMagicDef() {
      return trainMagicDef_;
    }

    // optional int32 trainSuccessRate = 11;
    public static final int TRAINSUCCESSRATE_FIELD_NUMBER = 11;
    private int trainSuccessRate_;
    /**
     * <code>optional int32 trainSuccessRate = 11;</code>
     *
     * <pre>
     *修炼成功率
     * </pre>
     */
    public boolean hasTrainSuccessRate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 trainSuccessRate = 11;</code>
     *
     * <pre>
     *修炼成功率
     * </pre>
     */
    public int getTrainSuccessRate() {
      return trainSuccessRate_;
    }

    // repeated .MapItem cardSlots = 12;
    public static final int CARDSLOTS_FIELD_NUMBER = 12;
    private java.util.List<myudfs.Common.MapItem> cardSlots_;
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getCardSlotsList() {
      return cardSlots_;
    }
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getCardSlotsOrBuilderList() {
      return cardSlots_;
    }
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    public int getCardSlotsCount() {
      return cardSlots_.size();
    }
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    public myudfs.Common.MapItem getCardSlots(int index) {
      return cardSlots_.get(index);
    }
    /**
     * <code>repeated .MapItem cardSlots = 12;</code>
     *
     * <pre>
     * key:装备位1234 value :幻化等级
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getCardSlotsOrBuilder(
        int index) {
      return cardSlots_.get(index);
    }

    // repeated .EquipmentItems equipments = 14;
    public static final int EQUIPMENTS_FIELD_NUMBER = 14;
    private java.util.List<myudfs.Common.EquipmentItems> equipments_;
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    public java.util.List<myudfs.Common.EquipmentItems> getEquipmentsList() {
      return equipments_;
    }
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    public java.util.List<? extends myudfs.Common.EquipmentItemsOrBuilder> 
        getEquipmentsOrBuilderList() {
      return equipments_;
    }
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    public int getEquipmentsCount() {
      return equipments_.size();
    }
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    public myudfs.Common.EquipmentItems getEquipments(int index) {
      return equipments_.get(index);
    }
    /**
     * <code>repeated .EquipmentItems equipments = 14;</code>
     */
    public myudfs.Common.EquipmentItemsOrBuilder getEquipmentsOrBuilder(
        int index) {
      return equipments_.get(index);
    }

    // repeated .ShenTongItem shenTongs = 15;
    public static final int SHENTONGS_FIELD_NUMBER = 15;
    private java.util.List<myudfs.Common.ShenTongItem> shenTongs_;
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    public java.util.List<myudfs.Common.ShenTongItem> getShenTongsList() {
      return shenTongs_;
    }
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.ShenTongItemOrBuilder> 
        getShenTongsOrBuilderList() {
      return shenTongs_;
    }
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    public int getShenTongsCount() {
      return shenTongs_.size();
    }
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    public myudfs.Common.ShenTongItem getShenTongs(int index) {
      return shenTongs_.get(index);
    }
    /**
     * <code>repeated .ShenTongItem shenTongs = 15;</code>
     *
     * <pre>
     * 神通
     * </pre>
     */
    public myudfs.Common.ShenTongItemOrBuilder getShenTongsOrBuilder(
        int index) {
      return shenTongs_.get(index);
    }

    // optional int32 zhanFaId = 16;
    public static final int ZHANFAID_FIELD_NUMBER = 16;
    private int zhanFaId_;
    /**
     * <code>optional int32 zhanFaId = 16;</code>
     *
     * <pre>
     *当前的战法(配置id)
     * </pre>
     */
    public boolean hasZhanFaId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 zhanFaId = 16;</code>
     *
     * <pre>
     *当前的战法(配置id)
     * </pre>
     */
    public int getZhanFaId() {
      return zhanFaId_;
    }

    // optional int32 freshZhanFaId = 17;
    public static final int FRESHZHANFAID_FIELD_NUMBER = 17;
    private int freshZhanFaId_;
    /**
     * <code>optional int32 freshZhanFaId = 17;</code>
     *
     * <pre>
     * 领悟的战法(配置id)
     * </pre>
     */
    public boolean hasFreshZhanFaId() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 freshZhanFaId = 17;</code>
     *
     * <pre>
     * 领悟的战法(配置id)
     * </pre>
     */
    public int getFreshZhanFaId() {
      return freshZhanFaId_;
    }

    // optional int32 leaderSkillLv = 18;
    public static final int LEADERSKILLLV_FIELD_NUMBER = 18;
    private int leaderSkillLv_;
    /**
     * <code>optional int32 leaderSkillLv = 18;</code>
     *
     * <pre>
     *绝技等级
     * </pre>
     */
    public boolean hasLeaderSkillLv() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 leaderSkillLv = 18;</code>
     *
     * <pre>
     *绝技等级
     * </pre>
     */
    public int getLeaderSkillLv() {
      return leaderSkillLv_;
    }

    // optional int32 hp = 19;
    public static final int HP_FIELD_NUMBER = 19;
    private int hp_;
    /**
     * <code>optional int32 hp = 19;</code>
     *
     * <pre>
     * 以下战斗中借好友卡属性
     * </pre>
     */
    public boolean hasHp() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 hp = 19;</code>
     *
     * <pre>
     * 以下战斗中借好友卡属性
     * </pre>
     */
    public int getHp() {
      return hp_;
    }

    // optional int32 atk = 20;
    public static final int ATK_FIELD_NUMBER = 20;
    private int atk_;
    /**
     * <code>optional int32 atk = 20;</code>
     */
    public boolean hasAtk() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 atk = 20;</code>
     */
    public int getAtk() {
      return atk_;
    }

    // optional int32 def = 21;
    public static final int DEF_FIELD_NUMBER = 21;
    private int def_;
    /**
     * <code>optional int32 def = 21;</code>
     */
    public boolean hasDef() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 def = 21;</code>
     */
    public int getDef() {
      return def_;
    }

    // optional int32 magicAtk = 22;
    public static final int MAGICATK_FIELD_NUMBER = 22;
    private int magicAtk_;
    /**
     * <code>optional int32 magicAtk = 22;</code>
     */
    public boolean hasMagicAtk() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 magicAtk = 22;</code>
     */
    public int getMagicAtk() {
      return magicAtk_;
    }

    // optional int32 magicDef = 23;
    public static final int MAGICDEF_FIELD_NUMBER = 23;
    private int magicDef_;
    /**
     * <code>optional int32 magicDef = 23;</code>
     */
    public boolean hasMagicDef() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 magicDef = 23;</code>
     */
    public int getMagicDef() {
      return magicDef_;
    }

    // optional int32 hit = 24;
    public static final int HIT_FIELD_NUMBER = 24;
    private int hit_;
    /**
     * <code>optional int32 hit = 24;</code>
     */
    public boolean hasHit() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 hit = 24;</code>
     */
    public int getHit() {
      return hit_;
    }

    // optional int32 agi = 25;
    public static final int AGI_FIELD_NUMBER = 25;
    private int agi_;
    /**
     * <code>optional int32 agi = 25;</code>
     */
    public boolean hasAgi() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 agi = 25;</code>
     */
    public int getAgi() {
      return agi_;
    }

    // optional int32 crit = 26;
    public static final int CRIT_FIELD_NUMBER = 26;
    private int crit_;
    /**
     * <code>optional int32 crit = 26;</code>
     */
    public boolean hasCrit() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 crit = 26;</code>
     */
    public int getCrit() {
      return crit_;
    }

    // optional int32 ten = 27;
    public static final int TEN_FIELD_NUMBER = 27;
    private int ten_;
    /**
     * <code>optional int32 ten = 27;</code>
     */
    public boolean hasTen() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 ten = 27;</code>
     */
    public int getTen() {
      return ten_;
    }

    // optional int32 revenge = 28;
    public static final int REVENGE_FIELD_NUMBER = 28;
    private int revenge_;
    /**
     * <code>optional int32 revenge = 28;</code>
     */
    public boolean hasRevenge() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 revenge = 28;</code>
     */
    public int getRevenge() {
      return revenge_;
    }

    // optional int32 antiRevenge = 29;
    public static final int ANTIREVENGE_FIELD_NUMBER = 29;
    private int antiRevenge_;
    /**
     * <code>optional int32 antiRevenge = 29;</code>
     */
    public boolean hasAntiRevenge() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 antiRevenge = 29;</code>
     */
    public int getAntiRevenge() {
      return antiRevenge_;
    }

    // optional int32 doubleHit = 30;
    public static final int DOUBLEHIT_FIELD_NUMBER = 30;
    private int doubleHit_;
    /**
     * <code>optional int32 doubleHit = 30;</code>
     */
    public boolean hasDoubleHit() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 doubleHit = 30;</code>
     */
    public int getDoubleHit() {
      return doubleHit_;
    }

    // optional int32 antiDoubleHit = 31;
    public static final int ANTIDOUBLEHIT_FIELD_NUMBER = 31;
    private int antiDoubleHit_;
    /**
     * <code>optional int32 antiDoubleHit = 31;</code>
     */
    public boolean hasAntiDoubleHit() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 antiDoubleHit = 31;</code>
     */
    public int getAntiDoubleHit() {
      return antiDoubleHit_;
    }

    // optional int32 speed = 32;
    public static final int SPEED_FIELD_NUMBER = 32;
    private int speed_;
    /**
     * <code>optional int32 speed = 32;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 speed = 32;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    // optional int32 cardStar = 33;
    public static final int CARDSTAR_FIELD_NUMBER = 33;
    private int cardStar_;
    /**
     * <code>optional int32 cardStar = 33;</code>
     *
     * <pre>
     * end
     * </pre>
     */
    public boolean hasCardStar() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 cardStar = 33;</code>
     *
     * <pre>
     * end
     * </pre>
     */
    public int getCardStar() {
      return cardStar_;
    }

    // optional int32 battleScore = 34;
    public static final int BATTLESCORE_FIELD_NUMBER = 34;
    private int battleScore_;
    /**
     * <code>optional int32 battleScore = 34;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 battleScore = 34;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    // optional .HuFaItem huFaItem = 35;
    public static final int HUFAITEM_FIELD_NUMBER = 35;
    private myudfs.Common.HuFaItem huFaItem_;
    /**
     * <code>optional .HuFaItem huFaItem = 35;</code>
     */
    public boolean hasHuFaItem() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .HuFaItem huFaItem = 35;</code>
     */
    public myudfs.Common.HuFaItem getHuFaItem() {
      return huFaItem_;
    }
    /**
     * <code>optional .HuFaItem huFaItem = 35;</code>
     */
    public myudfs.Common.HuFaItemOrBuilder getHuFaItemOrBuilder() {
      return huFaItem_;
    }

    // optional int32 stNum = 36;
    public static final int STNUM_FIELD_NUMBER = 36;
    private int stNum_;
    /**
     * <code>optional int32 stNum = 36;</code>
     *
     * <pre>
     * 熔炼获得神通卷轴的数量
     * </pre>
     */
    public boolean hasStNum() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 stNum = 36;</code>
     *
     * <pre>
     * 熔炼获得神通卷轴的数量
     * </pre>
     */
    public int getStNum() {
      return stNum_;
    }

    // optional int32 hfNum = 37;
    public static final int HFNUM_FIELD_NUMBER = 37;
    private int hfNum_;
    /**
     * <code>optional int32 hfNum = 37;</code>
     *
     * <pre>
     * 熔炼获得护法石数量
     * </pre>
     */
    public boolean hasHfNum() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 hfNum = 37;</code>
     *
     * <pre>
     * 熔炼获得护法石数量
     * </pre>
     */
    public int getHfNum() {
      return hfNum_;
    }

    // optional int32 liuDaoHp = 38;
    public static final int LIUDAOHP_FIELD_NUMBER = 38;
    private int liuDaoHp_;
    /**
     * <code>optional int32 liuDaoHp = 38;</code>
     *
     * <pre>
     * 六道中的当前血量
     * </pre>
     */
    public boolean hasLiuDaoHp() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 liuDaoHp = 38;</code>
     *
     * <pre>
     * 六道中的当前血量
     * </pre>
     */
    public int getLiuDaoHp() {
      return liuDaoHp_;
    }

    // optional int32 liuDaoMaxHp = 39;
    public static final int LIUDAOMAXHP_FIELD_NUMBER = 39;
    private int liuDaoMaxHp_;
    /**
     * <code>optional int32 liuDaoMaxHp = 39;</code>
     *
     * <pre>
     * 六道中的最大血量
     * </pre>
     */
    public boolean hasLiuDaoMaxHp() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 liuDaoMaxHp = 39;</code>
     *
     * <pre>
     * 六道中的最大血量
     * </pre>
     */
    public int getLiuDaoMaxHp() {
      return liuDaoMaxHp_;
    }

    // optional bool hasEnterLiuDao = 40;
    public static final int HASENTERLIUDAO_FIELD_NUMBER = 40;
    private boolean hasEnterLiuDao_;
    /**
     * <code>optional bool hasEnterLiuDao = 40;</code>
     *
     * <pre>
     * true:已经参加过六道
     * </pre>
     */
    public boolean hasHasEnterLiuDao() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool hasEnterLiuDao = 40;</code>
     *
     * <pre>
     * true:已经参加过六道
     * </pre>
     */
    public boolean getHasEnterLiuDao() {
      return hasEnterLiuDao_;
    }

    // optional int32 critDamageRate = 41;
    public static final int CRITDAMAGERATE_FIELD_NUMBER = 41;
    private int critDamageRate_;
    /**
     * <code>optional int32 critDamageRate = 41;</code>
     */
    public boolean hasCritDamageRate() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 critDamageRate = 41;</code>
     */
    public int getCritDamageRate() {
      return critDamageRate_;
    }

    // optional bool leader = 42;
    public static final int LEADER_FIELD_NUMBER = 42;
    private boolean leader_;
    /**
     * <code>optional bool leader = 42;</code>
     *
     * <pre>
     *true:是队长卡
     * </pre>
     */
    public boolean hasLeader() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool leader = 42;</code>
     *
     * <pre>
     *true:是队长卡
     * </pre>
     */
    public boolean getLeader() {
      return leader_;
    }

    // optional int32 quality = 43;
    public static final int QUALITY_FIELD_NUMBER = 43;
    private int quality_;
    /**
     * <code>optional int32 quality = 43;</code>
     */
    public boolean hasQuality() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 quality = 43;</code>
     */
    public int getQuality() {
      return quality_;
    }

    // optional int32 shentongReturnHunyu = 44;
    public static final int SHENTONGRETURNHUNYU_FIELD_NUMBER = 44;
    private int shentongReturnHunyu_;
    /**
     * <code>optional int32 shentongReturnHunyu = 44;</code>
     *
     * <pre>
     * 卡牌熔炼,神通返回的魂玉值
     * </pre>
     */
    public boolean hasShentongReturnHunyu() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 shentongReturnHunyu = 44;</code>
     *
     * <pre>
     * 卡牌熔炼,神通返回的魂玉值
     * </pre>
     */
    public int getShentongReturnHunyu() {
      return shentongReturnHunyu_;
    }

    // optional int32 otherHunyu = 45;
    public static final int OTHERHUNYU_FIELD_NUMBER = 45;
    private int otherHunyu_;
    /**
     * <code>optional int32 otherHunyu = 45;</code>
     *
     * <pre>
     *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
     * </pre>
     */
    public boolean hasOtherHunyu() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 otherHunyu = 45;</code>
     *
     * <pre>
     *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
     * </pre>
     */
    public int getOtherHunyu() {
      return otherHunyu_;
    }

    // optional int32 exp = 46;
    public static final int EXP_FIELD_NUMBER = 46;
    private int exp_;
    /**
     * <code>optional int32 exp = 46;</code>
     *
     * <pre>
     *转生经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 exp = 46;</code>
     *
     * <pre>
     *转生经验
     * </pre>
     */
    public int getExp() {
      return exp_;
    }

    // optional .FabaoItem fabao = 47;
    public static final int FABAO_FIELD_NUMBER = 47;
    private myudfs.Common.FabaoItem fabao_;
    /**
     * <code>optional .FabaoItem fabao = 47;</code>
     *
     * <pre>
     * 法宝
     * </pre>
     */
    public boolean hasFabao() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .FabaoItem fabao = 47;</code>
     *
     * <pre>
     * 法宝
     * </pre>
     */
    public myudfs.Common.FabaoItem getFabao() {
      return fabao_;
    }
    /**
     * <code>optional .FabaoItem fabao = 47;</code>
     *
     * <pre>
     * 法宝
     * </pre>
     */
    public myudfs.Common.FabaoItemOrBuilder getFabaoOrBuilder() {
      return fabao_;
    }

    // optional int32 cardStage = 48;
    public static final int CARDSTAGE_FIELD_NUMBER = 48;
    private int cardStage_;
    /**
     * <code>optional int32 cardStage = 48;</code>
     *
     * <pre>
     *神将分档
     * </pre>
     */
    public boolean hasCardStage() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 cardStage = 48;</code>
     *
     * <pre>
     *神将分档
     * </pre>
     */
    public int getCardStage() {
      return cardStage_;
    }

    private void initFields() {
      id_ = 0L;
      cardId_ = 0;
      lv_ = 0;
      stage_ = 0;
      date_ = 0L;
      trainHp_ = 0;
      trainAtk_ = 0;
      trainDef_ = 0;
      trainMagicAtk_ = 0;
      trainMagicDef_ = 0;
      trainSuccessRate_ = 0;
      cardSlots_ = java.util.Collections.emptyList();
      equipments_ = java.util.Collections.emptyList();
      shenTongs_ = java.util.Collections.emptyList();
      zhanFaId_ = 0;
      freshZhanFaId_ = 0;
      leaderSkillLv_ = 0;
      hp_ = 0;
      atk_ = 0;
      def_ = 0;
      magicAtk_ = 0;
      magicDef_ = 0;
      hit_ = 0;
      agi_ = 0;
      crit_ = 0;
      ten_ = 0;
      revenge_ = 0;
      antiRevenge_ = 0;
      doubleHit_ = 0;
      antiDoubleHit_ = 0;
      speed_ = 0;
      cardStar_ = 0;
      battleScore_ = 0;
      huFaItem_ = myudfs.Common.HuFaItem.getDefaultInstance();
      stNum_ = 0;
      hfNum_ = 0;
      liuDaoHp_ = 0;
      liuDaoMaxHp_ = 0;
      hasEnterLiuDao_ = false;
      critDamageRate_ = 0;
      leader_ = false;
      quality_ = 0;
      shentongReturnHunyu_ = 0;
      otherHunyu_ = 0;
      exp_ = 0;
      fabao_ = myudfs.Common.FabaoItem.getDefaultInstance();
      cardStage_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cardId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, stage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, date_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, trainHp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, trainAtk_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, trainDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, trainMagicAtk_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, trainMagicDef_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, trainSuccessRate_);
      }
      for (int i = 0; i < cardSlots_.size(); i++) {
        output.writeMessage(12, cardSlots_.get(i));
      }
      for (int i = 0; i < equipments_.size(); i++) {
        output.writeMessage(14, equipments_.get(i));
      }
      for (int i = 0; i < shenTongs_.size(); i++) {
        output.writeMessage(15, shenTongs_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(16, zhanFaId_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(17, freshZhanFaId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(18, leaderSkillLv_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(19, hp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(20, atk_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(21, def_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(22, magicAtk_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(23, magicDef_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(24, hit_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(25, agi_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(26, crit_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(27, ten_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(28, revenge_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(29, antiRevenge_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(30, doubleHit_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(31, antiDoubleHit_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(32, speed_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(33, cardStar_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(34, battleScore_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(35, huFaItem_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(36, stNum_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(37, hfNum_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(38, liuDaoHp_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(39, liuDaoMaxHp_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(40, hasEnterLiuDao_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(41, critDamageRate_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeBool(42, leader_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(43, quality_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(44, shentongReturnHunyu_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(45, otherHunyu_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(46, exp_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(47, fabao_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(48, cardStage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, stage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, date_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, trainHp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, trainAtk_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, trainDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, trainMagicAtk_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, trainMagicDef_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, trainSuccessRate_);
      }
      for (int i = 0; i < cardSlots_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, cardSlots_.get(i));
      }
      for (int i = 0; i < equipments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, equipments_.get(i));
      }
      for (int i = 0; i < shenTongs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, shenTongs_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, zhanFaId_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, freshZhanFaId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, leaderSkillLv_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, hp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, atk_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, def_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, magicAtk_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, magicDef_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, hit_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, agi_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, crit_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, ten_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, revenge_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, antiRevenge_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, doubleHit_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, antiDoubleHit_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, speed_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, cardStar_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, battleScore_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, huFaItem_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, stNum_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, hfNum_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, liuDaoHp_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, liuDaoMaxHp_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(40, hasEnterLiuDao_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, critDamageRate_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(42, leader_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, quality_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, shentongReturnHunyu_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, otherHunyu_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, exp_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, fabao_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, cardStage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.CardItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CardItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CardItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CardItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CardItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CardItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CardItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.CardItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CardItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CardItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.CardItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CardItem}
     *
     * <pre>
     * 角色:卡牌详情,只能查看自己牌的详情
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.CardItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_CardItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_CardItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.CardItem.class, myudfs.Common.CardItem.Builder.class);
      }

      // Construct using myudfs.Common.CardItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardSlotsFieldBuilder();
          getEquipmentsFieldBuilder();
          getShenTongsFieldBuilder();
          getHuFaItemFieldBuilder();
          getFabaoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        stage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        date_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        trainHp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        trainAtk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        trainDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        trainMagicAtk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        trainMagicDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        trainSuccessRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (cardSlotsBuilder_ == null) {
          cardSlots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          cardSlotsBuilder_.clear();
        }
        if (equipmentsBuilder_ == null) {
          equipments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          equipmentsBuilder_.clear();
        }
        if (shenTongsBuilder_ == null) {
          shenTongs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          shenTongsBuilder_.clear();
        }
        zhanFaId_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        freshZhanFaId_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        leaderSkillLv_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        hp_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        atk_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        def_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        magicAtk_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        magicDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        hit_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        agi_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        crit_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        ten_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        revenge_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        antiRevenge_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        doubleHit_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        antiDoubleHit_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        cardStar_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        battleScore_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        if (huFaItemBuilder_ == null) {
          huFaItem_ = myudfs.Common.HuFaItem.getDefaultInstance();
        } else {
          huFaItemBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        stNum_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        hfNum_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        liuDaoHp_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        liuDaoMaxHp_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        hasEnterLiuDao_ = false;
        bitField1_ = (bitField1_ & ~0x00000040);
        critDamageRate_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        leader_ = false;
        bitField1_ = (bitField1_ & ~0x00000100);
        quality_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        shentongReturnHunyu_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        otherHunyu_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        exp_ = 0;
        bitField1_ = (bitField1_ & ~0x00001000);
        if (fabaoBuilder_ == null) {
          fabao_ = myudfs.Common.FabaoItem.getDefaultInstance();
        } else {
          fabaoBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00002000);
        cardStage_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_CardItem_descriptor;
      }

      public myudfs.Common.CardItem getDefaultInstanceForType() {
        return myudfs.Common.CardItem.getDefaultInstance();
      }

      public myudfs.Common.CardItem build() {
        myudfs.Common.CardItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.CardItem buildPartial() {
        myudfs.Common.CardItem result = new myudfs.Common.CardItem(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardId_ = cardId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.stage_ = stage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.trainHp_ = trainHp_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.trainAtk_ = trainAtk_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.trainDef_ = trainDef_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.trainMagicAtk_ = trainMagicAtk_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.trainMagicDef_ = trainMagicDef_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.trainSuccessRate_ = trainSuccessRate_;
        if (cardSlotsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            cardSlots_ = java.util.Collections.unmodifiableList(cardSlots_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.cardSlots_ = cardSlots_;
        } else {
          result.cardSlots_ = cardSlotsBuilder_.build();
        }
        if (equipmentsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            equipments_ = java.util.Collections.unmodifiableList(equipments_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.equipments_ = equipments_;
        } else {
          result.equipments_ = equipmentsBuilder_.build();
        }
        if (shenTongsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            shenTongs_ = java.util.Collections.unmodifiableList(shenTongs_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.shenTongs_ = shenTongs_;
        } else {
          result.shenTongs_ = shenTongsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.zhanFaId_ = zhanFaId_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.freshZhanFaId_ = freshZhanFaId_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.leaderSkillLv_ = leaderSkillLv_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.hp_ = hp_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.atk_ = atk_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.def_ = def_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.magicAtk_ = magicAtk_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.magicDef_ = magicDef_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.hit_ = hit_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.agi_ = agi_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.crit_ = crit_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.ten_ = ten_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.revenge_ = revenge_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.antiRevenge_ = antiRevenge_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.doubleHit_ = doubleHit_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.antiDoubleHit_ = antiDoubleHit_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.cardStar_ = cardStar_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x20000000;
        }
        result.battleScore_ = battleScore_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x40000000;
        }
        if (huFaItemBuilder_ == null) {
          result.huFaItem_ = huFaItem_;
        } else {
          result.huFaItem_ = huFaItemBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x80000000;
        }
        result.stNum_ = stNum_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000001;
        }
        result.hfNum_ = hfNum_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000002;
        }
        result.liuDaoHp_ = liuDaoHp_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000004;
        }
        result.liuDaoMaxHp_ = liuDaoMaxHp_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000008;
        }
        result.hasEnterLiuDao_ = hasEnterLiuDao_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000010;
        }
        result.critDamageRate_ = critDamageRate_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000020;
        }
        result.leader_ = leader_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000040;
        }
        result.quality_ = quality_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000080;
        }
        result.shentongReturnHunyu_ = shentongReturnHunyu_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000100;
        }
        result.otherHunyu_ = otherHunyu_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00000200;
        }
        result.exp_ = exp_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00000400;
        }
        if (fabaoBuilder_ == null) {
          result.fabao_ = fabao_;
        } else {
          result.fabao_ = fabaoBuilder_.build();
        }
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00000800;
        }
        result.cardStage_ = cardStage_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.CardItem) {
          return mergeFrom((myudfs.Common.CardItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.CardItem other) {
        if (other == myudfs.Common.CardItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCardId()) {
          setCardId(other.getCardId());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasStage()) {
          setStage(other.getStage());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        if (other.hasTrainHp()) {
          setTrainHp(other.getTrainHp());
        }
        if (other.hasTrainAtk()) {
          setTrainAtk(other.getTrainAtk());
        }
        if (other.hasTrainDef()) {
          setTrainDef(other.getTrainDef());
        }
        if (other.hasTrainMagicAtk()) {
          setTrainMagicAtk(other.getTrainMagicAtk());
        }
        if (other.hasTrainMagicDef()) {
          setTrainMagicDef(other.getTrainMagicDef());
        }
        if (other.hasTrainSuccessRate()) {
          setTrainSuccessRate(other.getTrainSuccessRate());
        }
        if (cardSlotsBuilder_ == null) {
          if (!other.cardSlots_.isEmpty()) {
            if (cardSlots_.isEmpty()) {
              cardSlots_ = other.cardSlots_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureCardSlotsIsMutable();
              cardSlots_.addAll(other.cardSlots_);
            }
            onChanged();
          }
        } else {
          if (!other.cardSlots_.isEmpty()) {
            if (cardSlotsBuilder_.isEmpty()) {
              cardSlotsBuilder_.dispose();
              cardSlotsBuilder_ = null;
              cardSlots_ = other.cardSlots_;
              bitField0_ = (bitField0_ & ~0x00000800);
              cardSlotsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardSlotsFieldBuilder() : null;
            } else {
              cardSlotsBuilder_.addAllMessages(other.cardSlots_);
            }
          }
        }
        if (equipmentsBuilder_ == null) {
          if (!other.equipments_.isEmpty()) {
            if (equipments_.isEmpty()) {
              equipments_ = other.equipments_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureEquipmentsIsMutable();
              equipments_.addAll(other.equipments_);
            }
            onChanged();
          }
        } else {
          if (!other.equipments_.isEmpty()) {
            if (equipmentsBuilder_.isEmpty()) {
              equipmentsBuilder_.dispose();
              equipmentsBuilder_ = null;
              equipments_ = other.equipments_;
              bitField0_ = (bitField0_ & ~0x00001000);
              equipmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEquipmentsFieldBuilder() : null;
            } else {
              equipmentsBuilder_.addAllMessages(other.equipments_);
            }
          }
        }
        if (shenTongsBuilder_ == null) {
          if (!other.shenTongs_.isEmpty()) {
            if (shenTongs_.isEmpty()) {
              shenTongs_ = other.shenTongs_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureShenTongsIsMutable();
              shenTongs_.addAll(other.shenTongs_);
            }
            onChanged();
          }
        } else {
          if (!other.shenTongs_.isEmpty()) {
            if (shenTongsBuilder_.isEmpty()) {
              shenTongsBuilder_.dispose();
              shenTongsBuilder_ = null;
              shenTongs_ = other.shenTongs_;
              bitField0_ = (bitField0_ & ~0x00002000);
              shenTongsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getShenTongsFieldBuilder() : null;
            } else {
              shenTongsBuilder_.addAllMessages(other.shenTongs_);
            }
          }
        }
        if (other.hasZhanFaId()) {
          setZhanFaId(other.getZhanFaId());
        }
        if (other.hasFreshZhanFaId()) {
          setFreshZhanFaId(other.getFreshZhanFaId());
        }
        if (other.hasLeaderSkillLv()) {
          setLeaderSkillLv(other.getLeaderSkillLv());
        }
        if (other.hasHp()) {
          setHp(other.getHp());
        }
        if (other.hasAtk()) {
          setAtk(other.getAtk());
        }
        if (other.hasDef()) {
          setDef(other.getDef());
        }
        if (other.hasMagicAtk()) {
          setMagicAtk(other.getMagicAtk());
        }
        if (other.hasMagicDef()) {
          setMagicDef(other.getMagicDef());
        }
        if (other.hasHit()) {
          setHit(other.getHit());
        }
        if (other.hasAgi()) {
          setAgi(other.getAgi());
        }
        if (other.hasCrit()) {
          setCrit(other.getCrit());
        }
        if (other.hasTen()) {
          setTen(other.getTen());
        }
        if (other.hasRevenge()) {
          setRevenge(other.getRevenge());
        }
        if (other.hasAntiRevenge()) {
          setAntiRevenge(other.getAntiRevenge());
        }
        if (other.hasDoubleHit()) {
          setDoubleHit(other.getDoubleHit());
        }
        if (other.hasAntiDoubleHit()) {
          setAntiDoubleHit(other.getAntiDoubleHit());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCardStar()) {
          setCardStar(other.getCardStar());
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        if (other.hasHuFaItem()) {
          mergeHuFaItem(other.getHuFaItem());
        }
        if (other.hasStNum()) {
          setStNum(other.getStNum());
        }
        if (other.hasHfNum()) {
          setHfNum(other.getHfNum());
        }
        if (other.hasLiuDaoHp()) {
          setLiuDaoHp(other.getLiuDaoHp());
        }
        if (other.hasLiuDaoMaxHp()) {
          setLiuDaoMaxHp(other.getLiuDaoMaxHp());
        }
        if (other.hasHasEnterLiuDao()) {
          setHasEnterLiuDao(other.getHasEnterLiuDao());
        }
        if (other.hasCritDamageRate()) {
          setCritDamageRate(other.getCritDamageRate());
        }
        if (other.hasLeader()) {
          setLeader(other.getLeader());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasShentongReturnHunyu()) {
          setShentongReturnHunyu(other.getShentongReturnHunyu());
        }
        if (other.hasOtherHunyu()) {
          setOtherHunyu(other.getOtherHunyu());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasFabao()) {
          mergeFabao(other.getFabao());
        }
        if (other.hasCardStage()) {
          setCardStage(other.getCardStage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.CardItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.CardItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *数据库生成的id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *数据库生成的id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *数据库生成的id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *数据库生成的id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 cardId = 2;
      private int cardId_ ;
      /**
       * <code>optional int32 cardId = 2;</code>
       *
       * <pre>
       * 卡片配置表中的id
       * </pre>
       */
      public boolean hasCardId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cardId = 2;</code>
       *
       * <pre>
       * 卡片配置表中的id
       * </pre>
       */
      public int getCardId() {
        return cardId_;
      }
      /**
       * <code>optional int32 cardId = 2;</code>
       *
       * <pre>
       * 卡片配置表中的id
       * </pre>
       */
      public Builder setCardId(int value) {
        bitField0_ |= 0x00000002;
        cardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardId = 2;</code>
       *
       * <pre>
       * 卡片配置表中的id
       * </pre>
       */
      public Builder clearCardId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lv = 3;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 3;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 lv = 3;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000004;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 stage = 4;
      private int stage_ ;
      /**
       * <code>optional int32 stage = 4;</code>
       *
       * <pre>
       * 阶层
       * </pre>
       */
      public boolean hasStage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 stage = 4;</code>
       *
       * <pre>
       * 阶层
       * </pre>
       */
      public int getStage() {
        return stage_;
      }
      /**
       * <code>optional int32 stage = 4;</code>
       *
       * <pre>
       * 阶层
       * </pre>
       */
      public Builder setStage(int value) {
        bitField0_ |= 0x00000008;
        stage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stage = 4;</code>
       *
       * <pre>
       * 阶层
       * </pre>
       */
      public Builder clearStage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        stage_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 date = 5;
      private long date_ ;
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * 获得时间
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * 获得时间
       * </pre>
       */
      public long getDate() {
        return date_;
      }
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * 获得时间
       * </pre>
       */
      public Builder setDate(long value) {
        bitField0_ |= 0x00000010;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * 获得时间
       * </pre>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        date_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 trainHp = 6;
      private int trainHp_ ;
      /**
       * <code>optional int32 trainHp = 6;</code>
       *
       * <pre>
       * 修炼hp
       * </pre>
       */
      public boolean hasTrainHp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 trainHp = 6;</code>
       *
       * <pre>
       * 修炼hp
       * </pre>
       */
      public int getTrainHp() {
        return trainHp_;
      }
      /**
       * <code>optional int32 trainHp = 6;</code>
       *
       * <pre>
       * 修炼hp
       * </pre>
       */
      public Builder setTrainHp(int value) {
        bitField0_ |= 0x00000020;
        trainHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainHp = 6;</code>
       *
       * <pre>
       * 修炼hp
       * </pre>
       */
      public Builder clearTrainHp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        trainHp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trainAtk = 7;
      private int trainAtk_ ;
      /**
       * <code>optional int32 trainAtk = 7;</code>
       *
       * <pre>
       *修炼atk
       * </pre>
       */
      public boolean hasTrainAtk() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 trainAtk = 7;</code>
       *
       * <pre>
       *修炼atk
       * </pre>
       */
      public int getTrainAtk() {
        return trainAtk_;
      }
      /**
       * <code>optional int32 trainAtk = 7;</code>
       *
       * <pre>
       *修炼atk
       * </pre>
       */
      public Builder setTrainAtk(int value) {
        bitField0_ |= 0x00000040;
        trainAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainAtk = 7;</code>
       *
       * <pre>
       *修炼atk
       * </pre>
       */
      public Builder clearTrainAtk() {
        bitField0_ = (bitField0_ & ~0x00000040);
        trainAtk_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trainDef = 8;
      private int trainDef_ ;
      /**
       * <code>optional int32 trainDef = 8;</code>
       *
       * <pre>
       * 修炼def
       * </pre>
       */
      public boolean hasTrainDef() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 trainDef = 8;</code>
       *
       * <pre>
       * 修炼def
       * </pre>
       */
      public int getTrainDef() {
        return trainDef_;
      }
      /**
       * <code>optional int32 trainDef = 8;</code>
       *
       * <pre>
       * 修炼def
       * </pre>
       */
      public Builder setTrainDef(int value) {
        bitField0_ |= 0x00000080;
        trainDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainDef = 8;</code>
       *
       * <pre>
       * 修炼def
       * </pre>
       */
      public Builder clearTrainDef() {
        bitField0_ = (bitField0_ & ~0x00000080);
        trainDef_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trainMagicAtk = 9;
      private int trainMagicAtk_ ;
      /**
       * <code>optional int32 trainMagicAtk = 9;</code>
       *
       * <pre>
       *修炼magicAtk
       * </pre>
       */
      public boolean hasTrainMagicAtk() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 trainMagicAtk = 9;</code>
       *
       * <pre>
       *修炼magicAtk
       * </pre>
       */
      public int getTrainMagicAtk() {
        return trainMagicAtk_;
      }
      /**
       * <code>optional int32 trainMagicAtk = 9;</code>
       *
       * <pre>
       *修炼magicAtk
       * </pre>
       */
      public Builder setTrainMagicAtk(int value) {
        bitField0_ |= 0x00000100;
        trainMagicAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainMagicAtk = 9;</code>
       *
       * <pre>
       *修炼magicAtk
       * </pre>
       */
      public Builder clearTrainMagicAtk() {
        bitField0_ = (bitField0_ & ~0x00000100);
        trainMagicAtk_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trainMagicDef = 10;
      private int trainMagicDef_ ;
      /**
       * <code>optional int32 trainMagicDef = 10;</code>
       *
       * <pre>
       *修炼magicDef
       * </pre>
       */
      public boolean hasTrainMagicDef() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 trainMagicDef = 10;</code>
       *
       * <pre>
       *修炼magicDef
       * </pre>
       */
      public int getTrainMagicDef() {
        return trainMagicDef_;
      }
      /**
       * <code>optional int32 trainMagicDef = 10;</code>
       *
       * <pre>
       *修炼magicDef
       * </pre>
       */
      public Builder setTrainMagicDef(int value) {
        bitField0_ |= 0x00000200;
        trainMagicDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainMagicDef = 10;</code>
       *
       * <pre>
       *修炼magicDef
       * </pre>
       */
      public Builder clearTrainMagicDef() {
        bitField0_ = (bitField0_ & ~0x00000200);
        trainMagicDef_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trainSuccessRate = 11;
      private int trainSuccessRate_ ;
      /**
       * <code>optional int32 trainSuccessRate = 11;</code>
       *
       * <pre>
       *修炼成功率
       * </pre>
       */
      public boolean hasTrainSuccessRate() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 trainSuccessRate = 11;</code>
       *
       * <pre>
       *修炼成功率
       * </pre>
       */
      public int getTrainSuccessRate() {
        return trainSuccessRate_;
      }
      /**
       * <code>optional int32 trainSuccessRate = 11;</code>
       *
       * <pre>
       *修炼成功率
       * </pre>
       */
      public Builder setTrainSuccessRate(int value) {
        bitField0_ |= 0x00000400;
        trainSuccessRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainSuccessRate = 11;</code>
       *
       * <pre>
       *修炼成功率
       * </pre>
       */
      public Builder clearTrainSuccessRate() {
        bitField0_ = (bitField0_ & ~0x00000400);
        trainSuccessRate_ = 0;
        onChanged();
        return this;
      }

      // repeated .MapItem cardSlots = 12;
      private java.util.List<myudfs.Common.MapItem> cardSlots_ =
        java.util.Collections.emptyList();
      private void ensureCardSlotsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          cardSlots_ = new java.util.ArrayList<myudfs.Common.MapItem>(cardSlots_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> cardSlotsBuilder_;

      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getCardSlotsList() {
        if (cardSlotsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardSlots_);
        } else {
          return cardSlotsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public int getCardSlotsCount() {
        if (cardSlotsBuilder_ == null) {
          return cardSlots_.size();
        } else {
          return cardSlotsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public myudfs.Common.MapItem getCardSlots(int index) {
        if (cardSlotsBuilder_ == null) {
          return cardSlots_.get(index);
        } else {
          return cardSlotsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder setCardSlots(
          int index, myudfs.Common.MapItem value) {
        if (cardSlotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardSlotsIsMutable();
          cardSlots_.set(index, value);
          onChanged();
        } else {
          cardSlotsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder setCardSlots(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (cardSlotsBuilder_ == null) {
          ensureCardSlotsIsMutable();
          cardSlots_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardSlotsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder addCardSlots(myudfs.Common.MapItem value) {
        if (cardSlotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardSlotsIsMutable();
          cardSlots_.add(value);
          onChanged();
        } else {
          cardSlotsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder addCardSlots(
          int index, myudfs.Common.MapItem value) {
        if (cardSlotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardSlotsIsMutable();
          cardSlots_.add(index, value);
          onChanged();
        } else {
          cardSlotsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder addCardSlots(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (cardSlotsBuilder_ == null) {
          ensureCardSlotsIsMutable();
          cardSlots_.add(builderForValue.build());
          onChanged();
        } else {
          cardSlotsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder addCardSlots(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (cardSlotsBuilder_ == null) {
          ensureCardSlotsIsMutable();
          cardSlots_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardSlotsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder addAllCardSlots(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (cardSlotsBuilder_ == null) {
          ensureCardSlotsIsMutable();
          super.addAll(values, cardSlots_);
          onChanged();
        } else {
          cardSlotsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder clearCardSlots() {
        if (cardSlotsBuilder_ == null) {
          cardSlots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          cardSlotsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public Builder removeCardSlots(int index) {
        if (cardSlotsBuilder_ == null) {
          ensureCardSlotsIsMutable();
          cardSlots_.remove(index);
          onChanged();
        } else {
          cardSlotsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getCardSlotsBuilder(
          int index) {
        return getCardSlotsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getCardSlotsOrBuilder(
          int index) {
        if (cardSlotsBuilder_ == null) {
          return cardSlots_.get(index);  } else {
          return cardSlotsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getCardSlotsOrBuilderList() {
        if (cardSlotsBuilder_ != null) {
          return cardSlotsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardSlots_);
        }
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addCardSlotsBuilder() {
        return getCardSlotsFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addCardSlotsBuilder(
          int index) {
        return getCardSlotsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem cardSlots = 12;</code>
       *
       * <pre>
       * key:装备位1234 value :幻化等级
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getCardSlotsBuilderList() {
        return getCardSlotsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getCardSlotsFieldBuilder() {
        if (cardSlotsBuilder_ == null) {
          cardSlotsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  cardSlots_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          cardSlots_ = null;
        }
        return cardSlotsBuilder_;
      }

      // repeated .EquipmentItems equipments = 14;
      private java.util.List<myudfs.Common.EquipmentItems> equipments_ =
        java.util.Collections.emptyList();
      private void ensureEquipmentsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          equipments_ = new java.util.ArrayList<myudfs.Common.EquipmentItems>(equipments_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.EquipmentItems, myudfs.Common.EquipmentItems.Builder, myudfs.Common.EquipmentItemsOrBuilder> equipmentsBuilder_;

      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public java.util.List<myudfs.Common.EquipmentItems> getEquipmentsList() {
        if (equipmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(equipments_);
        } else {
          return equipmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public int getEquipmentsCount() {
        if (equipmentsBuilder_ == null) {
          return equipments_.size();
        } else {
          return equipmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public myudfs.Common.EquipmentItems getEquipments(int index) {
        if (equipmentsBuilder_ == null) {
          return equipments_.get(index);
        } else {
          return equipmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder setEquipments(
          int index, myudfs.Common.EquipmentItems value) {
        if (equipmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipmentsIsMutable();
          equipments_.set(index, value);
          onChanged();
        } else {
          equipmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder setEquipments(
          int index, myudfs.Common.EquipmentItems.Builder builderForValue) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.set(index, builderForValue.build());
          onChanged();
        } else {
          equipmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder addEquipments(myudfs.Common.EquipmentItems value) {
        if (equipmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipmentsIsMutable();
          equipments_.add(value);
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder addEquipments(
          int index, myudfs.Common.EquipmentItems value) {
        if (equipmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipmentsIsMutable();
          equipments_.add(index, value);
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder addEquipments(
          myudfs.Common.EquipmentItems.Builder builderForValue) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.add(builderForValue.build());
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder addEquipments(
          int index, myudfs.Common.EquipmentItems.Builder builderForValue) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.add(index, builderForValue.build());
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder addAllEquipments(
          java.lang.Iterable<? extends myudfs.Common.EquipmentItems> values) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          super.addAll(values, equipments_);
          onChanged();
        } else {
          equipmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder clearEquipments() {
        if (equipmentsBuilder_ == null) {
          equipments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          equipmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public Builder removeEquipments(int index) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.remove(index);
          onChanged();
        } else {
          equipmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public myudfs.Common.EquipmentItems.Builder getEquipmentsBuilder(
          int index) {
        return getEquipmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public myudfs.Common.EquipmentItemsOrBuilder getEquipmentsOrBuilder(
          int index) {
        if (equipmentsBuilder_ == null) {
          return equipments_.get(index);  } else {
          return equipmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public java.util.List<? extends myudfs.Common.EquipmentItemsOrBuilder> 
           getEquipmentsOrBuilderList() {
        if (equipmentsBuilder_ != null) {
          return equipmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(equipments_);
        }
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public myudfs.Common.EquipmentItems.Builder addEquipmentsBuilder() {
        return getEquipmentsFieldBuilder().addBuilder(
            myudfs.Common.EquipmentItems.getDefaultInstance());
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public myudfs.Common.EquipmentItems.Builder addEquipmentsBuilder(
          int index) {
        return getEquipmentsFieldBuilder().addBuilder(
            index, myudfs.Common.EquipmentItems.getDefaultInstance());
      }
      /**
       * <code>repeated .EquipmentItems equipments = 14;</code>
       */
      public java.util.List<myudfs.Common.EquipmentItems.Builder> 
           getEquipmentsBuilderList() {
        return getEquipmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.EquipmentItems, myudfs.Common.EquipmentItems.Builder, myudfs.Common.EquipmentItemsOrBuilder> 
          getEquipmentsFieldBuilder() {
        if (equipmentsBuilder_ == null) {
          equipmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.EquipmentItems, myudfs.Common.EquipmentItems.Builder, myudfs.Common.EquipmentItemsOrBuilder>(
                  equipments_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          equipments_ = null;
        }
        return equipmentsBuilder_;
      }

      // repeated .ShenTongItem shenTongs = 15;
      private java.util.List<myudfs.Common.ShenTongItem> shenTongs_ =
        java.util.Collections.emptyList();
      private void ensureShenTongsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          shenTongs_ = new java.util.ArrayList<myudfs.Common.ShenTongItem>(shenTongs_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ShenTongItem, myudfs.Common.ShenTongItem.Builder, myudfs.Common.ShenTongItemOrBuilder> shenTongsBuilder_;

      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public java.util.List<myudfs.Common.ShenTongItem> getShenTongsList() {
        if (shenTongsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shenTongs_);
        } else {
          return shenTongsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public int getShenTongsCount() {
        if (shenTongsBuilder_ == null) {
          return shenTongs_.size();
        } else {
          return shenTongsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public myudfs.Common.ShenTongItem getShenTongs(int index) {
        if (shenTongsBuilder_ == null) {
          return shenTongs_.get(index);
        } else {
          return shenTongsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder setShenTongs(
          int index, myudfs.Common.ShenTongItem value) {
        if (shenTongsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShenTongsIsMutable();
          shenTongs_.set(index, value);
          onChanged();
        } else {
          shenTongsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder setShenTongs(
          int index, myudfs.Common.ShenTongItem.Builder builderForValue) {
        if (shenTongsBuilder_ == null) {
          ensureShenTongsIsMutable();
          shenTongs_.set(index, builderForValue.build());
          onChanged();
        } else {
          shenTongsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder addShenTongs(myudfs.Common.ShenTongItem value) {
        if (shenTongsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShenTongsIsMutable();
          shenTongs_.add(value);
          onChanged();
        } else {
          shenTongsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder addShenTongs(
          int index, myudfs.Common.ShenTongItem value) {
        if (shenTongsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShenTongsIsMutable();
          shenTongs_.add(index, value);
          onChanged();
        } else {
          shenTongsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder addShenTongs(
          myudfs.Common.ShenTongItem.Builder builderForValue) {
        if (shenTongsBuilder_ == null) {
          ensureShenTongsIsMutable();
          shenTongs_.add(builderForValue.build());
          onChanged();
        } else {
          shenTongsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder addShenTongs(
          int index, myudfs.Common.ShenTongItem.Builder builderForValue) {
        if (shenTongsBuilder_ == null) {
          ensureShenTongsIsMutable();
          shenTongs_.add(index, builderForValue.build());
          onChanged();
        } else {
          shenTongsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder addAllShenTongs(
          java.lang.Iterable<? extends myudfs.Common.ShenTongItem> values) {
        if (shenTongsBuilder_ == null) {
          ensureShenTongsIsMutable();
          super.addAll(values, shenTongs_);
          onChanged();
        } else {
          shenTongsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder clearShenTongs() {
        if (shenTongsBuilder_ == null) {
          shenTongs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          shenTongsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public Builder removeShenTongs(int index) {
        if (shenTongsBuilder_ == null) {
          ensureShenTongsIsMutable();
          shenTongs_.remove(index);
          onChanged();
        } else {
          shenTongsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public myudfs.Common.ShenTongItem.Builder getShenTongsBuilder(
          int index) {
        return getShenTongsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public myudfs.Common.ShenTongItemOrBuilder getShenTongsOrBuilder(
          int index) {
        if (shenTongsBuilder_ == null) {
          return shenTongs_.get(index);  } else {
          return shenTongsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.ShenTongItemOrBuilder> 
           getShenTongsOrBuilderList() {
        if (shenTongsBuilder_ != null) {
          return shenTongsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shenTongs_);
        }
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public myudfs.Common.ShenTongItem.Builder addShenTongsBuilder() {
        return getShenTongsFieldBuilder().addBuilder(
            myudfs.Common.ShenTongItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public myudfs.Common.ShenTongItem.Builder addShenTongsBuilder(
          int index) {
        return getShenTongsFieldBuilder().addBuilder(
            index, myudfs.Common.ShenTongItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ShenTongItem shenTongs = 15;</code>
       *
       * <pre>
       * 神通
       * </pre>
       */
      public java.util.List<myudfs.Common.ShenTongItem.Builder> 
           getShenTongsBuilderList() {
        return getShenTongsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ShenTongItem, myudfs.Common.ShenTongItem.Builder, myudfs.Common.ShenTongItemOrBuilder> 
          getShenTongsFieldBuilder() {
        if (shenTongsBuilder_ == null) {
          shenTongsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.ShenTongItem, myudfs.Common.ShenTongItem.Builder, myudfs.Common.ShenTongItemOrBuilder>(
                  shenTongs_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          shenTongs_ = null;
        }
        return shenTongsBuilder_;
      }

      // optional int32 zhanFaId = 16;
      private int zhanFaId_ ;
      /**
       * <code>optional int32 zhanFaId = 16;</code>
       *
       * <pre>
       *当前的战法(配置id)
       * </pre>
       */
      public boolean hasZhanFaId() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 zhanFaId = 16;</code>
       *
       * <pre>
       *当前的战法(配置id)
       * </pre>
       */
      public int getZhanFaId() {
        return zhanFaId_;
      }
      /**
       * <code>optional int32 zhanFaId = 16;</code>
       *
       * <pre>
       *当前的战法(配置id)
       * </pre>
       */
      public Builder setZhanFaId(int value) {
        bitField0_ |= 0x00004000;
        zhanFaId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhanFaId = 16;</code>
       *
       * <pre>
       *当前的战法(配置id)
       * </pre>
       */
      public Builder clearZhanFaId() {
        bitField0_ = (bitField0_ & ~0x00004000);
        zhanFaId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 freshZhanFaId = 17;
      private int freshZhanFaId_ ;
      /**
       * <code>optional int32 freshZhanFaId = 17;</code>
       *
       * <pre>
       * 领悟的战法(配置id)
       * </pre>
       */
      public boolean hasFreshZhanFaId() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 freshZhanFaId = 17;</code>
       *
       * <pre>
       * 领悟的战法(配置id)
       * </pre>
       */
      public int getFreshZhanFaId() {
        return freshZhanFaId_;
      }
      /**
       * <code>optional int32 freshZhanFaId = 17;</code>
       *
       * <pre>
       * 领悟的战法(配置id)
       * </pre>
       */
      public Builder setFreshZhanFaId(int value) {
        bitField0_ |= 0x00008000;
        freshZhanFaId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 freshZhanFaId = 17;</code>
       *
       * <pre>
       * 领悟的战法(配置id)
       * </pre>
       */
      public Builder clearFreshZhanFaId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        freshZhanFaId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 leaderSkillLv = 18;
      private int leaderSkillLv_ ;
      /**
       * <code>optional int32 leaderSkillLv = 18;</code>
       *
       * <pre>
       *绝技等级
       * </pre>
       */
      public boolean hasLeaderSkillLv() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 leaderSkillLv = 18;</code>
       *
       * <pre>
       *绝技等级
       * </pre>
       */
      public int getLeaderSkillLv() {
        return leaderSkillLv_;
      }
      /**
       * <code>optional int32 leaderSkillLv = 18;</code>
       *
       * <pre>
       *绝技等级
       * </pre>
       */
      public Builder setLeaderSkillLv(int value) {
        bitField0_ |= 0x00010000;
        leaderSkillLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leaderSkillLv = 18;</code>
       *
       * <pre>
       *绝技等级
       * </pre>
       */
      public Builder clearLeaderSkillLv() {
        bitField0_ = (bitField0_ & ~0x00010000);
        leaderSkillLv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hp = 19;
      private int hp_ ;
      /**
       * <code>optional int32 hp = 19;</code>
       *
       * <pre>
       * 以下战斗中借好友卡属性
       * </pre>
       */
      public boolean hasHp() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 hp = 19;</code>
       *
       * <pre>
       * 以下战斗中借好友卡属性
       * </pre>
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <code>optional int32 hp = 19;</code>
       *
       * <pre>
       * 以下战斗中借好友卡属性
       * </pre>
       */
      public Builder setHp(int value) {
        bitField0_ |= 0x00020000;
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hp = 19;</code>
       *
       * <pre>
       * 以下战斗中借好友卡属性
       * </pre>
       */
      public Builder clearHp() {
        bitField0_ = (bitField0_ & ~0x00020000);
        hp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 atk = 20;
      private int atk_ ;
      /**
       * <code>optional int32 atk = 20;</code>
       */
      public boolean hasAtk() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 atk = 20;</code>
       */
      public int getAtk() {
        return atk_;
      }
      /**
       * <code>optional int32 atk = 20;</code>
       */
      public Builder setAtk(int value) {
        bitField0_ |= 0x00040000;
        atk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 atk = 20;</code>
       */
      public Builder clearAtk() {
        bitField0_ = (bitField0_ & ~0x00040000);
        atk_ = 0;
        onChanged();
        return this;
      }

      // optional int32 def = 21;
      private int def_ ;
      /**
       * <code>optional int32 def = 21;</code>
       */
      public boolean hasDef() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 def = 21;</code>
       */
      public int getDef() {
        return def_;
      }
      /**
       * <code>optional int32 def = 21;</code>
       */
      public Builder setDef(int value) {
        bitField0_ |= 0x00080000;
        def_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 def = 21;</code>
       */
      public Builder clearDef() {
        bitField0_ = (bitField0_ & ~0x00080000);
        def_ = 0;
        onChanged();
        return this;
      }

      // optional int32 magicAtk = 22;
      private int magicAtk_ ;
      /**
       * <code>optional int32 magicAtk = 22;</code>
       */
      public boolean hasMagicAtk() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 magicAtk = 22;</code>
       */
      public int getMagicAtk() {
        return magicAtk_;
      }
      /**
       * <code>optional int32 magicAtk = 22;</code>
       */
      public Builder setMagicAtk(int value) {
        bitField0_ |= 0x00100000;
        magicAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 magicAtk = 22;</code>
       */
      public Builder clearMagicAtk() {
        bitField0_ = (bitField0_ & ~0x00100000);
        magicAtk_ = 0;
        onChanged();
        return this;
      }

      // optional int32 magicDef = 23;
      private int magicDef_ ;
      /**
       * <code>optional int32 magicDef = 23;</code>
       */
      public boolean hasMagicDef() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 magicDef = 23;</code>
       */
      public int getMagicDef() {
        return magicDef_;
      }
      /**
       * <code>optional int32 magicDef = 23;</code>
       */
      public Builder setMagicDef(int value) {
        bitField0_ |= 0x00200000;
        magicDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 magicDef = 23;</code>
       */
      public Builder clearMagicDef() {
        bitField0_ = (bitField0_ & ~0x00200000);
        magicDef_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hit = 24;
      private int hit_ ;
      /**
       * <code>optional int32 hit = 24;</code>
       */
      public boolean hasHit() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 hit = 24;</code>
       */
      public int getHit() {
        return hit_;
      }
      /**
       * <code>optional int32 hit = 24;</code>
       */
      public Builder setHit(int value) {
        bitField0_ |= 0x00400000;
        hit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hit = 24;</code>
       */
      public Builder clearHit() {
        bitField0_ = (bitField0_ & ~0x00400000);
        hit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 agi = 25;
      private int agi_ ;
      /**
       * <code>optional int32 agi = 25;</code>
       */
      public boolean hasAgi() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 agi = 25;</code>
       */
      public int getAgi() {
        return agi_;
      }
      /**
       * <code>optional int32 agi = 25;</code>
       */
      public Builder setAgi(int value) {
        bitField0_ |= 0x00800000;
        agi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 agi = 25;</code>
       */
      public Builder clearAgi() {
        bitField0_ = (bitField0_ & ~0x00800000);
        agi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 crit = 26;
      private int crit_ ;
      /**
       * <code>optional int32 crit = 26;</code>
       */
      public boolean hasCrit() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 crit = 26;</code>
       */
      public int getCrit() {
        return crit_;
      }
      /**
       * <code>optional int32 crit = 26;</code>
       */
      public Builder setCrit(int value) {
        bitField0_ |= 0x01000000;
        crit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 crit = 26;</code>
       */
      public Builder clearCrit() {
        bitField0_ = (bitField0_ & ~0x01000000);
        crit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ten = 27;
      private int ten_ ;
      /**
       * <code>optional int32 ten = 27;</code>
       */
      public boolean hasTen() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 ten = 27;</code>
       */
      public int getTen() {
        return ten_;
      }
      /**
       * <code>optional int32 ten = 27;</code>
       */
      public Builder setTen(int value) {
        bitField0_ |= 0x02000000;
        ten_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ten = 27;</code>
       */
      public Builder clearTen() {
        bitField0_ = (bitField0_ & ~0x02000000);
        ten_ = 0;
        onChanged();
        return this;
      }

      // optional int32 revenge = 28;
      private int revenge_ ;
      /**
       * <code>optional int32 revenge = 28;</code>
       */
      public boolean hasRevenge() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 revenge = 28;</code>
       */
      public int getRevenge() {
        return revenge_;
      }
      /**
       * <code>optional int32 revenge = 28;</code>
       */
      public Builder setRevenge(int value) {
        bitField0_ |= 0x04000000;
        revenge_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 revenge = 28;</code>
       */
      public Builder clearRevenge() {
        bitField0_ = (bitField0_ & ~0x04000000);
        revenge_ = 0;
        onChanged();
        return this;
      }

      // optional int32 antiRevenge = 29;
      private int antiRevenge_ ;
      /**
       * <code>optional int32 antiRevenge = 29;</code>
       */
      public boolean hasAntiRevenge() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 antiRevenge = 29;</code>
       */
      public int getAntiRevenge() {
        return antiRevenge_;
      }
      /**
       * <code>optional int32 antiRevenge = 29;</code>
       */
      public Builder setAntiRevenge(int value) {
        bitField0_ |= 0x08000000;
        antiRevenge_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 antiRevenge = 29;</code>
       */
      public Builder clearAntiRevenge() {
        bitField0_ = (bitField0_ & ~0x08000000);
        antiRevenge_ = 0;
        onChanged();
        return this;
      }

      // optional int32 doubleHit = 30;
      private int doubleHit_ ;
      /**
       * <code>optional int32 doubleHit = 30;</code>
       */
      public boolean hasDoubleHit() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 doubleHit = 30;</code>
       */
      public int getDoubleHit() {
        return doubleHit_;
      }
      /**
       * <code>optional int32 doubleHit = 30;</code>
       */
      public Builder setDoubleHit(int value) {
        bitField0_ |= 0x10000000;
        doubleHit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 doubleHit = 30;</code>
       */
      public Builder clearDoubleHit() {
        bitField0_ = (bitField0_ & ~0x10000000);
        doubleHit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 antiDoubleHit = 31;
      private int antiDoubleHit_ ;
      /**
       * <code>optional int32 antiDoubleHit = 31;</code>
       */
      public boolean hasAntiDoubleHit() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 antiDoubleHit = 31;</code>
       */
      public int getAntiDoubleHit() {
        return antiDoubleHit_;
      }
      /**
       * <code>optional int32 antiDoubleHit = 31;</code>
       */
      public Builder setAntiDoubleHit(int value) {
        bitField0_ |= 0x20000000;
        antiDoubleHit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 antiDoubleHit = 31;</code>
       */
      public Builder clearAntiDoubleHit() {
        bitField0_ = (bitField0_ & ~0x20000000);
        antiDoubleHit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed = 32;
      private int speed_ ;
      /**
       * <code>optional int32 speed = 32;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 speed = 32;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 speed = 32;</code>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x40000000;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed = 32;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x40000000);
        speed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cardStar = 33;
      private int cardStar_ ;
      /**
       * <code>optional int32 cardStar = 33;</code>
       *
       * <pre>
       * end
       * </pre>
       */
      public boolean hasCardStar() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 cardStar = 33;</code>
       *
       * <pre>
       * end
       * </pre>
       */
      public int getCardStar() {
        return cardStar_;
      }
      /**
       * <code>optional int32 cardStar = 33;</code>
       *
       * <pre>
       * end
       * </pre>
       */
      public Builder setCardStar(int value) {
        bitField0_ |= 0x80000000;
        cardStar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardStar = 33;</code>
       *
       * <pre>
       * end
       * </pre>
       */
      public Builder clearCardStar() {
        bitField0_ = (bitField0_ & ~0x80000000);
        cardStar_ = 0;
        onChanged();
        return this;
      }

      // optional int32 battleScore = 34;
      private int battleScore_ ;
      /**
       * <code>optional int32 battleScore = 34;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 battleScore = 34;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>optional int32 battleScore = 34;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField1_ |= 0x00000001;
        battleScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 battleScore = 34;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField1_ = (bitField1_ & ~0x00000001);
        battleScore_ = 0;
        onChanged();
        return this;
      }

      // optional .HuFaItem huFaItem = 35;
      private myudfs.Common.HuFaItem huFaItem_ = myudfs.Common.HuFaItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.HuFaItem, myudfs.Common.HuFaItem.Builder, myudfs.Common.HuFaItemOrBuilder> huFaItemBuilder_;
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public boolean hasHuFaItem() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public myudfs.Common.HuFaItem getHuFaItem() {
        if (huFaItemBuilder_ == null) {
          return huFaItem_;
        } else {
          return huFaItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public Builder setHuFaItem(myudfs.Common.HuFaItem value) {
        if (huFaItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          huFaItem_ = value;
          onChanged();
        } else {
          huFaItemBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public Builder setHuFaItem(
          myudfs.Common.HuFaItem.Builder builderForValue) {
        if (huFaItemBuilder_ == null) {
          huFaItem_ = builderForValue.build();
          onChanged();
        } else {
          huFaItemBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public Builder mergeHuFaItem(myudfs.Common.HuFaItem value) {
        if (huFaItemBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002) &&
              huFaItem_ != myudfs.Common.HuFaItem.getDefaultInstance()) {
            huFaItem_ =
              myudfs.Common.HuFaItem.newBuilder(huFaItem_).mergeFrom(value).buildPartial();
          } else {
            huFaItem_ = value;
          }
          onChanged();
        } else {
          huFaItemBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public Builder clearHuFaItem() {
        if (huFaItemBuilder_ == null) {
          huFaItem_ = myudfs.Common.HuFaItem.getDefaultInstance();
          onChanged();
        } else {
          huFaItemBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public myudfs.Common.HuFaItem.Builder getHuFaItemBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getHuFaItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      public myudfs.Common.HuFaItemOrBuilder getHuFaItemOrBuilder() {
        if (huFaItemBuilder_ != null) {
          return huFaItemBuilder_.getMessageOrBuilder();
        } else {
          return huFaItem_;
        }
      }
      /**
       * <code>optional .HuFaItem huFaItem = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.HuFaItem, myudfs.Common.HuFaItem.Builder, myudfs.Common.HuFaItemOrBuilder> 
          getHuFaItemFieldBuilder() {
        if (huFaItemBuilder_ == null) {
          huFaItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.HuFaItem, myudfs.Common.HuFaItem.Builder, myudfs.Common.HuFaItemOrBuilder>(
                  huFaItem_,
                  getParentForChildren(),
                  isClean());
          huFaItem_ = null;
        }
        return huFaItemBuilder_;
      }

      // optional int32 stNum = 36;
      private int stNum_ ;
      /**
       * <code>optional int32 stNum = 36;</code>
       *
       * <pre>
       * 熔炼获得神通卷轴的数量
       * </pre>
       */
      public boolean hasStNum() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 stNum = 36;</code>
       *
       * <pre>
       * 熔炼获得神通卷轴的数量
       * </pre>
       */
      public int getStNum() {
        return stNum_;
      }
      /**
       * <code>optional int32 stNum = 36;</code>
       *
       * <pre>
       * 熔炼获得神通卷轴的数量
       * </pre>
       */
      public Builder setStNum(int value) {
        bitField1_ |= 0x00000004;
        stNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stNum = 36;</code>
       *
       * <pre>
       * 熔炼获得神通卷轴的数量
       * </pre>
       */
      public Builder clearStNum() {
        bitField1_ = (bitField1_ & ~0x00000004);
        stNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hfNum = 37;
      private int hfNum_ ;
      /**
       * <code>optional int32 hfNum = 37;</code>
       *
       * <pre>
       * 熔炼获得护法石数量
       * </pre>
       */
      public boolean hasHfNum() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hfNum = 37;</code>
       *
       * <pre>
       * 熔炼获得护法石数量
       * </pre>
       */
      public int getHfNum() {
        return hfNum_;
      }
      /**
       * <code>optional int32 hfNum = 37;</code>
       *
       * <pre>
       * 熔炼获得护法石数量
       * </pre>
       */
      public Builder setHfNum(int value) {
        bitField1_ |= 0x00000008;
        hfNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hfNum = 37;</code>
       *
       * <pre>
       * 熔炼获得护法石数量
       * </pre>
       */
      public Builder clearHfNum() {
        bitField1_ = (bitField1_ & ~0x00000008);
        hfNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 liuDaoHp = 38;
      private int liuDaoHp_ ;
      /**
       * <code>optional int32 liuDaoHp = 38;</code>
       *
       * <pre>
       * 六道中的当前血量
       * </pre>
       */
      public boolean hasLiuDaoHp() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 liuDaoHp = 38;</code>
       *
       * <pre>
       * 六道中的当前血量
       * </pre>
       */
      public int getLiuDaoHp() {
        return liuDaoHp_;
      }
      /**
       * <code>optional int32 liuDaoHp = 38;</code>
       *
       * <pre>
       * 六道中的当前血量
       * </pre>
       */
      public Builder setLiuDaoHp(int value) {
        bitField1_ |= 0x00000010;
        liuDaoHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liuDaoHp = 38;</code>
       *
       * <pre>
       * 六道中的当前血量
       * </pre>
       */
      public Builder clearLiuDaoHp() {
        bitField1_ = (bitField1_ & ~0x00000010);
        liuDaoHp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 liuDaoMaxHp = 39;
      private int liuDaoMaxHp_ ;
      /**
       * <code>optional int32 liuDaoMaxHp = 39;</code>
       *
       * <pre>
       * 六道中的最大血量
       * </pre>
       */
      public boolean hasLiuDaoMaxHp() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 liuDaoMaxHp = 39;</code>
       *
       * <pre>
       * 六道中的最大血量
       * </pre>
       */
      public int getLiuDaoMaxHp() {
        return liuDaoMaxHp_;
      }
      /**
       * <code>optional int32 liuDaoMaxHp = 39;</code>
       *
       * <pre>
       * 六道中的最大血量
       * </pre>
       */
      public Builder setLiuDaoMaxHp(int value) {
        bitField1_ |= 0x00000020;
        liuDaoMaxHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liuDaoMaxHp = 39;</code>
       *
       * <pre>
       * 六道中的最大血量
       * </pre>
       */
      public Builder clearLiuDaoMaxHp() {
        bitField1_ = (bitField1_ & ~0x00000020);
        liuDaoMaxHp_ = 0;
        onChanged();
        return this;
      }

      // optional bool hasEnterLiuDao = 40;
      private boolean hasEnterLiuDao_ ;
      /**
       * <code>optional bool hasEnterLiuDao = 40;</code>
       *
       * <pre>
       * true:已经参加过六道
       * </pre>
       */
      public boolean hasHasEnterLiuDao() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool hasEnterLiuDao = 40;</code>
       *
       * <pre>
       * true:已经参加过六道
       * </pre>
       */
      public boolean getHasEnterLiuDao() {
        return hasEnterLiuDao_;
      }
      /**
       * <code>optional bool hasEnterLiuDao = 40;</code>
       *
       * <pre>
       * true:已经参加过六道
       * </pre>
       */
      public Builder setHasEnterLiuDao(boolean value) {
        bitField1_ |= 0x00000040;
        hasEnterLiuDao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasEnterLiuDao = 40;</code>
       *
       * <pre>
       * true:已经参加过六道
       * </pre>
       */
      public Builder clearHasEnterLiuDao() {
        bitField1_ = (bitField1_ & ~0x00000040);
        hasEnterLiuDao_ = false;
        onChanged();
        return this;
      }

      // optional int32 critDamageRate = 41;
      private int critDamageRate_ ;
      /**
       * <code>optional int32 critDamageRate = 41;</code>
       */
      public boolean hasCritDamageRate() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 critDamageRate = 41;</code>
       */
      public int getCritDamageRate() {
        return critDamageRate_;
      }
      /**
       * <code>optional int32 critDamageRate = 41;</code>
       */
      public Builder setCritDamageRate(int value) {
        bitField1_ |= 0x00000080;
        critDamageRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 critDamageRate = 41;</code>
       */
      public Builder clearCritDamageRate() {
        bitField1_ = (bitField1_ & ~0x00000080);
        critDamageRate_ = 0;
        onChanged();
        return this;
      }

      // optional bool leader = 42;
      private boolean leader_ ;
      /**
       * <code>optional bool leader = 42;</code>
       *
       * <pre>
       *true:是队长卡
       * </pre>
       */
      public boolean hasLeader() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool leader = 42;</code>
       *
       * <pre>
       *true:是队长卡
       * </pre>
       */
      public boolean getLeader() {
        return leader_;
      }
      /**
       * <code>optional bool leader = 42;</code>
       *
       * <pre>
       *true:是队长卡
       * </pre>
       */
      public Builder setLeader(boolean value) {
        bitField1_ |= 0x00000100;
        leader_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool leader = 42;</code>
       *
       * <pre>
       *true:是队长卡
       * </pre>
       */
      public Builder clearLeader() {
        bitField1_ = (bitField1_ & ~0x00000100);
        leader_ = false;
        onChanged();
        return this;
      }

      // optional int32 quality = 43;
      private int quality_ ;
      /**
       * <code>optional int32 quality = 43;</code>
       */
      public boolean hasQuality() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 quality = 43;</code>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>optional int32 quality = 43;</code>
       */
      public Builder setQuality(int value) {
        bitField1_ |= 0x00000200;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quality = 43;</code>
       */
      public Builder clearQuality() {
        bitField1_ = (bitField1_ & ~0x00000200);
        quality_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shentongReturnHunyu = 44;
      private int shentongReturnHunyu_ ;
      /**
       * <code>optional int32 shentongReturnHunyu = 44;</code>
       *
       * <pre>
       * 卡牌熔炼,神通返回的魂玉值
       * </pre>
       */
      public boolean hasShentongReturnHunyu() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 shentongReturnHunyu = 44;</code>
       *
       * <pre>
       * 卡牌熔炼,神通返回的魂玉值
       * </pre>
       */
      public int getShentongReturnHunyu() {
        return shentongReturnHunyu_;
      }
      /**
       * <code>optional int32 shentongReturnHunyu = 44;</code>
       *
       * <pre>
       * 卡牌熔炼,神通返回的魂玉值
       * </pre>
       */
      public Builder setShentongReturnHunyu(int value) {
        bitField1_ |= 0x00000400;
        shentongReturnHunyu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shentongReturnHunyu = 44;</code>
       *
       * <pre>
       * 卡牌熔炼,神通返回的魂玉值
       * </pre>
       */
      public Builder clearShentongReturnHunyu() {
        bitField1_ = (bitField1_ & ~0x00000400);
        shentongReturnHunyu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 otherHunyu = 45;
      private int otherHunyu_ ;
      /**
       * <code>optional int32 otherHunyu = 45;</code>
       *
       * <pre>
       *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
       * </pre>
       */
      public boolean hasOtherHunyu() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 otherHunyu = 45;</code>
       *
       * <pre>
       *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
       * </pre>
       */
      public int getOtherHunyu() {
        return otherHunyu_;
      }
      /**
       * <code>optional int32 otherHunyu = 45;</code>
       *
       * <pre>
       *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
       * </pre>
       */
      public Builder setOtherHunyu(int value) {
        bitField1_ |= 0x00000800;
        otherHunyu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 otherHunyu = 45;</code>
       *
       * <pre>
       *卡牌熔炼需返回绝技和神通消耗的元神可获得hunyu
       * </pre>
       */
      public Builder clearOtherHunyu() {
        bitField1_ = (bitField1_ & ~0x00000800);
        otherHunyu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 exp = 46;
      private int exp_ ;
      /**
       * <code>optional int32 exp = 46;</code>
       *
       * <pre>
       *转生经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 exp = 46;</code>
       *
       * <pre>
       *转生经验
       * </pre>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional int32 exp = 46;</code>
       *
       * <pre>
       *转生经验
       * </pre>
       */
      public Builder setExp(int value) {
        bitField1_ |= 0x00001000;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exp = 46;</code>
       *
       * <pre>
       *转生经验
       * </pre>
       */
      public Builder clearExp() {
        bitField1_ = (bitField1_ & ~0x00001000);
        exp_ = 0;
        onChanged();
        return this;
      }

      // optional .FabaoItem fabao = 47;
      private myudfs.Common.FabaoItem fabao_ = myudfs.Common.FabaoItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.FabaoItem, myudfs.Common.FabaoItem.Builder, myudfs.Common.FabaoItemOrBuilder> fabaoBuilder_;
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public boolean hasFabao() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public myudfs.Common.FabaoItem getFabao() {
        if (fabaoBuilder_ == null) {
          return fabao_;
        } else {
          return fabaoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public Builder setFabao(myudfs.Common.FabaoItem value) {
        if (fabaoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fabao_ = value;
          onChanged();
        } else {
          fabaoBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public Builder setFabao(
          myudfs.Common.FabaoItem.Builder builderForValue) {
        if (fabaoBuilder_ == null) {
          fabao_ = builderForValue.build();
          onChanged();
        } else {
          fabaoBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public Builder mergeFabao(myudfs.Common.FabaoItem value) {
        if (fabaoBuilder_ == null) {
          if (((bitField1_ & 0x00002000) == 0x00002000) &&
              fabao_ != myudfs.Common.FabaoItem.getDefaultInstance()) {
            fabao_ =
              myudfs.Common.FabaoItem.newBuilder(fabao_).mergeFrom(value).buildPartial();
          } else {
            fabao_ = value;
          }
          onChanged();
        } else {
          fabaoBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public Builder clearFabao() {
        if (fabaoBuilder_ == null) {
          fabao_ = myudfs.Common.FabaoItem.getDefaultInstance();
          onChanged();
        } else {
          fabaoBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public myudfs.Common.FabaoItem.Builder getFabaoBuilder() {
        bitField1_ |= 0x00002000;
        onChanged();
        return getFabaoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      public myudfs.Common.FabaoItemOrBuilder getFabaoOrBuilder() {
        if (fabaoBuilder_ != null) {
          return fabaoBuilder_.getMessageOrBuilder();
        } else {
          return fabao_;
        }
      }
      /**
       * <code>optional .FabaoItem fabao = 47;</code>
       *
       * <pre>
       * 法宝
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.FabaoItem, myudfs.Common.FabaoItem.Builder, myudfs.Common.FabaoItemOrBuilder> 
          getFabaoFieldBuilder() {
        if (fabaoBuilder_ == null) {
          fabaoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.FabaoItem, myudfs.Common.FabaoItem.Builder, myudfs.Common.FabaoItemOrBuilder>(
                  fabao_,
                  getParentForChildren(),
                  isClean());
          fabao_ = null;
        }
        return fabaoBuilder_;
      }

      // optional int32 cardStage = 48;
      private int cardStage_ ;
      /**
       * <code>optional int32 cardStage = 48;</code>
       *
       * <pre>
       *神将分档
       * </pre>
       */
      public boolean hasCardStage() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 cardStage = 48;</code>
       *
       * <pre>
       *神将分档
       * </pre>
       */
      public int getCardStage() {
        return cardStage_;
      }
      /**
       * <code>optional int32 cardStage = 48;</code>
       *
       * <pre>
       *神将分档
       * </pre>
       */
      public Builder setCardStage(int value) {
        bitField1_ |= 0x00004000;
        cardStage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardStage = 48;</code>
       *
       * <pre>
       *神将分档
       * </pre>
       */
      public Builder clearCardStage() {
        bitField1_ = (bitField1_ & ~0x00004000);
        cardStage_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CardItem)
    }

    static {
      defaultInstance = new CardItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CardItem)
  }

  public interface CardPositionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 pos = 1;
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPos();

    // optional int64 id = 2;
    /**
     * <code>optional int64 id = 2;</code>
     *
     * <pre>
     * 卡牌id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 2;</code>
     *
     * <pre>
     * 卡牌id
     * </pre>
     */
    long getId();
  }
  /**
   * Protobuf type {@code CardPosition}
   */
  public static final class CardPosition extends
      com.google.protobuf.GeneratedMessage
      implements CardPositionOrBuilder {
    // Use CardPosition.newBuilder() to construct.
    private CardPosition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CardPosition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CardPosition defaultInstance;
    public static CardPosition getDefaultInstance() {
      return defaultInstance;
    }

    public CardPosition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CardPosition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pos_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_CardPosition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_CardPosition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.CardPosition.class, myudfs.Common.CardPosition.Builder.class);
    }

    public static com.google.protobuf.Parser<CardPosition> PARSER =
        new com.google.protobuf.AbstractParser<CardPosition>() {
      public CardPosition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CardPosition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CardPosition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 pos = 1;
    public static final int POS_FIELD_NUMBER = 1;
    private int pos_;
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    // optional int64 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <code>optional int64 id = 2;</code>
     *
     * <pre>
     * 卡牌id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 id = 2;</code>
     *
     * <pre>
     * 卡牌id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    private void initFields() {
      pos_ = 0;
      id_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.CardPosition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CardPosition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CardPosition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CardPosition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CardPosition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CardPosition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CardPosition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.CardPosition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CardPosition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CardPosition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.CardPosition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CardPosition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.CardPositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_CardPosition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_CardPosition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.CardPosition.class, myudfs.Common.CardPosition.Builder.class);
      }

      // Construct using myudfs.Common.CardPosition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_CardPosition_descriptor;
      }

      public myudfs.Common.CardPosition getDefaultInstanceForType() {
        return myudfs.Common.CardPosition.getDefaultInstance();
      }

      public myudfs.Common.CardPosition build() {
        myudfs.Common.CardPosition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.CardPosition buildPartial() {
        myudfs.Common.CardPosition result = new myudfs.Common.CardPosition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pos_ = pos_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.CardPosition) {
          return mergeFrom((myudfs.Common.CardPosition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.CardPosition other) {
        if (other == myudfs.Common.CardPosition.getDefaultInstance()) return this;
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.CardPosition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.CardPosition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 pos = 1;
      private int pos_ ;
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000001;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = 0;
        onChanged();
        return this;
      }

      // optional int64 id = 2;
      private long id_ ;
      /**
       * <code>optional int64 id = 2;</code>
       *
       * <pre>
       * 卡牌id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 id = 2;</code>
       *
       * <pre>
       * 卡牌id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 2;</code>
       *
       * <pre>
       * 卡牌id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 2;</code>
       *
       * <pre>
       * 卡牌id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CardPosition)
    }

    static {
      defaultInstance = new CardPosition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CardPosition)
  }

  public interface MapItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 key = 1;
    /**
     * <code>optional int64 key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>optional int64 key = 1;</code>
     */
    long getKey();

    // optional int32 value = 2;
    /**
     * <code>optional int32 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int32 value = 2;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code MapItem}
   */
  public static final class MapItem extends
      com.google.protobuf.GeneratedMessage
      implements MapItemOrBuilder {
    // Use MapItem.newBuilder() to construct.
    private MapItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapItem defaultInstance;
    public static MapItem getDefaultInstance() {
      return defaultInstance;
    }

    public MapItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MapItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MapItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MapItem.class, myudfs.Common.MapItem.Builder.class);
    }

    public static com.google.protobuf.Parser<MapItem> PARSER =
        new com.google.protobuf.AbstractParser<MapItem>() {
      public MapItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private long key_;
    /**
     * <code>optional int64 key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 key = 1;</code>
     */
    public long getKey() {
      return key_;
    }

    // optional int32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>optional int32 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 value = 2;</code>
     */
    public int getValue() {
      return value_;
    }

    private void initFields() {
      key_ = 0L;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MapItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MapItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MapItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MapItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MapItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MapItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MapItem.class, myudfs.Common.MapItem.Builder.class);
      }

      // Construct using myudfs.Common.MapItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MapItem_descriptor;
      }

      public myudfs.Common.MapItem getDefaultInstanceForType() {
        return myudfs.Common.MapItem.getDefaultInstance();
      }

      public myudfs.Common.MapItem build() {
        myudfs.Common.MapItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MapItem buildPartial() {
        myudfs.Common.MapItem result = new myudfs.Common.MapItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MapItem) {
          return mergeFrom((myudfs.Common.MapItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MapItem other) {
        if (other == myudfs.Common.MapItem.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MapItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MapItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 key = 1;
      private long key_ ;
      /**
       * <code>optional int64 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public long getKey() {
        return key_;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder setKey(long value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 value = 2;
      private int value_ ;
      /**
       * <code>optional int32 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapItem)
    }

    static {
      defaultInstance = new MapItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapItem)
  }

  public interface MapItem2OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 key = 1;
    /**
     * <code>optional int64 key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>optional int64 key = 1;</code>
     */
    long getKey();

    // repeated int32 value = 2;
    /**
     * <code>repeated int32 value = 2;</code>
     */
    java.util.List<java.lang.Integer> getValueList();
    /**
     * <code>repeated int32 value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated int32 value = 2;</code>
     */
    int getValue(int index);
  }
  /**
   * Protobuf type {@code MapItem2}
   */
  public static final class MapItem2 extends
      com.google.protobuf.GeneratedMessage
      implements MapItem2OrBuilder {
    // Use MapItem2.newBuilder() to construct.
    private MapItem2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapItem2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapItem2 defaultInstance;
    public static MapItem2 getDefaultInstance() {
      return defaultInstance;
    }

    public MapItem2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapItem2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MapItem2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MapItem2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MapItem2.class, myudfs.Common.MapItem2.Builder.class);
    }

    public static com.google.protobuf.Parser<MapItem2> PARSER =
        new com.google.protobuf.AbstractParser<MapItem2>() {
      public MapItem2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapItem2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapItem2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private long key_;
    /**
     * <code>optional int64 key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 key = 1;</code>
     */
    public long getKey() {
      return key_;
    }

    // repeated int32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> value_;
    /**
     * <code>repeated int32 value = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int32 value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int32 value = 2;</code>
     */
    public int getValue(int index) {
      return value_.get(index);
    }

    private void initFields() {
      key_ = 0L;
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, key_);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt32(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, key_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(value_.get(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MapItem2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MapItem2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MapItem2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapItem2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MapItem2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MapItem2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MapItem2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MapItem2.class, myudfs.Common.MapItem2.Builder.class);
      }

      // Construct using myudfs.Common.MapItem2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MapItem2_descriptor;
      }

      public myudfs.Common.MapItem2 getDefaultInstanceForType() {
        return myudfs.Common.MapItem2.getDefaultInstance();
      }

      public myudfs.Common.MapItem2 build() {
        myudfs.Common.MapItem2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MapItem2 buildPartial() {
        myudfs.Common.MapItem2 result = new myudfs.Common.MapItem2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MapItem2) {
          return mergeFrom((myudfs.Common.MapItem2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MapItem2 other) {
        if (other == myudfs.Common.MapItem2.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MapItem2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MapItem2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 key = 1;
      private long key_ ;
      /**
       * <code>optional int64 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public long getKey() {
        return key_;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder setKey(long value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 value = 2;
      private java.util.List<java.lang.Integer> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<java.lang.Integer>(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public int getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder setValue(
          int index, int value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder addValue(int value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapItem2)
    }

    static {
      defaultInstance = new MapItem2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapItem2)
  }

  public interface MapItem3OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 key = 1;
    /**
     * <code>optional int64 key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>optional int64 key = 1;</code>
     */
    long getKey();

    // repeated string value = 2;
    /**
     * <code>repeated string value = 2;</code>
     */
    java.util.List<java.lang.String>
    getValueList();
    /**
     * <code>repeated string value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated string value = 2;</code>
     */
    java.lang.String getValue(int index);
    /**
     * <code>repeated string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes(int index);
  }
  /**
   * Protobuf type {@code MapItem3}
   */
  public static final class MapItem3 extends
      com.google.protobuf.GeneratedMessage
      implements MapItem3OrBuilder {
    // Use MapItem3.newBuilder() to construct.
    private MapItem3(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapItem3(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapItem3 defaultInstance;
    public static MapItem3 getDefaultInstance() {
      return defaultInstance;
    }

    public MapItem3 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapItem3(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new com.google.protobuf.UnmodifiableLazyStringList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MapItem3_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MapItem3_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MapItem3.class, myudfs.Common.MapItem3.Builder.class);
    }

    public static com.google.protobuf.Parser<MapItem3> PARSER =
        new com.google.protobuf.AbstractParser<MapItem3>() {
      public MapItem3 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapItem3(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapItem3> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private long key_;
    /**
     * <code>optional int64 key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 key = 1;</code>
     */
    public long getKey() {
      return key_;
    }

    // repeated string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList value_;
    /**
     * <code>repeated string value = 2;</code>
     */
    public java.util.List<java.lang.String>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public java.lang.String getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes(int index) {
      return value_.getByteString(index);
    }

    private void initFields() {
      key_ = 0L;
      value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, key_);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeBytes(2, value_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, key_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(value_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MapItem3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MapItem3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MapItem3 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapItem3}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MapItem3OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MapItem3_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MapItem3_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MapItem3.class, myudfs.Common.MapItem3.Builder.class);
      }

      // Construct using myudfs.Common.MapItem3.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MapItem3_descriptor;
      }

      public myudfs.Common.MapItem3 getDefaultInstanceForType() {
        return myudfs.Common.MapItem3.getDefaultInstance();
      }

      public myudfs.Common.MapItem3 build() {
        myudfs.Common.MapItem3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MapItem3 buildPartial() {
        myudfs.Common.MapItem3 result = new myudfs.Common.MapItem3(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new com.google.protobuf.UnmodifiableLazyStringList(
              value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MapItem3) {
          return mergeFrom((myudfs.Common.MapItem3)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MapItem3 other) {
        if (other == myudfs.Common.MapItem3.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MapItem3 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MapItem3) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 key = 1;
      private long key_ ;
      /**
       * <code>optional int64 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public long getKey() {
        return key_;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder setKey(long value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0L;
        onChanged();
        return this;
      }

      // repeated string value = 2;
      private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new com.google.protobuf.LazyStringArrayList(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public java.util.List<java.lang.String>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder setValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder clearValue() {
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapItem3)
    }

    static {
      defaultInstance = new MapItem3(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapItem3)
  }

  public interface MapDateItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 key = 1;
    /**
     * <code>optional int32 key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>optional int32 key = 1;</code>
     */
    int getKey();

    // optional uint64 date = 2;
    /**
     * <code>optional uint64 date = 2;</code>
     */
    boolean hasDate();
    /**
     * <code>optional uint64 date = 2;</code>
     */
    long getDate();
  }
  /**
   * Protobuf type {@code MapDateItem}
   */
  public static final class MapDateItem extends
      com.google.protobuf.GeneratedMessage
      implements MapDateItemOrBuilder {
    // Use MapDateItem.newBuilder() to construct.
    private MapDateItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapDateItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapDateItem defaultInstance;
    public static MapDateItem getDefaultInstance() {
      return defaultInstance;
    }

    public MapDateItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapDateItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              date_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MapDateItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MapDateItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MapDateItem.class, myudfs.Common.MapDateItem.Builder.class);
    }

    public static com.google.protobuf.Parser<MapDateItem> PARSER =
        new com.google.protobuf.AbstractParser<MapDateItem>() {
      public MapDateItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapDateItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapDateItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private int key_;
    /**
     * <code>optional int32 key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 key = 1;</code>
     */
    public int getKey() {
      return key_;
    }

    // optional uint64 date = 2;
    public static final int DATE_FIELD_NUMBER = 2;
    private long date_;
    /**
     * <code>optional uint64 date = 2;</code>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 date = 2;</code>
     */
    public long getDate() {
      return date_;
    }

    private void initFields() {
      key_ = 0;
      date_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, date_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, date_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MapDateItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapDateItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapDateItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapDateItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapDateItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapDateItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapDateItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MapDateItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapDateItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapDateItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MapDateItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapDateItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MapDateItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MapDateItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MapDateItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MapDateItem.class, myudfs.Common.MapDateItem.Builder.class);
      }

      // Construct using myudfs.Common.MapDateItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        date_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MapDateItem_descriptor;
      }

      public myudfs.Common.MapDateItem getDefaultInstanceForType() {
        return myudfs.Common.MapDateItem.getDefaultInstance();
      }

      public myudfs.Common.MapDateItem build() {
        myudfs.Common.MapDateItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MapDateItem buildPartial() {
        myudfs.Common.MapDateItem result = new myudfs.Common.MapDateItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.date_ = date_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MapDateItem) {
          return mergeFrom((myudfs.Common.MapDateItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MapDateItem other) {
        if (other == myudfs.Common.MapDateItem.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MapDateItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MapDateItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 key = 1;
      private int key_ ;
      /**
       * <code>optional int32 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 key = 1;</code>
       */
      public int getKey() {
        return key_;
      }
      /**
       * <code>optional int32 key = 1;</code>
       */
      public Builder setKey(int value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 date = 2;
      private long date_ ;
      /**
       * <code>optional uint64 date = 2;</code>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 date = 2;</code>
       */
      public long getDate() {
        return date_;
      }
      /**
       * <code>optional uint64 date = 2;</code>
       */
      public Builder setDate(long value) {
        bitField0_ |= 0x00000002;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 date = 2;</code>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        date_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapDateItem)
    }

    static {
      defaultInstance = new MapDateItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapDateItem)
  }

  public interface MapItem4OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 key = 1;
    /**
     * <code>optional int64 key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>optional int64 key = 1;</code>
     */
    long getKey();

    // repeated int64 value = 2;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    java.util.List<java.lang.Long> getValueList();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    long getValue(int index);
  }
  /**
   * Protobuf type {@code MapItem4}
   */
  public static final class MapItem4 extends
      com.google.protobuf.GeneratedMessage
      implements MapItem4OrBuilder {
    // Use MapItem4.newBuilder() to construct.
    private MapItem4(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapItem4(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapItem4 defaultInstance;
    public static MapItem4 getDefaultInstance() {
      return defaultInstance;
    }

    public MapItem4 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapItem4(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MapItem4_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MapItem4_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MapItem4.class, myudfs.Common.MapItem4.Builder.class);
    }

    public static com.google.protobuf.Parser<MapItem4> PARSER =
        new com.google.protobuf.AbstractParser<MapItem4>() {
      public MapItem4 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapItem4(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapItem4> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private long key_;
    /**
     * <code>optional int64 key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 key = 1;</code>
     */
    public long getKey() {
      return key_;
    }

    // repeated int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> value_;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public long getValue(int index) {
      return value_.get(index);
    }

    private void initFields() {
      key_ = 0L;
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, key_);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt64(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, key_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(value_.get(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MapItem4 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem4 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem4 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem4 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem4 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem4 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem4 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MapItem4 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem4 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem4 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MapItem4 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapItem4}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MapItem4OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MapItem4_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MapItem4_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MapItem4.class, myudfs.Common.MapItem4.Builder.class);
      }

      // Construct using myudfs.Common.MapItem4.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MapItem4_descriptor;
      }

      public myudfs.Common.MapItem4 getDefaultInstanceForType() {
        return myudfs.Common.MapItem4.getDefaultInstance();
      }

      public myudfs.Common.MapItem4 build() {
        myudfs.Common.MapItem4 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MapItem4 buildPartial() {
        myudfs.Common.MapItem4 result = new myudfs.Common.MapItem4(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MapItem4) {
          return mergeFrom((myudfs.Common.MapItem4)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MapItem4 other) {
        if (other == myudfs.Common.MapItem4.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MapItem4 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MapItem4) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 key = 1;
      private long key_ ;
      /**
       * <code>optional int64 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public long getKey() {
        return key_;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder setKey(long value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 value = 2;
      private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<java.lang.Long>(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder setValue(
          int index, long value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addValue(long value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapItem4)
    }

    static {
      defaultInstance = new MapItem4(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapItem4)
  }

  public interface MapItem6OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 key = 1;
    /**
     * <code>optional int32 key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>optional int32 key = 1;</code>
     */
    int getKey();

    // optional int32 value = 2;
    /**
     * <code>optional int32 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int32 value = 2;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code MapItem6}
   */
  public static final class MapItem6 extends
      com.google.protobuf.GeneratedMessage
      implements MapItem6OrBuilder {
    // Use MapItem6.newBuilder() to construct.
    private MapItem6(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapItem6(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapItem6 defaultInstance;
    public static MapItem6 getDefaultInstance() {
      return defaultInstance;
    }

    public MapItem6 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapItem6(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MapItem6_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MapItem6_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MapItem6.class, myudfs.Common.MapItem6.Builder.class);
    }

    public static com.google.protobuf.Parser<MapItem6> PARSER =
        new com.google.protobuf.AbstractParser<MapItem6>() {
      public MapItem6 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapItem6(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapItem6> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private int key_;
    /**
     * <code>optional int32 key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 key = 1;</code>
     */
    public int getKey() {
      return key_;
    }

    // optional int32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>optional int32 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 value = 2;</code>
     */
    public int getValue() {
      return value_;
    }

    private void initFields() {
      key_ = 0;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MapItem6 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem6 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem6 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MapItem6 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MapItem6 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem6 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem6 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MapItem6 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MapItem6 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MapItem6 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MapItem6 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapItem6}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MapItem6OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MapItem6_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MapItem6_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MapItem6.class, myudfs.Common.MapItem6.Builder.class);
      }

      // Construct using myudfs.Common.MapItem6.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MapItem6_descriptor;
      }

      public myudfs.Common.MapItem6 getDefaultInstanceForType() {
        return myudfs.Common.MapItem6.getDefaultInstance();
      }

      public myudfs.Common.MapItem6 build() {
        myudfs.Common.MapItem6 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MapItem6 buildPartial() {
        myudfs.Common.MapItem6 result = new myudfs.Common.MapItem6(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MapItem6) {
          return mergeFrom((myudfs.Common.MapItem6)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MapItem6 other) {
        if (other == myudfs.Common.MapItem6.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MapItem6 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MapItem6) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 key = 1;
      private int key_ ;
      /**
       * <code>optional int32 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 key = 1;</code>
       */
      public int getKey() {
        return key_;
      }
      /**
       * <code>optional int32 key = 1;</code>
       */
      public Builder setKey(int value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0;
        onChanged();
        return this;
      }

      // optional int32 value = 2;
      private int value_ ;
      /**
       * <code>optional int32 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapItem6)
    }

    static {
      defaultInstance = new MapItem6(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapItem6)
  }

  public interface FriendItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 lv = 3;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 3;</code>
     */
    int getLv();

    // optional .CardItem card = 4;
    /**
     * <code>optional .CardItem card = 4;</code>
     *
     * <pre>
     * 队长卡
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional .CardItem card = 4;</code>
     *
     * <pre>
     * 队长卡
     * </pre>
     */
    myudfs.Common.CardItem getCard();
    /**
     * <code>optional .CardItem card = 4;</code>
     *
     * <pre>
     * 队长卡
     * </pre>
     */
    myudfs.Common.CardItemOrBuilder getCardOrBuilder();

    // optional uint64 date = 5;
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasDate();
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * </pre>
     */
    long getDate();

    // optional int32 vip = 6;
    /**
     * <code>optional int32 vip = 6;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 6;</code>
     */
    int getVip();

    // optional int32 battleScore = 7;
    /**
     * <code>optional int32 battleScore = 7;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>optional int32 battleScore = 7;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    int getBattleScore();
  }
  /**
   * Protobuf type {@code FriendItem}
   *
   * <pre>
   * 好友
   * </pre>
   */
  public static final class FriendItem extends
      com.google.protobuf.GeneratedMessage
      implements FriendItemOrBuilder {
    // Use FriendItem.newBuilder() to construct.
    private FriendItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FriendItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FriendItem defaultInstance;
    public static FriendItem getDefaultInstance() {
      return defaultInstance;
    }

    public FriendItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FriendItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lv_ = input.readInt32();
              break;
            }
            case 34: {
              myudfs.Common.CardItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = card_.toBuilder();
              }
              card_ = input.readMessage(myudfs.Common.CardItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(card_);
                card_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              date_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              vip_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              battleScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_FriendItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_FriendItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.FriendItem.class, myudfs.Common.FriendItem.Builder.class);
    }

    public static com.google.protobuf.Parser<FriendItem> PARSER =
        new com.google.protobuf.AbstractParser<FriendItem>() {
      public FriendItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FriendItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FriendItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 lv = 3;
    public static final int LV_FIELD_NUMBER = 3;
    private int lv_;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public int getLv() {
      return lv_;
    }

    // optional .CardItem card = 4;
    public static final int CARD_FIELD_NUMBER = 4;
    private myudfs.Common.CardItem card_;
    /**
     * <code>optional .CardItem card = 4;</code>
     *
     * <pre>
     * 队长卡
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .CardItem card = 4;</code>
     *
     * <pre>
     * 队长卡
     * </pre>
     */
    public myudfs.Common.CardItem getCard() {
      return card_;
    }
    /**
     * <code>optional .CardItem card = 4;</code>
     *
     * <pre>
     * 队长卡
     * </pre>
     */
    public myudfs.Common.CardItemOrBuilder getCardOrBuilder() {
      return card_;
    }

    // optional uint64 date = 5;
    public static final int DATE_FIELD_NUMBER = 5;
    private long date_;
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 date = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public long getDate() {
      return date_;
    }

    // optional int32 vip = 6;
    public static final int VIP_FIELD_NUMBER = 6;
    private int vip_;
    /**
     * <code>optional int32 vip = 6;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 vip = 6;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional int32 battleScore = 7;
    public static final int BATTLESCORE_FIELD_NUMBER = 7;
    private int battleScore_;
    /**
     * <code>optional int32 battleScore = 7;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 battleScore = 7;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      lv_ = 0;
      card_ = myudfs.Common.CardItem.getDefaultInstance();
      date_ = 0L;
      vip_ = 0;
      battleScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, card_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, date_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, vip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, battleScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, card_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, date_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, vip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, battleScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.FriendItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FriendItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FriendItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FriendItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FriendItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FriendItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FriendItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.FriendItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FriendItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FriendItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.FriendItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FriendItem}
     *
     * <pre>
     * 好友
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.FriendItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_FriendItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_FriendItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.FriendItem.class, myudfs.Common.FriendItem.Builder.class);
      }

      // Construct using myudfs.Common.FriendItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cardBuilder_ == null) {
          card_ = myudfs.Common.CardItem.getDefaultInstance();
        } else {
          cardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        date_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        battleScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_FriendItem_descriptor;
      }

      public myudfs.Common.FriendItem getDefaultInstanceForType() {
        return myudfs.Common.FriendItem.getDefaultInstance();
      }

      public myudfs.Common.FriendItem build() {
        myudfs.Common.FriendItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.FriendItem buildPartial() {
        myudfs.Common.FriendItem result = new myudfs.Common.FriendItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cardBuilder_ == null) {
          result.card_ = card_;
        } else {
          result.card_ = cardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.battleScore_ = battleScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.FriendItem) {
          return mergeFrom((myudfs.Common.FriendItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.FriendItem other) {
        if (other == myudfs.Common.FriendItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasCard()) {
          mergeCard(other.getCard());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.FriendItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.FriendItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 lv = 3;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000004;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional .CardItem card = 4;
      private myudfs.Common.CardItem card_ = myudfs.Common.CardItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> cardBuilder_;
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public myudfs.Common.CardItem getCard() {
        if (cardBuilder_ == null) {
          return card_;
        } else {
          return cardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public Builder setCard(myudfs.Common.CardItem value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          card_ = value;
          onChanged();
        } else {
          cardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public Builder setCard(
          myudfs.Common.CardItem.Builder builderForValue) {
        if (cardBuilder_ == null) {
          card_ = builderForValue.build();
          onChanged();
        } else {
          cardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public Builder mergeCard(myudfs.Common.CardItem value) {
        if (cardBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              card_ != myudfs.Common.CardItem.getDefaultInstance()) {
            card_ =
              myudfs.Common.CardItem.newBuilder(card_).mergeFrom(value).buildPartial();
          } else {
            card_ = value;
          }
          onChanged();
        } else {
          cardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public Builder clearCard() {
        if (cardBuilder_ == null) {
          card_ = myudfs.Common.CardItem.getDefaultInstance();
          onChanged();
        } else {
          cardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public myudfs.Common.CardItem.Builder getCardBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      public myudfs.Common.CardItemOrBuilder getCardOrBuilder() {
        if (cardBuilder_ != null) {
          return cardBuilder_.getMessageOrBuilder();
        } else {
          return card_;
        }
      }
      /**
       * <code>optional .CardItem card = 4;</code>
       *
       * <pre>
       * 队长卡
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> 
          getCardFieldBuilder() {
        if (cardBuilder_ == null) {
          cardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder>(
                  card_,
                  getParentForChildren(),
                  isClean());
          card_ = null;
        }
        return cardBuilder_;
      }

      // optional uint64 date = 5;
      private long date_ ;
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public long getDate() {
        return date_;
      }
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setDate(long value) {
        bitField0_ |= 0x00000010;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 date = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        date_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 vip = 6;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000020;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional int32 battleScore = 7;
      private int battleScore_ ;
      /**
       * <code>optional int32 battleScore = 7;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 battleScore = 7;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>optional int32 battleScore = 7;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField0_ |= 0x00000040;
        battleScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 battleScore = 7;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        battleScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FriendItem)
    }

    static {
      defaultInstance = new FriendItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FriendItem)
  }

  public interface FriendChangeItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 newFriendId = 1;
    /**
     * <code>optional int64 newFriendId = 1;</code>
     *
     * <pre>
     * 新好友id
     * </pre>
     */
    boolean hasNewFriendId();
    /**
     * <code>optional int64 newFriendId = 1;</code>
     *
     * <pre>
     * 新好友id
     * </pre>
     */
    long getNewFriendId();

    // optional int64 deleteFriendId = 2;
    /**
     * <code>optional int64 deleteFriendId = 2;</code>
     *
     * <pre>
     *删除的好友id
     * </pre>
     */
    boolean hasDeleteFriendId();
    /**
     * <code>optional int64 deleteFriendId = 2;</code>
     *
     * <pre>
     *删除的好友id
     * </pre>
     */
    long getDeleteFriendId();
  }
  /**
   * Protobuf type {@code FriendChangeItem}
   *
   * <pre>
   * 好友信息变化通知
   * </pre>
   */
  public static final class FriendChangeItem extends
      com.google.protobuf.GeneratedMessage
      implements FriendChangeItemOrBuilder {
    // Use FriendChangeItem.newBuilder() to construct.
    private FriendChangeItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FriendChangeItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FriendChangeItem defaultInstance;
    public static FriendChangeItem getDefaultInstance() {
      return defaultInstance;
    }

    public FriendChangeItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FriendChangeItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              newFriendId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              deleteFriendId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_FriendChangeItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_FriendChangeItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.FriendChangeItem.class, myudfs.Common.FriendChangeItem.Builder.class);
    }

    public static com.google.protobuf.Parser<FriendChangeItem> PARSER =
        new com.google.protobuf.AbstractParser<FriendChangeItem>() {
      public FriendChangeItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FriendChangeItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FriendChangeItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 newFriendId = 1;
    public static final int NEWFRIENDID_FIELD_NUMBER = 1;
    private long newFriendId_;
    /**
     * <code>optional int64 newFriendId = 1;</code>
     *
     * <pre>
     * 新好友id
     * </pre>
     */
    public boolean hasNewFriendId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 newFriendId = 1;</code>
     *
     * <pre>
     * 新好友id
     * </pre>
     */
    public long getNewFriendId() {
      return newFriendId_;
    }

    // optional int64 deleteFriendId = 2;
    public static final int DELETEFRIENDID_FIELD_NUMBER = 2;
    private long deleteFriendId_;
    /**
     * <code>optional int64 deleteFriendId = 2;</code>
     *
     * <pre>
     *删除的好友id
     * </pre>
     */
    public boolean hasDeleteFriendId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 deleteFriendId = 2;</code>
     *
     * <pre>
     *删除的好友id
     * </pre>
     */
    public long getDeleteFriendId() {
      return deleteFriendId_;
    }

    private void initFields() {
      newFriendId_ = 0L;
      deleteFriendId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, newFriendId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, deleteFriendId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, newFriendId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, deleteFriendId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.FriendChangeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FriendChangeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FriendChangeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FriendChangeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FriendChangeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FriendChangeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FriendChangeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.FriendChangeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FriendChangeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FriendChangeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.FriendChangeItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FriendChangeItem}
     *
     * <pre>
     * 好友信息变化通知
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.FriendChangeItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_FriendChangeItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_FriendChangeItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.FriendChangeItem.class, myudfs.Common.FriendChangeItem.Builder.class);
      }

      // Construct using myudfs.Common.FriendChangeItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        newFriendId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        deleteFriendId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_FriendChangeItem_descriptor;
      }

      public myudfs.Common.FriendChangeItem getDefaultInstanceForType() {
        return myudfs.Common.FriendChangeItem.getDefaultInstance();
      }

      public myudfs.Common.FriendChangeItem build() {
        myudfs.Common.FriendChangeItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.FriendChangeItem buildPartial() {
        myudfs.Common.FriendChangeItem result = new myudfs.Common.FriendChangeItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.newFriendId_ = newFriendId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deleteFriendId_ = deleteFriendId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.FriendChangeItem) {
          return mergeFrom((myudfs.Common.FriendChangeItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.FriendChangeItem other) {
        if (other == myudfs.Common.FriendChangeItem.getDefaultInstance()) return this;
        if (other.hasNewFriendId()) {
          setNewFriendId(other.getNewFriendId());
        }
        if (other.hasDeleteFriendId()) {
          setDeleteFriendId(other.getDeleteFriendId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.FriendChangeItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.FriendChangeItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 newFriendId = 1;
      private long newFriendId_ ;
      /**
       * <code>optional int64 newFriendId = 1;</code>
       *
       * <pre>
       * 新好友id
       * </pre>
       */
      public boolean hasNewFriendId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 newFriendId = 1;</code>
       *
       * <pre>
       * 新好友id
       * </pre>
       */
      public long getNewFriendId() {
        return newFriendId_;
      }
      /**
       * <code>optional int64 newFriendId = 1;</code>
       *
       * <pre>
       * 新好友id
       * </pre>
       */
      public Builder setNewFriendId(long value) {
        bitField0_ |= 0x00000001;
        newFriendId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 newFriendId = 1;</code>
       *
       * <pre>
       * 新好友id
       * </pre>
       */
      public Builder clearNewFriendId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        newFriendId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 deleteFriendId = 2;
      private long deleteFriendId_ ;
      /**
       * <code>optional int64 deleteFriendId = 2;</code>
       *
       * <pre>
       *删除的好友id
       * </pre>
       */
      public boolean hasDeleteFriendId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 deleteFriendId = 2;</code>
       *
       * <pre>
       *删除的好友id
       * </pre>
       */
      public long getDeleteFriendId() {
        return deleteFriendId_;
      }
      /**
       * <code>optional int64 deleteFriendId = 2;</code>
       *
       * <pre>
       *删除的好友id
       * </pre>
       */
      public Builder setDeleteFriendId(long value) {
        bitField0_ |= 0x00000002;
        deleteFriendId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 deleteFriendId = 2;</code>
       *
       * <pre>
       *删除的好友id
       * </pre>
       */
      public Builder clearDeleteFriendId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deleteFriendId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FriendChangeItem)
    }

    static {
      defaultInstance = new FriendChangeItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FriendChangeItem)
  }

  public interface FriendDetailItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 lv = 3;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 3;</code>
     */
    int getLv();

    // optional int32 qiuYuan = 5;
    /**
     * <code>optional int32 qiuYuan = 5;</code>
     *
     * <pre>
     *已求缘次数
     * </pre>
     */
    boolean hasQiuYuan();
    /**
     * <code>optional int32 qiuYuan = 5;</code>
     *
     * <pre>
     *已求缘次数
     * </pre>
     */
    int getQiuYuan();

    // repeated .CardItem cards = 6;
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    java.util.List<myudfs.Common.CardItem> 
        getCardsList();
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    myudfs.Common.CardItem getCards(int index);
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
        int index);

    // optional uint64 date = 7;
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     * 最后活跃时间
     * </pre>
     */
    boolean hasDate();
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     * 最后活跃时间
     * </pre>
     */
    long getDate();

    // optional int32 battleScore = 8;
    /**
     * <code>optional int32 battleScore = 8;</code>
     *
     * <pre>
     *好友战斗力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>optional int32 battleScore = 8;</code>
     *
     * <pre>
     *好友战斗力
     * </pre>
     */
    int getBattleScore();

    // repeated int64 receiveStamina = 9;
    /**
     * <code>repeated int64 receiveStamina = 9;</code>
     *
     * <pre>
     *收到的体力值
     * </pre>
     */
    java.util.List<java.lang.Long> getReceiveStaminaList();
    /**
     * <code>repeated int64 receiveStamina = 9;</code>
     *
     * <pre>
     *收到的体力值
     * </pre>
     */
    int getReceiveStaminaCount();
    /**
     * <code>repeated int64 receiveStamina = 9;</code>
     *
     * <pre>
     *收到的体力值
     * </pre>
     */
    long getReceiveStamina(int index);

    // optional uint64 loginTime = 10;
    /**
     * <code>optional uint64 loginTime = 10;</code>
     *
     * <pre>
     * 上次登陆时间
     * </pre>
     */
    boolean hasLoginTime();
    /**
     * <code>optional uint64 loginTime = 10;</code>
     *
     * <pre>
     * 上次登陆时间
     * </pre>
     */
    long getLoginTime();

    // optional uint64 zhuzhen = 11;
    /**
     * <code>optional uint64 zhuzhen = 11;</code>
     *
     * <pre>
     * 上次助阵时间
     * </pre>
     */
    boolean hasZhuzhen();
    /**
     * <code>optional uint64 zhuzhen = 11;</code>
     *
     * <pre>
     * 上次助阵时间
     * </pre>
     */
    long getZhuzhen();

    // optional int32 vip = 12;
    /**
     * <code>optional int32 vip = 12;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 12;</code>
     */
    int getVip();
  }
  /**
   * Protobuf type {@code FriendDetailItem}
   *
   * <pre>
   * 角色:自己的好友详情
   * </pre>
   */
  public static final class FriendDetailItem extends
      com.google.protobuf.GeneratedMessage
      implements FriendDetailItemOrBuilder {
    // Use FriendDetailItem.newBuilder() to construct.
    private FriendDetailItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FriendDetailItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FriendDetailItem defaultInstance;
    public static FriendDetailItem getDefaultInstance() {
      return defaultInstance;
    }

    public FriendDetailItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FriendDetailItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lv_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              qiuYuan_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cards_ = new java.util.ArrayList<myudfs.Common.CardItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              cards_.add(input.readMessage(myudfs.Common.CardItem.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              date_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              battleScore_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                receiveStamina_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              receiveStamina_.add(input.readInt64());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                receiveStamina_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                receiveStamina_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              loginTime_ = input.readUInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              zhuzhen_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              vip_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          receiveStamina_ = java.util.Collections.unmodifiableList(receiveStamina_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_FriendDetailItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_FriendDetailItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.FriendDetailItem.class, myudfs.Common.FriendDetailItem.Builder.class);
    }

    public static com.google.protobuf.Parser<FriendDetailItem> PARSER =
        new com.google.protobuf.AbstractParser<FriendDetailItem>() {
      public FriendDetailItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FriendDetailItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FriendDetailItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 lv = 3;
    public static final int LV_FIELD_NUMBER = 3;
    private int lv_;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 qiuYuan = 5;
    public static final int QIUYUAN_FIELD_NUMBER = 5;
    private int qiuYuan_;
    /**
     * <code>optional int32 qiuYuan = 5;</code>
     *
     * <pre>
     *已求缘次数
     * </pre>
     */
    public boolean hasQiuYuan() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 qiuYuan = 5;</code>
     *
     * <pre>
     *已求缘次数
     * </pre>
     */
    public int getQiuYuan() {
      return qiuYuan_;
    }

    // repeated .CardItem cards = 6;
    public static final int CARDS_FIELD_NUMBER = 6;
    private java.util.List<myudfs.Common.CardItem> cards_;
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    public java.util.List<myudfs.Common.CardItem> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    public myudfs.Common.CardItem getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 卡组中的卡
     * </pre>
     */
    public myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    // optional uint64 date = 7;
    public static final int DATE_FIELD_NUMBER = 7;
    private long date_;
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     * 最后活跃时间
     * </pre>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     * 最后活跃时间
     * </pre>
     */
    public long getDate() {
      return date_;
    }

    // optional int32 battleScore = 8;
    public static final int BATTLESCORE_FIELD_NUMBER = 8;
    private int battleScore_;
    /**
     * <code>optional int32 battleScore = 8;</code>
     *
     * <pre>
     *好友战斗力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 battleScore = 8;</code>
     *
     * <pre>
     *好友战斗力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    // repeated int64 receiveStamina = 9;
    public static final int RECEIVESTAMINA_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Long> receiveStamina_;
    /**
     * <code>repeated int64 receiveStamina = 9;</code>
     *
     * <pre>
     *收到的体力值
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getReceiveStaminaList() {
      return receiveStamina_;
    }
    /**
     * <code>repeated int64 receiveStamina = 9;</code>
     *
     * <pre>
     *收到的体力值
     * </pre>
     */
    public int getReceiveStaminaCount() {
      return receiveStamina_.size();
    }
    /**
     * <code>repeated int64 receiveStamina = 9;</code>
     *
     * <pre>
     *收到的体力值
     * </pre>
     */
    public long getReceiveStamina(int index) {
      return receiveStamina_.get(index);
    }

    // optional uint64 loginTime = 10;
    public static final int LOGINTIME_FIELD_NUMBER = 10;
    private long loginTime_;
    /**
     * <code>optional uint64 loginTime = 10;</code>
     *
     * <pre>
     * 上次登陆时间
     * </pre>
     */
    public boolean hasLoginTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 loginTime = 10;</code>
     *
     * <pre>
     * 上次登陆时间
     * </pre>
     */
    public long getLoginTime() {
      return loginTime_;
    }

    // optional uint64 zhuzhen = 11;
    public static final int ZHUZHEN_FIELD_NUMBER = 11;
    private long zhuzhen_;
    /**
     * <code>optional uint64 zhuzhen = 11;</code>
     *
     * <pre>
     * 上次助阵时间
     * </pre>
     */
    public boolean hasZhuzhen() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 zhuzhen = 11;</code>
     *
     * <pre>
     * 上次助阵时间
     * </pre>
     */
    public long getZhuzhen() {
      return zhuzhen_;
    }

    // optional int32 vip = 12;
    public static final int VIP_FIELD_NUMBER = 12;
    private int vip_;
    /**
     * <code>optional int32 vip = 12;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 vip = 12;</code>
     */
    public int getVip() {
      return vip_;
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      lv_ = 0;
      qiuYuan_ = 0;
      cards_ = java.util.Collections.emptyList();
      date_ = 0L;
      battleScore_ = 0;
      receiveStamina_ = java.util.Collections.emptyList();
      loginTime_ = 0L;
      zhuzhen_ = 0L;
      vip_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, qiuYuan_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(6, cards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(7, date_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, battleScore_);
      }
      for (int i = 0; i < receiveStamina_.size(); i++) {
        output.writeInt64(9, receiveStamina_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(10, loginTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(11, zhuzhen_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, vip_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, qiuYuan_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, date_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, battleScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < receiveStamina_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(receiveStamina_.get(i));
        }
        size += dataSize;
        size += 1 * getReceiveStaminaList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, loginTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, zhuzhen_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, vip_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.FriendDetailItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FriendDetailItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FriendDetailItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FriendDetailItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FriendDetailItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FriendDetailItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FriendDetailItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.FriendDetailItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FriendDetailItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FriendDetailItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.FriendDetailItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FriendDetailItem}
     *
     * <pre>
     * 角色:自己的好友详情
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.FriendDetailItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_FriendDetailItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_FriendDetailItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.FriendDetailItem.class, myudfs.Common.FriendDetailItem.Builder.class);
      }

      // Construct using myudfs.Common.FriendDetailItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        qiuYuan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsBuilder_.clear();
        }
        date_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        battleScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        receiveStamina_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        loginTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        zhuzhen_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_FriendDetailItem_descriptor;
      }

      public myudfs.Common.FriendDetailItem getDefaultInstanceForType() {
        return myudfs.Common.FriendDetailItem.getDefaultInstance();
      }

      public myudfs.Common.FriendDetailItem build() {
        myudfs.Common.FriendDetailItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.FriendDetailItem buildPartial() {
        myudfs.Common.FriendDetailItem result = new myudfs.Common.FriendDetailItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.qiuYuan_ = qiuYuan_;
        if (cardsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.battleScore_ = battleScore_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          receiveStamina_ = java.util.Collections.unmodifiableList(receiveStamina_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.receiveStamina_ = receiveStamina_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.loginTime_ = loginTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.zhuzhen_ = zhuzhen_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vip_ = vip_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.FriendDetailItem) {
          return mergeFrom((myudfs.Common.FriendDetailItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.FriendDetailItem other) {
        if (other == myudfs.Common.FriendDetailItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasQiuYuan()) {
          setQiuYuan(other.getQiuYuan());
        }
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        if (!other.receiveStamina_.isEmpty()) {
          if (receiveStamina_.isEmpty()) {
            receiveStamina_ = other.receiveStamina_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureReceiveStaminaIsMutable();
            receiveStamina_.addAll(other.receiveStamina_);
          }
          onChanged();
        }
        if (other.hasLoginTime()) {
          setLoginTime(other.getLoginTime());
        }
        if (other.hasZhuzhen()) {
          setZhuzhen(other.getZhuzhen());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.FriendDetailItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.FriendDetailItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 lv = 3;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000004;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 qiuYuan = 5;
      private int qiuYuan_ ;
      /**
       * <code>optional int32 qiuYuan = 5;</code>
       *
       * <pre>
       *已求缘次数
       * </pre>
       */
      public boolean hasQiuYuan() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 qiuYuan = 5;</code>
       *
       * <pre>
       *已求缘次数
       * </pre>
       */
      public int getQiuYuan() {
        return qiuYuan_;
      }
      /**
       * <code>optional int32 qiuYuan = 5;</code>
       *
       * <pre>
       *已求缘次数
       * </pre>
       */
      public Builder setQiuYuan(int value) {
        bitField0_ |= 0x00000008;
        qiuYuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qiuYuan = 5;</code>
       *
       * <pre>
       *已求缘次数
       * </pre>
       */
      public Builder clearQiuYuan() {
        bitField0_ = (bitField0_ & ~0x00000008);
        qiuYuan_ = 0;
        onChanged();
        return this;
      }

      // repeated .CardItem cards = 6;
      private java.util.List<myudfs.Common.CardItem> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cards_ = new java.util.ArrayList<myudfs.Common.CardItem>(cards_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public java.util.List<myudfs.Common.CardItem> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder setCards(
          int index, myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder setCards(
          int index, myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder addCards(myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder addCards(
          int index, myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder addCards(
          myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder addCards(
          int index, myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends myudfs.Common.CardItem> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          super.addAll(values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            myudfs.Common.CardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, myudfs.Common.CardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 卡组中的卡
       * </pre>
       */
      public java.util.List<myudfs.Common.CardItem.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder>(
                  cards_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }

      // optional uint64 date = 7;
      private long date_ ;
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       * 最后活跃时间
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       * 最后活跃时间
       * </pre>
       */
      public long getDate() {
        return date_;
      }
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       * 最后活跃时间
       * </pre>
       */
      public Builder setDate(long value) {
        bitField0_ |= 0x00000020;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       * 最后活跃时间
       * </pre>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        date_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 battleScore = 8;
      private int battleScore_ ;
      /**
       * <code>optional int32 battleScore = 8;</code>
       *
       * <pre>
       *好友战斗力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 battleScore = 8;</code>
       *
       * <pre>
       *好友战斗力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>optional int32 battleScore = 8;</code>
       *
       * <pre>
       *好友战斗力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField0_ |= 0x00000040;
        battleScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 battleScore = 8;</code>
       *
       * <pre>
       *好友战斗力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        battleScore_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 receiveStamina = 9;
      private java.util.List<java.lang.Long> receiveStamina_ = java.util.Collections.emptyList();
      private void ensureReceiveStaminaIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          receiveStamina_ = new java.util.ArrayList<java.lang.Long>(receiveStamina_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int64 receiveStamina = 9;</code>
       *
       * <pre>
       *收到的体力值
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getReceiveStaminaList() {
        return java.util.Collections.unmodifiableList(receiveStamina_);
      }
      /**
       * <code>repeated int64 receiveStamina = 9;</code>
       *
       * <pre>
       *收到的体力值
       * </pre>
       */
      public int getReceiveStaminaCount() {
        return receiveStamina_.size();
      }
      /**
       * <code>repeated int64 receiveStamina = 9;</code>
       *
       * <pre>
       *收到的体力值
       * </pre>
       */
      public long getReceiveStamina(int index) {
        return receiveStamina_.get(index);
      }
      /**
       * <code>repeated int64 receiveStamina = 9;</code>
       *
       * <pre>
       *收到的体力值
       * </pre>
       */
      public Builder setReceiveStamina(
          int index, long value) {
        ensureReceiveStaminaIsMutable();
        receiveStamina_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receiveStamina = 9;</code>
       *
       * <pre>
       *收到的体力值
       * </pre>
       */
      public Builder addReceiveStamina(long value) {
        ensureReceiveStaminaIsMutable();
        receiveStamina_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receiveStamina = 9;</code>
       *
       * <pre>
       *收到的体力值
       * </pre>
       */
      public Builder addAllReceiveStamina(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureReceiveStaminaIsMutable();
        super.addAll(values, receiveStamina_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receiveStamina = 9;</code>
       *
       * <pre>
       *收到的体力值
       * </pre>
       */
      public Builder clearReceiveStamina() {
        receiveStamina_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional uint64 loginTime = 10;
      private long loginTime_ ;
      /**
       * <code>optional uint64 loginTime = 10;</code>
       *
       * <pre>
       * 上次登陆时间
       * </pre>
       */
      public boolean hasLoginTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 loginTime = 10;</code>
       *
       * <pre>
       * 上次登陆时间
       * </pre>
       */
      public long getLoginTime() {
        return loginTime_;
      }
      /**
       * <code>optional uint64 loginTime = 10;</code>
       *
       * <pre>
       * 上次登陆时间
       * </pre>
       */
      public Builder setLoginTime(long value) {
        bitField0_ |= 0x00000100;
        loginTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loginTime = 10;</code>
       *
       * <pre>
       * 上次登陆时间
       * </pre>
       */
      public Builder clearLoginTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        loginTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 zhuzhen = 11;
      private long zhuzhen_ ;
      /**
       * <code>optional uint64 zhuzhen = 11;</code>
       *
       * <pre>
       * 上次助阵时间
       * </pre>
       */
      public boolean hasZhuzhen() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 zhuzhen = 11;</code>
       *
       * <pre>
       * 上次助阵时间
       * </pre>
       */
      public long getZhuzhen() {
        return zhuzhen_;
      }
      /**
       * <code>optional uint64 zhuzhen = 11;</code>
       *
       * <pre>
       * 上次助阵时间
       * </pre>
       */
      public Builder setZhuzhen(long value) {
        bitField0_ |= 0x00000200;
        zhuzhen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 zhuzhen = 11;</code>
       *
       * <pre>
       * 上次助阵时间
       * </pre>
       */
      public Builder clearZhuzhen() {
        bitField0_ = (bitField0_ & ~0x00000200);
        zhuzhen_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 vip = 12;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 12;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 vip = 12;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 12;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000400;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 12;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000400);
        vip_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FriendDetailItem)
    }

    static {
      defaultInstance = new FriendDetailItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FriendDetailItem)
  }

  public interface LiuDaoEnemyItemListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .LiuDaoEnemyItem enemies = 1;
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    java.util.List<myudfs.Common.LiuDaoEnemyItem> 
        getEnemiesList();
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    myudfs.Common.LiuDaoEnemyItem getEnemies(int index);
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    int getEnemiesCount();
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    java.util.List<? extends myudfs.Common.LiuDaoEnemyItemOrBuilder> 
        getEnemiesOrBuilderList();
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    myudfs.Common.LiuDaoEnemyItemOrBuilder getEnemiesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code LiuDaoEnemyItemList}
   */
  public static final class LiuDaoEnemyItemList extends
      com.google.protobuf.GeneratedMessage
      implements LiuDaoEnemyItemListOrBuilder {
    // Use LiuDaoEnemyItemList.newBuilder() to construct.
    private LiuDaoEnemyItemList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiuDaoEnemyItemList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiuDaoEnemyItemList defaultInstance;
    public static LiuDaoEnemyItemList getDefaultInstance() {
      return defaultInstance;
    }

    public LiuDaoEnemyItemList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiuDaoEnemyItemList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                enemies_ = new java.util.ArrayList<myudfs.Common.LiuDaoEnemyItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              enemies_.add(input.readMessage(myudfs.Common.LiuDaoEnemyItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          enemies_ = java.util.Collections.unmodifiableList(enemies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_LiuDaoEnemyItemList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_LiuDaoEnemyItemList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.LiuDaoEnemyItemList.class, myudfs.Common.LiuDaoEnemyItemList.Builder.class);
    }

    public static com.google.protobuf.Parser<LiuDaoEnemyItemList> PARSER =
        new com.google.protobuf.AbstractParser<LiuDaoEnemyItemList>() {
      public LiuDaoEnemyItemList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiuDaoEnemyItemList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiuDaoEnemyItemList> getParserForType() {
      return PARSER;
    }

    // repeated .LiuDaoEnemyItem enemies = 1;
    public static final int ENEMIES_FIELD_NUMBER = 1;
    private java.util.List<myudfs.Common.LiuDaoEnemyItem> enemies_;
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    public java.util.List<myudfs.Common.LiuDaoEnemyItem> getEnemiesList() {
      return enemies_;
    }
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    public java.util.List<? extends myudfs.Common.LiuDaoEnemyItemOrBuilder> 
        getEnemiesOrBuilderList() {
      return enemies_;
    }
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    public int getEnemiesCount() {
      return enemies_.size();
    }
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    public myudfs.Common.LiuDaoEnemyItem getEnemies(int index) {
      return enemies_.get(index);
    }
    /**
     * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
     */
    public myudfs.Common.LiuDaoEnemyItemOrBuilder getEnemiesOrBuilder(
        int index) {
      return enemies_.get(index);
    }

    private void initFields() {
      enemies_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < enemies_.size(); i++) {
        output.writeMessage(1, enemies_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < enemies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, enemies_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.LiuDaoEnemyItemList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.LiuDaoEnemyItemList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiuDaoEnemyItemList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.LiuDaoEnemyItemListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_LiuDaoEnemyItemList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_LiuDaoEnemyItemList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.LiuDaoEnemyItemList.class, myudfs.Common.LiuDaoEnemyItemList.Builder.class);
      }

      // Construct using myudfs.Common.LiuDaoEnemyItemList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEnemiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          enemiesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_LiuDaoEnemyItemList_descriptor;
      }

      public myudfs.Common.LiuDaoEnemyItemList getDefaultInstanceForType() {
        return myudfs.Common.LiuDaoEnemyItemList.getDefaultInstance();
      }

      public myudfs.Common.LiuDaoEnemyItemList build() {
        myudfs.Common.LiuDaoEnemyItemList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.LiuDaoEnemyItemList buildPartial() {
        myudfs.Common.LiuDaoEnemyItemList result = new myudfs.Common.LiuDaoEnemyItemList(this);
        int from_bitField0_ = bitField0_;
        if (enemiesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            enemies_ = java.util.Collections.unmodifiableList(enemies_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.enemies_ = enemies_;
        } else {
          result.enemies_ = enemiesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.LiuDaoEnemyItemList) {
          return mergeFrom((myudfs.Common.LiuDaoEnemyItemList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.LiuDaoEnemyItemList other) {
        if (other == myudfs.Common.LiuDaoEnemyItemList.getDefaultInstance()) return this;
        if (enemiesBuilder_ == null) {
          if (!other.enemies_.isEmpty()) {
            if (enemies_.isEmpty()) {
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEnemiesIsMutable();
              enemies_.addAll(other.enemies_);
            }
            onChanged();
          }
        } else {
          if (!other.enemies_.isEmpty()) {
            if (enemiesBuilder_.isEmpty()) {
              enemiesBuilder_.dispose();
              enemiesBuilder_ = null;
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000001);
              enemiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEnemiesFieldBuilder() : null;
            } else {
              enemiesBuilder_.addAllMessages(other.enemies_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.LiuDaoEnemyItemList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.LiuDaoEnemyItemList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .LiuDaoEnemyItem enemies = 1;
      private java.util.List<myudfs.Common.LiuDaoEnemyItem> enemies_ =
        java.util.Collections.emptyList();
      private void ensureEnemiesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          enemies_ = new java.util.ArrayList<myudfs.Common.LiuDaoEnemyItem>(enemies_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.LiuDaoEnemyItem, myudfs.Common.LiuDaoEnemyItem.Builder, myudfs.Common.LiuDaoEnemyItemOrBuilder> enemiesBuilder_;

      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public java.util.List<myudfs.Common.LiuDaoEnemyItem> getEnemiesList() {
        if (enemiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(enemies_);
        } else {
          return enemiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public int getEnemiesCount() {
        if (enemiesBuilder_ == null) {
          return enemies_.size();
        } else {
          return enemiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public myudfs.Common.LiuDaoEnemyItem getEnemies(int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);
        } else {
          return enemiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder setEnemies(
          int index, myudfs.Common.LiuDaoEnemyItem value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.set(index, value);
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder setEnemies(
          int index, myudfs.Common.LiuDaoEnemyItem.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.set(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder addEnemies(myudfs.Common.LiuDaoEnemyItem value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder addEnemies(
          int index, myudfs.Common.LiuDaoEnemyItem value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(index, value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder addEnemies(
          myudfs.Common.LiuDaoEnemyItem.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder addEnemies(
          int index, myudfs.Common.LiuDaoEnemyItem.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder addAllEnemies(
          java.lang.Iterable<? extends myudfs.Common.LiuDaoEnemyItem> values) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          super.addAll(values, enemies_);
          onChanged();
        } else {
          enemiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder clearEnemies() {
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          enemiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public Builder removeEnemies(int index) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.remove(index);
          onChanged();
        } else {
          enemiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public myudfs.Common.LiuDaoEnemyItem.Builder getEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public myudfs.Common.LiuDaoEnemyItemOrBuilder getEnemiesOrBuilder(
          int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);  } else {
          return enemiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public java.util.List<? extends myudfs.Common.LiuDaoEnemyItemOrBuilder> 
           getEnemiesOrBuilderList() {
        if (enemiesBuilder_ != null) {
          return enemiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(enemies_);
        }
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public myudfs.Common.LiuDaoEnemyItem.Builder addEnemiesBuilder() {
        return getEnemiesFieldBuilder().addBuilder(
            myudfs.Common.LiuDaoEnemyItem.getDefaultInstance());
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public myudfs.Common.LiuDaoEnemyItem.Builder addEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().addBuilder(
            index, myudfs.Common.LiuDaoEnemyItem.getDefaultInstance());
      }
      /**
       * <code>repeated .LiuDaoEnemyItem enemies = 1;</code>
       */
      public java.util.List<myudfs.Common.LiuDaoEnemyItem.Builder> 
           getEnemiesBuilderList() {
        return getEnemiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.LiuDaoEnemyItem, myudfs.Common.LiuDaoEnemyItem.Builder, myudfs.Common.LiuDaoEnemyItemOrBuilder> 
          getEnemiesFieldBuilder() {
        if (enemiesBuilder_ == null) {
          enemiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.LiuDaoEnemyItem, myudfs.Common.LiuDaoEnemyItem.Builder, myudfs.Common.LiuDaoEnemyItemOrBuilder>(
                  enemies_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          enemies_ = null;
        }
        return enemiesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:LiuDaoEnemyItemList)
    }

    static {
      defaultInstance = new LiuDaoEnemyItemList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiuDaoEnemyItemList)
  }

  public interface LiuDaoEnemyItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 lv = 3;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 3;</code>
     */
    int getLv();

    // repeated .CardItem cards = 6;
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    java.util.List<myudfs.Common.CardItem> 
        getCardsList();
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    myudfs.Common.CardItem getCards(int index);
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
        int index);

    // repeated int64 cardGroup = 7;
    /**
     * <code>repeated int64 cardGroup = 7;</code>
     *
     * <pre>
     * 卡组id
     * </pre>
     */
    java.util.List<java.lang.Long> getCardGroupList();
    /**
     * <code>repeated int64 cardGroup = 7;</code>
     *
     * <pre>
     * 卡组id
     * </pre>
     */
    int getCardGroupCount();
    /**
     * <code>repeated int64 cardGroup = 7;</code>
     *
     * <pre>
     * 卡组id
     * </pre>
     */
    long getCardGroup(int index);

    // repeated int32 fightCardGroup = 8;
    /**
     * <code>repeated int32 fightCardGroup = 8;</code>
     *
     * <pre>
     * 出站顺序
     * </pre>
     */
    java.util.List<java.lang.Integer> getFightCardGroupList();
    /**
     * <code>repeated int32 fightCardGroup = 8;</code>
     *
     * <pre>
     * 出站顺序
     * </pre>
     */
    int getFightCardGroupCount();
    /**
     * <code>repeated int32 fightCardGroup = 8;</code>
     *
     * <pre>
     * 出站顺序
     * </pre>
     */
    int getFightCardGroup(int index);

    // optional int32 vip = 9;
    /**
     * <code>optional int32 vip = 9;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 9;</code>
     */
    int getVip();

    // optional int32 battleScore = 10;
    /**
     * <code>optional int32 battleScore = 10;</code>
     *
     * <pre>
     * 敌方战斗力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>optional int32 battleScore = 10;</code>
     *
     * <pre>
     * 敌方战斗力
     * </pre>
     */
    int getBattleScore();

    // optional bool mirror = 11;
    /**
     * <code>optional bool mirror = 11;</code>
     *
     * <pre>
     * true:是镜像
     * </pre>
     */
    boolean hasMirror();
    /**
     * <code>optional bool mirror = 11;</code>
     *
     * <pre>
     * true:是镜像
     * </pre>
     */
    boolean getMirror();
  }
  /**
   * Protobuf type {@code LiuDaoEnemyItem}
   */
  public static final class LiuDaoEnemyItem extends
      com.google.protobuf.GeneratedMessage
      implements LiuDaoEnemyItemOrBuilder {
    // Use LiuDaoEnemyItem.newBuilder() to construct.
    private LiuDaoEnemyItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiuDaoEnemyItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiuDaoEnemyItem defaultInstance;
    public static LiuDaoEnemyItem getDefaultInstance() {
      return defaultInstance;
    }

    public LiuDaoEnemyItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiuDaoEnemyItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lv_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cards_ = new java.util.ArrayList<myudfs.Common.CardItem>();
                mutable_bitField0_ |= 0x00000008;
              }
              cards_.add(input.readMessage(myudfs.Common.CardItem.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardGroup_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardGroup_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cardGroup_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardGroup_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                fightCardGroup_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              fightCardGroup_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                fightCardGroup_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                fightCardGroup_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              vip_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              battleScore_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              mirror_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardGroup_ = java.util.Collections.unmodifiableList(cardGroup_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          fightCardGroup_ = java.util.Collections.unmodifiableList(fightCardGroup_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_LiuDaoEnemyItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_LiuDaoEnemyItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.LiuDaoEnemyItem.class, myudfs.Common.LiuDaoEnemyItem.Builder.class);
    }

    public static com.google.protobuf.Parser<LiuDaoEnemyItem> PARSER =
        new com.google.protobuf.AbstractParser<LiuDaoEnemyItem>() {
      public LiuDaoEnemyItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiuDaoEnemyItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiuDaoEnemyItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 lv = 3;
    public static final int LV_FIELD_NUMBER = 3;
    private int lv_;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public int getLv() {
      return lv_;
    }

    // repeated .CardItem cards = 6;
    public static final int CARDS_FIELD_NUMBER = 6;
    private java.util.List<myudfs.Common.CardItem> cards_;
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    public java.util.List<myudfs.Common.CardItem> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    public myudfs.Common.CardItem getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .CardItem cards = 6;</code>
     *
     * <pre>
     * 出战卡组中的卡
     * </pre>
     */
    public myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    // repeated int64 cardGroup = 7;
    public static final int CARDGROUP_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> cardGroup_;
    /**
     * <code>repeated int64 cardGroup = 7;</code>
     *
     * <pre>
     * 卡组id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCardGroupList() {
      return cardGroup_;
    }
    /**
     * <code>repeated int64 cardGroup = 7;</code>
     *
     * <pre>
     * 卡组id
     * </pre>
     */
    public int getCardGroupCount() {
      return cardGroup_.size();
    }
    /**
     * <code>repeated int64 cardGroup = 7;</code>
     *
     * <pre>
     * 卡组id
     * </pre>
     */
    public long getCardGroup(int index) {
      return cardGroup_.get(index);
    }

    // repeated int32 fightCardGroup = 8;
    public static final int FIGHTCARDGROUP_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> fightCardGroup_;
    /**
     * <code>repeated int32 fightCardGroup = 8;</code>
     *
     * <pre>
     * 出站顺序
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFightCardGroupList() {
      return fightCardGroup_;
    }
    /**
     * <code>repeated int32 fightCardGroup = 8;</code>
     *
     * <pre>
     * 出站顺序
     * </pre>
     */
    public int getFightCardGroupCount() {
      return fightCardGroup_.size();
    }
    /**
     * <code>repeated int32 fightCardGroup = 8;</code>
     *
     * <pre>
     * 出站顺序
     * </pre>
     */
    public int getFightCardGroup(int index) {
      return fightCardGroup_.get(index);
    }

    // optional int32 vip = 9;
    public static final int VIP_FIELD_NUMBER = 9;
    private int vip_;
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional int32 battleScore = 10;
    public static final int BATTLESCORE_FIELD_NUMBER = 10;
    private int battleScore_;
    /**
     * <code>optional int32 battleScore = 10;</code>
     *
     * <pre>
     * 敌方战斗力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 battleScore = 10;</code>
     *
     * <pre>
     * 敌方战斗力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    // optional bool mirror = 11;
    public static final int MIRROR_FIELD_NUMBER = 11;
    private boolean mirror_;
    /**
     * <code>optional bool mirror = 11;</code>
     *
     * <pre>
     * true:是镜像
     * </pre>
     */
    public boolean hasMirror() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool mirror = 11;</code>
     *
     * <pre>
     * true:是镜像
     * </pre>
     */
    public boolean getMirror() {
      return mirror_;
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      lv_ = 0;
      cards_ = java.util.Collections.emptyList();
      cardGroup_ = java.util.Collections.emptyList();
      fightCardGroup_ = java.util.Collections.emptyList();
      vip_ = 0;
      battleScore_ = 0;
      mirror_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lv_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(6, cards_.get(i));
      }
      for (int i = 0; i < cardGroup_.size(); i++) {
        output.writeInt64(7, cardGroup_.get(i));
      }
      for (int i = 0; i < fightCardGroup_.size(); i++) {
        output.writeInt32(8, fightCardGroup_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, vip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(10, battleScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(11, mirror_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lv_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardGroup_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(cardGroup_.get(i));
        }
        size += dataSize;
        size += 1 * getCardGroupList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fightCardGroup_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fightCardGroup_.get(i));
        }
        size += dataSize;
        size += 1 * getFightCardGroupList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, vip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, battleScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, mirror_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.LiuDaoEnemyItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.LiuDaoEnemyItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.LiuDaoEnemyItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiuDaoEnemyItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.LiuDaoEnemyItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_LiuDaoEnemyItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_LiuDaoEnemyItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.LiuDaoEnemyItem.class, myudfs.Common.LiuDaoEnemyItem.Builder.class);
      }

      // Construct using myudfs.Common.LiuDaoEnemyItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsBuilder_.clear();
        }
        cardGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        fightCardGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        battleScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        mirror_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_LiuDaoEnemyItem_descriptor;
      }

      public myudfs.Common.LiuDaoEnemyItem getDefaultInstanceForType() {
        return myudfs.Common.LiuDaoEnemyItem.getDefaultInstance();
      }

      public myudfs.Common.LiuDaoEnemyItem build() {
        myudfs.Common.LiuDaoEnemyItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.LiuDaoEnemyItem buildPartial() {
        myudfs.Common.LiuDaoEnemyItem result = new myudfs.Common.LiuDaoEnemyItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lv_ = lv_;
        if (cardsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cardGroup_ = java.util.Collections.unmodifiableList(cardGroup_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cardGroup_ = cardGroup_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          fightCardGroup_ = java.util.Collections.unmodifiableList(fightCardGroup_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.fightCardGroup_ = fightCardGroup_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.battleScore_ = battleScore_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.mirror_ = mirror_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.LiuDaoEnemyItem) {
          return mergeFrom((myudfs.Common.LiuDaoEnemyItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.LiuDaoEnemyItem other) {
        if (other == myudfs.Common.LiuDaoEnemyItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        if (!other.cardGroup_.isEmpty()) {
          if (cardGroup_.isEmpty()) {
            cardGroup_ = other.cardGroup_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCardGroupIsMutable();
            cardGroup_.addAll(other.cardGroup_);
          }
          onChanged();
        }
        if (!other.fightCardGroup_.isEmpty()) {
          if (fightCardGroup_.isEmpty()) {
            fightCardGroup_ = other.fightCardGroup_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFightCardGroupIsMutable();
            fightCardGroup_.addAll(other.fightCardGroup_);
          }
          onChanged();
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        if (other.hasMirror()) {
          setMirror(other.getMirror());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.LiuDaoEnemyItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.LiuDaoEnemyItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 lv = 3;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000004;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lv_ = 0;
        onChanged();
        return this;
      }

      // repeated .CardItem cards = 6;
      private java.util.List<myudfs.Common.CardItem> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cards_ = new java.util.ArrayList<myudfs.Common.CardItem>(cards_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public java.util.List<myudfs.Common.CardItem> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder setCards(
          int index, myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder setCards(
          int index, myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder addCards(myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder addCards(
          int index, myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder addCards(
          myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder addCards(
          int index, myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends myudfs.Common.CardItem> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          super.addAll(values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            myudfs.Common.CardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public myudfs.Common.CardItem.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, myudfs.Common.CardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CardItem cards = 6;</code>
       *
       * <pre>
       * 出战卡组中的卡
       * </pre>
       */
      public java.util.List<myudfs.Common.CardItem.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder>(
                  cards_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }

      // repeated int64 cardGroup = 7;
      private java.util.List<java.lang.Long> cardGroup_ = java.util.Collections.emptyList();
      private void ensureCardGroupIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardGroup_ = new java.util.ArrayList<java.lang.Long>(cardGroup_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int64 cardGroup = 7;</code>
       *
       * <pre>
       * 卡组id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCardGroupList() {
        return java.util.Collections.unmodifiableList(cardGroup_);
      }
      /**
       * <code>repeated int64 cardGroup = 7;</code>
       *
       * <pre>
       * 卡组id
       * </pre>
       */
      public int getCardGroupCount() {
        return cardGroup_.size();
      }
      /**
       * <code>repeated int64 cardGroup = 7;</code>
       *
       * <pre>
       * 卡组id
       * </pre>
       */
      public long getCardGroup(int index) {
        return cardGroup_.get(index);
      }
      /**
       * <code>repeated int64 cardGroup = 7;</code>
       *
       * <pre>
       * 卡组id
       * </pre>
       */
      public Builder setCardGroup(
          int index, long value) {
        ensureCardGroupIsMutable();
        cardGroup_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroup = 7;</code>
       *
       * <pre>
       * 卡组id
       * </pre>
       */
      public Builder addCardGroup(long value) {
        ensureCardGroupIsMutable();
        cardGroup_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroup = 7;</code>
       *
       * <pre>
       * 卡组id
       * </pre>
       */
      public Builder addAllCardGroup(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCardGroupIsMutable();
        super.addAll(values, cardGroup_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroup = 7;</code>
       *
       * <pre>
       * 卡组id
       * </pre>
       */
      public Builder clearCardGroup() {
        cardGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 fightCardGroup = 8;
      private java.util.List<java.lang.Integer> fightCardGroup_ = java.util.Collections.emptyList();
      private void ensureFightCardGroupIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          fightCardGroup_ = new java.util.ArrayList<java.lang.Integer>(fightCardGroup_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 fightCardGroup = 8;</code>
       *
       * <pre>
       * 出站顺序
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFightCardGroupList() {
        return java.util.Collections.unmodifiableList(fightCardGroup_);
      }
      /**
       * <code>repeated int32 fightCardGroup = 8;</code>
       *
       * <pre>
       * 出站顺序
       * </pre>
       */
      public int getFightCardGroupCount() {
        return fightCardGroup_.size();
      }
      /**
       * <code>repeated int32 fightCardGroup = 8;</code>
       *
       * <pre>
       * 出站顺序
       * </pre>
       */
      public int getFightCardGroup(int index) {
        return fightCardGroup_.get(index);
      }
      /**
       * <code>repeated int32 fightCardGroup = 8;</code>
       *
       * <pre>
       * 出站顺序
       * </pre>
       */
      public Builder setFightCardGroup(
          int index, int value) {
        ensureFightCardGroupIsMutable();
        fightCardGroup_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fightCardGroup = 8;</code>
       *
       * <pre>
       * 出站顺序
       * </pre>
       */
      public Builder addFightCardGroup(int value) {
        ensureFightCardGroupIsMutable();
        fightCardGroup_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fightCardGroup = 8;</code>
       *
       * <pre>
       * 出站顺序
       * </pre>
       */
      public Builder addAllFightCardGroup(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFightCardGroupIsMutable();
        super.addAll(values, fightCardGroup_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fightCardGroup = 8;</code>
       *
       * <pre>
       * 出站顺序
       * </pre>
       */
      public Builder clearFightCardGroup() {
        fightCardGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 vip = 9;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000040;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional int32 battleScore = 10;
      private int battleScore_ ;
      /**
       * <code>optional int32 battleScore = 10;</code>
       *
       * <pre>
       * 敌方战斗力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 battleScore = 10;</code>
       *
       * <pre>
       * 敌方战斗力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>optional int32 battleScore = 10;</code>
       *
       * <pre>
       * 敌方战斗力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField0_ |= 0x00000080;
        battleScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 battleScore = 10;</code>
       *
       * <pre>
       * 敌方战斗力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        battleScore_ = 0;
        onChanged();
        return this;
      }

      // optional bool mirror = 11;
      private boolean mirror_ ;
      /**
       * <code>optional bool mirror = 11;</code>
       *
       * <pre>
       * true:是镜像
       * </pre>
       */
      public boolean hasMirror() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool mirror = 11;</code>
       *
       * <pre>
       * true:是镜像
       * </pre>
       */
      public boolean getMirror() {
        return mirror_;
      }
      /**
       * <code>optional bool mirror = 11;</code>
       *
       * <pre>
       * true:是镜像
       * </pre>
       */
      public Builder setMirror(boolean value) {
        bitField0_ |= 0x00000100;
        mirror_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool mirror = 11;</code>
       *
       * <pre>
       * true:是镜像
       * </pre>
       */
      public Builder clearMirror() {
        bitField0_ = (bitField0_ & ~0x00000100);
        mirror_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LiuDaoEnemyItem)
    }

    static {
      defaultInstance = new LiuDaoEnemyItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiuDaoEnemyItem)
  }

  public interface PieceItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    // optional int32 num = 2;
    /**
     * <code>optional int32 num = 2;</code>
     */
    boolean hasNum();
    /**
     * <code>optional int32 num = 2;</code>
     */
    int getNum();
  }
  /**
   * Protobuf type {@code PieceItem}
   *
   * <pre>
   *角色:元神
   * </pre>
   */
  public static final class PieceItem extends
      com.google.protobuf.GeneratedMessage
      implements PieceItemOrBuilder {
    // Use PieceItem.newBuilder() to construct.
    private PieceItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PieceItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PieceItem defaultInstance;
    public static PieceItem getDefaultInstance() {
      return defaultInstance;
    }

    public PieceItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PieceItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              num_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PieceItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PieceItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PieceItem.class, myudfs.Common.PieceItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PieceItem> PARSER =
        new com.google.protobuf.AbstractParser<PieceItem>() {
      public PieceItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PieceItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PieceItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // optional int32 num = 2;
    public static final int NUM_FIELD_NUMBER = 2;
    private int num_;
    /**
     * <code>optional int32 num = 2;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 num = 2;</code>
     */
    public int getNum() {
      return num_;
    }

    private void initFields() {
      id_ = 0;
      num_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, num_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, num_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PieceItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PieceItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PieceItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PieceItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PieceItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PieceItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PieceItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PieceItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PieceItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PieceItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PieceItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PieceItem}
     *
     * <pre>
     *角色:元神
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PieceItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PieceItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PieceItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PieceItem.class, myudfs.Common.PieceItem.Builder.class);
      }

      // Construct using myudfs.Common.PieceItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PieceItem_descriptor;
      }

      public myudfs.Common.PieceItem getDefaultInstanceForType() {
        return myudfs.Common.PieceItem.getDefaultInstance();
      }

      public myudfs.Common.PieceItem build() {
        myudfs.Common.PieceItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PieceItem buildPartial() {
        myudfs.Common.PieceItem result = new myudfs.Common.PieceItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.num_ = num_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PieceItem) {
          return mergeFrom((myudfs.Common.PieceItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PieceItem other) {
        if (other == myudfs.Common.PieceItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PieceItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PieceItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 num = 2;
      private int num_ ;
      /**
       * <code>optional int32 num = 2;</code>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 num = 2;</code>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>optional int32 num = 2;</code>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000002;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 num = 2;</code>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        num_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PieceItem)
    }

    static {
      defaultInstance = new PieceItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PieceItem)
  }

  public interface PlayerItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 lv = 3;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 3;</code>
     */
    int getLv();

    // optional int32 exp = 4;
    /**
     * <code>optional int32 exp = 4;</code>
     */
    boolean hasExp();
    /**
     * <code>optional int32 exp = 4;</code>
     */
    int getExp();

    // optional int32 daoXing = 5;
    /**
     * <code>optional int32 daoXing = 5;</code>
     *
     * <pre>
     *道行
     * </pre>
     */
    boolean hasDaoXing();
    /**
     * <code>optional int32 daoXing = 5;</code>
     *
     * <pre>
     *道行
     * </pre>
     */
    int getDaoXing();

    // optional int32 vip = 6;
    /**
     * <code>optional int32 vip = 6;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 6;</code>
     */
    int getVip();

    // optional int64 gold = 7;
    /**
     * <code>optional int64 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    long getGold();

    // optional int32 shengWang = 8;
    /**
     * <code>optional int32 shengWang = 8;</code>
     *
     * <pre>
     *声望
     * </pre>
     */
    boolean hasShengWang();
    /**
     * <code>optional int32 shengWang = 8;</code>
     *
     * <pre>
     *声望
     * </pre>
     */
    int getShengWang();

    // optional int32 xianYuan = 9;
    /**
     * <code>optional int32 xianYuan = 9;</code>
     *
     * <pre>
     *仙缘
     * </pre>
     */
    boolean hasXianYuan();
    /**
     * <code>optional int32 xianYuan = 9;</code>
     *
     * <pre>
     *仙缘
     * </pre>
     */
    int getXianYuan();

    // optional int32 bagsUnlockGold = 10;
    /**
     * <code>optional int32 bagsUnlockGold = 10;</code>
     *
     * <pre>
     *金币解锁的背包数量
     * </pre>
     */
    boolean hasBagsUnlockGold();
    /**
     * <code>optional int32 bagsUnlockGold = 10;</code>
     *
     * <pre>
     *金币解锁的背包数量
     * </pre>
     */
    int getBagsUnlockGold();

    // optional int32 stamina = 11;
    /**
     * <code>optional int32 stamina = 11;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    boolean hasStamina();
    /**
     * <code>optional int32 stamina = 11;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    int getStamina();

    // optional int32 spirit = 12;
    /**
     * <code>optional int32 spirit = 12;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    boolean hasSpirit();
    /**
     * <code>optional int32 spirit = 12;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    int getSpirit();

    // optional int32 friendsCost = 18;
    /**
     * <code>optional int32 friendsCost = 18;</code>
     *
     * <pre>
     *付费增加的好友上限数量
     * </pre>
     */
    boolean hasFriendsCost();
    /**
     * <code>optional int32 friendsCost = 18;</code>
     *
     * <pre>
     *付费增加的好友上限数量
     * </pre>
     */
    int getFriendsCost();

    // optional int32 trainFreeRenew = 19;
    /**
     * <code>optional int32 trainFreeRenew = 19;</code>
     *
     * <pre>
     *本日免费刷新修炼的次数
     * </pre>
     */
    boolean hasTrainFreeRenew();
    /**
     * <code>optional int32 trainFreeRenew = 19;</code>
     *
     * <pre>
     *本日免费刷新修炼的次数
     * </pre>
     */
    int getTrainFreeRenew();

    // optional int64 receiveStaminaNum = 20;
    /**
     * <code>optional int64 receiveStaminaNum = 20;</code>
     *
     * <pre>
     *本日已领取的赠送体力的数量,0点清0
     * </pre>
     */
    boolean hasReceiveStaminaNum();
    /**
     * <code>optional int64 receiveStaminaNum = 20;</code>
     *
     * <pre>
     *本日已领取的赠送体力的数量,0点清0
     * </pre>
     */
    long getReceiveStaminaNum();

    // repeated .MapItem todayQuestNums = 21;
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getTodayQuestNumsList();
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    myudfs.Common.MapItem getTodayQuestNums(int index);
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    int getTodayQuestNumsCount();
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getTodayQuestNumsOrBuilderList();
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getTodayQuestNumsOrBuilder(
        int index);

    // repeated .MapItem todayQuestRestNums = 22;
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getTodayQuestRestNumsList();
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    myudfs.Common.MapItem getTodayQuestRestNums(int index);
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    int getTodayQuestRestNumsCount();
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getTodayQuestRestNumsOrBuilderList();
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getTodayQuestRestNumsOrBuilder(
        int index);

    // repeated int64 donateStamina = 24;
    /**
     * <code>repeated int64 donateStamina = 24;</code>
     *
     * <pre>
     *本日已经赠送过体力的好友，这里是好友id
     * </pre>
     */
    java.util.List<java.lang.Long> getDonateStaminaList();
    /**
     * <code>repeated int64 donateStamina = 24;</code>
     *
     * <pre>
     *本日已经赠送过体力的好友，这里是好友id
     * </pre>
     */
    int getDonateStaminaCount();
    /**
     * <code>repeated int64 donateStamina = 24;</code>
     *
     * <pre>
     *本日已经赠送过体力的好友，这里是好友id
     * </pre>
     */
    long getDonateStamina(int index);

    // repeated int64 receiveStamina = 25;
    /**
     * <code>repeated int64 receiveStamina = 25;</code>
     *
     * <pre>
     *收到的赠送的体力,这里放的是好友id
     * </pre>
     */
    java.util.List<java.lang.Long> getReceiveStaminaList();
    /**
     * <code>repeated int64 receiveStamina = 25;</code>
     *
     * <pre>
     *收到的赠送的体力,这里放的是好友id
     * </pre>
     */
    int getReceiveStaminaCount();
    /**
     * <code>repeated int64 receiveStamina = 25;</code>
     *
     * <pre>
     *收到的赠送的体力,这里放的是好友id
     * </pre>
     */
    long getReceiveStamina(int index);

    // optional uint64 staminaDate = 26;
    /**
     * <code>optional uint64 staminaDate = 26;</code>
     *
     * <pre>
     *体力开始恢复的时间
     * </pre>
     */
    boolean hasStaminaDate();
    /**
     * <code>optional uint64 staminaDate = 26;</code>
     *
     * <pre>
     *体力开始恢复的时间
     * </pre>
     */
    long getStaminaDate();

    // repeated int64 friendId = 27;
    /**
     * <code>repeated int64 friendId = 27;</code>
     *
     * <pre>
     *好友id
     * </pre>
     */
    java.util.List<java.lang.Long> getFriendIdList();
    /**
     * <code>repeated int64 friendId = 27;</code>
     *
     * <pre>
     *好友id
     * </pre>
     */
    int getFriendIdCount();
    /**
     * <code>repeated int64 friendId = 27;</code>
     *
     * <pre>
     *好友id
     * </pre>
     */
    long getFriendId(int index);

    // optional uint64 loginDate = 28;
    /**
     * <code>optional uint64 loginDate = 28;</code>
     *
     * <pre>
     * 上线时间
     * </pre>
     */
    boolean hasLoginDate();
    /**
     * <code>optional uint64 loginDate = 28;</code>
     *
     * <pre>
     * 上线时间
     * </pre>
     */
    long getLoginDate();

    // optional uint64 onlineTime = 29;
    /**
     * <code>optional uint64 onlineTime = 29;</code>
     *
     * <pre>
     * 已在线时间
     * </pre>
     */
    boolean hasOnlineTime();
    /**
     * <code>optional uint64 onlineTime = 29;</code>
     *
     * <pre>
     * 已在线时间
     * </pre>
     */
    long getOnlineTime();

    // optional uint64 bagsUnlockGoldCd = 30;
    /**
     * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
     *
     * <pre>
     * 元宝解锁减少的cd时间
     * </pre>
     */
    boolean hasBagsUnlockGoldCd();
    /**
     * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
     *
     * <pre>
     * 元宝解锁减少的cd时间
     * </pre>
     */
    long getBagsUnlockGoldCd();

    // optional int64 coin = 31;
    /**
     * <code>optional int64 coin = 31;</code>
     *
     * <pre>
     *元气
     * </pre>
     */
    boolean hasCoin();
    /**
     * <code>optional int64 coin = 31;</code>
     *
     * <pre>
     *元气
     * </pre>
     */
    long getCoin();

    // repeated .MapItem moonStarItem = 32;
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getMoonStarItemList();
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    myudfs.Common.MapItem getMoonStarItem(int index);
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    int getMoonStarItemCount();
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getMoonStarItemOrBuilderList();
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getMoonStarItemOrBuilder(
        int index);

    // repeated .MapItem magicWeapons = 33;
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getMagicWeaponsList();
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    myudfs.Common.MapItem getMagicWeapons(int index);
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    int getMagicWeaponsCount();
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getMagicWeaponsOrBuilderList();
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getMagicWeaponsOrBuilder(
        int index);

    // repeated .MapDateItem drawCardDate = 36;
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    java.util.List<myudfs.Common.MapDateItem> 
        getDrawCardDateList();
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    myudfs.Common.MapDateItem getDrawCardDate(int index);
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    int getDrawCardDateCount();
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapDateItemOrBuilder> 
        getDrawCardDateOrBuilderList();
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    myudfs.Common.MapDateItemOrBuilder getDrawCardDateOrBuilder(
        int index);

    // optional int32 firstPay = 37;
    /**
     * <code>optional int32 firstPay = 37;</code>
     *
     * <pre>
     * 0:无首充抽卡 1:有首充抽卡
     * </pre>
     */
    boolean hasFirstPay();
    /**
     * <code>optional int32 firstPay = 37;</code>
     *
     * <pre>
     * 0:无首充抽卡 1:有首充抽卡
     * </pre>
     */
    int getFirstPay();

    // repeated int32 firstPayIds = 38;
    /**
     * <code>repeated int32 firstPayIds = 38;</code>
     *
     * <pre>
     * 已经抽过首充抽卡的卡包id
     * </pre>
     */
    java.util.List<java.lang.Integer> getFirstPayIdsList();
    /**
     * <code>repeated int32 firstPayIds = 38;</code>
     *
     * <pre>
     * 已经抽过首充抽卡的卡包id
     * </pre>
     */
    int getFirstPayIdsCount();
    /**
     * <code>repeated int32 firstPayIds = 38;</code>
     *
     * <pre>
     * 已经抽过首充抽卡的卡包id
     * </pre>
     */
    int getFirstPayIds(int index);

    // optional uint64 spiritDate = 39;
    /**
     * <code>optional uint64 spiritDate = 39;</code>
     *
     * <pre>
     * 精力开始恢复的时间
     * </pre>
     */
    boolean hasSpiritDate();
    /**
     * <code>optional uint64 spiritDate = 39;</code>
     *
     * <pre>
     * 精力开始恢复的时间
     * </pre>
     */
    long getSpiritDate();

    // optional int32 worshipTimes = 40;
    /**
     * <code>optional int32 worshipTimes = 40;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    boolean hasWorshipTimes();
    /**
     * <code>optional int32 worshipTimes = 40;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    int getWorshipTimes();

    // repeated int64 worshipIds = 41;
    /**
     * <code>repeated int64 worshipIds = 41;</code>
     *
     * <pre>
     *膜拜过的玩家
     * </pre>
     */
    java.util.List<java.lang.Long> getWorshipIdsList();
    /**
     * <code>repeated int64 worshipIds = 41;</code>
     *
     * <pre>
     *膜拜过的玩家
     * </pre>
     */
    int getWorshipIdsCount();
    /**
     * <code>repeated int64 worshipIds = 41;</code>
     *
     * <pre>
     *膜拜过的玩家
     * </pre>
     */
    long getWorshipIds(int index);

    // optional uint64 gainRewardTime = 42;
    /**
     * <code>optional uint64 gainRewardTime = 42;</code>
     *
     * <pre>
     *领取结算奖励的时间
     * </pre>
     */
    boolean hasGainRewardTime();
    /**
     * <code>optional uint64 gainRewardTime = 42;</code>
     *
     * <pre>
     *领取结算奖励的时间
     * </pre>
     */
    long getGainRewardTime();

    // repeated int32 exchangeTimes = 43;
    /**
     * <code>repeated int32 exchangeTimes = 43;</code>
     *
     * <pre>
     *兑换次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getExchangeTimesList();
    /**
     * <code>repeated int32 exchangeTimes = 43;</code>
     *
     * <pre>
     *兑换次数
     * </pre>
     */
    int getExchangeTimesCount();
    /**
     * <code>repeated int32 exchangeTimes = 43;</code>
     *
     * <pre>
     *兑换次数
     * </pre>
     */
    int getExchangeTimes(int index);

    // repeated int64 mails = 44;
    /**
     * <code>repeated int64 mails = 44;</code>
     */
    java.util.List<java.lang.Long> getMailsList();
    /**
     * <code>repeated int64 mails = 44;</code>
     */
    int getMailsCount();
    /**
     * <code>repeated int64 mails = 44;</code>
     */
    long getMails(int index);

    // repeated int64 mailFinished = 45;
    /**
     * <code>repeated int64 mailFinished = 45;</code>
     */
    java.util.List<java.lang.Long> getMailFinishedList();
    /**
     * <code>repeated int64 mailFinished = 45;</code>
     */
    int getMailFinishedCount();
    /**
     * <code>repeated int64 mailFinished = 45;</code>
     */
    long getMailFinished(int index);

    // repeated int64 mailDeleted = 46;
    /**
     * <code>repeated int64 mailDeleted = 46;</code>
     */
    java.util.List<java.lang.Long> getMailDeletedList();
    /**
     * <code>repeated int64 mailDeleted = 46;</code>
     */
    int getMailDeletedCount();
    /**
     * <code>repeated int64 mailDeleted = 46;</code>
     */
    long getMailDeleted(int index);

    // repeated .PvpFightResultItem pvpFightResult = 47;
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    java.util.List<myudfs.Common.PvpFightResultItem> 
        getPvpFightResultList();
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    myudfs.Common.PvpFightResultItem getPvpFightResult(int index);
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    int getPvpFightResultCount();
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    java.util.List<? extends myudfs.Common.PvpFightResultItemOrBuilder> 
        getPvpFightResultOrBuilderList();
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    myudfs.Common.PvpFightResultItemOrBuilder getPvpFightResultOrBuilder(
        int index);

    // optional int32 buyStamina = 48;
    /**
     * <code>optional int32 buyStamina = 48;</code>
     *
     * <pre>
     *本日购买体力次数
     * </pre>
     */
    boolean hasBuyStamina();
    /**
     * <code>optional int32 buyStamina = 48;</code>
     *
     * <pre>
     *本日购买体力次数
     * </pre>
     */
    int getBuyStamina();

    // optional int32 buySpirit = 49;
    /**
     * <code>optional int32 buySpirit = 49;</code>
     *
     * <pre>
     * 本日购买精力次数
     * </pre>
     */
    boolean hasBuySpirit();
    /**
     * <code>optional int32 buySpirit = 49;</code>
     *
     * <pre>
     * 本日购买精力次数
     * </pre>
     */
    int getBuySpirit();

    // optional int32 pvpWins = 50;
    /**
     * <code>optional int32 pvpWins = 50;</code>
     *
     * <pre>
     *本日pvp连胜次数
     * </pre>
     */
    boolean hasPvpWins();
    /**
     * <code>optional int32 pvpWins = 50;</code>
     *
     * <pre>
     *本日pvp连胜次数
     * </pre>
     */
    int getPvpWins();

    // repeated .MapItem shopItems = 53;
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getShopItemsList();
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    myudfs.Common.MapItem getShopItems(int index);
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    int getShopItemsCount();
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getShopItemsOrBuilderList();
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getShopItemsOrBuilder(
        int index);

    // optional int32 loginDays = 54;
    /**
     * <code>optional int32 loginDays = 54;</code>
     *
     * <pre>
     *已登陆的天数
     * </pre>
     */
    boolean hasLoginDays();
    /**
     * <code>optional int32 loginDays = 54;</code>
     *
     * <pre>
     *已登陆的天数
     * </pre>
     */
    int getLoginDays();

    // repeated .MissionItem missions = 55;
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    java.util.List<myudfs.Common.MissionItem> 
        getMissionsList();
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    myudfs.Common.MissionItem getMissions(int index);
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    int getMissionsCount();
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MissionItemOrBuilder> 
        getMissionsOrBuilderList();
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    myudfs.Common.MissionItemOrBuilder getMissionsOrBuilder(
        int index);

    // optional int64 silver = 56;
    /**
     * <code>optional int64 silver = 56;</code>
     *
     * <pre>
     * 银两
     * </pre>
     */
    boolean hasSilver();
    /**
     * <code>optional int64 silver = 56;</code>
     *
     * <pre>
     * 银两
     * </pre>
     */
    long getSilver();

    // repeated .CardItem cards = 57;
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    java.util.List<myudfs.Common.CardItem> 
        getCardsList();
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    myudfs.Common.CardItem getCards(int index);
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
        int index);

    // repeated int64 cardGroup = 58;
    /**
     * <code>repeated int64 cardGroup = 58;</code>
     *
     * <pre>
     *卡组
     * </pre>
     */
    java.util.List<java.lang.Long> getCardGroupList();
    /**
     * <code>repeated int64 cardGroup = 58;</code>
     *
     * <pre>
     *卡组
     * </pre>
     */
    int getCardGroupCount();
    /**
     * <code>repeated int64 cardGroup = 58;</code>
     *
     * <pre>
     *卡组
     * </pre>
     */
    long getCardGroup(int index);

    // repeated .PieceItem pieces = 59;
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    java.util.List<myudfs.Common.PieceItem> 
        getPiecesList();
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    myudfs.Common.PieceItem getPieces(int index);
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    int getPiecesCount();
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    java.util.List<? extends myudfs.Common.PieceItemOrBuilder> 
        getPiecesOrBuilderList();
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    myudfs.Common.PieceItemOrBuilder getPiecesOrBuilder(
        int index);

    // repeated .Items items = 60;
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    java.util.List<myudfs.Common.Items> 
        getItemsList();
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    myudfs.Common.Items getItems(int index);
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    int getItemsCount();
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    java.util.List<? extends myudfs.Common.ItemsOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    myudfs.Common.ItemsOrBuilder getItemsOrBuilder(
        int index);

    // repeated .HuFaItem hufas = 61;
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    java.util.List<myudfs.Common.HuFaItem> 
        getHufasList();
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    myudfs.Common.HuFaItem getHufas(int index);
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    int getHufasCount();
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    java.util.List<? extends myudfs.Common.HuFaItemOrBuilder> 
        getHufasOrBuilderList();
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    myudfs.Common.HuFaItemOrBuilder getHufasOrBuilder(
        int index);

    // repeated .TrainItem trains = 62;
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    java.util.List<myudfs.Common.TrainItem> 
        getTrainsList();
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    myudfs.Common.TrainItem getTrains(int index);
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    int getTrainsCount();
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    java.util.List<? extends myudfs.Common.TrainItemOrBuilder> 
        getTrainsOrBuilderList();
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    myudfs.Common.TrainItemOrBuilder getTrainsOrBuilder(
        int index);

    // repeated .QuestItem quests = 64;
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    java.util.List<myudfs.Common.QuestItem> 
        getQuestsList();
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    myudfs.Common.QuestItem getQuests(int index);
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    int getQuestsCount();
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    java.util.List<? extends myudfs.Common.QuestItemOrBuilder> 
        getQuestsOrBuilderList();
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    myudfs.Common.QuestItemOrBuilder getQuestsOrBuilder(
        int index);

    // repeated int32 cardGroupFight = 65;
    /**
     * <code>repeated int32 cardGroupFight = 65;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardGroupFightList();
    /**
     * <code>repeated int32 cardGroupFight = 65;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getCardGroupFightCount();
    /**
     * <code>repeated int32 cardGroupFight = 65;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getCardGroupFight(int index);

    // repeated int32 magicWeaponGroup = 66;
    /**
     * <code>repeated int32 magicWeaponGroup = 66;</code>
     *
     * <pre>
     *法宝位置
     * </pre>
     */
    java.util.List<java.lang.Integer> getMagicWeaponGroupList();
    /**
     * <code>repeated int32 magicWeaponGroup = 66;</code>
     *
     * <pre>
     *法宝位置
     * </pre>
     */
    int getMagicWeaponGroupCount();
    /**
     * <code>repeated int32 magicWeaponGroup = 66;</code>
     *
     * <pre>
     *法宝位置
     * </pre>
     */
    int getMagicWeaponGroup(int index);

    // optional uint64 rewardLastTime = 68;
    /**
     * <code>optional uint64 rewardLastTime = 68;</code>
     *
     * <pre>
     * 领取结算奖励的剩余时间
     * </pre>
     */
    boolean hasRewardLastTime();
    /**
     * <code>optional uint64 rewardLastTime = 68;</code>
     *
     * <pre>
     * 领取结算奖励的剩余时间
     * </pre>
     */
    long getRewardLastTime();

    // repeated int32 pvpWinReward = 69;
    /**
     * <code>repeated int32 pvpWinReward = 69;</code>
     *
     * <pre>
     * pvp连胜奖励 pvp连胜次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPvpWinRewardList();
    /**
     * <code>repeated int32 pvpWinReward = 69;</code>
     *
     * <pre>
     * pvp连胜奖励 pvp连胜次数
     * </pre>
     */
    int getPvpWinRewardCount();
    /**
     * <code>repeated int32 pvpWinReward = 69;</code>
     *
     * <pre>
     * pvp连胜奖励 pvp连胜次数
     * </pre>
     */
    int getPvpWinReward(int index);

    // repeated int32 loginReward = 70;
    /**
     * <code>repeated int32 loginReward = 70;</code>
     *
     * <pre>
     * 连续登陆奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getLoginRewardList();
    /**
     * <code>repeated int32 loginReward = 70;</code>
     *
     * <pre>
     * 连续登陆奖励
     * </pre>
     */
    int getLoginRewardCount();
    /**
     * <code>repeated int32 loginReward = 70;</code>
     *
     * <pre>
     * 连续登陆奖励
     * </pre>
     */
    int getLoginReward(int index);

    // repeated int32 pvpFightNumReward = 71;
    /**
     * <code>repeated int32 pvpFightNumReward = 71;</code>
     *
     * <pre>
     *战斗胜利次数奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getPvpFightNumRewardList();
    /**
     * <code>repeated int32 pvpFightNumReward = 71;</code>
     *
     * <pre>
     *战斗胜利次数奖励
     * </pre>
     */
    int getPvpFightNumRewardCount();
    /**
     * <code>repeated int32 pvpFightNumReward = 71;</code>
     *
     * <pre>
     *战斗胜利次数奖励
     * </pre>
     */
    int getPvpFightNumReward(int index);

    // repeated int32 drawCardReward = 72;
    /**
     * <code>repeated int32 drawCardReward = 72;</code>
     *
     * <pre>
     *领取抽卡次数奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getDrawCardRewardList();
    /**
     * <code>repeated int32 drawCardReward = 72;</code>
     *
     * <pre>
     *领取抽卡次数奖励
     * </pre>
     */
    int getDrawCardRewardCount();
    /**
     * <code>repeated int32 drawCardReward = 72;</code>
     *
     * <pre>
     *领取抽卡次数奖励
     * </pre>
     */
    int getDrawCardReward(int index);

    // optional uint64 gainBuyStamina = 73;
    /**
     * <code>optional uint64 gainBuyStamina = 73;</code>
     *
     * <pre>
     *领取购买体力奖励的时间
     * </pre>
     */
    boolean hasGainBuyStamina();
    /**
     * <code>optional uint64 gainBuyStamina = 73;</code>
     *
     * <pre>
     *领取购买体力奖励的时间
     * </pre>
     */
    long getGainBuyStamina();

    // optional uint64 gainBuySpiritReward = 74;
    /**
     * <code>optional uint64 gainBuySpiritReward = 74;</code>
     *
     * <pre>
     *领取购买精力奖励的时间
     * </pre>
     */
    boolean hasGainBuySpiritReward();
    /**
     * <code>optional uint64 gainBuySpiritReward = 74;</code>
     *
     * <pre>
     *领取购买精力奖励的时间
     * </pre>
     */
    long getGainBuySpiritReward();

    // repeated int32 gainQiuYuanReward = 75;
    /**
     * <code>repeated int32 gainQiuYuanReward = 75;</code>
     *
     * <pre>
     *领取过的求缘奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGainQiuYuanRewardList();
    /**
     * <code>repeated int32 gainQiuYuanReward = 75;</code>
     *
     * <pre>
     *领取过的求缘奖励
     * </pre>
     */
    int getGainQiuYuanRewardCount();
    /**
     * <code>repeated int32 gainQiuYuanReward = 75;</code>
     *
     * <pre>
     *领取过的求缘奖励
     * </pre>
     */
    int getGainQiuYuanReward(int index);

    // repeated int32 gainLvUpReward = 76;
    /**
     * <code>repeated int32 gainLvUpReward = 76;</code>
     *
     * <pre>
     * 领取过的升级奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGainLvUpRewardList();
    /**
     * <code>repeated int32 gainLvUpReward = 76;</code>
     *
     * <pre>
     * 领取过的升级奖励
     * </pre>
     */
    int getGainLvUpRewardCount();
    /**
     * <code>repeated int32 gainLvUpReward = 76;</code>
     *
     * <pre>
     * 领取过的升级奖励
     * </pre>
     */
    int getGainLvUpReward(int index);

    // repeated int32 gainChapterReward = 77;
    /**
     * <code>repeated int32 gainChapterReward = 77;</code>
     *
     * <pre>
     *章节奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGainChapterRewardList();
    /**
     * <code>repeated int32 gainChapterReward = 77;</code>
     *
     * <pre>
     *章节奖励
     * </pre>
     */
    int getGainChapterRewardCount();
    /**
     * <code>repeated int32 gainChapterReward = 77;</code>
     *
     * <pre>
     *章节奖励
     * </pre>
     */
    int getGainChapterReward(int index);

    // repeated int32 gainChapterStarReward = 79;
    /**
     * <code>repeated int32 gainChapterStarReward = 79;</code>
     *
     * <pre>
     *满星奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGainChapterStarRewardList();
    /**
     * <code>repeated int32 gainChapterStarReward = 79;</code>
     *
     * <pre>
     *满星奖励
     * </pre>
     */
    int getGainChapterStarRewardCount();
    /**
     * <code>repeated int32 gainChapterStarReward = 79;</code>
     *
     * <pre>
     *满星奖励
     * </pre>
     */
    int getGainChapterStarReward(int index);

    // repeated int32 gainFriendNumReward = 80;
    /**
     * <code>repeated int32 gainFriendNumReward = 80;</code>
     *
     * <pre>
     *好友数量奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGainFriendNumRewardList();
    /**
     * <code>repeated int32 gainFriendNumReward = 80;</code>
     *
     * <pre>
     *好友数量奖励
     * </pre>
     */
    int getGainFriendNumRewardCount();
    /**
     * <code>repeated int32 gainFriendNumReward = 80;</code>
     *
     * <pre>
     *好友数量奖励
     * </pre>
     */
    int getGainFriendNumReward(int index);

    // repeated int32 gainCardReward = 81;
    /**
     * <code>repeated int32 gainCardReward = 81;</code>
     *
     * <pre>
     *特殊卡牌奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGainCardRewardList();
    /**
     * <code>repeated int32 gainCardReward = 81;</code>
     *
     * <pre>
     *特殊卡牌奖励
     * </pre>
     */
    int getGainCardRewardCount();
    /**
     * <code>repeated int32 gainCardReward = 81;</code>
     *
     * <pre>
     *特殊卡牌奖励
     * </pre>
     */
    int getGainCardReward(int index);

    // repeated int32 gainItemReward = 82;
    /**
     * <code>repeated int32 gainItemReward = 82;</code>
     *
     * <pre>
     *特殊装备奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGainItemRewardList();
    /**
     * <code>repeated int32 gainItemReward = 82;</code>
     *
     * <pre>
     *特殊装备奖励
     * </pre>
     */
    int getGainItemRewardCount();
    /**
     * <code>repeated int32 gainItemReward = 82;</code>
     *
     * <pre>
     *特殊装备奖励
     * </pre>
     */
    int getGainItemReward(int index);

    // optional uint64 gainEveryDayTili = 83;
    /**
     * <code>optional uint64 gainEveryDayTili = 83;</code>
     *
     * <pre>
     *每天登陆领取体力
     * </pre>
     */
    boolean hasGainEveryDayTili();
    /**
     * <code>optional uint64 gainEveryDayTili = 83;</code>
     *
     * <pre>
     *每天登陆领取体力
     * </pre>
     */
    long getGainEveryDayTili();

    // optional uint64 gainEveryDayGold = 84;
    /**
     * <code>optional uint64 gainEveryDayGold = 84;</code>
     *
     * <pre>
     *每天登陆领取元宝
     * </pre>
     */
    boolean hasGainEveryDayGold();
    /**
     * <code>optional uint64 gainEveryDayGold = 84;</code>
     *
     * <pre>
     *每天登陆领取元宝
     * </pre>
     */
    long getGainEveryDayGold();

    // optional int32 receiveXianYuan = 85;
    /**
     * <code>optional int32 receiveXianYuan = 85;</code>
     *
     * <pre>
     *可领取的仙缘值
     * </pre>
     */
    boolean hasReceiveXianYuan();
    /**
     * <code>optional int32 receiveXianYuan = 85;</code>
     *
     * <pre>
     *可领取的仙缘值
     * </pre>
     */
    int getReceiveXianYuan();

    // optional int32 drawCardTimes = 87;
    /**
     * <code>optional int32 drawCardTimes = 87;</code>
     *
     * <pre>
     *当天抽卡次数
     * </pre>
     */
    boolean hasDrawCardTimes();
    /**
     * <code>optional int32 drawCardTimes = 87;</code>
     *
     * <pre>
     *当天抽卡次数
     * </pre>
     */
    int getDrawCardTimes();

    // optional int32 pvpFightWinNum = 88;
    /**
     * <code>optional int32 pvpFightWinNum = 88;</code>
     *
     * <pre>
     *pvp战斗胜利次数
     * </pre>
     */
    boolean hasPvpFightWinNum();
    /**
     * <code>optional int32 pvpFightWinNum = 88;</code>
     *
     * <pre>
     *pvp战斗胜利次数
     * </pre>
     */
    int getPvpFightWinNum();

    // optional int32 multiLoginDays = 89;
    /**
     * <code>optional int32 multiLoginDays = 89;</code>
     *
     * <pre>
     *连续登陆天数
     * </pre>
     */
    boolean hasMultiLoginDays();
    /**
     * <code>optional int32 multiLoginDays = 89;</code>
     *
     * <pre>
     *连续登陆天数
     * </pre>
     */
    int getMultiLoginDays();

    // optional int64 totalPayGold = 90;
    /**
     * <code>optional int64 totalPayGold = 90;</code>
     *
     * <pre>
     *总充值元宝 只多不少
     * </pre>
     */
    boolean hasTotalPayGold();
    /**
     * <code>optional int64 totalPayGold = 90;</code>
     *
     * <pre>
     *总充值元宝 只多不少
     * </pre>
     */
    long getTotalPayGold();

    // repeated int32 amountPaymentReward = 91;
    /**
     * <code>repeated int32 amountPaymentReward = 91;</code>
     *
     * <pre>
     * 领取过的充值奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getAmountPaymentRewardList();
    /**
     * <code>repeated int32 amountPaymentReward = 91;</code>
     *
     * <pre>
     * 领取过的充值奖励
     * </pre>
     */
    int getAmountPaymentRewardCount();
    /**
     * <code>repeated int32 amountPaymentReward = 91;</code>
     *
     * <pre>
     * 领取过的充值奖励
     * </pre>
     */
    int getAmountPaymentReward(int index);

    // repeated .MissionItem missionsDaily = 93;
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    java.util.List<myudfs.Common.MissionItem> 
        getMissionsDailyList();
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    myudfs.Common.MissionItem getMissionsDaily(int index);
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    int getMissionsDailyCount();
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MissionItemOrBuilder> 
        getMissionsDailyOrBuilderList();
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    myudfs.Common.MissionItemOrBuilder getMissionsDailyOrBuilder(
        int index);

    // optional bool pvpNewFightFlag = 94;
    /**
     * <code>optional bool pvpNewFightFlag = 94;</code>
     *
     * <pre>
     * true:有新的pvp战报
     * </pre>
     */
    boolean hasPvpNewFightFlag();
    /**
     * <code>optional bool pvpNewFightFlag = 94;</code>
     *
     * <pre>
     * true:有新的pvp战报
     * </pre>
     */
    boolean getPvpNewFightFlag();

    // optional int32 qiuyuan = 95;
    /**
     * <code>optional int32 qiuyuan = 95;</code>
     *
     * <pre>
     * 当天求缘次数
     * </pre>
     */
    boolean hasQiuyuan();
    /**
     * <code>optional int32 qiuyuan = 95;</code>
     *
     * <pre>
     * 当天求缘次数
     * </pre>
     */
    int getQiuyuan();

    // optional int32 qiuyuanGold = 96;
    /**
     * <code>optional int32 qiuyuanGold = 96;</code>
     *
     * <pre>
     * 当天购买求缘次数
     * </pre>
     */
    boolean hasQiuyuanGold();
    /**
     * <code>optional int32 qiuyuanGold = 96;</code>
     *
     * <pre>
     * 当天购买求缘次数
     * </pre>
     */
    int getQiuyuanGold();

    // optional bool newMail = 97;
    /**
     * <code>optional bool newMail = 97;</code>
     *
     * <pre>
     * 是否有新邮件
     * </pre>
     */
    boolean hasNewMail();
    /**
     * <code>optional bool newMail = 97;</code>
     *
     * <pre>
     * 是否有新邮件
     * </pre>
     */
    boolean getNewMail();

    // optional int32 pvpWinNum = 98;
    /**
     * <code>optional int32 pvpWinNum = 98;</code>
     *
     * <pre>
     *每日pvp胜利次数
     * </pre>
     */
    boolean hasPvpWinNum();
    /**
     * <code>optional int32 pvpWinNum = 98;</code>
     *
     * <pre>
     *每日pvp胜利次数
     * </pre>
     */
    int getPvpWinNum();

    // optional bool firstPayReward = 99;
    /**
     * <code>optional bool firstPayReward = 99;</code>
     *
     * <pre>
     * false:未领取过首充奖励 true:已领取过首充奖励
     * </pre>
     */
    boolean hasFirstPayReward();
    /**
     * <code>optional bool firstPayReward = 99;</code>
     *
     * <pre>
     * false:未领取过首充奖励 true:已领取过首充奖励
     * </pre>
     */
    boolean getFirstPayReward();

    // repeated int32 vipGifts = 100;
    /**
     * <code>repeated int32 vipGifts = 100;</code>
     *
     * <pre>
     *领取过的vip礼包
     * </pre>
     */
    java.util.List<java.lang.Integer> getVipGiftsList();
    /**
     * <code>repeated int32 vipGifts = 100;</code>
     *
     * <pre>
     *领取过的vip礼包
     * </pre>
     */
    int getVipGiftsCount();
    /**
     * <code>repeated int32 vipGifts = 100;</code>
     *
     * <pre>
     *领取过的vip礼包
     * </pre>
     */
    int getVipGifts(int index);

    // optional bool vipReward = 101;
    /**
     * <code>optional bool vipReward = 101;</code>
     *
     * <pre>
     * 今天是否领取了月卡奖励 ture：领取了
     * </pre>
     */
    boolean hasVipReward();
    /**
     * <code>optional bool vipReward = 101;</code>
     *
     * <pre>
     * 今天是否领取了月卡奖励 ture：领取了
     * </pre>
     */
    boolean getVipReward();

    // optional int32 vipCard = 102;
    /**
     * <code>optional int32 vipCard = 102;</code>
     *
     * <pre>
     *月卡次数
     * </pre>
     */
    boolean hasVipCard();
    /**
     * <code>optional int32 vipCard = 102;</code>
     *
     * <pre>
     *月卡次数
     * </pre>
     */
    int getVipCard();

    // repeated .MapItem vipAllGift = 103;
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    java.util.List<myudfs.Common.MapItem> 
        getVipAllGiftList();
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    myudfs.Common.MapItem getVipAllGift(int index);
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    int getVipAllGiftCount();
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getVipAllGiftOrBuilderList();
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    myudfs.Common.MapItemOrBuilder getVipAllGiftOrBuilder(
        int index);

    // optional int32 guideIndex = 104;
    /**
     * <code>optional int32 guideIndex = 104;</code>
     */
    boolean hasGuideIndex();
    /**
     * <code>optional int32 guideIndex = 104;</code>
     */
    int getGuideIndex();

    // optional bool isQianDao = 105;
    /**
     * <code>optional bool isQianDao = 105;</code>
     *
     * <pre>
     * 今天是否签到
     * </pre>
     */
    boolean hasIsQianDao();
    /**
     * <code>optional bool isQianDao = 105;</code>
     *
     * <pre>
     * 今天是否签到
     * </pre>
     */
    boolean getIsQianDao();

    // optional .MapItem qianDao = 106;
    /**
     * <code>optional .MapItem qianDao = 106;</code>
     *
     * <pre>
     *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
     * </pre>
     */
    boolean hasQianDao();
    /**
     * <code>optional .MapItem qianDao = 106;</code>
     *
     * <pre>
     *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
     * </pre>
     */
    myudfs.Common.MapItem getQianDao();
    /**
     * <code>optional .MapItem qianDao = 106;</code>
     *
     * <pre>
     *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getQianDaoOrBuilder();

    // optional int32 battleIndex = 107;
    /**
     * <code>optional int32 battleIndex = 107;</code>
     *
     * <pre>
     * 前端用
     * </pre>
     */
    boolean hasBattleIndex();
    /**
     * <code>optional int32 battleIndex = 107;</code>
     *
     * <pre>
     * 前端用
     * </pre>
     */
    int getBattleIndex();

    // optional int32 caishenCoinNum = 108;
    /**
     * <code>optional int32 caishenCoinNum = 108;</code>
     *
     * <pre>
     * 今天财神次数 0点清零
     * </pre>
     */
    boolean hasCaishenCoinNum();
    /**
     * <code>optional int32 caishenCoinNum = 108;</code>
     *
     * <pre>
     * 今天财神次数 0点清零
     * </pre>
     */
    int getCaishenCoinNum();

    // repeated int32 triggerGuideIndex = 109;
    /**
     * <code>repeated int32 triggerGuideIndex = 109;</code>
     *
     * <pre>
     *触发式引导阶段标记
     * </pre>
     */
    java.util.List<java.lang.Integer> getTriggerGuideIndexList();
    /**
     * <code>repeated int32 triggerGuideIndex = 109;</code>
     *
     * <pre>
     *触发式引导阶段标记
     * </pre>
     */
    int getTriggerGuideIndexCount();
    /**
     * <code>repeated int32 triggerGuideIndex = 109;</code>
     *
     * <pre>
     *触发式引导阶段标记
     * </pre>
     */
    int getTriggerGuideIndex(int index);

    // repeated int32 chapterEasyReward = 110;
    /**
     * <code>repeated int32 chapterEasyReward = 110;</code>
     */
    java.util.List<java.lang.Integer> getChapterEasyRewardList();
    /**
     * <code>repeated int32 chapterEasyReward = 110;</code>
     */
    int getChapterEasyRewardCount();
    /**
     * <code>repeated int32 chapterEasyReward = 110;</code>
     */
    int getChapterEasyReward(int index);

    // repeated int32 chapterNormalReward = 111;
    /**
     * <code>repeated int32 chapterNormalReward = 111;</code>
     */
    java.util.List<java.lang.Integer> getChapterNormalRewardList();
    /**
     * <code>repeated int32 chapterNormalReward = 111;</code>
     */
    int getChapterNormalRewardCount();
    /**
     * <code>repeated int32 chapterNormalReward = 111;</code>
     */
    int getChapterNormalReward(int index);

    // repeated int32 chapterHardReward = 112;
    /**
     * <code>repeated int32 chapterHardReward = 112;</code>
     */
    java.util.List<java.lang.Integer> getChapterHardRewardList();
    /**
     * <code>repeated int32 chapterHardReward = 112;</code>
     */
    int getChapterHardRewardCount();
    /**
     * <code>repeated int32 chapterHardReward = 112;</code>
     */
    int getChapterHardReward(int index);

    // repeated int32 activityEasyReward = 113;
    /**
     * <code>repeated int32 activityEasyReward = 113;</code>
     */
    java.util.List<java.lang.Integer> getActivityEasyRewardList();
    /**
     * <code>repeated int32 activityEasyReward = 113;</code>
     */
    int getActivityEasyRewardCount();
    /**
     * <code>repeated int32 activityEasyReward = 113;</code>
     */
    int getActivityEasyReward(int index);

    // optional int32 cardEffectNum = 114;
    /**
     * <code>optional int32 cardEffectNum = 114;</code>
     *
     * <pre>
     * 新增卡组位播放特效次数
     * </pre>
     */
    boolean hasCardEffectNum();
    /**
     * <code>optional int32 cardEffectNum = 114;</code>
     *
     * <pre>
     * 新增卡组位播放特效次数
     * </pre>
     */
    int getCardEffectNum();

    // repeated int32 baoXiangReward = 115;
    /**
     * <code>repeated int32 baoXiangReward = 115;</code>
     *
     * <pre>
     * 领取过的宝箱奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getBaoXiangRewardList();
    /**
     * <code>repeated int32 baoXiangReward = 115;</code>
     *
     * <pre>
     * 领取过的宝箱奖励
     * </pre>
     */
    int getBaoXiangRewardCount();
    /**
     * <code>repeated int32 baoXiangReward = 115;</code>
     *
     * <pre>
     * 领取过的宝箱奖励
     * </pre>
     */
    int getBaoXiangReward(int index);

    // optional int32 newFriendInvite = 116;
    /**
     * <code>optional int32 newFriendInvite = 116;</code>
     *
     * <pre>
     * 是否有新的好友申请
     * </pre>
     */
    boolean hasNewFriendInvite();
    /**
     * <code>optional int32 newFriendInvite = 116;</code>
     *
     * <pre>
     * 是否有新的好友申请
     * </pre>
     */
    int getNewFriendInvite();

    // optional int64 yunyouRefreshTime = 117;
    /**
     * <code>optional int64 yunyouRefreshTime = 117;</code>
     *
     * <pre>
     * 上次云游仙人刷新时间
     * </pre>
     */
    boolean hasYunyouRefreshTime();
    /**
     * <code>optional int64 yunyouRefreshTime = 117;</code>
     *
     * <pre>
     * 上次云游仙人刷新时间
     * </pre>
     */
    long getYunyouRefreshTime();

    // repeated int32 yunyouItems = 118;
    /**
     * <code>repeated int32 yunyouItems = 118;</code>
     *
     * <pre>
     * 购买过的云游道具
     * </pre>
     */
    java.util.List<java.lang.Integer> getYunyouItemsList();
    /**
     * <code>repeated int32 yunyouItems = 118;</code>
     *
     * <pre>
     * 购买过的云游道具
     * </pre>
     */
    int getYunyouItemsCount();
    /**
     * <code>repeated int32 yunyouItems = 118;</code>
     *
     * <pre>
     * 购买过的云游道具
     * </pre>
     */
    int getYunyouItems(int index);

    // optional int32 lvReward = 119;
    /**
     * <code>optional int32 lvReward = 119;</code>
     *
     * <pre>
     * 上次等级抽奖
     * </pre>
     */
    boolean hasLvReward();
    /**
     * <code>optional int32 lvReward = 119;</code>
     *
     * <pre>
     * 上次等级抽奖
     * </pre>
     */
    int getLvReward();

    // optional int64 qiuBaoDate = 120;
    /**
     * <code>optional int64 qiuBaoDate = 120;</code>
     */
    boolean hasQiuBaoDate();
    /**
     * <code>optional int64 qiuBaoDate = 120;</code>
     */
    long getQiuBaoDate();

    // optional int32 qiuBaoTimes = 121;
    /**
     * <code>optional int32 qiuBaoTimes = 121;</code>
     */
    boolean hasQiuBaoTimes();
    /**
     * <code>optional int32 qiuBaoTimes = 121;</code>
     */
    int getQiuBaoTimes();

    // repeated .MapItem itemTask = 122;
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    java.util.List<myudfs.Common.MapItem> 
        getItemTaskList();
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    myudfs.Common.MapItem getItemTask(int index);
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    int getItemTaskCount();
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getItemTaskOrBuilderList();
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    myudfs.Common.MapItemOrBuilder getItemTaskOrBuilder(
        int index);

    // repeated .MapItem cardTask = 123;
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    java.util.List<myudfs.Common.MapItem> 
        getCardTaskList();
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    myudfs.Common.MapItem getCardTask(int index);
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    int getCardTaskCount();
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getCardTaskOrBuilderList();
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    myudfs.Common.MapItemOrBuilder getCardTaskOrBuilder(
        int index);

    // repeated int32 collectCardReward = 124;
    /**
     * <code>repeated int32 collectCardReward = 124;</code>
     */
    java.util.List<java.lang.Integer> getCollectCardRewardList();
    /**
     * <code>repeated int32 collectCardReward = 124;</code>
     */
    int getCollectCardRewardCount();
    /**
     * <code>repeated int32 collectCardReward = 124;</code>
     */
    int getCollectCardReward(int index);

    // repeated int32 cardReward = 125;
    /**
     * <code>repeated int32 cardReward = 125;</code>
     */
    java.util.List<java.lang.Integer> getCardRewardList();
    /**
     * <code>repeated int32 cardReward = 125;</code>
     */
    int getCardRewardCount();
    /**
     * <code>repeated int32 cardReward = 125;</code>
     */
    int getCardReward(int index);

    // repeated int32 itemReward = 126;
    /**
     * <code>repeated int32 itemReward = 126;</code>
     */
    java.util.List<java.lang.Integer> getItemRewardList();
    /**
     * <code>repeated int32 itemReward = 126;</code>
     */
    int getItemRewardCount();
    /**
     * <code>repeated int32 itemReward = 126;</code>
     */
    int getItemReward(int index);

    // repeated .MapItem vipNums = 127;
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getVipNumsList();
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    myudfs.Common.MapItem getVipNums(int index);
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    int getVipNumsCount();
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getVipNumsOrBuilderList();
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getVipNumsOrBuilder(
        int index);

    // repeated int32 firstPayExtraIds = 128;
    /**
     * <code>repeated int32 firstPayExtraIds = 128;</code>
     *
     * <pre>
     * 已获得首充额外奖励的支付id列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getFirstPayExtraIdsList();
    /**
     * <code>repeated int32 firstPayExtraIds = 128;</code>
     *
     * <pre>
     * 已获得首充额外奖励的支付id列表
     * </pre>
     */
    int getFirstPayExtraIdsCount();
    /**
     * <code>repeated int32 firstPayExtraIds = 128;</code>
     *
     * <pre>
     * 已获得首充额外奖励的支付id列表
     * </pre>
     */
    int getFirstPayExtraIds(int index);

    // optional int32 assetBundle_State = 129;
    /**
     * <code>optional int32 assetBundle_State = 129;</code>
     *
     * <pre>
     * 记录资源下载状态
     * </pre>
     */
    boolean hasAssetBundleState();
    /**
     * <code>optional int32 assetBundle_State = 129;</code>
     *
     * <pre>
     * 记录资源下载状态
     * </pre>
     */
    int getAssetBundleState();

    // optional int64 userId = 130;
    /**
     * <code>optional int64 userId = 130;</code>
     *
     * <pre>
     * 帐号id
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional int64 userId = 130;</code>
     *
     * <pre>
     * 帐号id
     * </pre>
     */
    long getUserId();

    // optional int32 serverId = 131;
    /**
     * <code>optional int32 serverId = 131;</code>
     *
     * <pre>
     * 服务器id
     * </pre>
     */
    boolean hasServerId();
    /**
     * <code>optional int32 serverId = 131;</code>
     *
     * <pre>
     * 服务器id
     * </pre>
     */
    int getServerId();

    // optional string username = 132;
    /**
     * <code>optional string username = 132;</code>
     *
     * <pre>
     * 用户名
     * </pre>
     */
    boolean hasUsername();
    /**
     * <code>optional string username = 132;</code>
     *
     * <pre>
     * 用户名
     * </pre>
     */
    java.lang.String getUsername();
    /**
     * <code>optional string username = 132;</code>
     *
     * <pre>
     * 用户名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    // repeated .PvpExchangeItem pvpExchangeItems = 133;
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    java.util.List<myudfs.Common.PvpExchangeItem> 
        getPvpExchangeItemsList();
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    myudfs.Common.PvpExchangeItem getPvpExchangeItems(int index);
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    int getPvpExchangeItemsCount();
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    java.util.List<? extends myudfs.Common.PvpExchangeItemOrBuilder> 
        getPvpExchangeItemsOrBuilderList();
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    myudfs.Common.PvpExchangeItemOrBuilder getPvpExchangeItemsOrBuilder(
        int index);

    // optional int32 hunyu = 134;
    /**
     * <code>optional int32 hunyu = 134;</code>
     *
     * <pre>
     * 魂玉
     * </pre>
     */
    boolean hasHunyu();
    /**
     * <code>optional int32 hunyu = 134;</code>
     *
     * <pre>
     * 魂玉
     * </pre>
     */
    int getHunyu();

    // repeated int32 firstDrawIds = 135;
    /**
     * <code>repeated int32 firstDrawIds = 135;</code>
     *
     * <pre>
     * 首抽卡包id列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getFirstDrawIdsList();
    /**
     * <code>repeated int32 firstDrawIds = 135;</code>
     *
     * <pre>
     * 首抽卡包id列表
     * </pre>
     */
    int getFirstDrawIdsCount();
    /**
     * <code>repeated int32 firstDrawIds = 135;</code>
     *
     * <pre>
     * 首抽卡包id列表
     * </pre>
     */
    int getFirstDrawIds(int index);

    // optional uint64 openDate = 136;
    /**
     * <code>optional uint64 openDate = 136;</code>
     *
     * <pre>
     *服务器开服时间
     * </pre>
     */
    boolean hasOpenDate();
    /**
     * <code>optional uint64 openDate = 136;</code>
     *
     * <pre>
     *服务器开服时间
     * </pre>
     */
    long getOpenDate();

    // repeated .MapItem todyTastePantaos = 137;
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getTodyTastePantaosList();
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    myudfs.Common.MapItem getTodyTastePantaos(int index);
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    int getTodyTastePantaosCount();
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getTodyTastePantaosOrBuilderList();
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getTodyTastePantaosOrBuilder(
        int index);

    // optional int32 battleScore = 138;
    /**
     * <code>optional int32 battleScore = 138;</code>
     *
     * <pre>
     * 总战力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>optional int32 battleScore = 138;</code>
     *
     * <pre>
     * 总战力
     * </pre>
     */
    int getBattleScore();

    // optional int32 lingLi = 139;
    /**
     * <code>optional int32 lingLi = 139;</code>
     *
     * <pre>
     * 灵力
     * </pre>
     */
    boolean hasLingLi();
    /**
     * <code>optional int32 lingLi = 139;</code>
     *
     * <pre>
     * 灵力
     * </pre>
     */
    int getLingLi();

    // optional int32 buyLingli = 140;
    /**
     * <code>optional int32 buyLingli = 140;</code>
     */
    boolean hasBuyLingli();
    /**
     * <code>optional int32 buyLingli = 140;</code>
     */
    int getBuyLingli();

    // optional uint64 lingLiDate = 141;
    /**
     * <code>optional uint64 lingLiDate = 141;</code>
     */
    boolean hasLingLiDate();
    /**
     * <code>optional uint64 lingLiDate = 141;</code>
     */
    long getLingLiDate();

    // repeated int32 shenMoDuiHuan = 151;
    /**
     * <code>repeated int32 shenMoDuiHuan = 151;</code>
     *
     * <pre>
     * 神魔兑换道具
     * </pre>
     */
    java.util.List<java.lang.Integer> getShenMoDuiHuanList();
    /**
     * <code>repeated int32 shenMoDuiHuan = 151;</code>
     *
     * <pre>
     * 神魔兑换道具
     * </pre>
     */
    int getShenMoDuiHuanCount();
    /**
     * <code>repeated int32 shenMoDuiHuan = 151;</code>
     *
     * <pre>
     * 神魔兑换道具
     * </pre>
     */
    int getShenMoDuiHuan(int index);

    // repeated int32 buyShenMoItem = 152;
    /**
     * <code>repeated int32 buyShenMoItem = 152;</code>
     *
     * <pre>
     * 购买的神魔兑换道具
     * </pre>
     */
    java.util.List<java.lang.Integer> getBuyShenMoItemList();
    /**
     * <code>repeated int32 buyShenMoItem = 152;</code>
     *
     * <pre>
     * 购买的神魔兑换道具
     * </pre>
     */
    int getBuyShenMoItemCount();
    /**
     * <code>repeated int32 buyShenMoItem = 152;</code>
     *
     * <pre>
     * 购买的神魔兑换道具
     * </pre>
     */
    int getBuyShenMoItem(int index);

    // optional int32 xiuWei = 153;
    /**
     * <code>optional int32 xiuWei = 153;</code>
     */
    boolean hasXiuWei();
    /**
     * <code>optional int32 xiuWei = 153;</code>
     */
    int getXiuWei();

    // optional bool hasPvpReward = 154;
    /**
     * <code>optional bool hasPvpReward = 154;</code>
     *
     * <pre>
     *true:有新pvp奖励
     * </pre>
     */
    boolean hasHasPvpReward();
    /**
     * <code>optional bool hasPvpReward = 154;</code>
     *
     * <pre>
     *true:有新pvp奖励
     * </pre>
     */
    boolean getHasPvpReward();

    // optional int64 gongDe = 155;
    /**
     * <code>optional int64 gongDe = 155;</code>
     *
     * <pre>
     * 功德
     * </pre>
     */
    boolean hasGongDe();
    /**
     * <code>optional int64 gongDe = 155;</code>
     *
     * <pre>
     * 功德
     * </pre>
     */
    long getGongDe();

    // repeated int32 gongDeReward = 156;
    /**
     * <code>repeated int32 gongDeReward = 156;</code>
     *
     * <pre>
     * 领取过的功德达标奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getGongDeRewardList();
    /**
     * <code>repeated int32 gongDeReward = 156;</code>
     *
     * <pre>
     * 领取过的功德达标奖励
     * </pre>
     */
    int getGongDeRewardCount();
    /**
     * <code>repeated int32 gongDeReward = 156;</code>
     *
     * <pre>
     * 领取过的功德达标奖励
     * </pre>
     */
    int getGongDeReward(int index);

    // optional int32 rankRise = 157;
    /**
     * <code>optional int32 rankRise = 157;</code>
     *
     * <pre>
     *1下降 2上升  0不变
     * </pre>
     */
    boolean hasRankRise();
    /**
     * <code>optional int32 rankRise = 157;</code>
     *
     * <pre>
     *1下降 2上升  0不变
     * </pre>
     */
    int getRankRise();

    // optional int64 rank = 158;
    /**
     * <code>optional int64 rank = 158;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    boolean hasRank();
    /**
     * <code>optional int64 rank = 158;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    long getRank();

    // repeated .MapItem drawCard = 159;
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getDrawCardList();
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    myudfs.Common.MapItem getDrawCard(int index);
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    int getDrawCardCount();
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getDrawCardOrBuilderList();
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getDrawCardOrBuilder(
        int index);

    // optional bool hufaOpen = 160;
    /**
     * <code>optional bool hufaOpen = 160;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasHufaOpen();
    /**
     * <code>optional bool hufaOpen = 160;</code>
     *
     * <pre>
     * </pre>
     */
    boolean getHufaOpen();

    // optional int32 caishenSilverNum = 161;
    /**
     * <code>optional int32 caishenSilverNum = 161;</code>
     *
     * <pre>
     *财神银两
     * </pre>
     */
    boolean hasCaishenSilverNum();
    /**
     * <code>optional int32 caishenSilverNum = 161;</code>
     *
     * <pre>
     *财神银两
     * </pre>
     */
    int getCaishenSilverNum();

    // optional bool drawCardReward2 = 162;
    /**
     * <code>optional bool drawCardReward2 = 162;</code>
     *
     * <pre>
     *每日抽卡奖励 0点清零
     * </pre>
     */
    boolean hasDrawCardReward2();
    /**
     * <code>optional bool drawCardReward2 = 162;</code>
     *
     * <pre>
     *每日抽卡奖励 0点清零
     * </pre>
     */
    boolean getDrawCardReward2();

    // repeated string playerPrefs = 163;
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    java.util.List<java.lang.String>
    getPlayerPrefsList();
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    int getPlayerPrefsCount();
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    java.lang.String getPlayerPrefs(int index);
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    com.google.protobuf.ByteString
        getPlayerPrefsBytes(int index);

    // repeated .DaliyMissionItem missionMap = 164;
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    java.util.List<myudfs.Common.DaliyMissionItem> 
        getMissionMapList();
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    myudfs.Common.DaliyMissionItem getMissionMap(int index);
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    int getMissionMapCount();
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    java.util.List<? extends myudfs.Common.DaliyMissionItemOrBuilder> 
        getMissionMapOrBuilderList();
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    myudfs.Common.DaliyMissionItemOrBuilder getMissionMapOrBuilder(
        int index);

    // optional int32 missionNum = 165;
    /**
     * <code>optional int32 missionNum = 165;</code>
     *
     * <pre>
     * 完成每日任务的个数
     * </pre>
     */
    boolean hasMissionNum();
    /**
     * <code>optional int32 missionNum = 165;</code>
     *
     * <pre>
     * 完成每日任务的个数
     * </pre>
     */
    int getMissionNum();

    // optional int32 yunyouNum = 166;
    /**
     * <code>optional int32 yunyouNum = 166;</code>
     *
     * <pre>
     * 云游兑换数量
     * </pre>
     */
    boolean hasYunyouNum();
    /**
     * <code>optional int32 yunyouNum = 166;</code>
     *
     * <pre>
     * 云游兑换数量
     * </pre>
     */
    int getYunyouNum();

    // optional int32 pvpExchangeNum = 167;
    /**
     * <code>optional int32 pvpExchangeNum = 167;</code>
     *
     * <pre>
     * pvp兑换数量
     * </pre>
     */
    boolean hasPvpExchangeNum();
    /**
     * <code>optional int32 pvpExchangeNum = 167;</code>
     *
     * <pre>
     * pvp兑换数量
     * </pre>
     */
    int getPvpExchangeNum();

    // optional int32 friendNum = 168;
    /**
     * <code>optional int32 friendNum = 168;</code>
     */
    boolean hasFriendNum();
    /**
     * <code>optional int32 friendNum = 168;</code>
     */
    int getFriendNum();

    // optional bool clearShenMoItem = 171;
    /**
     * <code>optional bool clearShenMoItem = 171;</code>
     *
     * <pre>
     * 清空神魔兑换 true清空
     * </pre>
     */
    boolean hasClearShenMoItem();
    /**
     * <code>optional bool clearShenMoItem = 171;</code>
     *
     * <pre>
     * 清空神魔兑换 true清空
     * </pre>
     */
    boolean getClearShenMoItem();

    // optional bool refreshHour24 = 172;
    /**
     * <code>optional bool refreshHour24 = 172;</code>
     *
     * <pre>
     * 0点清空数据 true：清空
     * </pre>
     */
    boolean hasRefreshHour24();
    /**
     * <code>optional bool refreshHour24 = 172;</code>
     *
     * <pre>
     * 0点清空数据 true：清空
     * </pre>
     */
    boolean getRefreshHour24();

    // optional bool pay = 173;
    /**
     * <code>optional bool pay = 173;</code>
     *
     * <pre>
     *true:充值消息
     * </pre>
     */
    boolean hasPay();
    /**
     * <code>optional bool pay = 173;</code>
     *
     * <pre>
     *true:充值消息
     * </pre>
     */
    boolean getPay();

    // optional bool isShutUp = 174;
    /**
     * <code>optional bool isShutUp = 174;</code>
     */
    boolean hasIsShutUp();
    /**
     * <code>optional bool isShutUp = 174;</code>
     */
    boolean getIsShutUp();

    // optional uint64 shutUpDate = 175;
    /**
     * <code>optional uint64 shutUpDate = 175;</code>
     */
    boolean hasShutUpDate();
    /**
     * <code>optional uint64 shutUpDate = 175;</code>
     */
    long getShutUpDate();

    // optional uint64 shutUpEnd = 176;
    /**
     * <code>optional uint64 shutUpEnd = 176;</code>
     */
    boolean hasShutUpEnd();
    /**
     * <code>optional uint64 shutUpEnd = 176;</code>
     */
    long getShutUpEnd();

    // repeated .ActivityItem activityItem = 177;
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    java.util.List<myudfs.Common.ActivityItem> 
        getActivityItemList();
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    myudfs.Common.ActivityItem getActivityItem(int index);
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    int getActivityItemCount();
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    java.util.List<? extends myudfs.Common.ActivityItemOrBuilder> 
        getActivityItemOrBuilderList();
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    myudfs.Common.ActivityItemOrBuilder getActivityItemOrBuilder(
        int index);

    // repeated .PayReward payReward = 178;
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    java.util.List<myudfs.Common.PayReward> 
        getPayRewardList();
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    myudfs.Common.PayReward getPayReward(int index);
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    int getPayRewardCount();
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    java.util.List<? extends myudfs.Common.PayRewardOrBuilder> 
        getPayRewardOrBuilderList();
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    myudfs.Common.PayRewardOrBuilder getPayRewardOrBuilder(
        int index);

    // optional int32 yunYouTime = 179;
    /**
     * <code>optional int32 yunYouTime = 179;</code>
     *
     * <pre>
     *云游刷新次数
     * </pre>
     */
    boolean hasYunYouTime();
    /**
     * <code>optional int32 yunYouTime = 179;</code>
     *
     * <pre>
     *云游刷新次数
     * </pre>
     */
    int getYunYouTime();

    // optional int32 pvpChangeTime = 180;
    /**
     * <code>optional int32 pvpChangeTime = 180;</code>
     *
     * <pre>
     *决战兑换商店刷新次数
     * </pre>
     */
    boolean hasPvpChangeTime();
    /**
     * <code>optional int32 pvpChangeTime = 180;</code>
     *
     * <pre>
     *决战兑换商店刷新次数
     * </pre>
     */
    int getPvpChangeTime();

    // optional int32 shenMoChangeTime = 181;
    /**
     * <code>optional int32 shenMoChangeTime = 181;</code>
     *
     * <pre>
     *神魔兑换商店次数
     * </pre>
     */
    boolean hasShenMoChangeTime();
    /**
     * <code>optional int32 shenMoChangeTime = 181;</code>
     *
     * <pre>
     *神魔兑换商店次数
     * </pre>
     */
    int getShenMoChangeTime();

    // optional int32 shenMoNum = 182;
    /**
     * <code>optional int32 shenMoNum = 182;</code>
     *
     * <pre>
     * 挑战神魔次数
     * </pre>
     */
    boolean hasShenMoNum();
    /**
     * <code>optional int32 shenMoNum = 182;</code>
     *
     * <pre>
     * 挑战神魔次数
     * </pre>
     */
    int getShenMoNum();

    // optional int32 itemLvUpNum = 183;
    /**
     * <code>optional int32 itemLvUpNum = 183;</code>
     *
     * <pre>
     * 装备强化次数
     * </pre>
     */
    boolean hasItemLvUpNum();
    /**
     * <code>optional int32 itemLvUpNum = 183;</code>
     *
     * <pre>
     * 装备强化次数
     * </pre>
     */
    int getItemLvUpNum();

    // optional int32 cardLvUpNum = 184;
    /**
     * <code>optional int32 cardLvUpNum = 184;</code>
     *
     * <pre>
     * 卡牌强化次数
     * </pre>
     */
    boolean hasCardLvUpNum();
    /**
     * <code>optional int32 cardLvUpNum = 184;</code>
     *
     * <pre>
     * 卡牌强化次数
     * </pre>
     */
    int getCardLvUpNum();

    // optional int32 shenTongNum = 185;
    /**
     * <code>optional int32 shenTongNum = 185;</code>
     *
     * <pre>
     * 提升申通次数
     * </pre>
     */
    boolean hasShenTongNum();
    /**
     * <code>optional int32 shenTongNum = 185;</code>
     *
     * <pre>
     * 提升申通次数
     * </pre>
     */
    int getShenTongNum();

    // optional int32 skillNum = 186;
    /**
     * <code>optional int32 skillNum = 186;</code>
     *
     * <pre>
     * 绝技升级次数
     * </pre>
     */
    boolean hasSkillNum();
    /**
     * <code>optional int32 skillNum = 186;</code>
     *
     * <pre>
     * 绝技升级次数
     * </pre>
     */
    int getSkillNum();

    // optional int32 huFaNum = 187;
    /**
     * <code>optional int32 huFaNum = 187;</code>
     *
     * <pre>
     * 护法洗练次数
     * </pre>
     */
    boolean hasHuFaNum();
    /**
     * <code>optional int32 huFaNum = 187;</code>
     *
     * <pre>
     * 护法洗练次数
     * </pre>
     */
    int getHuFaNum();

    // optional int32 xiuLianNum = 188;
    /**
     * <code>optional int32 xiuLianNum = 188;</code>
     *
     * <pre>
     * 卡牌修炼次数
     * </pre>
     */
    boolean hasXiuLianNum();
    /**
     * <code>optional int32 xiuLianNum = 188;</code>
     *
     * <pre>
     * 卡牌修炼次数
     * </pre>
     */
    int getXiuLianNum();

    // optional int32 changeName = 189;
    /**
     * <code>optional int32 changeName = 189;</code>
     *
     * <pre>
     * 修改名字的次数
     * </pre>
     */
    boolean hasChangeName();
    /**
     * <code>optional int32 changeName = 189;</code>
     *
     * <pre>
     * 修改名字的次数
     * </pre>
     */
    int getChangeName();

    // repeated int32 chengjiuReward = 190;
    /**
     * <code>repeated int32 chengjiuReward = 190;</code>
     *
     * <pre>
     *领取过的pvp成就奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getChengjiuRewardList();
    /**
     * <code>repeated int32 chengjiuReward = 190;</code>
     *
     * <pre>
     *领取过的pvp成就奖励
     * </pre>
     */
    int getChengjiuRewardCount();
    /**
     * <code>repeated int32 chengjiuReward = 190;</code>
     *
     * <pre>
     *领取过的pvp成就奖励
     * </pre>
     */
    int getChengjiuReward(int index);

    // optional int32 fenXiangRewardTimes = 191;
    /**
     * <code>optional int32 fenXiangRewardTimes = 191;</code>
     *
     * <pre>
     *微信本日分享次数
     * </pre>
     */
    boolean hasFenXiangRewardTimes();
    /**
     * <code>optional int32 fenXiangRewardTimes = 191;</code>
     *
     * <pre>
     *微信本日分享次数
     * </pre>
     */
    int getFenXiangRewardTimes();

    // optional bool weiXinFirstShare = 192;
    /**
     * <code>optional bool weiXinFirstShare = 192;</code>
     *
     * <pre>
     * true:微信首次分享奖励已经领取
     * </pre>
     */
    boolean hasWeiXinFirstShare();
    /**
     * <code>optional bool weiXinFirstShare = 192;</code>
     *
     * <pre>
     * true:微信首次分享奖励已经领取
     * </pre>
     */
    boolean getWeiXinFirstShare();

    // optional bool weiXinOpen = 193;
    /**
     * <code>optional bool weiXinOpen = 193;</code>
     *
     * <pre>
     * true:微信分享活动开启
     * </pre>
     */
    boolean hasWeiXinOpen();
    /**
     * <code>optional bool weiXinOpen = 193;</code>
     *
     * <pre>
     * true:微信分享活动开启
     * </pre>
     */
    boolean getWeiXinOpen();

    // optional bool xilianOpen = 194;
    /**
     * <code>optional bool xilianOpen = 194;</code>
     *
     * <pre>
     *洗练是否开启
     * </pre>
     */
    boolean hasXilianOpen();
    /**
     * <code>optional bool xilianOpen = 194;</code>
     *
     * <pre>
     *洗练是否开启
     * </pre>
     */
    boolean getXilianOpen();

    // optional int32 pvpWinMax = 195;
    /**
     * <code>optional int32 pvpWinMax = 195;</code>
     *
     * <pre>
     * 连胜次数，奖励用
     * </pre>
     */
    boolean hasPvpWinMax();
    /**
     * <code>optional int32 pvpWinMax = 195;</code>
     *
     * <pre>
     * 连胜次数，奖励用
     * </pre>
     */
    int getPvpWinMax();

    // optional string inviteCode = 196;
    /**
     * <code>optional string inviteCode = 196;</code>
     *
     * <pre>
     *个人邀请码
     * </pre>
     */
    boolean hasInviteCode();
    /**
     * <code>optional string inviteCode = 196;</code>
     *
     * <pre>
     *个人邀请码
     * </pre>
     */
    java.lang.String getInviteCode();
    /**
     * <code>optional string inviteCode = 196;</code>
     *
     * <pre>
     *个人邀请码
     * </pre>
     */
    com.google.protobuf.ByteString
        getInviteCodeBytes();

    // optional int32 inviteNum = 197;
    /**
     * <code>optional int32 inviteNum = 197;</code>
     *
     * <pre>
     * 邀请人数
     * </pre>
     */
    boolean hasInviteNum();
    /**
     * <code>optional int32 inviteNum = 197;</code>
     *
     * <pre>
     * 邀请人数
     * </pre>
     */
    int getInviteNum();

    // optional int64 inviterId = 198;
    /**
     * <code>optional int64 inviterId = 198;</code>
     *
     * <pre>
     * 自己的邀请人id
     * </pre>
     */
    boolean hasInviterId();
    /**
     * <code>optional int64 inviterId = 198;</code>
     *
     * <pre>
     * 自己的邀请人id
     * </pre>
     */
    long getInviterId();

    // optional bool clearFirstPayExtraIds = 199;
    /**
     * <code>optional bool clearFirstPayExtraIds = 199;</code>
     *
     * <pre>
     * true:清空客户端的FirstPayExtraIds列表
     * </pre>
     */
    boolean hasClearFirstPayExtraIds();
    /**
     * <code>optional bool clearFirstPayExtraIds = 199;</code>
     *
     * <pre>
     * true:清空客户端的FirstPayExtraIds列表
     * </pre>
     */
    boolean getClearFirstPayExtraIds();

    // optional .MapItem3 loginActivity = 200;
    /**
     * <code>optional .MapItem3 loginActivity = 200;</code>
     *
     * <pre>
     *登陆领奖活动
     * </pre>
     */
    boolean hasLoginActivity();
    /**
     * <code>optional .MapItem3 loginActivity = 200;</code>
     *
     * <pre>
     *登陆领奖活动
     * </pre>
     */
    myudfs.Common.MapItem3 getLoginActivity();
    /**
     * <code>optional .MapItem3 loginActivity = 200;</code>
     *
     * <pre>
     *登陆领奖活动
     * </pre>
     */
    myudfs.Common.MapItem3OrBuilder getLoginActivityOrBuilder();

    // optional int32 choukaQuan = 201;
    /**
     * <code>optional int32 choukaQuan = 201;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    boolean hasChoukaQuan();
    /**
     * <code>optional int32 choukaQuan = 201;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    int getChoukaQuan();

    // optional int32 shenJiangScore = 206;
    /**
     * <code>optional int32 shenJiangScore = 206;</code>
     *
     * <pre>
     *神将活动积分
     * </pre>
     */
    boolean hasShenJiangScore();
    /**
     * <code>optional int32 shenJiangScore = 206;</code>
     *
     * <pre>
     *神将活动积分
     * </pre>
     */
    int getShenJiangScore();

    // optional int32 shenJiangTotalScore = 207;
    /**
     * <code>optional int32 shenJiangTotalScore = 207;</code>
     *
     * <pre>
     * 神将活动总积分
     * </pre>
     */
    boolean hasShenJiangTotalScore();
    /**
     * <code>optional int32 shenJiangTotalScore = 207;</code>
     *
     * <pre>
     * 神将活动总积分
     * </pre>
     */
    int getShenJiangTotalScore();

    // optional int32 shenJiangRank = 208;
    /**
     * <code>optional int32 shenJiangRank = 208;</code>
     *
     * <pre>
     * 神将活动排名
     * </pre>
     */
    boolean hasShenJiangRank();
    /**
     * <code>optional int32 shenJiangRank = 208;</code>
     *
     * <pre>
     * 神将活动排名
     * </pre>
     */
    int getShenJiangRank();

    // repeated int32 inviteNumReward = 209;
    /**
     * <code>repeated int32 inviteNumReward = 209;</code>
     *
     * <pre>
     * 已经领过的邀请人奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getInviteNumRewardList();
    /**
     * <code>repeated int32 inviteNumReward = 209;</code>
     *
     * <pre>
     * 已经领过的邀请人奖励
     * </pre>
     */
    int getInviteNumRewardCount();
    /**
     * <code>repeated int32 inviteNumReward = 209;</code>
     *
     * <pre>
     * 已经领过的邀请人奖励
     * </pre>
     */
    int getInviteNumReward(int index);

    // repeated string yuanshenBox = 210;
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    java.util.List<java.lang.String>
    getYuanshenBoxList();
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    int getYuanshenBoxCount();
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    java.lang.String getYuanshenBox(int index);
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    com.google.protobuf.ByteString
        getYuanshenBoxBytes(int index);

    // repeated .MapItem boxs = 211;
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getBoxsList();
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    myudfs.Common.MapItem getBoxs(int index);
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    int getBoxsCount();
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getBoxsOrBuilderList();
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getBoxsOrBuilder(
        int index);

    // repeated .MapItem buyBox = 212;
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getBuyBoxList();
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    myudfs.Common.MapItem getBuyBox(int index);
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    int getBuyBoxCount();
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getBuyBoxOrBuilderList();
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getBuyBoxOrBuilder(
        int index);

    // optional int32 zhuanpan = 213;
    /**
     * <code>optional int32 zhuanpan = 213;</code>
     *
     * <pre>
     *每天转盘次数
     * </pre>
     */
    boolean hasZhuanpan();
    /**
     * <code>optional int32 zhuanpan = 213;</code>
     *
     * <pre>
     *每天转盘次数
     * </pre>
     */
    int getZhuanpan();

    // repeated int32 sevenReward = 214;
    /**
     * <code>repeated int32 sevenReward = 214;</code>
     *
     * <pre>
     * 领取过的7天奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getSevenRewardList();
    /**
     * <code>repeated int32 sevenReward = 214;</code>
     *
     * <pre>
     * 领取过的7天奖励
     * </pre>
     */
    int getSevenRewardCount();
    /**
     * <code>repeated int32 sevenReward = 214;</code>
     *
     * <pre>
     * 领取过的7天奖励
     * </pre>
     */
    int getSevenReward(int index);

    // repeated int32 playerNum = 215;
    /**
     * <code>repeated int32 playerNum = 215;</code>
     *
     * <pre>
     * 邀请码需要达到的人数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerNumList();
    /**
     * <code>repeated int32 playerNum = 215;</code>
     *
     * <pre>
     * 邀请码需要达到的人数
     * </pre>
     */
    int getPlayerNumCount();
    /**
     * <code>repeated int32 playerNum = 215;</code>
     *
     * <pre>
     * 邀请码需要达到的人数
     * </pre>
     */
    int getPlayerNum(int index);

    // repeated int32 rewardId = 216;
    /**
     * <code>repeated int32 rewardId = 216;</code>
     *
     * <pre>
     * 邀请码奖励id
     * </pre>
     */
    java.util.List<java.lang.Integer> getRewardIdList();
    /**
     * <code>repeated int32 rewardId = 216;</code>
     *
     * <pre>
     * 邀请码奖励id
     * </pre>
     */
    int getRewardIdCount();
    /**
     * <code>repeated int32 rewardId = 216;</code>
     *
     * <pre>
     * 邀请码奖励id
     * </pre>
     */
    int getRewardId(int index);

    // optional bool inviteReward = 217;
    /**
     * <code>optional bool inviteReward = 217;</code>
     *
     * <pre>
     * true:已经领取过填写邀请人奖励
     * </pre>
     */
    boolean hasInviteReward();
    /**
     * <code>optional bool inviteReward = 217;</code>
     *
     * <pre>
     * true:已经领取过填写邀请人奖励
     * </pre>
     */
    boolean getInviteReward();

    // optional int64 lingHun = 218;
    /**
     * <code>optional int64 lingHun = 218;</code>
     *
     * <pre>
     * 六道中的货币：灵魂
     * </pre>
     */
    boolean hasLingHun();
    /**
     * <code>optional int64 lingHun = 218;</code>
     *
     * <pre>
     * 六道中的货币：灵魂
     * </pre>
     */
    long getLingHun();

    // repeated int32 liuDaoDuiHuanIds = 219;
    /**
     * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
     *
     * <pre>
     * 六道中的兑换物品
     * </pre>
     */
    java.util.List<java.lang.Integer> getLiuDaoDuiHuanIdsList();
    /**
     * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
     *
     * <pre>
     * 六道中的兑换物品
     * </pre>
     */
    int getLiuDaoDuiHuanIdsCount();
    /**
     * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
     *
     * <pre>
     * 六道中的兑换物品
     * </pre>
     */
    int getLiuDaoDuiHuanIds(int index);

    // repeated int32 liuDaoDuiHuanIdsBuyed = 220;
    /**
     * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
     *
     * <pre>
     * true:已经购买的六道兑换物品
     * </pre>
     */
    java.util.List<java.lang.Integer> getLiuDaoDuiHuanIdsBuyedList();
    /**
     * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
     *
     * <pre>
     * true:已经购买的六道兑换物品
     * </pre>
     */
    int getLiuDaoDuiHuanIdsBuyedCount();
    /**
     * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
     *
     * <pre>
     * true:已经购买的六道兑换物品
     * </pre>
     */
    int getLiuDaoDuiHuanIdsBuyed(int index);

    // optional int32 liuDaoChangeTime = 221;
    /**
     * <code>optional int32 liuDaoChangeTime = 221;</code>
     *
     * <pre>
     * 六道兑换　当天已刷新次数
     * </pre>
     */
    boolean hasLiuDaoChangeTime();
    /**
     * <code>optional int32 liuDaoChangeTime = 221;</code>
     *
     * <pre>
     * 六道兑换　当天已刷新次数
     * </pre>
     */
    int getLiuDaoChangeTime();

    // optional int32 liuDaoBaoXiangOpenNum = 222;
    /**
     * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
     *
     * <pre>
     * 六道宝箱已开次数
     * </pre>
     */
    boolean hasLiuDaoBaoXiangOpenNum();
    /**
     * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
     *
     * <pre>
     * 六道宝箱已开次数
     * </pre>
     */
    int getLiuDaoBaoXiangOpenNum();

    // optional int32 vipCardAllLift = 226;
    /**
     * <code>optional int32 vipCardAllLift = 226;</code>
     *
     * <pre>
     *1:为终身月卡用户
     * </pre>
     */
    boolean hasVipCardAllLift();
    /**
     * <code>optional int32 vipCardAllLift = 226;</code>
     *
     * <pre>
     *1:为终身月卡用户
     * </pre>
     */
    int getVipCardAllLift();

    // optional bool vipAllLifeReward = 227;
    /**
     * <code>optional bool vipAllLifeReward = 227;</code>
     *
     * <pre>
     * true:本日终身月卡奖励已经领取
     * </pre>
     */
    boolean hasVipAllLifeReward();
    /**
     * <code>optional bool vipAllLifeReward = 227;</code>
     *
     * <pre>
     * true:本日终身月卡奖励已经领取
     * </pre>
     */
    boolean getVipAllLifeReward();

    // repeated int64 cardGroupLiuDao = 228;
    /**
     * <code>repeated int64 cardGroupLiuDao = 228;</code>
     *
     * <pre>
     *六道卡组(卡牌的id,  card.id)
     * </pre>
     */
    java.util.List<java.lang.Long> getCardGroupLiuDaoList();
    /**
     * <code>repeated int64 cardGroupLiuDao = 228;</code>
     *
     * <pre>
     *六道卡组(卡牌的id,  card.id)
     * </pre>
     */
    int getCardGroupLiuDaoCount();
    /**
     * <code>repeated int64 cardGroupLiuDao = 228;</code>
     *
     * <pre>
     *六道卡组(卡牌的id,  card.id)
     * </pre>
     */
    long getCardGroupLiuDao(int index);

    // repeated int32 cardGroupFightLiuDao = 229;
    /**
     * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
     *
     * <pre>
     *六道战前卡组与自己的卡组对应关系
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardGroupFightLiuDaoList();
    /**
     * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
     *
     * <pre>
     *六道战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getCardGroupFightLiuDaoCount();
    /**
     * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
     *
     * <pre>
     *六道战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getCardGroupFightLiuDao(int index);

    // repeated .MapItem drawCardFree = 230;
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getDrawCardFreeList();
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    myudfs.Common.MapItem getDrawCardFree(int index);
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    int getDrawCardFreeCount();
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getDrawCardFreeOrBuilderList();
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getDrawCardFreeOrBuilder(
        int index);

    // optional int32 liudaoEnterHeroLimit = 231;
    /**
     * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
     *
     * <pre>
     * 六道允许进入的最多卡牌数量
     * </pre>
     */
    boolean hasLiudaoEnterHeroLimit();
    /**
     * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
     *
     * <pre>
     * 六道允许进入的最多卡牌数量
     * </pre>
     */
    int getLiudaoEnterHeroLimit();

    // optional int32 todayQuestNum = 232;
    /**
     * <code>optional int32 todayQuestNum = 232;</code>
     *
     * <pre>
     * 每天任意西行次数0点清零
     * </pre>
     */
    boolean hasTodayQuestNum();
    /**
     * <code>optional int32 todayQuestNum = 232;</code>
     *
     * <pre>
     * 每天任意西行次数0点清零
     * </pre>
     */
    int getTodayQuestNum();

    // optional int32 cardId = 233;
    /**
     * <code>optional int32 cardId = 233;</code>
     *
     * <pre>
     * 队长卡配置id
     * </pre>
     */
    boolean hasCardId();
    /**
     * <code>optional int32 cardId = 233;</code>
     *
     * <pre>
     * 队长卡配置id
     * </pre>
     */
    int getCardId();

    // optional int32 enterLiuDaoTimes = 234;
    /**
     * <code>optional int32 enterLiuDaoTimes = 234;</code>
     *
     * <pre>
     *每天六道派遣的次数
     * </pre>
     */
    boolean hasEnterLiuDaoTimes();
    /**
     * <code>optional int32 enterLiuDaoTimes = 234;</code>
     *
     * <pre>
     *每天六道派遣的次数
     * </pre>
     */
    int getEnterLiuDaoTimes();

    // optional int32 xunshan = 235;
    /**
     * <code>optional int32 xunshan = 235;</code>
     *
     * <pre>
     * 巡山次数
     * </pre>
     */
    boolean hasXunshan();
    /**
     * <code>optional int32 xunshan = 235;</code>
     *
     * <pre>
     * 巡山次数
     * </pre>
     */
    int getXunshan();

    // optional int32 dailyLeftTimes = 236;
    /**
     * <code>optional int32 dailyLeftTimes = 236;</code>
     *
     * <pre>
     * 人参果每日赠送次数的剩余次数
     * </pre>
     */
    boolean hasDailyLeftTimes();
    /**
     * <code>optional int32 dailyLeftTimes = 236;</code>
     *
     * <pre>
     * 人参果每日赠送次数的剩余次数
     * </pre>
     */
    int getDailyLeftTimes();

    // optional int32 dailyBuyTimes = 257;
    /**
     * <code>optional int32 dailyBuyTimes = 257;</code>
     *
     * <pre>
     * 人生果每日vip购买次数
     * </pre>
     */
    boolean hasDailyBuyTimes();
    /**
     * <code>optional int32 dailyBuyTimes = 257;</code>
     *
     * <pre>
     * 人生果每日vip购买次数
     * </pre>
     */
    int getDailyBuyTimes();

    // optional int64 nextCDTime = 258;
    /**
     * <code>optional int64 nextCDTime = 258;</code>
     *
     * <pre>
     * 人参果下次进行人参果活动的冷却时间
     * </pre>
     */
    boolean hasNextCDTime();
    /**
     * <code>optional int64 nextCDTime = 258;</code>
     *
     * <pre>
     * 人参果下次进行人参果活动的冷却时间
     * </pre>
     */
    long getNextCDTime();

    // optional int32 shouHuId = 259;
    /**
     * <code>optional int32 shouHuId = 259;</code>
     *
     * <pre>
     * 人参果活动开始时的守护id
     * </pre>
     */
    boolean hasShouHuId();
    /**
     * <code>optional int32 shouHuId = 259;</code>
     *
     * <pre>
     * 人参果活动开始时的守护id
     * </pre>
     */
    int getShouHuId();

    // optional int32 cancelCDTimes = 260;
    /**
     * <code>optional int32 cancelCDTimes = 260;</code>
     *
     * <pre>
     * 人参果每日取消cd次数
     * </pre>
     */
    boolean hasCancelCDTimes();
    /**
     * <code>optional int32 cancelCDTimes = 260;</code>
     *
     * <pre>
     * 人参果每日取消cd次数
     * </pre>
     */
    int getCancelCDTimes();

    // repeated int32 xunshanStr = 261;
    /**
     * <code>repeated int32 xunshanStr = 261;</code>
     *
     * <pre>
     * 巡山对话id
     * </pre>
     */
    java.util.List<java.lang.Integer> getXunshanStrList();
    /**
     * <code>repeated int32 xunshanStr = 261;</code>
     *
     * <pre>
     * 巡山对话id
     * </pre>
     */
    int getXunshanStrCount();
    /**
     * <code>repeated int32 xunshanStr = 261;</code>
     *
     * <pre>
     * 巡山对话id
     * </pre>
     */
    int getXunshanStr(int index);

    // optional .PlayerGangItem gangInfo = 262;
    /**
     * <code>optional .PlayerGangItem gangInfo = 262;</code>
     *
     * <pre>
     * 玩家帮派信息
     * </pre>
     */
    boolean hasGangInfo();
    /**
     * <code>optional .PlayerGangItem gangInfo = 262;</code>
     *
     * <pre>
     * 玩家帮派信息
     * </pre>
     */
    myudfs.Common.PlayerGangItem getGangInfo();
    /**
     * <code>optional .PlayerGangItem gangInfo = 262;</code>
     *
     * <pre>
     * 玩家帮派信息
     * </pre>
     */
    myudfs.Common.PlayerGangItemOrBuilder getGangInfoOrBuilder();

    // optional bool hasDFBet = 263;
    /**
     * <code>optional bool hasDFBet = 263;</code>
     *
     * <pre>
     * 斗法是否已押注
     * </pre>
     */
    boolean hasHasDFBet();
    /**
     * <code>optional bool hasDFBet = 263;</code>
     *
     * <pre>
     * 斗法是否已押注
     * </pre>
     */
    boolean getHasDFBet();

    // repeated .MapItem gangExchange = 264;
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getGangExchangeList();
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    myudfs.Common.MapItem getGangExchange(int index);
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    int getGangExchangeCount();
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getGangExchangeOrBuilderList();
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getGangExchangeOrBuilder(
        int index);

    // optional int32 gangRefreshExchangeTimes = 265;
    /**
     * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
     *
     * <pre>
     * 帮派兑换刷新次数
     * </pre>
     */
    boolean hasGangRefreshExchangeTimes();
    /**
     * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
     *
     * <pre>
     * 帮派兑换刷新次数
     * </pre>
     */
    int getGangRefreshExchangeTimes();

    // optional .DFTeamItem dfTeamInfo = 266;
    /**
     * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
     *
     * <pre>
     * 斗法队伍信息
     * </pre>
     */
    boolean hasDfTeamInfo();
    /**
     * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
     *
     * <pre>
     * 斗法队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItem getDfTeamInfo();
    /**
     * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
     *
     * <pre>
     * 斗法队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItemOrBuilder getDfTeamInfoOrBuilder();

    // optional int32 vipDailyGiftBuyCount = 267;
    /**
     * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
     *
     * <pre>
     * 每日vip礼包的当日购买次数
     * </pre>
     */
    boolean hasVipDailyGiftBuyCount();
    /**
     * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
     *
     * <pre>
     * 每日vip礼包的当日购买次数
     * </pre>
     */
    int getVipDailyGiftBuyCount();

    // optional int32 trialsDFTimes = 268;
    /**
     * <code>optional int32 trialsDFTimes = 268;</code>
     *
     * <pre>
     * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
     * </pre>
     */
    boolean hasTrialsDFTimes();
    /**
     * <code>optional int32 trialsDFTimes = 268;</code>
     *
     * <pre>
     * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
     * </pre>
     */
    int getTrialsDFTimes();

    // optional int64 dfBetId = 269;
    /**
     * <code>optional int64 dfBetId = 269;</code>
     *
     * <pre>
     * 押注的玩家id
     * </pre>
     */
    boolean hasDfBetId();
    /**
     * <code>optional int64 dfBetId = 269;</code>
     *
     * <pre>
     * 押注的玩家id
     * </pre>
     */
    long getDfBetId();

    // optional .Xunxian xunxian = 270;
    /**
     * <code>optional .Xunxian xunxian = 270;</code>
     *
     * <pre>
     * 寻仙捉妖的相关信息
     * </pre>
     */
    boolean hasXunxian();
    /**
     * <code>optional .Xunxian xunxian = 270;</code>
     *
     * <pre>
     * 寻仙捉妖的相关信息
     * </pre>
     */
    myudfs.Common.Xunxian getXunxian();
    /**
     * <code>optional .Xunxian xunxian = 270;</code>
     *
     * <pre>
     * 寻仙捉妖的相关信息
     * </pre>
     */
    myudfs.Common.XunxianOrBuilder getXunxianOrBuilder();

    // optional int32 auctionType = 271;
    /**
     * <code>optional int32 auctionType = 271;</code>
     *
     * <pre>
     * 拍卖行限制类型 0:无限制 1:有限制
     * </pre>
     */
    boolean hasAuctionType();
    /**
     * <code>optional int32 auctionType = 271;</code>
     *
     * <pre>
     * 拍卖行限制类型 0:无限制 1:有限制
     * </pre>
     */
    int getAuctionType();

    // optional .SecurityCodeItem securityCodeItem = 272;
    /**
     * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
     *
     * <pre>
     * 安全码信息
     * </pre>
     */
    boolean hasSecurityCodeItem();
    /**
     * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
     *
     * <pre>
     * 安全码信息
     * </pre>
     */
    myudfs.Common.SecurityCodeItem getSecurityCodeItem();
    /**
     * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
     *
     * <pre>
     * 安全码信息
     * </pre>
     */
    myudfs.Common.SecurityCodeItemOrBuilder getSecurityCodeItemOrBuilder();

    // optional bool login1100 = 273;
    /**
     * <code>optional bool login1100 = 273;</code>
     *
     * <pre>
     * true:第一次登陆成功后获得的playerItem 1100
     * </pre>
     */
    boolean hasLogin1100();
    /**
     * <code>optional bool login1100 = 273;</code>
     *
     * <pre>
     * true:第一次登陆成功后获得的playerItem 1100
     * </pre>
     */
    boolean getLogin1100();

    // optional bool isShowDFInMainUI = 274;
    /**
     * <code>optional bool isShowDFInMainUI = 274;</code>
     *
     * <pre>
     * 是否在主ui显示斗法
     * </pre>
     */
    boolean hasIsShowDFInMainUI();
    /**
     * <code>optional bool isShowDFInMainUI = 274;</code>
     *
     * <pre>
     * 是否在主ui显示斗法
     * </pre>
     */
    boolean getIsShowDFInMainUI();

    // optional bool isVipUpByPlayerLv = 275;
    /**
     * <code>optional bool isVipUpByPlayerLv = 275;</code>
     *
     * <pre>
     * 是否当角色的等级到达指定等级时
     * </pre>
     */
    boolean hasIsVipUpByPlayerLv();
    /**
     * <code>optional bool isVipUpByPlayerLv = 275;</code>
     *
     * <pre>
     * 是否当角色的等级到达指定等级时
     * </pre>
     */
    boolean getIsVipUpByPlayerLv();

    // optional .HongbaoActivityMessage hongbaoActivitys = 276;
    /**
     * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
     *
     * <pre>
     * 红包活动数据
     * </pre>
     */
    boolean hasHongbaoActivitys();
    /**
     * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
     *
     * <pre>
     * 红包活动数据
     * </pre>
     */
    myudfs.Common.HongbaoActivityMessage getHongbaoActivitys();
    /**
     * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
     *
     * <pre>
     * 红包活动数据
     * </pre>
     */
    myudfs.Common.HongbaoActivityMessageOrBuilder getHongbaoActivitysOrBuilder();

    // optional bool isOpenedBoxEveryDay = 277;
    /**
     * <code>optional bool isOpenedBoxEveryDay = 277;</code>
     *
     * <pre>
     * 龙宫宝箱每天是不是打开了龙宫宝箱
     * </pre>
     */
    boolean hasIsOpenedBoxEveryDay();
    /**
     * <code>optional bool isOpenedBoxEveryDay = 277;</code>
     *
     * <pre>
     * 龙宫宝箱每天是不是打开了龙宫宝箱
     * </pre>
     */
    boolean getIsOpenedBoxEveryDay();

    // optional bool admobSwitch = 278;
    /**
     * <code>optional bool admobSwitch = 278;</code>
     *
     * <pre>
     * 客户端广告判断
     * </pre>
     */
    boolean hasAdmobSwitch();
    /**
     * <code>optional bool admobSwitch = 278;</code>
     *
     * <pre>
     * 客户端广告判断
     * </pre>
     */
    boolean getAdmobSwitch();

    // optional .ArenaTeamItem arenaTeamInfo = 280;
    /**
     * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
     *
     * <pre>
     * optional int32 baoKuTime=279;// 当前剩余次数
     * </pre>
     */
    boolean hasArenaTeamInfo();
    /**
     * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
     *
     * <pre>
     * optional int32 baoKuTime=279;// 当前剩余次数
     * </pre>
     */
    myudfs.Common.ArenaTeamItem getArenaTeamInfo();
    /**
     * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
     *
     * <pre>
     * optional int32 baoKuTime=279;// 当前剩余次数
     * </pre>
     */
    myudfs.Common.ArenaTeamItemOrBuilder getArenaTeamInfoOrBuilder();

    // optional int32 sectionGuideIndex = 281;
    /**
     * <code>optional int32 sectionGuideIndex = 281;</code>
     */
    boolean hasSectionGuideIndex();
    /**
     * <code>optional int32 sectionGuideIndex = 281;</code>
     */
    int getSectionGuideIndex();

    // optional int32 jiaoYiBuy = 282;
    /**
     * <code>optional int32 jiaoYiBuy = 282;</code>
     *
     * <pre>
     * 每日任务交易所购买
     * </pre>
     */
    boolean hasJiaoYiBuy();
    /**
     * <code>optional int32 jiaoYiBuy = 282;</code>
     *
     * <pre>
     * 每日任务交易所购买
     * </pre>
     */
    int getJiaoYiBuy();

    // optional int32 jiaoYiSale = 283;
    /**
     * <code>optional int32 jiaoYiSale = 283;</code>
     *
     * <pre>
     * 每日任务交易所出售
     * </pre>
     */
    boolean hasJiaoYiSale();
    /**
     * <code>optional int32 jiaoYiSale = 283;</code>
     *
     * <pre>
     * 每日任务交易所出售
     * </pre>
     */
    int getJiaoYiSale();

    // optional int32 dailyLongGongBox = 284;
    /**
     * <code>optional int32 dailyLongGongBox = 284;</code>
     *
     * <pre>
     * 每日任务开启龙宫宝箱
     * </pre>
     */
    boolean hasDailyLongGongBox();
    /**
     * <code>optional int32 dailyLongGongBox = 284;</code>
     *
     * <pre>
     * 每日任务开启龙宫宝箱
     * </pre>
     */
    int getDailyLongGongBox();

    // optional int32 dailyLiuDao = 285;
    /**
     * <code>optional int32 dailyLiuDao = 285;</code>
     *
     * <pre>
     * 每日任务参与轮回塔
     * </pre>
     */
    boolean hasDailyLiuDao();
    /**
     * <code>optional int32 dailyLiuDao = 285;</code>
     *
     * <pre>
     * 每日任务参与轮回塔
     * </pre>
     */
    int getDailyLiuDao();

    // optional .PlayerEscortItem escortItem = 286;
    /**
     * <code>optional .PlayerEscortItem escortItem = 286;</code>
     *
     * <pre>
     * 押镖信息
     * </pre>
     */
    boolean hasEscortItem();
    /**
     * <code>optional .PlayerEscortItem escortItem = 286;</code>
     *
     * <pre>
     * 押镖信息
     * </pre>
     */
    myudfs.Common.PlayerEscortItem getEscortItem();
    /**
     * <code>optional .PlayerEscortItem escortItem = 286;</code>
     *
     * <pre>
     * 押镖信息
     * </pre>
     */
    myudfs.Common.PlayerEscortItemOrBuilder getEscortItemOrBuilder();

    // optional .DFTeamItem escortTeamInfo = 287;
    /**
     * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
     *
     * <pre>
     * 押镖队伍信息,和队伍信息返回一致
     * </pre>
     */
    boolean hasEscortTeamInfo();
    /**
     * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
     *
     * <pre>
     * 押镖队伍信息,和队伍信息返回一致
     * </pre>
     */
    myudfs.Common.DFTeamItem getEscortTeamInfo();
    /**
     * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
     *
     * <pre>
     * 押镖队伍信息,和队伍信息返回一致
     * </pre>
     */
    myudfs.Common.DFTeamItemOrBuilder getEscortTeamInfoOrBuilder();

    // optional int32 position = 288;
    /**
     * <code>optional int32 position = 288;</code>
     *
     * <pre>
     * 帮派位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional int32 position = 288;</code>
     *
     * <pre>
     * 帮派位置
     * </pre>
     */
    int getPosition();

    // optional .DFTeamItem shenMoTeamItem = 289;
    /**
     * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
     *
     * <pre>
     * 神魔队伍信息
     * </pre>
     */
    boolean hasShenMoTeamItem();
    /**
     * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
     *
     * <pre>
     * 神魔队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItem getShenMoTeamItem();
    /**
     * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
     *
     * <pre>
     * 神魔队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItemOrBuilder getShenMoTeamItemOrBuilder();

    // optional .DFTeamItem pvpTeamItem = 290;
    /**
     * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
     *
     * <pre>
     * pvp队伍信息
     * </pre>
     */
    boolean hasPvpTeamItem();
    /**
     * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
     *
     * <pre>
     * pvp队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItem getPvpTeamItem();
    /**
     * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
     *
     * <pre>
     * pvp队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItemOrBuilder getPvpTeamItemOrBuilder();

    // optional .DFTeamItem fbTeamItem = 291;
    /**
     * <code>optional .DFTeamItem fbTeamItem = 291;</code>
     *
     * <pre>
     * 资源副本队伍信息
     * </pre>
     */
    boolean hasFbTeamItem();
    /**
     * <code>optional .DFTeamItem fbTeamItem = 291;</code>
     *
     * <pre>
     * 资源副本队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItem getFbTeamItem();
    /**
     * <code>optional .DFTeamItem fbTeamItem = 291;</code>
     *
     * <pre>
     * 资源副本队伍信息
     * </pre>
     */
    myudfs.Common.DFTeamItemOrBuilder getFbTeamItemOrBuilder();

    // optional int32 gangModifyNameTimes = 292;
    /**
     * <code>optional int32 gangModifyNameTimes = 292;</code>
     *
     * <pre>
     * 帮派改名次数
     * </pre>
     */
    boolean hasGangModifyNameTimes();
    /**
     * <code>optional int32 gangModifyNameTimes = 292;</code>
     *
     * <pre>
     * 帮派改名次数
     * </pre>
     */
    int getGangModifyNameTimes();

    // optional uint64 startTime_MultiExp = 293;
    /**
     * <code>optional uint64 startTime_MultiExp = 293;</code>
     *
     * <pre>
     * 双倍经验开始时间
     * </pre>
     */
    boolean hasStartTimeMultiExp();
    /**
     * <code>optional uint64 startTime_MultiExp = 293;</code>
     *
     * <pre>
     * 双倍经验开始时间
     * </pre>
     */
    long getStartTimeMultiExp();

    // optional uint64 endTime_MultiExp = 294;
    /**
     * <code>optional uint64 endTime_MultiExp = 294;</code>
     *
     * <pre>
     * 双倍经验结束时间
     * </pre>
     */
    boolean hasEndTimeMultiExp();
    /**
     * <code>optional uint64 endTime_MultiExp = 294;</code>
     *
     * <pre>
     * 双倍经验结束时间
     * </pre>
     */
    long getEndTimeMultiExp();

    // optional int32 rate = 295;
    /**
     * <code>optional int32 rate = 295;</code>
     *
     * <pre>
     *经验倍率
     * </pre>
     */
    boolean hasRate();
    /**
     * <code>optional int32 rate = 295;</code>
     *
     * <pre>
     *经验倍率
     * </pre>
     */
    int getRate();

    // optional int64 nextTime = 296;
    /**
     * <code>optional int64 nextTime = 296;</code>
     *
     * <pre>
     * 下次六道扫荡时间
     * </pre>
     */
    boolean hasNextTime();
    /**
     * <code>optional int64 nextTime = 296;</code>
     *
     * <pre>
     * 下次六道扫荡时间
     * </pre>
     */
    long getNextTime();

    // optional int32 liuDaoEnemyStartIndex = 297;
    /**
     * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
     *
     * <pre>
     * 六道扫荡开始关卡索引
     * </pre>
     */
    boolean hasLiuDaoEnemyStartIndex();
    /**
     * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
     *
     * <pre>
     * 六道扫荡开始关卡索引
     * </pre>
     */
    int getLiuDaoEnemyStartIndex();

    // optional int32 liuDaoEnemyEndIndex = 298;
    /**
     * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
     *
     * <pre>
     * 六道扫荡结束关卡索引
     * </pre>
     */
    boolean hasLiuDaoEnemyEndIndex();
    /**
     * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
     *
     * <pre>
     * 六道扫荡结束关卡索引
     * </pre>
     */
    int getLiuDaoEnemyEndIndex();

    // repeated int32 rewardIds = 299;
    /**
     * <code>repeated int32 rewardIds = 299;</code>
     *
     * <pre>
     * 当前扫荡奖励
     * </pre>
     */
    java.util.List<java.lang.Integer> getRewardIdsList();
    /**
     * <code>repeated int32 rewardIds = 299;</code>
     *
     * <pre>
     * 当前扫荡奖励
     * </pre>
     */
    int getRewardIdsCount();
    /**
     * <code>repeated int32 rewardIds = 299;</code>
     *
     * <pre>
     * 当前扫荡奖励
     * </pre>
     */
    int getRewardIds(int index);

    // optional int32 liuDaoSweepHaveReward = 300;
    /**
     * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
     *
     * <pre>
     * 六道扫荡可否领奖, 1有奖, 2没奖
     * </pre>
     */
    boolean hasLiuDaoSweepHaveReward();
    /**
     * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
     *
     * <pre>
     * 六道扫荡可否领奖, 1有奖, 2没奖
     * </pre>
     */
    int getLiuDaoSweepHaveReward();

    // repeated .PayReward exchangeItemReward = 301;
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    java.util.List<myudfs.Common.PayReward> 
        getExchangeItemRewardList();
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    myudfs.Common.PayReward getExchangeItemReward(int index);
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    int getExchangeItemRewardCount();
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    java.util.List<? extends myudfs.Common.PayRewardOrBuilder> 
        getExchangeItemRewardOrBuilderList();
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    myudfs.Common.PayRewardOrBuilder getExchangeItemRewardOrBuilder(
        int index);

    // optional int32 templeDayRemainSeekTimes = 302;
    /**
     * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
     *
     * <pre>
     * 神殿每日剩余探寻次数
     * </pre>
     */
    boolean hasTempleDayRemainSeekTimes();
    /**
     * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
     *
     * <pre>
     * 神殿每日剩余探寻次数
     * </pre>
     */
    int getTempleDayRemainSeekTimes();

    // optional .DFTeamItem templeTeam = 303;
    /**
     * <code>optional .DFTeamItem templeTeam = 303;</code>
     *
     * <pre>
     * 神殿队伍_无护法
     * </pre>
     */
    boolean hasTempleTeam();
    /**
     * <code>optional .DFTeamItem templeTeam = 303;</code>
     *
     * <pre>
     * 神殿队伍_无护法
     * </pre>
     */
    myudfs.Common.DFTeamItem getTempleTeam();
    /**
     * <code>optional .DFTeamItem templeTeam = 303;</code>
     *
     * <pre>
     * 神殿队伍_无护法
     * </pre>
     */
    myudfs.Common.DFTeamItemOrBuilder getTempleTeamOrBuilder();

    // repeated .DoubleReward doubleReward = 304;
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    java.util.List<myudfs.Common.DoubleReward> 
        getDoubleRewardList();
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    myudfs.Common.DoubleReward getDoubleReward(int index);
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    int getDoubleRewardCount();
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    java.util.List<? extends myudfs.Common.DoubleRewardOrBuilder> 
        getDoubleRewardOrBuilderList();
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    myudfs.Common.DoubleRewardOrBuilder getDoubleRewardOrBuilder(
        int index);

    // optional .YunyingActivity shenmoRankActivityReward = 305;
    /**
     * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
     */
    boolean hasShenmoRankActivityReward();
    /**
     * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
     */
    myudfs.Common.YunyingActivity getShenmoRankActivityReward();
    /**
     * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
     */
    myudfs.Common.YunyingActivityOrBuilder getShenmoRankActivityRewardOrBuilder();

    // optional .YunyingActivity arenaRankActivityReward = 306;
    /**
     * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
     */
    boolean hasArenaRankActivityReward();
    /**
     * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
     */
    myudfs.Common.YunyingActivity getArenaRankActivityReward();
    /**
     * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
     */
    myudfs.Common.YunyingActivityOrBuilder getArenaRankActivityRewardOrBuilder();

    // optional .YunyingActivity openBoxRankActivityReward = 307;
    /**
     * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
     */
    boolean hasOpenBoxRankActivityReward();
    /**
     * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
     */
    myudfs.Common.YunyingActivity getOpenBoxRankActivityReward();
    /**
     * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
     */
    myudfs.Common.YunyingActivityOrBuilder getOpenBoxRankActivityRewardOrBuilder();

    // repeated int64 templeCultivateCards = 308;
    /**
     * <code>repeated int64 templeCultivateCards = 308;</code>
     *
     * <pre>
     * 神殿已上阵修炼的卡牌列表
     * </pre>
     */
    java.util.List<java.lang.Long> getTempleCultivateCardsList();
    /**
     * <code>repeated int64 templeCultivateCards = 308;</code>
     *
     * <pre>
     * 神殿已上阵修炼的卡牌列表
     * </pre>
     */
    int getTempleCultivateCardsCount();
    /**
     * <code>repeated int64 templeCultivateCards = 308;</code>
     *
     * <pre>
     * 神殿已上阵修炼的卡牌列表
     * </pre>
     */
    long getTempleCultivateCards(int index);

    // optional int32 jingYanDanCostGold = 309;
    /**
     * <code>optional int32 jingYanDanCostGold = 309;</code>
     *
     * <pre>
     *转生使用元宝次数
     * </pre>
     */
    boolean hasJingYanDanCostGold();
    /**
     * <code>optional int32 jingYanDanCostGold = 309;</code>
     *
     * <pre>
     *转生使用元宝次数
     * </pre>
     */
    int getJingYanDanCostGold();

    // optional int32 cardExpDeclineNum = 310;
    /**
     * <code>optional int32 cardExpDeclineNum = 310;</code>
     */
    boolean hasCardExpDeclineNum();
    /**
     * <code>optional int32 cardExpDeclineNum = 310;</code>
     */
    int getCardExpDeclineNum();

    // optional int32 rankValue = 311;
    /**
     * <code>optional int32 rankValue = 311;</code>
     *
     * <pre>
     * 排行活动数值
     * </pre>
     */
    boolean hasRankValue();
    /**
     * <code>optional int32 rankValue = 311;</code>
     *
     * <pre>
     * 排行活动数值
     * </pre>
     */
    int getRankValue();

    // optional bool hasTempleEvent = 312;
    /**
     * <code>optional bool hasTempleEvent = 312;</code>
     *
     * <pre>
     * 是否有神殿事件
     * </pre>
     */
    boolean hasHasTempleEvent();
    /**
     * <code>optional bool hasTempleEvent = 312;</code>
     *
     * <pre>
     * 是否有神殿事件
     * </pre>
     */
    boolean getHasTempleEvent();

    // optional int32 redPacketId = 313;
    /**
     * <code>optional int32 redPacketId = 313;</code>
     *
     * <pre>
     *春节活动红包id
     * </pre>
     */
    boolean hasRedPacketId();
    /**
     * <code>optional int32 redPacketId = 313;</code>
     *
     * <pre>
     *春节活动红包id
     * </pre>
     */
    int getRedPacketId();

    // optional int32 redPacketNum = 314;
    /**
     * <code>optional int32 redPacketNum = 314;</code>
     *
     * <pre>
     * 春节活动红包数目
     * </pre>
     */
    boolean hasRedPacketNum();
    /**
     * <code>optional int32 redPacketNum = 314;</code>
     *
     * <pre>
     * 春节活动红包数目
     * </pre>
     */
    int getRedPacketNum();

    // optional .CustomPushItemMessage customPushItemMessage = 315;
    /**
     * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
     *
     * <pre>
     * 个性化推送
     * </pre>
     */
    boolean hasCustomPushItemMessage();
    /**
     * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
     *
     * <pre>
     * 个性化推送
     * </pre>
     */
    myudfs.Common.CustomPushItemMessage getCustomPushItemMessage();
    /**
     * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
     *
     * <pre>
     * 个性化推送
     * </pre>
     */
    myudfs.Common.CustomPushItemMessageOrBuilder getCustomPushItemMessageOrBuilder();

    // optional int32 zhuanPanNums = 316;
    /**
     * <code>optional int32 zhuanPanNums = 316;</code>
     *
     * <pre>
     * 本次活动周期已经转的次数
     * </pre>
     */
    boolean hasZhuanPanNums();
    /**
     * <code>optional int32 zhuanPanNums = 316;</code>
     *
     * <pre>
     * 本次活动周期已经转的次数
     * </pre>
     */
    int getZhuanPanNums();

    // repeated int32 zhuanPanOpenIds = 317;
    /**
     * <code>repeated int32 zhuanPanOpenIds = 317;</code>
     *
     * <pre>
     *已经开过的箱子
     * </pre>
     */
    java.util.List<java.lang.Integer> getZhuanPanOpenIdsList();
    /**
     * <code>repeated int32 zhuanPanOpenIds = 317;</code>
     *
     * <pre>
     *已经开过的箱子
     * </pre>
     */
    int getZhuanPanOpenIdsCount();
    /**
     * <code>repeated int32 zhuanPanOpenIds = 317;</code>
     *
     * <pre>
     *已经开过的箱子
     * </pre>
     */
    int getZhuanPanOpenIds(int index);
  }
  /**
   * Protobuf type {@code PlayerItem}
   *
   * <pre>
   *角色:玩家自己的详细信息
   * </pre>
   */
  public static final class PlayerItem extends
      com.google.protobuf.GeneratedMessage
      implements PlayerItemOrBuilder {
    // Use PlayerItem.newBuilder() to construct.
    private PlayerItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerItem defaultInstance;
    public static PlayerItem getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      int mutable_bitField3_ = 0;
      int mutable_bitField4_ = 0;
      int mutable_bitField5_ = 0;
      int mutable_bitField6_ = 0;
      int mutable_bitField7_ = 0;
      int mutable_bitField8_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lv_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              exp_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              daoXing_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              vip_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gold_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              shengWang_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              xianYuan_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              bagsUnlockGold_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              stamina_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              spirit_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00001000;
              friendsCost_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00002000;
              trainFreeRenew_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00004000;
              receiveStaminaNum_ = input.readInt64();
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                todayQuestNums_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x00008000;
              }
              todayQuestNums_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                todayQuestRestNums_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x00010000;
              }
              todayQuestRestNums_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 192: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                donateStamina_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              donateStamina_.add(input.readInt64());
              break;
            }
            case 194: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                donateStamina_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                donateStamina_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 200: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                receiveStamina_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00040000;
              }
              receiveStamina_.add(input.readInt64());
              break;
            }
            case 202: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                receiveStamina_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                receiveStamina_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 208: {
              bitField0_ |= 0x00008000;
              staminaDate_ = input.readUInt64();
              break;
            }
            case 216: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                friendId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00100000;
              }
              friendId_.add(input.readInt64());
              break;
            }
            case 218: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                friendId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                friendId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 224: {
              bitField0_ |= 0x00010000;
              loginDate_ = input.readUInt64();
              break;
            }
            case 232: {
              bitField0_ |= 0x00020000;
              onlineTime_ = input.readUInt64();
              break;
            }
            case 240: {
              bitField0_ |= 0x00040000;
              bagsUnlockGoldCd_ = input.readUInt64();
              break;
            }
            case 248: {
              bitField0_ |= 0x00080000;
              coin_ = input.readInt64();
              break;
            }
            case 258: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                moonStarItem_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x02000000;
              }
              moonStarItem_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 266: {
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                magicWeapons_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x04000000;
              }
              magicWeapons_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 290: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                drawCardDate_ = new java.util.ArrayList<myudfs.Common.MapDateItem>();
                mutable_bitField0_ |= 0x08000000;
              }
              drawCardDate_.add(input.readMessage(myudfs.Common.MapDateItem.PARSER, extensionRegistry));
              break;
            }
            case 296: {
              bitField0_ |= 0x00100000;
              firstPay_ = input.readInt32();
              break;
            }
            case 304: {
              if (!((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
                firstPayIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x20000000;
              }
              firstPayIds_.add(input.readInt32());
              break;
            }
            case 306: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x20000000) == 0x20000000) && input.getBytesUntilLimit() > 0) {
                firstPayIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x20000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstPayIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 312: {
              bitField0_ |= 0x00200000;
              spiritDate_ = input.readUInt64();
              break;
            }
            case 320: {
              bitField0_ |= 0x00400000;
              worshipTimes_ = input.readInt32();
              break;
            }
            case 328: {
              if (!((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
                worshipIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000001;
              }
              worshipIds_.add(input.readInt64());
              break;
            }
            case 330: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                worshipIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                worshipIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 336: {
              bitField0_ |= 0x00800000;
              gainRewardTime_ = input.readUInt64();
              break;
            }
            case 344: {
              if (!((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
                exchangeTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000004;
              }
              exchangeTimes_.add(input.readInt32());
              break;
            }
            case 346: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                exchangeTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                exchangeTimes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 352: {
              if (!((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
                mails_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000008;
              }
              mails_.add(input.readInt64());
              break;
            }
            case 354: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                mails_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                mails_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 360: {
              if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
                mailFinished_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000010;
              }
              mailFinished_.add(input.readInt64());
              break;
            }
            case 362: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                mailFinished_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                mailFinished_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 368: {
              if (!((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
                mailDeleted_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000020;
              }
              mailDeleted_.add(input.readInt64());
              break;
            }
            case 370: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                mailDeleted_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                mailDeleted_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 378: {
              if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
                pvpFightResult_ = new java.util.ArrayList<myudfs.Common.PvpFightResultItem>();
                mutable_bitField1_ |= 0x00000040;
              }
              pvpFightResult_.add(input.readMessage(myudfs.Common.PvpFightResultItem.PARSER, extensionRegistry));
              break;
            }
            case 384: {
              bitField0_ |= 0x01000000;
              buyStamina_ = input.readInt32();
              break;
            }
            case 392: {
              bitField0_ |= 0x02000000;
              buySpirit_ = input.readInt32();
              break;
            }
            case 400: {
              bitField0_ |= 0x04000000;
              pvpWins_ = input.readInt32();
              break;
            }
            case 426: {
              if (!((mutable_bitField1_ & 0x00000400) == 0x00000400)) {
                shopItems_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField1_ |= 0x00000400;
              }
              shopItems_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 432: {
              bitField0_ |= 0x08000000;
              loginDays_ = input.readInt32();
              break;
            }
            case 442: {
              if (!((mutable_bitField1_ & 0x00001000) == 0x00001000)) {
                missions_ = new java.util.ArrayList<myudfs.Common.MissionItem>();
                mutable_bitField1_ |= 0x00001000;
              }
              missions_.add(input.readMessage(myudfs.Common.MissionItem.PARSER, extensionRegistry));
              break;
            }
            case 448: {
              bitField0_ |= 0x10000000;
              silver_ = input.readInt64();
              break;
            }
            case 458: {
              if (!((mutable_bitField1_ & 0x00004000) == 0x00004000)) {
                cards_ = new java.util.ArrayList<myudfs.Common.CardItem>();
                mutable_bitField1_ |= 0x00004000;
              }
              cards_.add(input.readMessage(myudfs.Common.CardItem.PARSER, extensionRegistry));
              break;
            }
            case 464: {
              if (!((mutable_bitField1_ & 0x00008000) == 0x00008000)) {
                cardGroup_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00008000;
              }
              cardGroup_.add(input.readInt64());
              break;
            }
            case 466: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                cardGroup_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField1_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardGroup_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 474: {
              if (!((mutable_bitField1_ & 0x00010000) == 0x00010000)) {
                pieces_ = new java.util.ArrayList<myudfs.Common.PieceItem>();
                mutable_bitField1_ |= 0x00010000;
              }
              pieces_.add(input.readMessage(myudfs.Common.PieceItem.PARSER, extensionRegistry));
              break;
            }
            case 482: {
              if (!((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
                items_ = new java.util.ArrayList<myudfs.Common.Items>();
                mutable_bitField1_ |= 0x00020000;
              }
              items_.add(input.readMessage(myudfs.Common.Items.PARSER, extensionRegistry));
              break;
            }
            case 490: {
              if (!((mutable_bitField1_ & 0x00040000) == 0x00040000)) {
                hufas_ = new java.util.ArrayList<myudfs.Common.HuFaItem>();
                mutable_bitField1_ |= 0x00040000;
              }
              hufas_.add(input.readMessage(myudfs.Common.HuFaItem.PARSER, extensionRegistry));
              break;
            }
            case 498: {
              if (!((mutable_bitField1_ & 0x00080000) == 0x00080000)) {
                trains_ = new java.util.ArrayList<myudfs.Common.TrainItem>();
                mutable_bitField1_ |= 0x00080000;
              }
              trains_.add(input.readMessage(myudfs.Common.TrainItem.PARSER, extensionRegistry));
              break;
            }
            case 514: {
              if (!((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
                quests_ = new java.util.ArrayList<myudfs.Common.QuestItem>();
                mutable_bitField1_ |= 0x00100000;
              }
              quests_.add(input.readMessage(myudfs.Common.QuestItem.PARSER, extensionRegistry));
              break;
            }
            case 520: {
              if (!((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
                cardGroupFight_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00200000;
              }
              cardGroupFight_.add(input.readInt32());
              break;
            }
            case 522: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                cardGroupFight_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00200000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardGroupFight_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 528: {
              if (!((mutable_bitField1_ & 0x00400000) == 0x00400000)) {
                magicWeaponGroup_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00400000;
              }
              magicWeaponGroup_.add(input.readInt32());
              break;
            }
            case 530: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                magicWeaponGroup_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                magicWeaponGroup_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 544: {
              bitField0_ |= 0x20000000;
              rewardLastTime_ = input.readUInt64();
              break;
            }
            case 552: {
              if (!((mutable_bitField1_ & 0x01000000) == 0x01000000)) {
                pvpWinReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x01000000;
              }
              pvpWinReward_.add(input.readInt32());
              break;
            }
            case 554: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x01000000) == 0x01000000) && input.getBytesUntilLimit() > 0) {
                pvpWinReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x01000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                pvpWinReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 560: {
              if (!((mutable_bitField1_ & 0x02000000) == 0x02000000)) {
                loginReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x02000000;
              }
              loginReward_.add(input.readInt32());
              break;
            }
            case 562: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x02000000) == 0x02000000) && input.getBytesUntilLimit() > 0) {
                loginReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x02000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                loginReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 568: {
              if (!((mutable_bitField1_ & 0x04000000) == 0x04000000)) {
                pvpFightNumReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x04000000;
              }
              pvpFightNumReward_.add(input.readInt32());
              break;
            }
            case 570: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x04000000) == 0x04000000) && input.getBytesUntilLimit() > 0) {
                pvpFightNumReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x04000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                pvpFightNumReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 576: {
              if (!((mutable_bitField1_ & 0x08000000) == 0x08000000)) {
                drawCardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x08000000;
              }
              drawCardReward_.add(input.readInt32());
              break;
            }
            case 578: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x08000000) == 0x08000000) && input.getBytesUntilLimit() > 0) {
                drawCardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x08000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                drawCardReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 584: {
              bitField0_ |= 0x40000000;
              gainBuyStamina_ = input.readUInt64();
              break;
            }
            case 592: {
              bitField0_ |= 0x80000000;
              gainBuySpiritReward_ = input.readUInt64();
              break;
            }
            case 600: {
              if (!((mutable_bitField1_ & 0x40000000) == 0x40000000)) {
                gainQiuYuanReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x40000000;
              }
              gainQiuYuanReward_.add(input.readInt32());
              break;
            }
            case 602: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x40000000) == 0x40000000) && input.getBytesUntilLimit() > 0) {
                gainQiuYuanReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x40000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                gainQiuYuanReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 608: {
              if (!((mutable_bitField1_ & 0x80000000) == 0x80000000)) {
                gainLvUpReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x80000000;
              }
              gainLvUpReward_.add(input.readInt32());
              break;
            }
            case 610: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x80000000) == 0x80000000) && input.getBytesUntilLimit() > 0) {
                gainLvUpReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x80000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                gainLvUpReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 616: {
              if (!((mutable_bitField2_ & 0x00000001) == 0x00000001)) {
                gainChapterReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000001;
              }
              gainChapterReward_.add(input.readInt32());
              break;
            }
            case 618: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                gainChapterReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                gainChapterReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 632: {
              if (!((mutable_bitField2_ & 0x00000002) == 0x00000002)) {
                gainChapterStarReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000002;
              }
              gainChapterStarReward_.add(input.readInt32());
              break;
            }
            case 634: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                gainChapterStarReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                gainChapterStarReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 640: {
              if (!((mutable_bitField2_ & 0x00000004) == 0x00000004)) {
                gainFriendNumReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000004;
              }
              gainFriendNumReward_.add(input.readInt32());
              break;
            }
            case 642: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                gainFriendNumReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                gainFriendNumReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 648: {
              if (!((mutable_bitField2_ & 0x00000008) == 0x00000008)) {
                gainCardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000008;
              }
              gainCardReward_.add(input.readInt32());
              break;
            }
            case 650: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gainCardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gainCardReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 656: {
              if (!((mutable_bitField2_ & 0x00000010) == 0x00000010)) {
                gainItemReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000010;
              }
              gainItemReward_.add(input.readInt32());
              break;
            }
            case 658: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                gainItemReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                gainItemReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 664: {
              bitField1_ |= 0x00000001;
              gainEveryDayTili_ = input.readUInt64();
              break;
            }
            case 672: {
              bitField1_ |= 0x00000002;
              gainEveryDayGold_ = input.readUInt64();
              break;
            }
            case 680: {
              bitField1_ |= 0x00000004;
              receiveXianYuan_ = input.readInt32();
              break;
            }
            case 696: {
              bitField1_ |= 0x00000008;
              drawCardTimes_ = input.readInt32();
              break;
            }
            case 704: {
              bitField1_ |= 0x00000010;
              pvpFightWinNum_ = input.readInt32();
              break;
            }
            case 712: {
              bitField1_ |= 0x00000020;
              multiLoginDays_ = input.readInt32();
              break;
            }
            case 720: {
              bitField1_ |= 0x00000040;
              totalPayGold_ = input.readInt64();
              break;
            }
            case 728: {
              if (!((mutable_bitField2_ & 0x00001000) == 0x00001000)) {
                amountPaymentReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00001000;
              }
              amountPaymentReward_.add(input.readInt32());
              break;
            }
            case 730: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                amountPaymentReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                amountPaymentReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 746: {
              if (!((mutable_bitField2_ & 0x00002000) == 0x00002000)) {
                missionsDaily_ = new java.util.ArrayList<myudfs.Common.MissionItem>();
                mutable_bitField2_ |= 0x00002000;
              }
              missionsDaily_.add(input.readMessage(myudfs.Common.MissionItem.PARSER, extensionRegistry));
              break;
            }
            case 752: {
              bitField1_ |= 0x00000080;
              pvpNewFightFlag_ = input.readBool();
              break;
            }
            case 760: {
              bitField1_ |= 0x00000100;
              qiuyuan_ = input.readInt32();
              break;
            }
            case 768: {
              bitField1_ |= 0x00000200;
              qiuyuanGold_ = input.readInt32();
              break;
            }
            case 776: {
              bitField1_ |= 0x00000400;
              newMail_ = input.readBool();
              break;
            }
            case 784: {
              bitField1_ |= 0x00000800;
              pvpWinNum_ = input.readInt32();
              break;
            }
            case 792: {
              bitField1_ |= 0x00001000;
              firstPayReward_ = input.readBool();
              break;
            }
            case 800: {
              if (!((mutable_bitField2_ & 0x00100000) == 0x00100000)) {
                vipGifts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00100000;
              }
              vipGifts_.add(input.readInt32());
              break;
            }
            case 802: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                vipGifts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                vipGifts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 808: {
              bitField1_ |= 0x00002000;
              vipReward_ = input.readBool();
              break;
            }
            case 816: {
              bitField1_ |= 0x00004000;
              vipCard_ = input.readInt32();
              break;
            }
            case 826: {
              if (!((mutable_bitField2_ & 0x00800000) == 0x00800000)) {
                vipAllGift_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField2_ |= 0x00800000;
              }
              vipAllGift_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 832: {
              bitField1_ |= 0x00008000;
              guideIndex_ = input.readInt32();
              break;
            }
            case 840: {
              bitField1_ |= 0x00010000;
              isQianDao_ = input.readBool();
              break;
            }
            case 850: {
              myudfs.Common.MapItem.Builder subBuilder = null;
              if (((bitField1_ & 0x00020000) == 0x00020000)) {
                subBuilder = qianDao_.toBuilder();
              }
              qianDao_ = input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(qianDao_);
                qianDao_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00020000;
              break;
            }
            case 856: {
              bitField1_ |= 0x00040000;
              battleIndex_ = input.readInt32();
              break;
            }
            case 864: {
              bitField1_ |= 0x00080000;
              caishenCoinNum_ = input.readInt32();
              break;
            }
            case 872: {
              if (!((mutable_bitField2_ & 0x20000000) == 0x20000000)) {
                triggerGuideIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x20000000;
              }
              triggerGuideIndex_.add(input.readInt32());
              break;
            }
            case 874: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x20000000) == 0x20000000) && input.getBytesUntilLimit() > 0) {
                triggerGuideIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x20000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                triggerGuideIndex_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 880: {
              if (!((mutable_bitField2_ & 0x40000000) == 0x40000000)) {
                chapterEasyReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x40000000;
              }
              chapterEasyReward_.add(input.readInt32());
              break;
            }
            case 882: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x40000000) == 0x40000000) && input.getBytesUntilLimit() > 0) {
                chapterEasyReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x40000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                chapterEasyReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 888: {
              if (!((mutable_bitField2_ & 0x80000000) == 0x80000000)) {
                chapterNormalReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x80000000;
              }
              chapterNormalReward_.add(input.readInt32());
              break;
            }
            case 890: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField2_ & 0x80000000) == 0x80000000) && input.getBytesUntilLimit() > 0) {
                chapterNormalReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField2_ |= 0x80000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                chapterNormalReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 896: {
              if (!((mutable_bitField3_ & 0x00000001) == 0x00000001)) {
                chapterHardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000001;
              }
              chapterHardReward_.add(input.readInt32());
              break;
            }
            case 898: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                chapterHardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                chapterHardReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 904: {
              if (!((mutable_bitField3_ & 0x00000002) == 0x00000002)) {
                activityEasyReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000002;
              }
              activityEasyReward_.add(input.readInt32());
              break;
            }
            case 906: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                activityEasyReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                activityEasyReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 912: {
              bitField1_ |= 0x00100000;
              cardEffectNum_ = input.readInt32();
              break;
            }
            case 920: {
              if (!((mutable_bitField3_ & 0x00000008) == 0x00000008)) {
                baoXiangReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000008;
              }
              baoXiangReward_.add(input.readInt32());
              break;
            }
            case 922: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                baoXiangReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                baoXiangReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 928: {
              bitField1_ |= 0x00200000;
              newFriendInvite_ = input.readInt32();
              break;
            }
            case 936: {
              bitField1_ |= 0x00400000;
              yunyouRefreshTime_ = input.readInt64();
              break;
            }
            case 944: {
              if (!((mutable_bitField3_ & 0x00000040) == 0x00000040)) {
                yunyouItems_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000040;
              }
              yunyouItems_.add(input.readInt32());
              break;
            }
            case 946: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                yunyouItems_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                yunyouItems_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 952: {
              bitField1_ |= 0x00800000;
              lvReward_ = input.readInt32();
              break;
            }
            case 960: {
              bitField1_ |= 0x01000000;
              qiuBaoDate_ = input.readInt64();
              break;
            }
            case 968: {
              bitField1_ |= 0x02000000;
              qiuBaoTimes_ = input.readInt32();
              break;
            }
            case 978: {
              if (!((mutable_bitField3_ & 0x00000400) == 0x00000400)) {
                itemTask_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField3_ |= 0x00000400;
              }
              itemTask_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 986: {
              if (!((mutable_bitField3_ & 0x00000800) == 0x00000800)) {
                cardTask_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField3_ |= 0x00000800;
              }
              cardTask_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 992: {
              if (!((mutable_bitField3_ & 0x00001000) == 0x00001000)) {
                collectCardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00001000;
              }
              collectCardReward_.add(input.readInt32());
              break;
            }
            case 994: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                collectCardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                collectCardReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1000: {
              if (!((mutable_bitField3_ & 0x00002000) == 0x00002000)) {
                cardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00002000;
              }
              cardReward_.add(input.readInt32());
              break;
            }
            case 1002: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                cardReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1008: {
              if (!((mutable_bitField3_ & 0x00004000) == 0x00004000)) {
                itemReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00004000;
              }
              itemReward_.add(input.readInt32());
              break;
            }
            case 1010: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                itemReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1018: {
              if (!((mutable_bitField3_ & 0x00008000) == 0x00008000)) {
                vipNums_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField3_ |= 0x00008000;
              }
              vipNums_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 1024: {
              if (!((mutable_bitField3_ & 0x00010000) == 0x00010000)) {
                firstPayExtraIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00010000;
              }
              firstPayExtraIds_.add(input.readInt32());
              break;
            }
            case 1026: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                firstPayExtraIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstPayExtraIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1032: {
              bitField1_ |= 0x04000000;
              assetBundleState_ = input.readInt32();
              break;
            }
            case 1040: {
              bitField1_ |= 0x08000000;
              userId_ = input.readInt64();
              break;
            }
            case 1048: {
              bitField1_ |= 0x10000000;
              serverId_ = input.readInt32();
              break;
            }
            case 1058: {
              bitField1_ |= 0x20000000;
              username_ = input.readBytes();
              break;
            }
            case 1066: {
              if (!((mutable_bitField3_ & 0x00200000) == 0x00200000)) {
                pvpExchangeItems_ = new java.util.ArrayList<myudfs.Common.PvpExchangeItem>();
                mutable_bitField3_ |= 0x00200000;
              }
              pvpExchangeItems_.add(input.readMessage(myudfs.Common.PvpExchangeItem.PARSER, extensionRegistry));
              break;
            }
            case 1072: {
              bitField1_ |= 0x40000000;
              hunyu_ = input.readInt32();
              break;
            }
            case 1080: {
              if (!((mutable_bitField3_ & 0x00800000) == 0x00800000)) {
                firstDrawIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00800000;
              }
              firstDrawIds_.add(input.readInt32());
              break;
            }
            case 1082: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x00800000) == 0x00800000) && input.getBytesUntilLimit() > 0) {
                firstDrawIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x00800000;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstDrawIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1088: {
              bitField1_ |= 0x80000000;
              openDate_ = input.readUInt64();
              break;
            }
            case 1098: {
              if (!((mutable_bitField3_ & 0x02000000) == 0x02000000)) {
                todyTastePantaos_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField3_ |= 0x02000000;
              }
              todyTastePantaos_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 1104: {
              bitField2_ |= 0x00000001;
              battleScore_ = input.readInt32();
              break;
            }
            case 1112: {
              bitField2_ |= 0x00000002;
              lingLi_ = input.readInt32();
              break;
            }
            case 1120: {
              bitField2_ |= 0x00000004;
              buyLingli_ = input.readInt32();
              break;
            }
            case 1128: {
              bitField2_ |= 0x00000008;
              lingLiDate_ = input.readUInt64();
              break;
            }
            case 1208: {
              if (!((mutable_bitField3_ & 0x40000000) == 0x40000000)) {
                shenMoDuiHuan_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x40000000;
              }
              shenMoDuiHuan_.add(input.readInt32());
              break;
            }
            case 1210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x40000000) == 0x40000000) && input.getBytesUntilLimit() > 0) {
                shenMoDuiHuan_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x40000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                shenMoDuiHuan_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1216: {
              if (!((mutable_bitField3_ & 0x80000000) == 0x80000000)) {
                buyShenMoItem_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x80000000;
              }
              buyShenMoItem_.add(input.readInt32());
              break;
            }
            case 1218: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField3_ & 0x80000000) == 0x80000000) && input.getBytesUntilLimit() > 0) {
                buyShenMoItem_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField3_ |= 0x80000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                buyShenMoItem_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1224: {
              bitField2_ |= 0x00000010;
              xiuWei_ = input.readInt32();
              break;
            }
            case 1232: {
              bitField2_ |= 0x00000020;
              hasPvpReward_ = input.readBool();
              break;
            }
            case 1240: {
              bitField2_ |= 0x00000040;
              gongDe_ = input.readInt64();
              break;
            }
            case 1248: {
              if (!((mutable_bitField4_ & 0x00000008) == 0x00000008)) {
                gongDeReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField4_ |= 0x00000008;
              }
              gongDeReward_.add(input.readInt32());
              break;
            }
            case 1250: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField4_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gongDeReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField4_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gongDeReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1256: {
              bitField2_ |= 0x00000080;
              rankRise_ = input.readInt32();
              break;
            }
            case 1264: {
              bitField2_ |= 0x00000100;
              rank_ = input.readInt64();
              break;
            }
            case 1274: {
              if (!((mutable_bitField4_ & 0x00000040) == 0x00000040)) {
                drawCard_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField4_ |= 0x00000040;
              }
              drawCard_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 1280: {
              bitField2_ |= 0x00000200;
              hufaOpen_ = input.readBool();
              break;
            }
            case 1288: {
              bitField2_ |= 0x00000400;
              caishenSilverNum_ = input.readInt32();
              break;
            }
            case 1296: {
              bitField2_ |= 0x00000800;
              drawCardReward2_ = input.readBool();
              break;
            }
            case 1306: {
              if (!((mutable_bitField4_ & 0x00000400) == 0x00000400)) {
                playerPrefs_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField4_ |= 0x00000400;
              }
              playerPrefs_.add(input.readBytes());
              break;
            }
            case 1314: {
              if (!((mutable_bitField4_ & 0x00000800) == 0x00000800)) {
                missionMap_ = new java.util.ArrayList<myudfs.Common.DaliyMissionItem>();
                mutable_bitField4_ |= 0x00000800;
              }
              missionMap_.add(input.readMessage(myudfs.Common.DaliyMissionItem.PARSER, extensionRegistry));
              break;
            }
            case 1320: {
              bitField2_ |= 0x00001000;
              missionNum_ = input.readInt32();
              break;
            }
            case 1328: {
              bitField2_ |= 0x00002000;
              yunyouNum_ = input.readInt32();
              break;
            }
            case 1336: {
              bitField2_ |= 0x00004000;
              pvpExchangeNum_ = input.readInt32();
              break;
            }
            case 1344: {
              bitField2_ |= 0x00008000;
              friendNum_ = input.readInt32();
              break;
            }
            case 1368: {
              bitField2_ |= 0x00010000;
              clearShenMoItem_ = input.readBool();
              break;
            }
            case 1376: {
              bitField2_ |= 0x00020000;
              refreshHour24_ = input.readBool();
              break;
            }
            case 1384: {
              bitField2_ |= 0x00040000;
              pay_ = input.readBool();
              break;
            }
            case 1392: {
              bitField2_ |= 0x00080000;
              isShutUp_ = input.readBool();
              break;
            }
            case 1400: {
              bitField2_ |= 0x00100000;
              shutUpDate_ = input.readUInt64();
              break;
            }
            case 1408: {
              bitField2_ |= 0x00200000;
              shutUpEnd_ = input.readUInt64();
              break;
            }
            case 1418: {
              if (!((mutable_bitField4_ & 0x00400000) == 0x00400000)) {
                activityItem_ = new java.util.ArrayList<myudfs.Common.ActivityItem>();
                mutable_bitField4_ |= 0x00400000;
              }
              activityItem_.add(input.readMessage(myudfs.Common.ActivityItem.PARSER, extensionRegistry));
              break;
            }
            case 1426: {
              if (!((mutable_bitField4_ & 0x00800000) == 0x00800000)) {
                payReward_ = new java.util.ArrayList<myudfs.Common.PayReward>();
                mutable_bitField4_ |= 0x00800000;
              }
              payReward_.add(input.readMessage(myudfs.Common.PayReward.PARSER, extensionRegistry));
              break;
            }
            case 1432: {
              bitField2_ |= 0x00400000;
              yunYouTime_ = input.readInt32();
              break;
            }
            case 1440: {
              bitField2_ |= 0x00800000;
              pvpChangeTime_ = input.readInt32();
              break;
            }
            case 1448: {
              bitField2_ |= 0x01000000;
              shenMoChangeTime_ = input.readInt32();
              break;
            }
            case 1456: {
              bitField2_ |= 0x02000000;
              shenMoNum_ = input.readInt32();
              break;
            }
            case 1464: {
              bitField2_ |= 0x04000000;
              itemLvUpNum_ = input.readInt32();
              break;
            }
            case 1472: {
              bitField2_ |= 0x08000000;
              cardLvUpNum_ = input.readInt32();
              break;
            }
            case 1480: {
              bitField2_ |= 0x10000000;
              shenTongNum_ = input.readInt32();
              break;
            }
            case 1488: {
              bitField2_ |= 0x20000000;
              skillNum_ = input.readInt32();
              break;
            }
            case 1496: {
              bitField2_ |= 0x40000000;
              huFaNum_ = input.readInt32();
              break;
            }
            case 1504: {
              bitField2_ |= 0x80000000;
              xiuLianNum_ = input.readInt32();
              break;
            }
            case 1512: {
              bitField3_ |= 0x00000001;
              changeName_ = input.readInt32();
              break;
            }
            case 1520: {
              if (!((mutable_bitField5_ & 0x00000008) == 0x00000008)) {
                chengjiuReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x00000008;
              }
              chengjiuReward_.add(input.readInt32());
              break;
            }
            case 1522: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField5_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                chengjiuReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                chengjiuReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1528: {
              bitField3_ |= 0x00000002;
              fenXiangRewardTimes_ = input.readInt32();
              break;
            }
            case 1536: {
              bitField3_ |= 0x00000004;
              weiXinFirstShare_ = input.readBool();
              break;
            }
            case 1544: {
              bitField3_ |= 0x00000008;
              weiXinOpen_ = input.readBool();
              break;
            }
            case 1552: {
              bitField3_ |= 0x00000010;
              xilianOpen_ = input.readBool();
              break;
            }
            case 1560: {
              bitField3_ |= 0x00000020;
              pvpWinMax_ = input.readInt32();
              break;
            }
            case 1570: {
              bitField3_ |= 0x00000040;
              inviteCode_ = input.readBytes();
              break;
            }
            case 1576: {
              bitField3_ |= 0x00000080;
              inviteNum_ = input.readInt32();
              break;
            }
            case 1584: {
              bitField3_ |= 0x00000100;
              inviterId_ = input.readInt64();
              break;
            }
            case 1592: {
              bitField3_ |= 0x00000200;
              clearFirstPayExtraIds_ = input.readBool();
              break;
            }
            case 1602: {
              myudfs.Common.MapItem3.Builder subBuilder = null;
              if (((bitField3_ & 0x00000400) == 0x00000400)) {
                subBuilder = loginActivity_.toBuilder();
              }
              loginActivity_ = input.readMessage(myudfs.Common.MapItem3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loginActivity_);
                loginActivity_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000400;
              break;
            }
            case 1608: {
              bitField3_ |= 0x00000800;
              choukaQuan_ = input.readInt32();
              break;
            }
            case 1648: {
              bitField3_ |= 0x00001000;
              shenJiangScore_ = input.readInt32();
              break;
            }
            case 1656: {
              bitField3_ |= 0x00002000;
              shenJiangTotalScore_ = input.readInt32();
              break;
            }
            case 1664: {
              bitField3_ |= 0x00004000;
              shenJiangRank_ = input.readInt32();
              break;
            }
            case 1672: {
              if (!((mutable_bitField5_ & 0x00040000) == 0x00040000)) {
                inviteNumReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x00040000;
              }
              inviteNumReward_.add(input.readInt32());
              break;
            }
            case 1674: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField5_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                inviteNumReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                inviteNumReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1682: {
              if (!((mutable_bitField5_ & 0x00080000) == 0x00080000)) {
                yuanshenBox_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField5_ |= 0x00080000;
              }
              yuanshenBox_.add(input.readBytes());
              break;
            }
            case 1690: {
              if (!((mutable_bitField5_ & 0x00100000) == 0x00100000)) {
                boxs_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField5_ |= 0x00100000;
              }
              boxs_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 1698: {
              if (!((mutable_bitField5_ & 0x00200000) == 0x00200000)) {
                buyBox_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField5_ |= 0x00200000;
              }
              buyBox_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 1704: {
              bitField3_ |= 0x00008000;
              zhuanpan_ = input.readInt32();
              break;
            }
            case 1712: {
              if (!((mutable_bitField5_ & 0x00800000) == 0x00800000)) {
                sevenReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x00800000;
              }
              sevenReward_.add(input.readInt32());
              break;
            }
            case 1714: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField5_ & 0x00800000) == 0x00800000) && input.getBytesUntilLimit() > 0) {
                sevenReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x00800000;
              }
              while (input.getBytesUntilLimit() > 0) {
                sevenReward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1720: {
              if (!((mutable_bitField5_ & 0x01000000) == 0x01000000)) {
                playerNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x01000000;
              }
              playerNum_.add(input.readInt32());
              break;
            }
            case 1722: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField5_ & 0x01000000) == 0x01000000) && input.getBytesUntilLimit() > 0) {
                playerNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x01000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1728: {
              if (!((mutable_bitField5_ & 0x02000000) == 0x02000000)) {
                rewardId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x02000000;
              }
              rewardId_.add(input.readInt32());
              break;
            }
            case 1730: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField5_ & 0x02000000) == 0x02000000) && input.getBytesUntilLimit() > 0) {
                rewardId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x02000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                rewardId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1736: {
              bitField3_ |= 0x00010000;
              inviteReward_ = input.readBool();
              break;
            }
            case 1744: {
              bitField3_ |= 0x00020000;
              lingHun_ = input.readInt64();
              break;
            }
            case 1752: {
              if (!((mutable_bitField5_ & 0x10000000) == 0x10000000)) {
                liuDaoDuiHuanIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x10000000;
              }
              liuDaoDuiHuanIds_.add(input.readInt32());
              break;
            }
            case 1754: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField5_ & 0x10000000) == 0x10000000) && input.getBytesUntilLimit() > 0) {
                liuDaoDuiHuanIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x10000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                liuDaoDuiHuanIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1760: {
              if (!((mutable_bitField5_ & 0x20000000) == 0x20000000)) {
                liuDaoDuiHuanIdsBuyed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x20000000;
              }
              liuDaoDuiHuanIdsBuyed_.add(input.readInt32());
              break;
            }
            case 1762: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField5_ & 0x20000000) == 0x20000000) && input.getBytesUntilLimit() > 0) {
                liuDaoDuiHuanIdsBuyed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField5_ |= 0x20000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                liuDaoDuiHuanIdsBuyed_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1768: {
              bitField3_ |= 0x00040000;
              liuDaoChangeTime_ = input.readInt32();
              break;
            }
            case 1776: {
              bitField3_ |= 0x00080000;
              liuDaoBaoXiangOpenNum_ = input.readInt32();
              break;
            }
            case 1808: {
              bitField3_ |= 0x00100000;
              vipCardAllLift_ = input.readInt32();
              break;
            }
            case 1816: {
              bitField3_ |= 0x00200000;
              vipAllLifeReward_ = input.readBool();
              break;
            }
            case 1824: {
              if (!((mutable_bitField6_ & 0x00000004) == 0x00000004)) {
                cardGroupLiuDao_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField6_ |= 0x00000004;
              }
              cardGroupLiuDao_.add(input.readInt64());
              break;
            }
            case 1826: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField6_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardGroupLiuDao_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField6_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardGroupLiuDao_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 1832: {
              if (!((mutable_bitField6_ & 0x00000008) == 0x00000008)) {
                cardGroupFightLiuDao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField6_ |= 0x00000008;
              }
              cardGroupFightLiuDao_.add(input.readInt32());
              break;
            }
            case 1834: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField6_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardGroupFightLiuDao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField6_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardGroupFightLiuDao_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 1842: {
              if (!((mutable_bitField6_ & 0x00000010) == 0x00000010)) {
                drawCardFree_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField6_ |= 0x00000010;
              }
              drawCardFree_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 1848: {
              bitField3_ |= 0x00400000;
              liudaoEnterHeroLimit_ = input.readInt32();
              break;
            }
            case 1856: {
              bitField3_ |= 0x00800000;
              todayQuestNum_ = input.readInt32();
              break;
            }
            case 1864: {
              bitField3_ |= 0x01000000;
              cardId_ = input.readInt32();
              break;
            }
            case 1872: {
              bitField3_ |= 0x02000000;
              enterLiuDaoTimes_ = input.readInt32();
              break;
            }
            case 1880: {
              bitField3_ |= 0x04000000;
              xunshan_ = input.readInt32();
              break;
            }
            case 1888: {
              bitField3_ |= 0x08000000;
              dailyLeftTimes_ = input.readInt32();
              break;
            }
            case 2056: {
              bitField3_ |= 0x10000000;
              dailyBuyTimes_ = input.readInt32();
              break;
            }
            case 2064: {
              bitField3_ |= 0x20000000;
              nextCDTime_ = input.readInt64();
              break;
            }
            case 2072: {
              bitField3_ |= 0x40000000;
              shouHuId_ = input.readInt32();
              break;
            }
            case 2080: {
              bitField3_ |= 0x80000000;
              cancelCDTimes_ = input.readInt32();
              break;
            }
            case 2088: {
              if (!((mutable_bitField6_ & 0x00008000) == 0x00008000)) {
                xunshanStr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField6_ |= 0x00008000;
              }
              xunshanStr_.add(input.readInt32());
              break;
            }
            case 2090: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField6_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                xunshanStr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField6_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                xunshanStr_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 2098: {
              myudfs.Common.PlayerGangItem.Builder subBuilder = null;
              if (((bitField4_ & 0x00000001) == 0x00000001)) {
                subBuilder = gangInfo_.toBuilder();
              }
              gangInfo_ = input.readMessage(myudfs.Common.PlayerGangItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gangInfo_);
                gangInfo_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00000001;
              break;
            }
            case 2104: {
              bitField4_ |= 0x00000002;
              hasDFBet_ = input.readBool();
              break;
            }
            case 2114: {
              if (!((mutable_bitField6_ & 0x00040000) == 0x00040000)) {
                gangExchange_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField6_ |= 0x00040000;
              }
              gangExchange_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 2120: {
              bitField4_ |= 0x00000004;
              gangRefreshExchangeTimes_ = input.readInt32();
              break;
            }
            case 2130: {
              myudfs.Common.DFTeamItem.Builder subBuilder = null;
              if (((bitField4_ & 0x00000008) == 0x00000008)) {
                subBuilder = dfTeamInfo_.toBuilder();
              }
              dfTeamInfo_ = input.readMessage(myudfs.Common.DFTeamItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dfTeamInfo_);
                dfTeamInfo_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00000008;
              break;
            }
            case 2136: {
              bitField4_ |= 0x00000010;
              vipDailyGiftBuyCount_ = input.readInt32();
              break;
            }
            case 2144: {
              bitField4_ |= 0x00000020;
              trialsDFTimes_ = input.readInt32();
              break;
            }
            case 2152: {
              bitField4_ |= 0x00000040;
              dfBetId_ = input.readInt64();
              break;
            }
            case 2162: {
              myudfs.Common.Xunxian.Builder subBuilder = null;
              if (((bitField4_ & 0x00000080) == 0x00000080)) {
                subBuilder = xunxian_.toBuilder();
              }
              xunxian_ = input.readMessage(myudfs.Common.Xunxian.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(xunxian_);
                xunxian_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00000080;
              break;
            }
            case 2168: {
              bitField4_ |= 0x00000100;
              auctionType_ = input.readInt32();
              break;
            }
            case 2178: {
              myudfs.Common.SecurityCodeItem.Builder subBuilder = null;
              if (((bitField4_ & 0x00000200) == 0x00000200)) {
                subBuilder = securityCodeItem_.toBuilder();
              }
              securityCodeItem_ = input.readMessage(myudfs.Common.SecurityCodeItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(securityCodeItem_);
                securityCodeItem_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00000200;
              break;
            }
            case 2184: {
              bitField4_ |= 0x00000400;
              login1100_ = input.readBool();
              break;
            }
            case 2192: {
              bitField4_ |= 0x00000800;
              isShowDFInMainUI_ = input.readBool();
              break;
            }
            case 2200: {
              bitField4_ |= 0x00001000;
              isVipUpByPlayerLv_ = input.readBool();
              break;
            }
            case 2210: {
              myudfs.Common.HongbaoActivityMessage.Builder subBuilder = null;
              if (((bitField4_ & 0x00002000) == 0x00002000)) {
                subBuilder = hongbaoActivitys_.toBuilder();
              }
              hongbaoActivitys_ = input.readMessage(myudfs.Common.HongbaoActivityMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hongbaoActivitys_);
                hongbaoActivitys_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00002000;
              break;
            }
            case 2216: {
              bitField4_ |= 0x00004000;
              isOpenedBoxEveryDay_ = input.readBool();
              break;
            }
            case 2224: {
              bitField4_ |= 0x00008000;
              admobSwitch_ = input.readBool();
              break;
            }
            case 2242: {
              myudfs.Common.ArenaTeamItem.Builder subBuilder = null;
              if (((bitField4_ & 0x00010000) == 0x00010000)) {
                subBuilder = arenaTeamInfo_.toBuilder();
              }
              arenaTeamInfo_ = input.readMessage(myudfs.Common.ArenaTeamItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(arenaTeamInfo_);
                arenaTeamInfo_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00010000;
              break;
            }
            case 2248: {
              bitField4_ |= 0x00020000;
              sectionGuideIndex_ = input.readInt32();
              break;
            }
            case 2256: {
              bitField4_ |= 0x00040000;
              jiaoYiBuy_ = input.readInt32();
              break;
            }
            case 2264: {
              bitField4_ |= 0x00080000;
              jiaoYiSale_ = input.readInt32();
              break;
            }
            case 2272: {
              bitField4_ |= 0x00100000;
              dailyLongGongBox_ = input.readInt32();
              break;
            }
            case 2280: {
              bitField4_ |= 0x00200000;
              dailyLiuDao_ = input.readInt32();
              break;
            }
            case 2290: {
              myudfs.Common.PlayerEscortItem.Builder subBuilder = null;
              if (((bitField4_ & 0x00400000) == 0x00400000)) {
                subBuilder = escortItem_.toBuilder();
              }
              escortItem_ = input.readMessage(myudfs.Common.PlayerEscortItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(escortItem_);
                escortItem_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00400000;
              break;
            }
            case 2298: {
              myudfs.Common.DFTeamItem.Builder subBuilder = null;
              if (((bitField4_ & 0x00800000) == 0x00800000)) {
                subBuilder = escortTeamInfo_.toBuilder();
              }
              escortTeamInfo_ = input.readMessage(myudfs.Common.DFTeamItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(escortTeamInfo_);
                escortTeamInfo_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x00800000;
              break;
            }
            case 2304: {
              bitField4_ |= 0x01000000;
              position_ = input.readInt32();
              break;
            }
            case 2314: {
              myudfs.Common.DFTeamItem.Builder subBuilder = null;
              if (((bitField4_ & 0x02000000) == 0x02000000)) {
                subBuilder = shenMoTeamItem_.toBuilder();
              }
              shenMoTeamItem_ = input.readMessage(myudfs.Common.DFTeamItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shenMoTeamItem_);
                shenMoTeamItem_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x02000000;
              break;
            }
            case 2322: {
              myudfs.Common.DFTeamItem.Builder subBuilder = null;
              if (((bitField4_ & 0x04000000) == 0x04000000)) {
                subBuilder = pvpTeamItem_.toBuilder();
              }
              pvpTeamItem_ = input.readMessage(myudfs.Common.DFTeamItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pvpTeamItem_);
                pvpTeamItem_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x04000000;
              break;
            }
            case 2330: {
              myudfs.Common.DFTeamItem.Builder subBuilder = null;
              if (((bitField4_ & 0x08000000) == 0x08000000)) {
                subBuilder = fbTeamItem_.toBuilder();
              }
              fbTeamItem_ = input.readMessage(myudfs.Common.DFTeamItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fbTeamItem_);
                fbTeamItem_ = subBuilder.buildPartial();
              }
              bitField4_ |= 0x08000000;
              break;
            }
            case 2336: {
              bitField4_ |= 0x10000000;
              gangModifyNameTimes_ = input.readInt32();
              break;
            }
            case 2344: {
              bitField4_ |= 0x20000000;
              startTimeMultiExp_ = input.readUInt64();
              break;
            }
            case 2352: {
              bitField4_ |= 0x40000000;
              endTimeMultiExp_ = input.readUInt64();
              break;
            }
            case 2360: {
              bitField4_ |= 0x80000000;
              rate_ = input.readInt32();
              break;
            }
            case 2368: {
              bitField5_ |= 0x00000001;
              nextTime_ = input.readInt64();
              break;
            }
            case 2376: {
              bitField5_ |= 0x00000002;
              liuDaoEnemyStartIndex_ = input.readInt32();
              break;
            }
            case 2384: {
              bitField5_ |= 0x00000004;
              liuDaoEnemyEndIndex_ = input.readInt32();
              break;
            }
            case 2392: {
              if (!((mutable_bitField7_ & 0x00100000) == 0x00100000)) {
                rewardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField7_ |= 0x00100000;
              }
              rewardIds_.add(input.readInt32());
              break;
            }
            case 2394: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField7_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                rewardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField7_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                rewardIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 2400: {
              bitField5_ |= 0x00000008;
              liuDaoSweepHaveReward_ = input.readInt32();
              break;
            }
            case 2410: {
              if (!((mutable_bitField7_ & 0x00400000) == 0x00400000)) {
                exchangeItemReward_ = new java.util.ArrayList<myudfs.Common.PayReward>();
                mutable_bitField7_ |= 0x00400000;
              }
              exchangeItemReward_.add(input.readMessage(myudfs.Common.PayReward.PARSER, extensionRegistry));
              break;
            }
            case 2416: {
              bitField5_ |= 0x00000010;
              templeDayRemainSeekTimes_ = input.readInt32();
              break;
            }
            case 2426: {
              myudfs.Common.DFTeamItem.Builder subBuilder = null;
              if (((bitField5_ & 0x00000020) == 0x00000020)) {
                subBuilder = templeTeam_.toBuilder();
              }
              templeTeam_ = input.readMessage(myudfs.Common.DFTeamItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(templeTeam_);
                templeTeam_ = subBuilder.buildPartial();
              }
              bitField5_ |= 0x00000020;
              break;
            }
            case 2434: {
              if (!((mutable_bitField7_ & 0x02000000) == 0x02000000)) {
                doubleReward_ = new java.util.ArrayList<myudfs.Common.DoubleReward>();
                mutable_bitField7_ |= 0x02000000;
              }
              doubleReward_.add(input.readMessage(myudfs.Common.DoubleReward.PARSER, extensionRegistry));
              break;
            }
            case 2442: {
              myudfs.Common.YunyingActivity.Builder subBuilder = null;
              if (((bitField5_ & 0x00000040) == 0x00000040)) {
                subBuilder = shenmoRankActivityReward_.toBuilder();
              }
              shenmoRankActivityReward_ = input.readMessage(myudfs.Common.YunyingActivity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shenmoRankActivityReward_);
                shenmoRankActivityReward_ = subBuilder.buildPartial();
              }
              bitField5_ |= 0x00000040;
              break;
            }
            case 2450: {
              myudfs.Common.YunyingActivity.Builder subBuilder = null;
              if (((bitField5_ & 0x00000080) == 0x00000080)) {
                subBuilder = arenaRankActivityReward_.toBuilder();
              }
              arenaRankActivityReward_ = input.readMessage(myudfs.Common.YunyingActivity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(arenaRankActivityReward_);
                arenaRankActivityReward_ = subBuilder.buildPartial();
              }
              bitField5_ |= 0x00000080;
              break;
            }
            case 2458: {
              myudfs.Common.YunyingActivity.Builder subBuilder = null;
              if (((bitField5_ & 0x00000100) == 0x00000100)) {
                subBuilder = openBoxRankActivityReward_.toBuilder();
              }
              openBoxRankActivityReward_ = input.readMessage(myudfs.Common.YunyingActivity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(openBoxRankActivityReward_);
                openBoxRankActivityReward_ = subBuilder.buildPartial();
              }
              bitField5_ |= 0x00000100;
              break;
            }
            case 2464: {
              if (!((mutable_bitField7_ & 0x20000000) == 0x20000000)) {
                templeCultivateCards_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField7_ |= 0x20000000;
              }
              templeCultivateCards_.add(input.readInt64());
              break;
            }
            case 2466: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField7_ & 0x20000000) == 0x20000000) && input.getBytesUntilLimit() > 0) {
                templeCultivateCards_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField7_ |= 0x20000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                templeCultivateCards_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 2472: {
              bitField5_ |= 0x00000200;
              jingYanDanCostGold_ = input.readInt32();
              break;
            }
            case 2480: {
              bitField5_ |= 0x00000400;
              cardExpDeclineNum_ = input.readInt32();
              break;
            }
            case 2488: {
              bitField5_ |= 0x00000800;
              rankValue_ = input.readInt32();
              break;
            }
            case 2496: {
              bitField5_ |= 0x00001000;
              hasTempleEvent_ = input.readBool();
              break;
            }
            case 2504: {
              bitField5_ |= 0x00002000;
              redPacketId_ = input.readInt32();
              break;
            }
            case 2512: {
              bitField5_ |= 0x00004000;
              redPacketNum_ = input.readInt32();
              break;
            }
            case 2522: {
              myudfs.Common.CustomPushItemMessage.Builder subBuilder = null;
              if (((bitField5_ & 0x00008000) == 0x00008000)) {
                subBuilder = customPushItemMessage_.toBuilder();
              }
              customPushItemMessage_ = input.readMessage(myudfs.Common.CustomPushItemMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(customPushItemMessage_);
                customPushItemMessage_ = subBuilder.buildPartial();
              }
              bitField5_ |= 0x00008000;
              break;
            }
            case 2528: {
              bitField5_ |= 0x00010000;
              zhuanPanNums_ = input.readInt32();
              break;
            }
            case 2536: {
              if (!((mutable_bitField8_ & 0x00000040) == 0x00000040)) {
                zhuanPanOpenIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField8_ |= 0x00000040;
              }
              zhuanPanOpenIds_.add(input.readInt32());
              break;
            }
            case 2538: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField8_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                zhuanPanOpenIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField8_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                zhuanPanOpenIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          todayQuestNums_ = java.util.Collections.unmodifiableList(todayQuestNums_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          todayQuestRestNums_ = java.util.Collections.unmodifiableList(todayQuestRestNums_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          donateStamina_ = java.util.Collections.unmodifiableList(donateStamina_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          receiveStamina_ = java.util.Collections.unmodifiableList(receiveStamina_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          friendId_ = java.util.Collections.unmodifiableList(friendId_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          moonStarItem_ = java.util.Collections.unmodifiableList(moonStarItem_);
        }
        if (((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
          magicWeapons_ = java.util.Collections.unmodifiableList(magicWeapons_);
        }
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          drawCardDate_ = java.util.Collections.unmodifiableList(drawCardDate_);
        }
        if (((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
          firstPayIds_ = java.util.Collections.unmodifiableList(firstPayIds_);
        }
        if (((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
          worshipIds_ = java.util.Collections.unmodifiableList(worshipIds_);
        }
        if (((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
          exchangeTimes_ = java.util.Collections.unmodifiableList(exchangeTimes_);
        }
        if (((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
          mails_ = java.util.Collections.unmodifiableList(mails_);
        }
        if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
          mailFinished_ = java.util.Collections.unmodifiableList(mailFinished_);
        }
        if (((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
          mailDeleted_ = java.util.Collections.unmodifiableList(mailDeleted_);
        }
        if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
          pvpFightResult_ = java.util.Collections.unmodifiableList(pvpFightResult_);
        }
        if (((mutable_bitField1_ & 0x00000400) == 0x00000400)) {
          shopItems_ = java.util.Collections.unmodifiableList(shopItems_);
        }
        if (((mutable_bitField1_ & 0x00001000) == 0x00001000)) {
          missions_ = java.util.Collections.unmodifiableList(missions_);
        }
        if (((mutable_bitField1_ & 0x00004000) == 0x00004000)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField1_ & 0x00008000) == 0x00008000)) {
          cardGroup_ = java.util.Collections.unmodifiableList(cardGroup_);
        }
        if (((mutable_bitField1_ & 0x00010000) == 0x00010000)) {
          pieces_ = java.util.Collections.unmodifiableList(pieces_);
        }
        if (((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        if (((mutable_bitField1_ & 0x00040000) == 0x00040000)) {
          hufas_ = java.util.Collections.unmodifiableList(hufas_);
        }
        if (((mutable_bitField1_ & 0x00080000) == 0x00080000)) {
          trains_ = java.util.Collections.unmodifiableList(trains_);
        }
        if (((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
          quests_ = java.util.Collections.unmodifiableList(quests_);
        }
        if (((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
          cardGroupFight_ = java.util.Collections.unmodifiableList(cardGroupFight_);
        }
        if (((mutable_bitField1_ & 0x00400000) == 0x00400000)) {
          magicWeaponGroup_ = java.util.Collections.unmodifiableList(magicWeaponGroup_);
        }
        if (((mutable_bitField1_ & 0x01000000) == 0x01000000)) {
          pvpWinReward_ = java.util.Collections.unmodifiableList(pvpWinReward_);
        }
        if (((mutable_bitField1_ & 0x02000000) == 0x02000000)) {
          loginReward_ = java.util.Collections.unmodifiableList(loginReward_);
        }
        if (((mutable_bitField1_ & 0x04000000) == 0x04000000)) {
          pvpFightNumReward_ = java.util.Collections.unmodifiableList(pvpFightNumReward_);
        }
        if (((mutable_bitField1_ & 0x08000000) == 0x08000000)) {
          drawCardReward_ = java.util.Collections.unmodifiableList(drawCardReward_);
        }
        if (((mutable_bitField1_ & 0x40000000) == 0x40000000)) {
          gainQiuYuanReward_ = java.util.Collections.unmodifiableList(gainQiuYuanReward_);
        }
        if (((mutable_bitField1_ & 0x80000000) == 0x80000000)) {
          gainLvUpReward_ = java.util.Collections.unmodifiableList(gainLvUpReward_);
        }
        if (((mutable_bitField2_ & 0x00000001) == 0x00000001)) {
          gainChapterReward_ = java.util.Collections.unmodifiableList(gainChapterReward_);
        }
        if (((mutable_bitField2_ & 0x00000002) == 0x00000002)) {
          gainChapterStarReward_ = java.util.Collections.unmodifiableList(gainChapterStarReward_);
        }
        if (((mutable_bitField2_ & 0x00000004) == 0x00000004)) {
          gainFriendNumReward_ = java.util.Collections.unmodifiableList(gainFriendNumReward_);
        }
        if (((mutable_bitField2_ & 0x00000008) == 0x00000008)) {
          gainCardReward_ = java.util.Collections.unmodifiableList(gainCardReward_);
        }
        if (((mutable_bitField2_ & 0x00000010) == 0x00000010)) {
          gainItemReward_ = java.util.Collections.unmodifiableList(gainItemReward_);
        }
        if (((mutable_bitField2_ & 0x00001000) == 0x00001000)) {
          amountPaymentReward_ = java.util.Collections.unmodifiableList(amountPaymentReward_);
        }
        if (((mutable_bitField2_ & 0x00002000) == 0x00002000)) {
          missionsDaily_ = java.util.Collections.unmodifiableList(missionsDaily_);
        }
        if (((mutable_bitField2_ & 0x00100000) == 0x00100000)) {
          vipGifts_ = java.util.Collections.unmodifiableList(vipGifts_);
        }
        if (((mutable_bitField2_ & 0x00800000) == 0x00800000)) {
          vipAllGift_ = java.util.Collections.unmodifiableList(vipAllGift_);
        }
        if (((mutable_bitField2_ & 0x20000000) == 0x20000000)) {
          triggerGuideIndex_ = java.util.Collections.unmodifiableList(triggerGuideIndex_);
        }
        if (((mutable_bitField2_ & 0x40000000) == 0x40000000)) {
          chapterEasyReward_ = java.util.Collections.unmodifiableList(chapterEasyReward_);
        }
        if (((mutable_bitField2_ & 0x80000000) == 0x80000000)) {
          chapterNormalReward_ = java.util.Collections.unmodifiableList(chapterNormalReward_);
        }
        if (((mutable_bitField3_ & 0x00000001) == 0x00000001)) {
          chapterHardReward_ = java.util.Collections.unmodifiableList(chapterHardReward_);
        }
        if (((mutable_bitField3_ & 0x00000002) == 0x00000002)) {
          activityEasyReward_ = java.util.Collections.unmodifiableList(activityEasyReward_);
        }
        if (((mutable_bitField3_ & 0x00000008) == 0x00000008)) {
          baoXiangReward_ = java.util.Collections.unmodifiableList(baoXiangReward_);
        }
        if (((mutable_bitField3_ & 0x00000040) == 0x00000040)) {
          yunyouItems_ = java.util.Collections.unmodifiableList(yunyouItems_);
        }
        if (((mutable_bitField3_ & 0x00000400) == 0x00000400)) {
          itemTask_ = java.util.Collections.unmodifiableList(itemTask_);
        }
        if (((mutable_bitField3_ & 0x00000800) == 0x00000800)) {
          cardTask_ = java.util.Collections.unmodifiableList(cardTask_);
        }
        if (((mutable_bitField3_ & 0x00001000) == 0x00001000)) {
          collectCardReward_ = java.util.Collections.unmodifiableList(collectCardReward_);
        }
        if (((mutable_bitField3_ & 0x00002000) == 0x00002000)) {
          cardReward_ = java.util.Collections.unmodifiableList(cardReward_);
        }
        if (((mutable_bitField3_ & 0x00004000) == 0x00004000)) {
          itemReward_ = java.util.Collections.unmodifiableList(itemReward_);
        }
        if (((mutable_bitField3_ & 0x00008000) == 0x00008000)) {
          vipNums_ = java.util.Collections.unmodifiableList(vipNums_);
        }
        if (((mutable_bitField3_ & 0x00010000) == 0x00010000)) {
          firstPayExtraIds_ = java.util.Collections.unmodifiableList(firstPayExtraIds_);
        }
        if (((mutable_bitField3_ & 0x00200000) == 0x00200000)) {
          pvpExchangeItems_ = java.util.Collections.unmodifiableList(pvpExchangeItems_);
        }
        if (((mutable_bitField3_ & 0x00800000) == 0x00800000)) {
          firstDrawIds_ = java.util.Collections.unmodifiableList(firstDrawIds_);
        }
        if (((mutable_bitField3_ & 0x02000000) == 0x02000000)) {
          todyTastePantaos_ = java.util.Collections.unmodifiableList(todyTastePantaos_);
        }
        if (((mutable_bitField3_ & 0x40000000) == 0x40000000)) {
          shenMoDuiHuan_ = java.util.Collections.unmodifiableList(shenMoDuiHuan_);
        }
        if (((mutable_bitField3_ & 0x80000000) == 0x80000000)) {
          buyShenMoItem_ = java.util.Collections.unmodifiableList(buyShenMoItem_);
        }
        if (((mutable_bitField4_ & 0x00000008) == 0x00000008)) {
          gongDeReward_ = java.util.Collections.unmodifiableList(gongDeReward_);
        }
        if (((mutable_bitField4_ & 0x00000040) == 0x00000040)) {
          drawCard_ = java.util.Collections.unmodifiableList(drawCard_);
        }
        if (((mutable_bitField4_ & 0x00000400) == 0x00000400)) {
          playerPrefs_ = new com.google.protobuf.UnmodifiableLazyStringList(playerPrefs_);
        }
        if (((mutable_bitField4_ & 0x00000800) == 0x00000800)) {
          missionMap_ = java.util.Collections.unmodifiableList(missionMap_);
        }
        if (((mutable_bitField4_ & 0x00400000) == 0x00400000)) {
          activityItem_ = java.util.Collections.unmodifiableList(activityItem_);
        }
        if (((mutable_bitField4_ & 0x00800000) == 0x00800000)) {
          payReward_ = java.util.Collections.unmodifiableList(payReward_);
        }
        if (((mutable_bitField5_ & 0x00000008) == 0x00000008)) {
          chengjiuReward_ = java.util.Collections.unmodifiableList(chengjiuReward_);
        }
        if (((mutable_bitField5_ & 0x00040000) == 0x00040000)) {
          inviteNumReward_ = java.util.Collections.unmodifiableList(inviteNumReward_);
        }
        if (((mutable_bitField5_ & 0x00080000) == 0x00080000)) {
          yuanshenBox_ = new com.google.protobuf.UnmodifiableLazyStringList(yuanshenBox_);
        }
        if (((mutable_bitField5_ & 0x00100000) == 0x00100000)) {
          boxs_ = java.util.Collections.unmodifiableList(boxs_);
        }
        if (((mutable_bitField5_ & 0x00200000) == 0x00200000)) {
          buyBox_ = java.util.Collections.unmodifiableList(buyBox_);
        }
        if (((mutable_bitField5_ & 0x00800000) == 0x00800000)) {
          sevenReward_ = java.util.Collections.unmodifiableList(sevenReward_);
        }
        if (((mutable_bitField5_ & 0x01000000) == 0x01000000)) {
          playerNum_ = java.util.Collections.unmodifiableList(playerNum_);
        }
        if (((mutable_bitField5_ & 0x02000000) == 0x02000000)) {
          rewardId_ = java.util.Collections.unmodifiableList(rewardId_);
        }
        if (((mutable_bitField5_ & 0x10000000) == 0x10000000)) {
          liuDaoDuiHuanIds_ = java.util.Collections.unmodifiableList(liuDaoDuiHuanIds_);
        }
        if (((mutable_bitField5_ & 0x20000000) == 0x20000000)) {
          liuDaoDuiHuanIdsBuyed_ = java.util.Collections.unmodifiableList(liuDaoDuiHuanIdsBuyed_);
        }
        if (((mutable_bitField6_ & 0x00000004) == 0x00000004)) {
          cardGroupLiuDao_ = java.util.Collections.unmodifiableList(cardGroupLiuDao_);
        }
        if (((mutable_bitField6_ & 0x00000008) == 0x00000008)) {
          cardGroupFightLiuDao_ = java.util.Collections.unmodifiableList(cardGroupFightLiuDao_);
        }
        if (((mutable_bitField6_ & 0x00000010) == 0x00000010)) {
          drawCardFree_ = java.util.Collections.unmodifiableList(drawCardFree_);
        }
        if (((mutable_bitField6_ & 0x00008000) == 0x00008000)) {
          xunshanStr_ = java.util.Collections.unmodifiableList(xunshanStr_);
        }
        if (((mutable_bitField6_ & 0x00040000) == 0x00040000)) {
          gangExchange_ = java.util.Collections.unmodifiableList(gangExchange_);
        }
        if (((mutable_bitField7_ & 0x00100000) == 0x00100000)) {
          rewardIds_ = java.util.Collections.unmodifiableList(rewardIds_);
        }
        if (((mutable_bitField7_ & 0x00400000) == 0x00400000)) {
          exchangeItemReward_ = java.util.Collections.unmodifiableList(exchangeItemReward_);
        }
        if (((mutable_bitField7_ & 0x02000000) == 0x02000000)) {
          doubleReward_ = java.util.Collections.unmodifiableList(doubleReward_);
        }
        if (((mutable_bitField7_ & 0x20000000) == 0x20000000)) {
          templeCultivateCards_ = java.util.Collections.unmodifiableList(templeCultivateCards_);
        }
        if (((mutable_bitField8_ & 0x00000040) == 0x00000040)) {
          zhuanPanOpenIds_ = java.util.Collections.unmodifiableList(zhuanPanOpenIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PlayerItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PlayerItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PlayerItem.class, myudfs.Common.PlayerItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerItem> PARSER =
        new com.google.protobuf.AbstractParser<PlayerItem>() {
      public PlayerItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    private int bitField3_;
    private int bitField4_;
    private int bitField5_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 lv = 3;
    public static final int LV_FIELD_NUMBER = 3;
    private int lv_;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 exp = 4;
    public static final int EXP_FIELD_NUMBER = 4;
    private int exp_;
    /**
     * <code>optional int32 exp = 4;</code>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 exp = 4;</code>
     */
    public int getExp() {
      return exp_;
    }

    // optional int32 daoXing = 5;
    public static final int DAOXING_FIELD_NUMBER = 5;
    private int daoXing_;
    /**
     * <code>optional int32 daoXing = 5;</code>
     *
     * <pre>
     *道行
     * </pre>
     */
    public boolean hasDaoXing() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 daoXing = 5;</code>
     *
     * <pre>
     *道行
     * </pre>
     */
    public int getDaoXing() {
      return daoXing_;
    }

    // optional int32 vip = 6;
    public static final int VIP_FIELD_NUMBER = 6;
    private int vip_;
    /**
     * <code>optional int32 vip = 6;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 vip = 6;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional int64 gold = 7;
    public static final int GOLD_FIELD_NUMBER = 7;
    private long gold_;
    /**
     * <code>optional int64 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    // optional int32 shengWang = 8;
    public static final int SHENGWANG_FIELD_NUMBER = 8;
    private int shengWang_;
    /**
     * <code>optional int32 shengWang = 8;</code>
     *
     * <pre>
     *声望
     * </pre>
     */
    public boolean hasShengWang() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 shengWang = 8;</code>
     *
     * <pre>
     *声望
     * </pre>
     */
    public int getShengWang() {
      return shengWang_;
    }

    // optional int32 xianYuan = 9;
    public static final int XIANYUAN_FIELD_NUMBER = 9;
    private int xianYuan_;
    /**
     * <code>optional int32 xianYuan = 9;</code>
     *
     * <pre>
     *仙缘
     * </pre>
     */
    public boolean hasXianYuan() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 xianYuan = 9;</code>
     *
     * <pre>
     *仙缘
     * </pre>
     */
    public int getXianYuan() {
      return xianYuan_;
    }

    // optional int32 bagsUnlockGold = 10;
    public static final int BAGSUNLOCKGOLD_FIELD_NUMBER = 10;
    private int bagsUnlockGold_;
    /**
     * <code>optional int32 bagsUnlockGold = 10;</code>
     *
     * <pre>
     *金币解锁的背包数量
     * </pre>
     */
    public boolean hasBagsUnlockGold() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 bagsUnlockGold = 10;</code>
     *
     * <pre>
     *金币解锁的背包数量
     * </pre>
     */
    public int getBagsUnlockGold() {
      return bagsUnlockGold_;
    }

    // optional int32 stamina = 11;
    public static final int STAMINA_FIELD_NUMBER = 11;
    private int stamina_;
    /**
     * <code>optional int32 stamina = 11;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public boolean hasStamina() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 stamina = 11;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public int getStamina() {
      return stamina_;
    }

    // optional int32 spirit = 12;
    public static final int SPIRIT_FIELD_NUMBER = 12;
    private int spirit_;
    /**
     * <code>optional int32 spirit = 12;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    public boolean hasSpirit() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 spirit = 12;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    public int getSpirit() {
      return spirit_;
    }

    // optional int32 friendsCost = 18;
    public static final int FRIENDSCOST_FIELD_NUMBER = 18;
    private int friendsCost_;
    /**
     * <code>optional int32 friendsCost = 18;</code>
     *
     * <pre>
     *付费增加的好友上限数量
     * </pre>
     */
    public boolean hasFriendsCost() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 friendsCost = 18;</code>
     *
     * <pre>
     *付费增加的好友上限数量
     * </pre>
     */
    public int getFriendsCost() {
      return friendsCost_;
    }

    // optional int32 trainFreeRenew = 19;
    public static final int TRAINFREERENEW_FIELD_NUMBER = 19;
    private int trainFreeRenew_;
    /**
     * <code>optional int32 trainFreeRenew = 19;</code>
     *
     * <pre>
     *本日免费刷新修炼的次数
     * </pre>
     */
    public boolean hasTrainFreeRenew() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 trainFreeRenew = 19;</code>
     *
     * <pre>
     *本日免费刷新修炼的次数
     * </pre>
     */
    public int getTrainFreeRenew() {
      return trainFreeRenew_;
    }

    // optional int64 receiveStaminaNum = 20;
    public static final int RECEIVESTAMINANUM_FIELD_NUMBER = 20;
    private long receiveStaminaNum_;
    /**
     * <code>optional int64 receiveStaminaNum = 20;</code>
     *
     * <pre>
     *本日已领取的赠送体力的数量,0点清0
     * </pre>
     */
    public boolean hasReceiveStaminaNum() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 receiveStaminaNum = 20;</code>
     *
     * <pre>
     *本日已领取的赠送体力的数量,0点清0
     * </pre>
     */
    public long getReceiveStaminaNum() {
      return receiveStaminaNum_;
    }

    // repeated .MapItem todayQuestNums = 21;
    public static final int TODAYQUESTNUMS_FIELD_NUMBER = 21;
    private java.util.List<myudfs.Common.MapItem> todayQuestNums_;
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getTodayQuestNumsList() {
      return todayQuestNums_;
    }
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getTodayQuestNumsOrBuilderList() {
      return todayQuestNums_;
    }
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    public int getTodayQuestNumsCount() {
      return todayQuestNums_.size();
    }
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    public myudfs.Common.MapItem getTodayQuestNums(int index) {
      return todayQuestNums_.get(index);
    }
    /**
     * <code>repeated .MapItem todayQuestNums = 21;</code>
     *
     * <pre>
     *本日已打关卡次数, key:关卡id
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getTodayQuestNumsOrBuilder(
        int index) {
      return todayQuestNums_.get(index);
    }

    // repeated .MapItem todayQuestRestNums = 22;
    public static final int TODAYQUESTRESTNUMS_FIELD_NUMBER = 22;
    private java.util.List<myudfs.Common.MapItem> todayQuestRestNums_;
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getTodayQuestRestNumsList() {
      return todayQuestRestNums_;
    }
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getTodayQuestRestNumsOrBuilderList() {
      return todayQuestRestNums_;
    }
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    public int getTodayQuestRestNumsCount() {
      return todayQuestRestNums_.size();
    }
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    public myudfs.Common.MapItem getTodayQuestRestNums(int index) {
      return todayQuestRestNums_.get(index);
    }
    /**
     * <code>repeated .MapItem todayQuestRestNums = 22;</code>
     *
     * <pre>
     *本日金币重置关卡次数,key:关卡id
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getTodayQuestRestNumsOrBuilder(
        int index) {
      return todayQuestRestNums_.get(index);
    }

    // repeated int64 donateStamina = 24;
    public static final int DONATESTAMINA_FIELD_NUMBER = 24;
    private java.util.List<java.lang.Long> donateStamina_;
    /**
     * <code>repeated int64 donateStamina = 24;</code>
     *
     * <pre>
     *本日已经赠送过体力的好友，这里是好友id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getDonateStaminaList() {
      return donateStamina_;
    }
    /**
     * <code>repeated int64 donateStamina = 24;</code>
     *
     * <pre>
     *本日已经赠送过体力的好友，这里是好友id
     * </pre>
     */
    public int getDonateStaminaCount() {
      return donateStamina_.size();
    }
    /**
     * <code>repeated int64 donateStamina = 24;</code>
     *
     * <pre>
     *本日已经赠送过体力的好友，这里是好友id
     * </pre>
     */
    public long getDonateStamina(int index) {
      return donateStamina_.get(index);
    }

    // repeated int64 receiveStamina = 25;
    public static final int RECEIVESTAMINA_FIELD_NUMBER = 25;
    private java.util.List<java.lang.Long> receiveStamina_;
    /**
     * <code>repeated int64 receiveStamina = 25;</code>
     *
     * <pre>
     *收到的赠送的体力,这里放的是好友id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getReceiveStaminaList() {
      return receiveStamina_;
    }
    /**
     * <code>repeated int64 receiveStamina = 25;</code>
     *
     * <pre>
     *收到的赠送的体力,这里放的是好友id
     * </pre>
     */
    public int getReceiveStaminaCount() {
      return receiveStamina_.size();
    }
    /**
     * <code>repeated int64 receiveStamina = 25;</code>
     *
     * <pre>
     *收到的赠送的体力,这里放的是好友id
     * </pre>
     */
    public long getReceiveStamina(int index) {
      return receiveStamina_.get(index);
    }

    // optional uint64 staminaDate = 26;
    public static final int STAMINADATE_FIELD_NUMBER = 26;
    private long staminaDate_;
    /**
     * <code>optional uint64 staminaDate = 26;</code>
     *
     * <pre>
     *体力开始恢复的时间
     * </pre>
     */
    public boolean hasStaminaDate() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint64 staminaDate = 26;</code>
     *
     * <pre>
     *体力开始恢复的时间
     * </pre>
     */
    public long getStaminaDate() {
      return staminaDate_;
    }

    // repeated int64 friendId = 27;
    public static final int FRIENDID_FIELD_NUMBER = 27;
    private java.util.List<java.lang.Long> friendId_;
    /**
     * <code>repeated int64 friendId = 27;</code>
     *
     * <pre>
     *好友id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFriendIdList() {
      return friendId_;
    }
    /**
     * <code>repeated int64 friendId = 27;</code>
     *
     * <pre>
     *好友id
     * </pre>
     */
    public int getFriendIdCount() {
      return friendId_.size();
    }
    /**
     * <code>repeated int64 friendId = 27;</code>
     *
     * <pre>
     *好友id
     * </pre>
     */
    public long getFriendId(int index) {
      return friendId_.get(index);
    }

    // optional uint64 loginDate = 28;
    public static final int LOGINDATE_FIELD_NUMBER = 28;
    private long loginDate_;
    /**
     * <code>optional uint64 loginDate = 28;</code>
     *
     * <pre>
     * 上线时间
     * </pre>
     */
    public boolean hasLoginDate() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint64 loginDate = 28;</code>
     *
     * <pre>
     * 上线时间
     * </pre>
     */
    public long getLoginDate() {
      return loginDate_;
    }

    // optional uint64 onlineTime = 29;
    public static final int ONLINETIME_FIELD_NUMBER = 29;
    private long onlineTime_;
    /**
     * <code>optional uint64 onlineTime = 29;</code>
     *
     * <pre>
     * 已在线时间
     * </pre>
     */
    public boolean hasOnlineTime() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint64 onlineTime = 29;</code>
     *
     * <pre>
     * 已在线时间
     * </pre>
     */
    public long getOnlineTime() {
      return onlineTime_;
    }

    // optional uint64 bagsUnlockGoldCd = 30;
    public static final int BAGSUNLOCKGOLDCD_FIELD_NUMBER = 30;
    private long bagsUnlockGoldCd_;
    /**
     * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
     *
     * <pre>
     * 元宝解锁减少的cd时间
     * </pre>
     */
    public boolean hasBagsUnlockGoldCd() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
     *
     * <pre>
     * 元宝解锁减少的cd时间
     * </pre>
     */
    public long getBagsUnlockGoldCd() {
      return bagsUnlockGoldCd_;
    }

    // optional int64 coin = 31;
    public static final int COIN_FIELD_NUMBER = 31;
    private long coin_;
    /**
     * <code>optional int64 coin = 31;</code>
     *
     * <pre>
     *元气
     * </pre>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 coin = 31;</code>
     *
     * <pre>
     *元气
     * </pre>
     */
    public long getCoin() {
      return coin_;
    }

    // repeated .MapItem moonStarItem = 32;
    public static final int MOONSTARITEM_FIELD_NUMBER = 32;
    private java.util.List<myudfs.Common.MapItem> moonStarItem_;
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getMoonStarItemList() {
      return moonStarItem_;
    }
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getMoonStarItemOrBuilderList() {
      return moonStarItem_;
    }
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    public int getMoonStarItemCount() {
      return moonStarItem_.size();
    }
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    public myudfs.Common.MapItem getMoonStarItem(int index) {
      return moonStarItem_.get(index);
    }
    /**
     * <code>repeated .MapItem moonStarItem = 32;</code>
     *
     * <pre>
     * 月光宝盒 key：moonStartId  value:星点等级
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getMoonStarItemOrBuilder(
        int index) {
      return moonStarItem_.get(index);
    }

    // repeated .MapItem magicWeapons = 33;
    public static final int MAGICWEAPONS_FIELD_NUMBER = 33;
    private java.util.List<myudfs.Common.MapItem> magicWeapons_;
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getMagicWeaponsList() {
      return magicWeapons_;
    }
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getMagicWeaponsOrBuilderList() {
      return magicWeapons_;
    }
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    public int getMagicWeaponsCount() {
      return magicWeapons_.size();
    }
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    public myudfs.Common.MapItem getMagicWeapons(int index) {
      return magicWeapons_.get(index);
    }
    /**
     * <code>repeated .MapItem magicWeapons = 33;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getMagicWeaponsOrBuilder(
        int index) {
      return magicWeapons_.get(index);
    }

    // repeated .MapDateItem drawCardDate = 36;
    public static final int DRAWCARDDATE_FIELD_NUMBER = 36;
    private java.util.List<myudfs.Common.MapDateItem> drawCardDate_;
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    public java.util.List<myudfs.Common.MapDateItem> getDrawCardDateList() {
      return drawCardDate_;
    }
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapDateItemOrBuilder> 
        getDrawCardDateOrBuilderList() {
      return drawCardDate_;
    }
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    public int getDrawCardDateCount() {
      return drawCardDate_.size();
    }
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    public myudfs.Common.MapDateItem getDrawCardDate(int index) {
      return drawCardDate_.get(index);
    }
    /**
     * <code>repeated .MapDateItem drawCardDate = 36;</code>
     *
     * <pre>
     *三种卡包上次免费抽卡时间
     * </pre>
     */
    public myudfs.Common.MapDateItemOrBuilder getDrawCardDateOrBuilder(
        int index) {
      return drawCardDate_.get(index);
    }

    // optional int32 firstPay = 37;
    public static final int FIRSTPAY_FIELD_NUMBER = 37;
    private int firstPay_;
    /**
     * <code>optional int32 firstPay = 37;</code>
     *
     * <pre>
     * 0:无首充抽卡 1:有首充抽卡
     * </pre>
     */
    public boolean hasFirstPay() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 firstPay = 37;</code>
     *
     * <pre>
     * 0:无首充抽卡 1:有首充抽卡
     * </pre>
     */
    public int getFirstPay() {
      return firstPay_;
    }

    // repeated int32 firstPayIds = 38;
    public static final int FIRSTPAYIDS_FIELD_NUMBER = 38;
    private java.util.List<java.lang.Integer> firstPayIds_;
    /**
     * <code>repeated int32 firstPayIds = 38;</code>
     *
     * <pre>
     * 已经抽过首充抽卡的卡包id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFirstPayIdsList() {
      return firstPayIds_;
    }
    /**
     * <code>repeated int32 firstPayIds = 38;</code>
     *
     * <pre>
     * 已经抽过首充抽卡的卡包id
     * </pre>
     */
    public int getFirstPayIdsCount() {
      return firstPayIds_.size();
    }
    /**
     * <code>repeated int32 firstPayIds = 38;</code>
     *
     * <pre>
     * 已经抽过首充抽卡的卡包id
     * </pre>
     */
    public int getFirstPayIds(int index) {
      return firstPayIds_.get(index);
    }

    // optional uint64 spiritDate = 39;
    public static final int SPIRITDATE_FIELD_NUMBER = 39;
    private long spiritDate_;
    /**
     * <code>optional uint64 spiritDate = 39;</code>
     *
     * <pre>
     * 精力开始恢复的时间
     * </pre>
     */
    public boolean hasSpiritDate() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint64 spiritDate = 39;</code>
     *
     * <pre>
     * 精力开始恢复的时间
     * </pre>
     */
    public long getSpiritDate() {
      return spiritDate_;
    }

    // optional int32 worshipTimes = 40;
    public static final int WORSHIPTIMES_FIELD_NUMBER = 40;
    private int worshipTimes_;
    /**
     * <code>optional int32 worshipTimes = 40;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    public boolean hasWorshipTimes() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 worshipTimes = 40;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    public int getWorshipTimes() {
      return worshipTimes_;
    }

    // repeated int64 worshipIds = 41;
    public static final int WORSHIPIDS_FIELD_NUMBER = 41;
    private java.util.List<java.lang.Long> worshipIds_;
    /**
     * <code>repeated int64 worshipIds = 41;</code>
     *
     * <pre>
     *膜拜过的玩家
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getWorshipIdsList() {
      return worshipIds_;
    }
    /**
     * <code>repeated int64 worshipIds = 41;</code>
     *
     * <pre>
     *膜拜过的玩家
     * </pre>
     */
    public int getWorshipIdsCount() {
      return worshipIds_.size();
    }
    /**
     * <code>repeated int64 worshipIds = 41;</code>
     *
     * <pre>
     *膜拜过的玩家
     * </pre>
     */
    public long getWorshipIds(int index) {
      return worshipIds_.get(index);
    }

    // optional uint64 gainRewardTime = 42;
    public static final int GAINREWARDTIME_FIELD_NUMBER = 42;
    private long gainRewardTime_;
    /**
     * <code>optional uint64 gainRewardTime = 42;</code>
     *
     * <pre>
     *领取结算奖励的时间
     * </pre>
     */
    public boolean hasGainRewardTime() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint64 gainRewardTime = 42;</code>
     *
     * <pre>
     *领取结算奖励的时间
     * </pre>
     */
    public long getGainRewardTime() {
      return gainRewardTime_;
    }

    // repeated int32 exchangeTimes = 43;
    public static final int EXCHANGETIMES_FIELD_NUMBER = 43;
    private java.util.List<java.lang.Integer> exchangeTimes_;
    /**
     * <code>repeated int32 exchangeTimes = 43;</code>
     *
     * <pre>
     *兑换次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getExchangeTimesList() {
      return exchangeTimes_;
    }
    /**
     * <code>repeated int32 exchangeTimes = 43;</code>
     *
     * <pre>
     *兑换次数
     * </pre>
     */
    public int getExchangeTimesCount() {
      return exchangeTimes_.size();
    }
    /**
     * <code>repeated int32 exchangeTimes = 43;</code>
     *
     * <pre>
     *兑换次数
     * </pre>
     */
    public int getExchangeTimes(int index) {
      return exchangeTimes_.get(index);
    }

    // repeated int64 mails = 44;
    public static final int MAILS_FIELD_NUMBER = 44;
    private java.util.List<java.lang.Long> mails_;
    /**
     * <code>repeated int64 mails = 44;</code>
     */
    public java.util.List<java.lang.Long>
        getMailsList() {
      return mails_;
    }
    /**
     * <code>repeated int64 mails = 44;</code>
     */
    public int getMailsCount() {
      return mails_.size();
    }
    /**
     * <code>repeated int64 mails = 44;</code>
     */
    public long getMails(int index) {
      return mails_.get(index);
    }

    // repeated int64 mailFinished = 45;
    public static final int MAILFINISHED_FIELD_NUMBER = 45;
    private java.util.List<java.lang.Long> mailFinished_;
    /**
     * <code>repeated int64 mailFinished = 45;</code>
     */
    public java.util.List<java.lang.Long>
        getMailFinishedList() {
      return mailFinished_;
    }
    /**
     * <code>repeated int64 mailFinished = 45;</code>
     */
    public int getMailFinishedCount() {
      return mailFinished_.size();
    }
    /**
     * <code>repeated int64 mailFinished = 45;</code>
     */
    public long getMailFinished(int index) {
      return mailFinished_.get(index);
    }

    // repeated int64 mailDeleted = 46;
    public static final int MAILDELETED_FIELD_NUMBER = 46;
    private java.util.List<java.lang.Long> mailDeleted_;
    /**
     * <code>repeated int64 mailDeleted = 46;</code>
     */
    public java.util.List<java.lang.Long>
        getMailDeletedList() {
      return mailDeleted_;
    }
    /**
     * <code>repeated int64 mailDeleted = 46;</code>
     */
    public int getMailDeletedCount() {
      return mailDeleted_.size();
    }
    /**
     * <code>repeated int64 mailDeleted = 46;</code>
     */
    public long getMailDeleted(int index) {
      return mailDeleted_.get(index);
    }

    // repeated .PvpFightResultItem pvpFightResult = 47;
    public static final int PVPFIGHTRESULT_FIELD_NUMBER = 47;
    private java.util.List<myudfs.Common.PvpFightResultItem> pvpFightResult_;
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    public java.util.List<myudfs.Common.PvpFightResultItem> getPvpFightResultList() {
      return pvpFightResult_;
    }
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.PvpFightResultItemOrBuilder> 
        getPvpFightResultOrBuilderList() {
      return pvpFightResult_;
    }
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    public int getPvpFightResultCount() {
      return pvpFightResult_.size();
    }
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    public myudfs.Common.PvpFightResultItem getPvpFightResult(int index) {
      return pvpFightResult_.get(index);
    }
    /**
     * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
     *
     * <pre>
     *个人PVP战报记录
     * </pre>
     */
    public myudfs.Common.PvpFightResultItemOrBuilder getPvpFightResultOrBuilder(
        int index) {
      return pvpFightResult_.get(index);
    }

    // optional int32 buyStamina = 48;
    public static final int BUYSTAMINA_FIELD_NUMBER = 48;
    private int buyStamina_;
    /**
     * <code>optional int32 buyStamina = 48;</code>
     *
     * <pre>
     *本日购买体力次数
     * </pre>
     */
    public boolean hasBuyStamina() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 buyStamina = 48;</code>
     *
     * <pre>
     *本日购买体力次数
     * </pre>
     */
    public int getBuyStamina() {
      return buyStamina_;
    }

    // optional int32 buySpirit = 49;
    public static final int BUYSPIRIT_FIELD_NUMBER = 49;
    private int buySpirit_;
    /**
     * <code>optional int32 buySpirit = 49;</code>
     *
     * <pre>
     * 本日购买精力次数
     * </pre>
     */
    public boolean hasBuySpirit() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 buySpirit = 49;</code>
     *
     * <pre>
     * 本日购买精力次数
     * </pre>
     */
    public int getBuySpirit() {
      return buySpirit_;
    }

    // optional int32 pvpWins = 50;
    public static final int PVPWINS_FIELD_NUMBER = 50;
    private int pvpWins_;
    /**
     * <code>optional int32 pvpWins = 50;</code>
     *
     * <pre>
     *本日pvp连胜次数
     * </pre>
     */
    public boolean hasPvpWins() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 pvpWins = 50;</code>
     *
     * <pre>
     *本日pvp连胜次数
     * </pre>
     */
    public int getPvpWins() {
      return pvpWins_;
    }

    // repeated .MapItem shopItems = 53;
    public static final int SHOPITEMS_FIELD_NUMBER = 53;
    private java.util.List<myudfs.Common.MapItem> shopItems_;
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getShopItemsList() {
      return shopItems_;
    }
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getShopItemsOrBuilderList() {
      return shopItems_;
    }
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    public int getShopItemsCount() {
      return shopItems_.size();
    }
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    public myudfs.Common.MapItem getShopItems(int index) {
      return shopItems_.get(index);
    }
    /**
     * <code>repeated .MapItem shopItems = 53;</code>
     *
     * <pre>
     *购买的商品数量
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getShopItemsOrBuilder(
        int index) {
      return shopItems_.get(index);
    }

    // optional int32 loginDays = 54;
    public static final int LOGINDAYS_FIELD_NUMBER = 54;
    private int loginDays_;
    /**
     * <code>optional int32 loginDays = 54;</code>
     *
     * <pre>
     *已登陆的天数
     * </pre>
     */
    public boolean hasLoginDays() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 loginDays = 54;</code>
     *
     * <pre>
     *已登陆的天数
     * </pre>
     */
    public int getLoginDays() {
      return loginDays_;
    }

    // repeated .MissionItem missions = 55;
    public static final int MISSIONS_FIELD_NUMBER = 55;
    private java.util.List<myudfs.Common.MissionItem> missions_;
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    public java.util.List<myudfs.Common.MissionItem> getMissionsList() {
      return missions_;
    }
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MissionItemOrBuilder> 
        getMissionsOrBuilderList() {
      return missions_;
    }
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    public int getMissionsCount() {
      return missions_.size();
    }
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    public myudfs.Common.MissionItem getMissions(int index) {
      return missions_.get(index);
    }
    /**
     * <code>repeated .MissionItem missions = 55;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    public myudfs.Common.MissionItemOrBuilder getMissionsOrBuilder(
        int index) {
      return missions_.get(index);
    }

    // optional int64 silver = 56;
    public static final int SILVER_FIELD_NUMBER = 56;
    private long silver_;
    /**
     * <code>optional int64 silver = 56;</code>
     *
     * <pre>
     * 银两
     * </pre>
     */
    public boolean hasSilver() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 silver = 56;</code>
     *
     * <pre>
     * 银两
     * </pre>
     */
    public long getSilver() {
      return silver_;
    }

    // repeated .CardItem cards = 57;
    public static final int CARDS_FIELD_NUMBER = 57;
    private java.util.List<myudfs.Common.CardItem> cards_;
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    public java.util.List<myudfs.Common.CardItem> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    public myudfs.Common.CardItem getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .CardItem cards = 57;</code>
     *
     * <pre>
     *自己的卡牌
     * </pre>
     */
    public myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    // repeated int64 cardGroup = 58;
    public static final int CARDGROUP_FIELD_NUMBER = 58;
    private java.util.List<java.lang.Long> cardGroup_;
    /**
     * <code>repeated int64 cardGroup = 58;</code>
     *
     * <pre>
     *卡组
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCardGroupList() {
      return cardGroup_;
    }
    /**
     * <code>repeated int64 cardGroup = 58;</code>
     *
     * <pre>
     *卡组
     * </pre>
     */
    public int getCardGroupCount() {
      return cardGroup_.size();
    }
    /**
     * <code>repeated int64 cardGroup = 58;</code>
     *
     * <pre>
     *卡组
     * </pre>
     */
    public long getCardGroup(int index) {
      return cardGroup_.get(index);
    }

    // repeated .PieceItem pieces = 59;
    public static final int PIECES_FIELD_NUMBER = 59;
    private java.util.List<myudfs.Common.PieceItem> pieces_;
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    public java.util.List<myudfs.Common.PieceItem> getPiecesList() {
      return pieces_;
    }
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.PieceItemOrBuilder> 
        getPiecesOrBuilderList() {
      return pieces_;
    }
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    public int getPiecesCount() {
      return pieces_.size();
    }
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    public myudfs.Common.PieceItem getPieces(int index) {
      return pieces_.get(index);
    }
    /**
     * <code>repeated .PieceItem pieces = 59;</code>
     *
     * <pre>
     *元神
     * </pre>
     */
    public myudfs.Common.PieceItemOrBuilder getPiecesOrBuilder(
        int index) {
      return pieces_.get(index);
    }

    // repeated .Items items = 60;
    public static final int ITEMS_FIELD_NUMBER = 60;
    private java.util.List<myudfs.Common.Items> items_;
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    public java.util.List<myudfs.Common.Items> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.ItemsOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    public myudfs.Common.Items getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .Items items = 60;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    public myudfs.Common.ItemsOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    // repeated .HuFaItem hufas = 61;
    public static final int HUFAS_FIELD_NUMBER = 61;
    private java.util.List<myudfs.Common.HuFaItem> hufas_;
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    public java.util.List<myudfs.Common.HuFaItem> getHufasList() {
      return hufas_;
    }
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.HuFaItemOrBuilder> 
        getHufasOrBuilderList() {
      return hufas_;
    }
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    public int getHufasCount() {
      return hufas_.size();
    }
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    public myudfs.Common.HuFaItem getHufas(int index) {
      return hufas_.get(index);
    }
    /**
     * <code>repeated .HuFaItem hufas = 61;</code>
     *
     * <pre>
     *护法
     * </pre>
     */
    public myudfs.Common.HuFaItemOrBuilder getHufasOrBuilder(
        int index) {
      return hufas_.get(index);
    }

    // repeated .TrainItem trains = 62;
    public static final int TRAINS_FIELD_NUMBER = 62;
    private java.util.List<myudfs.Common.TrainItem> trains_;
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    public java.util.List<myudfs.Common.TrainItem> getTrainsList() {
      return trains_;
    }
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.TrainItemOrBuilder> 
        getTrainsOrBuilderList() {
      return trains_;
    }
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    public int getTrainsCount() {
      return trains_.size();
    }
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    public myudfs.Common.TrainItem getTrains(int index) {
      return trains_.get(index);
    }
    /**
     * <code>repeated .TrainItem trains = 62;</code>
     *
     * <pre>
     *卡牌修炼属性
     * </pre>
     */
    public myudfs.Common.TrainItemOrBuilder getTrainsOrBuilder(
        int index) {
      return trains_.get(index);
    }

    // repeated .QuestItem quests = 64;
    public static final int QUESTS_FIELD_NUMBER = 64;
    private java.util.List<myudfs.Common.QuestItem> quests_;
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    public java.util.List<myudfs.Common.QuestItem> getQuestsList() {
      return quests_;
    }
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.QuestItemOrBuilder> 
        getQuestsOrBuilderList() {
      return quests_;
    }
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    public int getQuestsCount() {
      return quests_.size();
    }
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    public myudfs.Common.QuestItem getQuests(int index) {
      return quests_.get(index);
    }
    /**
     * <code>repeated .QuestItem quests = 64;</code>
     *
     * <pre>
     *关卡
     * </pre>
     */
    public myudfs.Common.QuestItemOrBuilder getQuestsOrBuilder(
        int index) {
      return quests_.get(index);
    }

    // repeated int32 cardGroupFight = 65;
    public static final int CARDGROUPFIGHT_FIELD_NUMBER = 65;
    private java.util.List<java.lang.Integer> cardGroupFight_;
    /**
     * <code>repeated int32 cardGroupFight = 65;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardGroupFightList() {
      return cardGroupFight_;
    }
    /**
     * <code>repeated int32 cardGroupFight = 65;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getCardGroupFightCount() {
      return cardGroupFight_.size();
    }
    /**
     * <code>repeated int32 cardGroupFight = 65;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getCardGroupFight(int index) {
      return cardGroupFight_.get(index);
    }

    // repeated int32 magicWeaponGroup = 66;
    public static final int MAGICWEAPONGROUP_FIELD_NUMBER = 66;
    private java.util.List<java.lang.Integer> magicWeaponGroup_;
    /**
     * <code>repeated int32 magicWeaponGroup = 66;</code>
     *
     * <pre>
     *法宝位置
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMagicWeaponGroupList() {
      return magicWeaponGroup_;
    }
    /**
     * <code>repeated int32 magicWeaponGroup = 66;</code>
     *
     * <pre>
     *法宝位置
     * </pre>
     */
    public int getMagicWeaponGroupCount() {
      return magicWeaponGroup_.size();
    }
    /**
     * <code>repeated int32 magicWeaponGroup = 66;</code>
     *
     * <pre>
     *法宝位置
     * </pre>
     */
    public int getMagicWeaponGroup(int index) {
      return magicWeaponGroup_.get(index);
    }

    // optional uint64 rewardLastTime = 68;
    public static final int REWARDLASTTIME_FIELD_NUMBER = 68;
    private long rewardLastTime_;
    /**
     * <code>optional uint64 rewardLastTime = 68;</code>
     *
     * <pre>
     * 领取结算奖励的剩余时间
     * </pre>
     */
    public boolean hasRewardLastTime() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint64 rewardLastTime = 68;</code>
     *
     * <pre>
     * 领取结算奖励的剩余时间
     * </pre>
     */
    public long getRewardLastTime() {
      return rewardLastTime_;
    }

    // repeated int32 pvpWinReward = 69;
    public static final int PVPWINREWARD_FIELD_NUMBER = 69;
    private java.util.List<java.lang.Integer> pvpWinReward_;
    /**
     * <code>repeated int32 pvpWinReward = 69;</code>
     *
     * <pre>
     * pvp连胜奖励 pvp连胜次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPvpWinRewardList() {
      return pvpWinReward_;
    }
    /**
     * <code>repeated int32 pvpWinReward = 69;</code>
     *
     * <pre>
     * pvp连胜奖励 pvp连胜次数
     * </pre>
     */
    public int getPvpWinRewardCount() {
      return pvpWinReward_.size();
    }
    /**
     * <code>repeated int32 pvpWinReward = 69;</code>
     *
     * <pre>
     * pvp连胜奖励 pvp连胜次数
     * </pre>
     */
    public int getPvpWinReward(int index) {
      return pvpWinReward_.get(index);
    }

    // repeated int32 loginReward = 70;
    public static final int LOGINREWARD_FIELD_NUMBER = 70;
    private java.util.List<java.lang.Integer> loginReward_;
    /**
     * <code>repeated int32 loginReward = 70;</code>
     *
     * <pre>
     * 连续登陆奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLoginRewardList() {
      return loginReward_;
    }
    /**
     * <code>repeated int32 loginReward = 70;</code>
     *
     * <pre>
     * 连续登陆奖励
     * </pre>
     */
    public int getLoginRewardCount() {
      return loginReward_.size();
    }
    /**
     * <code>repeated int32 loginReward = 70;</code>
     *
     * <pre>
     * 连续登陆奖励
     * </pre>
     */
    public int getLoginReward(int index) {
      return loginReward_.get(index);
    }

    // repeated int32 pvpFightNumReward = 71;
    public static final int PVPFIGHTNUMREWARD_FIELD_NUMBER = 71;
    private java.util.List<java.lang.Integer> pvpFightNumReward_;
    /**
     * <code>repeated int32 pvpFightNumReward = 71;</code>
     *
     * <pre>
     *战斗胜利次数奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPvpFightNumRewardList() {
      return pvpFightNumReward_;
    }
    /**
     * <code>repeated int32 pvpFightNumReward = 71;</code>
     *
     * <pre>
     *战斗胜利次数奖励
     * </pre>
     */
    public int getPvpFightNumRewardCount() {
      return pvpFightNumReward_.size();
    }
    /**
     * <code>repeated int32 pvpFightNumReward = 71;</code>
     *
     * <pre>
     *战斗胜利次数奖励
     * </pre>
     */
    public int getPvpFightNumReward(int index) {
      return pvpFightNumReward_.get(index);
    }

    // repeated int32 drawCardReward = 72;
    public static final int DRAWCARDREWARD_FIELD_NUMBER = 72;
    private java.util.List<java.lang.Integer> drawCardReward_;
    /**
     * <code>repeated int32 drawCardReward = 72;</code>
     *
     * <pre>
     *领取抽卡次数奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDrawCardRewardList() {
      return drawCardReward_;
    }
    /**
     * <code>repeated int32 drawCardReward = 72;</code>
     *
     * <pre>
     *领取抽卡次数奖励
     * </pre>
     */
    public int getDrawCardRewardCount() {
      return drawCardReward_.size();
    }
    /**
     * <code>repeated int32 drawCardReward = 72;</code>
     *
     * <pre>
     *领取抽卡次数奖励
     * </pre>
     */
    public int getDrawCardReward(int index) {
      return drawCardReward_.get(index);
    }

    // optional uint64 gainBuyStamina = 73;
    public static final int GAINBUYSTAMINA_FIELD_NUMBER = 73;
    private long gainBuyStamina_;
    /**
     * <code>optional uint64 gainBuyStamina = 73;</code>
     *
     * <pre>
     *领取购买体力奖励的时间
     * </pre>
     */
    public boolean hasGainBuyStamina() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint64 gainBuyStamina = 73;</code>
     *
     * <pre>
     *领取购买体力奖励的时间
     * </pre>
     */
    public long getGainBuyStamina() {
      return gainBuyStamina_;
    }

    // optional uint64 gainBuySpiritReward = 74;
    public static final int GAINBUYSPIRITREWARD_FIELD_NUMBER = 74;
    private long gainBuySpiritReward_;
    /**
     * <code>optional uint64 gainBuySpiritReward = 74;</code>
     *
     * <pre>
     *领取购买精力奖励的时间
     * </pre>
     */
    public boolean hasGainBuySpiritReward() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint64 gainBuySpiritReward = 74;</code>
     *
     * <pre>
     *领取购买精力奖励的时间
     * </pre>
     */
    public long getGainBuySpiritReward() {
      return gainBuySpiritReward_;
    }

    // repeated int32 gainQiuYuanReward = 75;
    public static final int GAINQIUYUANREWARD_FIELD_NUMBER = 75;
    private java.util.List<java.lang.Integer> gainQiuYuanReward_;
    /**
     * <code>repeated int32 gainQiuYuanReward = 75;</code>
     *
     * <pre>
     *领取过的求缘奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGainQiuYuanRewardList() {
      return gainQiuYuanReward_;
    }
    /**
     * <code>repeated int32 gainQiuYuanReward = 75;</code>
     *
     * <pre>
     *领取过的求缘奖励
     * </pre>
     */
    public int getGainQiuYuanRewardCount() {
      return gainQiuYuanReward_.size();
    }
    /**
     * <code>repeated int32 gainQiuYuanReward = 75;</code>
     *
     * <pre>
     *领取过的求缘奖励
     * </pre>
     */
    public int getGainQiuYuanReward(int index) {
      return gainQiuYuanReward_.get(index);
    }

    // repeated int32 gainLvUpReward = 76;
    public static final int GAINLVUPREWARD_FIELD_NUMBER = 76;
    private java.util.List<java.lang.Integer> gainLvUpReward_;
    /**
     * <code>repeated int32 gainLvUpReward = 76;</code>
     *
     * <pre>
     * 领取过的升级奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGainLvUpRewardList() {
      return gainLvUpReward_;
    }
    /**
     * <code>repeated int32 gainLvUpReward = 76;</code>
     *
     * <pre>
     * 领取过的升级奖励
     * </pre>
     */
    public int getGainLvUpRewardCount() {
      return gainLvUpReward_.size();
    }
    /**
     * <code>repeated int32 gainLvUpReward = 76;</code>
     *
     * <pre>
     * 领取过的升级奖励
     * </pre>
     */
    public int getGainLvUpReward(int index) {
      return gainLvUpReward_.get(index);
    }

    // repeated int32 gainChapterReward = 77;
    public static final int GAINCHAPTERREWARD_FIELD_NUMBER = 77;
    private java.util.List<java.lang.Integer> gainChapterReward_;
    /**
     * <code>repeated int32 gainChapterReward = 77;</code>
     *
     * <pre>
     *章节奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGainChapterRewardList() {
      return gainChapterReward_;
    }
    /**
     * <code>repeated int32 gainChapterReward = 77;</code>
     *
     * <pre>
     *章节奖励
     * </pre>
     */
    public int getGainChapterRewardCount() {
      return gainChapterReward_.size();
    }
    /**
     * <code>repeated int32 gainChapterReward = 77;</code>
     *
     * <pre>
     *章节奖励
     * </pre>
     */
    public int getGainChapterReward(int index) {
      return gainChapterReward_.get(index);
    }

    // repeated int32 gainChapterStarReward = 79;
    public static final int GAINCHAPTERSTARREWARD_FIELD_NUMBER = 79;
    private java.util.List<java.lang.Integer> gainChapterStarReward_;
    /**
     * <code>repeated int32 gainChapterStarReward = 79;</code>
     *
     * <pre>
     *满星奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGainChapterStarRewardList() {
      return gainChapterStarReward_;
    }
    /**
     * <code>repeated int32 gainChapterStarReward = 79;</code>
     *
     * <pre>
     *满星奖励
     * </pre>
     */
    public int getGainChapterStarRewardCount() {
      return gainChapterStarReward_.size();
    }
    /**
     * <code>repeated int32 gainChapterStarReward = 79;</code>
     *
     * <pre>
     *满星奖励
     * </pre>
     */
    public int getGainChapterStarReward(int index) {
      return gainChapterStarReward_.get(index);
    }

    // repeated int32 gainFriendNumReward = 80;
    public static final int GAINFRIENDNUMREWARD_FIELD_NUMBER = 80;
    private java.util.List<java.lang.Integer> gainFriendNumReward_;
    /**
     * <code>repeated int32 gainFriendNumReward = 80;</code>
     *
     * <pre>
     *好友数量奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGainFriendNumRewardList() {
      return gainFriendNumReward_;
    }
    /**
     * <code>repeated int32 gainFriendNumReward = 80;</code>
     *
     * <pre>
     *好友数量奖励
     * </pre>
     */
    public int getGainFriendNumRewardCount() {
      return gainFriendNumReward_.size();
    }
    /**
     * <code>repeated int32 gainFriendNumReward = 80;</code>
     *
     * <pre>
     *好友数量奖励
     * </pre>
     */
    public int getGainFriendNumReward(int index) {
      return gainFriendNumReward_.get(index);
    }

    // repeated int32 gainCardReward = 81;
    public static final int GAINCARDREWARD_FIELD_NUMBER = 81;
    private java.util.List<java.lang.Integer> gainCardReward_;
    /**
     * <code>repeated int32 gainCardReward = 81;</code>
     *
     * <pre>
     *特殊卡牌奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGainCardRewardList() {
      return gainCardReward_;
    }
    /**
     * <code>repeated int32 gainCardReward = 81;</code>
     *
     * <pre>
     *特殊卡牌奖励
     * </pre>
     */
    public int getGainCardRewardCount() {
      return gainCardReward_.size();
    }
    /**
     * <code>repeated int32 gainCardReward = 81;</code>
     *
     * <pre>
     *特殊卡牌奖励
     * </pre>
     */
    public int getGainCardReward(int index) {
      return gainCardReward_.get(index);
    }

    // repeated int32 gainItemReward = 82;
    public static final int GAINITEMREWARD_FIELD_NUMBER = 82;
    private java.util.List<java.lang.Integer> gainItemReward_;
    /**
     * <code>repeated int32 gainItemReward = 82;</code>
     *
     * <pre>
     *特殊装备奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGainItemRewardList() {
      return gainItemReward_;
    }
    /**
     * <code>repeated int32 gainItemReward = 82;</code>
     *
     * <pre>
     *特殊装备奖励
     * </pre>
     */
    public int getGainItemRewardCount() {
      return gainItemReward_.size();
    }
    /**
     * <code>repeated int32 gainItemReward = 82;</code>
     *
     * <pre>
     *特殊装备奖励
     * </pre>
     */
    public int getGainItemReward(int index) {
      return gainItemReward_.get(index);
    }

    // optional uint64 gainEveryDayTili = 83;
    public static final int GAINEVERYDAYTILI_FIELD_NUMBER = 83;
    private long gainEveryDayTili_;
    /**
     * <code>optional uint64 gainEveryDayTili = 83;</code>
     *
     * <pre>
     *每天登陆领取体力
     * </pre>
     */
    public boolean hasGainEveryDayTili() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 gainEveryDayTili = 83;</code>
     *
     * <pre>
     *每天登陆领取体力
     * </pre>
     */
    public long getGainEveryDayTili() {
      return gainEveryDayTili_;
    }

    // optional uint64 gainEveryDayGold = 84;
    public static final int GAINEVERYDAYGOLD_FIELD_NUMBER = 84;
    private long gainEveryDayGold_;
    /**
     * <code>optional uint64 gainEveryDayGold = 84;</code>
     *
     * <pre>
     *每天登陆领取元宝
     * </pre>
     */
    public boolean hasGainEveryDayGold() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 gainEveryDayGold = 84;</code>
     *
     * <pre>
     *每天登陆领取元宝
     * </pre>
     */
    public long getGainEveryDayGold() {
      return gainEveryDayGold_;
    }

    // optional int32 receiveXianYuan = 85;
    public static final int RECEIVEXIANYUAN_FIELD_NUMBER = 85;
    private int receiveXianYuan_;
    /**
     * <code>optional int32 receiveXianYuan = 85;</code>
     *
     * <pre>
     *可领取的仙缘值
     * </pre>
     */
    public boolean hasReceiveXianYuan() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 receiveXianYuan = 85;</code>
     *
     * <pre>
     *可领取的仙缘值
     * </pre>
     */
    public int getReceiveXianYuan() {
      return receiveXianYuan_;
    }

    // optional int32 drawCardTimes = 87;
    public static final int DRAWCARDTIMES_FIELD_NUMBER = 87;
    private int drawCardTimes_;
    /**
     * <code>optional int32 drawCardTimes = 87;</code>
     *
     * <pre>
     *当天抽卡次数
     * </pre>
     */
    public boolean hasDrawCardTimes() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 drawCardTimes = 87;</code>
     *
     * <pre>
     *当天抽卡次数
     * </pre>
     */
    public int getDrawCardTimes() {
      return drawCardTimes_;
    }

    // optional int32 pvpFightWinNum = 88;
    public static final int PVPFIGHTWINNUM_FIELD_NUMBER = 88;
    private int pvpFightWinNum_;
    /**
     * <code>optional int32 pvpFightWinNum = 88;</code>
     *
     * <pre>
     *pvp战斗胜利次数
     * </pre>
     */
    public boolean hasPvpFightWinNum() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pvpFightWinNum = 88;</code>
     *
     * <pre>
     *pvp战斗胜利次数
     * </pre>
     */
    public int getPvpFightWinNum() {
      return pvpFightWinNum_;
    }

    // optional int32 multiLoginDays = 89;
    public static final int MULTILOGINDAYS_FIELD_NUMBER = 89;
    private int multiLoginDays_;
    /**
     * <code>optional int32 multiLoginDays = 89;</code>
     *
     * <pre>
     *连续登陆天数
     * </pre>
     */
    public boolean hasMultiLoginDays() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 multiLoginDays = 89;</code>
     *
     * <pre>
     *连续登陆天数
     * </pre>
     */
    public int getMultiLoginDays() {
      return multiLoginDays_;
    }

    // optional int64 totalPayGold = 90;
    public static final int TOTALPAYGOLD_FIELD_NUMBER = 90;
    private long totalPayGold_;
    /**
     * <code>optional int64 totalPayGold = 90;</code>
     *
     * <pre>
     *总充值元宝 只多不少
     * </pre>
     */
    public boolean hasTotalPayGold() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 totalPayGold = 90;</code>
     *
     * <pre>
     *总充值元宝 只多不少
     * </pre>
     */
    public long getTotalPayGold() {
      return totalPayGold_;
    }

    // repeated int32 amountPaymentReward = 91;
    public static final int AMOUNTPAYMENTREWARD_FIELD_NUMBER = 91;
    private java.util.List<java.lang.Integer> amountPaymentReward_;
    /**
     * <code>repeated int32 amountPaymentReward = 91;</code>
     *
     * <pre>
     * 领取过的充值奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAmountPaymentRewardList() {
      return amountPaymentReward_;
    }
    /**
     * <code>repeated int32 amountPaymentReward = 91;</code>
     *
     * <pre>
     * 领取过的充值奖励
     * </pre>
     */
    public int getAmountPaymentRewardCount() {
      return amountPaymentReward_.size();
    }
    /**
     * <code>repeated int32 amountPaymentReward = 91;</code>
     *
     * <pre>
     * 领取过的充值奖励
     * </pre>
     */
    public int getAmountPaymentReward(int index) {
      return amountPaymentReward_.get(index);
    }

    // repeated .MissionItem missionsDaily = 93;
    public static final int MISSIONSDAILY_FIELD_NUMBER = 93;
    private java.util.List<myudfs.Common.MissionItem> missionsDaily_;
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    public java.util.List<myudfs.Common.MissionItem> getMissionsDailyList() {
      return missionsDaily_;
    }
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MissionItemOrBuilder> 
        getMissionsDailyOrBuilderList() {
      return missionsDaily_;
    }
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    public int getMissionsDailyCount() {
      return missionsDaily_.size();
    }
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    public myudfs.Common.MissionItem getMissionsDaily(int index) {
      return missionsDaily_.get(index);
    }
    /**
     * <code>repeated .MissionItem missionsDaily = 93;</code>
     *
     * <pre>
     * 日常任务
     * </pre>
     */
    public myudfs.Common.MissionItemOrBuilder getMissionsDailyOrBuilder(
        int index) {
      return missionsDaily_.get(index);
    }

    // optional bool pvpNewFightFlag = 94;
    public static final int PVPNEWFIGHTFLAG_FIELD_NUMBER = 94;
    private boolean pvpNewFightFlag_;
    /**
     * <code>optional bool pvpNewFightFlag = 94;</code>
     *
     * <pre>
     * true:有新的pvp战报
     * </pre>
     */
    public boolean hasPvpNewFightFlag() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool pvpNewFightFlag = 94;</code>
     *
     * <pre>
     * true:有新的pvp战报
     * </pre>
     */
    public boolean getPvpNewFightFlag() {
      return pvpNewFightFlag_;
    }

    // optional int32 qiuyuan = 95;
    public static final int QIUYUAN_FIELD_NUMBER = 95;
    private int qiuyuan_;
    /**
     * <code>optional int32 qiuyuan = 95;</code>
     *
     * <pre>
     * 当天求缘次数
     * </pre>
     */
    public boolean hasQiuyuan() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 qiuyuan = 95;</code>
     *
     * <pre>
     * 当天求缘次数
     * </pre>
     */
    public int getQiuyuan() {
      return qiuyuan_;
    }

    // optional int32 qiuyuanGold = 96;
    public static final int QIUYUANGOLD_FIELD_NUMBER = 96;
    private int qiuyuanGold_;
    /**
     * <code>optional int32 qiuyuanGold = 96;</code>
     *
     * <pre>
     * 当天购买求缘次数
     * </pre>
     */
    public boolean hasQiuyuanGold() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 qiuyuanGold = 96;</code>
     *
     * <pre>
     * 当天购买求缘次数
     * </pre>
     */
    public int getQiuyuanGold() {
      return qiuyuanGold_;
    }

    // optional bool newMail = 97;
    public static final int NEWMAIL_FIELD_NUMBER = 97;
    private boolean newMail_;
    /**
     * <code>optional bool newMail = 97;</code>
     *
     * <pre>
     * 是否有新邮件
     * </pre>
     */
    public boolean hasNewMail() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool newMail = 97;</code>
     *
     * <pre>
     * 是否有新邮件
     * </pre>
     */
    public boolean getNewMail() {
      return newMail_;
    }

    // optional int32 pvpWinNum = 98;
    public static final int PVPWINNUM_FIELD_NUMBER = 98;
    private int pvpWinNum_;
    /**
     * <code>optional int32 pvpWinNum = 98;</code>
     *
     * <pre>
     *每日pvp胜利次数
     * </pre>
     */
    public boolean hasPvpWinNum() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 pvpWinNum = 98;</code>
     *
     * <pre>
     *每日pvp胜利次数
     * </pre>
     */
    public int getPvpWinNum() {
      return pvpWinNum_;
    }

    // optional bool firstPayReward = 99;
    public static final int FIRSTPAYREWARD_FIELD_NUMBER = 99;
    private boolean firstPayReward_;
    /**
     * <code>optional bool firstPayReward = 99;</code>
     *
     * <pre>
     * false:未领取过首充奖励 true:已领取过首充奖励
     * </pre>
     */
    public boolean hasFirstPayReward() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool firstPayReward = 99;</code>
     *
     * <pre>
     * false:未领取过首充奖励 true:已领取过首充奖励
     * </pre>
     */
    public boolean getFirstPayReward() {
      return firstPayReward_;
    }

    // repeated int32 vipGifts = 100;
    public static final int VIPGIFTS_FIELD_NUMBER = 100;
    private java.util.List<java.lang.Integer> vipGifts_;
    /**
     * <code>repeated int32 vipGifts = 100;</code>
     *
     * <pre>
     *领取过的vip礼包
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getVipGiftsList() {
      return vipGifts_;
    }
    /**
     * <code>repeated int32 vipGifts = 100;</code>
     *
     * <pre>
     *领取过的vip礼包
     * </pre>
     */
    public int getVipGiftsCount() {
      return vipGifts_.size();
    }
    /**
     * <code>repeated int32 vipGifts = 100;</code>
     *
     * <pre>
     *领取过的vip礼包
     * </pre>
     */
    public int getVipGifts(int index) {
      return vipGifts_.get(index);
    }

    // optional bool vipReward = 101;
    public static final int VIPREWARD_FIELD_NUMBER = 101;
    private boolean vipReward_;
    /**
     * <code>optional bool vipReward = 101;</code>
     *
     * <pre>
     * 今天是否领取了月卡奖励 ture：领取了
     * </pre>
     */
    public boolean hasVipReward() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool vipReward = 101;</code>
     *
     * <pre>
     * 今天是否领取了月卡奖励 ture：领取了
     * </pre>
     */
    public boolean getVipReward() {
      return vipReward_;
    }

    // optional int32 vipCard = 102;
    public static final int VIPCARD_FIELD_NUMBER = 102;
    private int vipCard_;
    /**
     * <code>optional int32 vipCard = 102;</code>
     *
     * <pre>
     *月卡次数
     * </pre>
     */
    public boolean hasVipCard() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 vipCard = 102;</code>
     *
     * <pre>
     *月卡次数
     * </pre>
     */
    public int getVipCard() {
      return vipCard_;
    }

    // repeated .MapItem vipAllGift = 103;
    public static final int VIPALLGIFT_FIELD_NUMBER = 103;
    private java.util.List<myudfs.Common.MapItem> vipAllGift_;
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    public java.util.List<myudfs.Common.MapItem> getVipAllGiftList() {
      return vipAllGift_;
    }
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getVipAllGiftOrBuilderList() {
      return vipAllGift_;
    }
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    public int getVipAllGiftCount() {
      return vipAllGift_.size();
    }
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    public myudfs.Common.MapItem getVipAllGift(int index) {
      return vipAllGift_.get(index);
    }
    /**
     * <code>repeated .MapItem vipAllGift = 103;</code>
     */
    public myudfs.Common.MapItemOrBuilder getVipAllGiftOrBuilder(
        int index) {
      return vipAllGift_.get(index);
    }

    // optional int32 guideIndex = 104;
    public static final int GUIDEINDEX_FIELD_NUMBER = 104;
    private int guideIndex_;
    /**
     * <code>optional int32 guideIndex = 104;</code>
     */
    public boolean hasGuideIndex() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 guideIndex = 104;</code>
     */
    public int getGuideIndex() {
      return guideIndex_;
    }

    // optional bool isQianDao = 105;
    public static final int ISQIANDAO_FIELD_NUMBER = 105;
    private boolean isQianDao_;
    /**
     * <code>optional bool isQianDao = 105;</code>
     *
     * <pre>
     * 今天是否签到
     * </pre>
     */
    public boolean hasIsQianDao() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool isQianDao = 105;</code>
     *
     * <pre>
     * 今天是否签到
     * </pre>
     */
    public boolean getIsQianDao() {
      return isQianDao_;
    }

    // optional .MapItem qianDao = 106;
    public static final int QIANDAO_FIELD_NUMBER = 106;
    private myudfs.Common.MapItem qianDao_;
    /**
     * <code>optional .MapItem qianDao = 106;</code>
     *
     * <pre>
     *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
     * </pre>
     */
    public boolean hasQianDao() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .MapItem qianDao = 106;</code>
     *
     * <pre>
     *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
     * </pre>
     */
    public myudfs.Common.MapItem getQianDao() {
      return qianDao_;
    }
    /**
     * <code>optional .MapItem qianDao = 106;</code>
     *
     * <pre>
     *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getQianDaoOrBuilder() {
      return qianDao_;
    }

    // optional int32 battleIndex = 107;
    public static final int BATTLEINDEX_FIELD_NUMBER = 107;
    private int battleIndex_;
    /**
     * <code>optional int32 battleIndex = 107;</code>
     *
     * <pre>
     * 前端用
     * </pre>
     */
    public boolean hasBattleIndex() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 battleIndex = 107;</code>
     *
     * <pre>
     * 前端用
     * </pre>
     */
    public int getBattleIndex() {
      return battleIndex_;
    }

    // optional int32 caishenCoinNum = 108;
    public static final int CAISHENCOINNUM_FIELD_NUMBER = 108;
    private int caishenCoinNum_;
    /**
     * <code>optional int32 caishenCoinNum = 108;</code>
     *
     * <pre>
     * 今天财神次数 0点清零
     * </pre>
     */
    public boolean hasCaishenCoinNum() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 caishenCoinNum = 108;</code>
     *
     * <pre>
     * 今天财神次数 0点清零
     * </pre>
     */
    public int getCaishenCoinNum() {
      return caishenCoinNum_;
    }

    // repeated int32 triggerGuideIndex = 109;
    public static final int TRIGGERGUIDEINDEX_FIELD_NUMBER = 109;
    private java.util.List<java.lang.Integer> triggerGuideIndex_;
    /**
     * <code>repeated int32 triggerGuideIndex = 109;</code>
     *
     * <pre>
     *触发式引导阶段标记
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTriggerGuideIndexList() {
      return triggerGuideIndex_;
    }
    /**
     * <code>repeated int32 triggerGuideIndex = 109;</code>
     *
     * <pre>
     *触发式引导阶段标记
     * </pre>
     */
    public int getTriggerGuideIndexCount() {
      return triggerGuideIndex_.size();
    }
    /**
     * <code>repeated int32 triggerGuideIndex = 109;</code>
     *
     * <pre>
     *触发式引导阶段标记
     * </pre>
     */
    public int getTriggerGuideIndex(int index) {
      return triggerGuideIndex_.get(index);
    }

    // repeated int32 chapterEasyReward = 110;
    public static final int CHAPTEREASYREWARD_FIELD_NUMBER = 110;
    private java.util.List<java.lang.Integer> chapterEasyReward_;
    /**
     * <code>repeated int32 chapterEasyReward = 110;</code>
     */
    public java.util.List<java.lang.Integer>
        getChapterEasyRewardList() {
      return chapterEasyReward_;
    }
    /**
     * <code>repeated int32 chapterEasyReward = 110;</code>
     */
    public int getChapterEasyRewardCount() {
      return chapterEasyReward_.size();
    }
    /**
     * <code>repeated int32 chapterEasyReward = 110;</code>
     */
    public int getChapterEasyReward(int index) {
      return chapterEasyReward_.get(index);
    }

    // repeated int32 chapterNormalReward = 111;
    public static final int CHAPTERNORMALREWARD_FIELD_NUMBER = 111;
    private java.util.List<java.lang.Integer> chapterNormalReward_;
    /**
     * <code>repeated int32 chapterNormalReward = 111;</code>
     */
    public java.util.List<java.lang.Integer>
        getChapterNormalRewardList() {
      return chapterNormalReward_;
    }
    /**
     * <code>repeated int32 chapterNormalReward = 111;</code>
     */
    public int getChapterNormalRewardCount() {
      return chapterNormalReward_.size();
    }
    /**
     * <code>repeated int32 chapterNormalReward = 111;</code>
     */
    public int getChapterNormalReward(int index) {
      return chapterNormalReward_.get(index);
    }

    // repeated int32 chapterHardReward = 112;
    public static final int CHAPTERHARDREWARD_FIELD_NUMBER = 112;
    private java.util.List<java.lang.Integer> chapterHardReward_;
    /**
     * <code>repeated int32 chapterHardReward = 112;</code>
     */
    public java.util.List<java.lang.Integer>
        getChapterHardRewardList() {
      return chapterHardReward_;
    }
    /**
     * <code>repeated int32 chapterHardReward = 112;</code>
     */
    public int getChapterHardRewardCount() {
      return chapterHardReward_.size();
    }
    /**
     * <code>repeated int32 chapterHardReward = 112;</code>
     */
    public int getChapterHardReward(int index) {
      return chapterHardReward_.get(index);
    }

    // repeated int32 activityEasyReward = 113;
    public static final int ACTIVITYEASYREWARD_FIELD_NUMBER = 113;
    private java.util.List<java.lang.Integer> activityEasyReward_;
    /**
     * <code>repeated int32 activityEasyReward = 113;</code>
     */
    public java.util.List<java.lang.Integer>
        getActivityEasyRewardList() {
      return activityEasyReward_;
    }
    /**
     * <code>repeated int32 activityEasyReward = 113;</code>
     */
    public int getActivityEasyRewardCount() {
      return activityEasyReward_.size();
    }
    /**
     * <code>repeated int32 activityEasyReward = 113;</code>
     */
    public int getActivityEasyReward(int index) {
      return activityEasyReward_.get(index);
    }

    // optional int32 cardEffectNum = 114;
    public static final int CARDEFFECTNUM_FIELD_NUMBER = 114;
    private int cardEffectNum_;
    /**
     * <code>optional int32 cardEffectNum = 114;</code>
     *
     * <pre>
     * 新增卡组位播放特效次数
     * </pre>
     */
    public boolean hasCardEffectNum() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 cardEffectNum = 114;</code>
     *
     * <pre>
     * 新增卡组位播放特效次数
     * </pre>
     */
    public int getCardEffectNum() {
      return cardEffectNum_;
    }

    // repeated int32 baoXiangReward = 115;
    public static final int BAOXIANGREWARD_FIELD_NUMBER = 115;
    private java.util.List<java.lang.Integer> baoXiangReward_;
    /**
     * <code>repeated int32 baoXiangReward = 115;</code>
     *
     * <pre>
     * 领取过的宝箱奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBaoXiangRewardList() {
      return baoXiangReward_;
    }
    /**
     * <code>repeated int32 baoXiangReward = 115;</code>
     *
     * <pre>
     * 领取过的宝箱奖励
     * </pre>
     */
    public int getBaoXiangRewardCount() {
      return baoXiangReward_.size();
    }
    /**
     * <code>repeated int32 baoXiangReward = 115;</code>
     *
     * <pre>
     * 领取过的宝箱奖励
     * </pre>
     */
    public int getBaoXiangReward(int index) {
      return baoXiangReward_.get(index);
    }

    // optional int32 newFriendInvite = 116;
    public static final int NEWFRIENDINVITE_FIELD_NUMBER = 116;
    private int newFriendInvite_;
    /**
     * <code>optional int32 newFriendInvite = 116;</code>
     *
     * <pre>
     * 是否有新的好友申请
     * </pre>
     */
    public boolean hasNewFriendInvite() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 newFriendInvite = 116;</code>
     *
     * <pre>
     * 是否有新的好友申请
     * </pre>
     */
    public int getNewFriendInvite() {
      return newFriendInvite_;
    }

    // optional int64 yunyouRefreshTime = 117;
    public static final int YUNYOUREFRESHTIME_FIELD_NUMBER = 117;
    private long yunyouRefreshTime_;
    /**
     * <code>optional int64 yunyouRefreshTime = 117;</code>
     *
     * <pre>
     * 上次云游仙人刷新时间
     * </pre>
     */
    public boolean hasYunyouRefreshTime() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 yunyouRefreshTime = 117;</code>
     *
     * <pre>
     * 上次云游仙人刷新时间
     * </pre>
     */
    public long getYunyouRefreshTime() {
      return yunyouRefreshTime_;
    }

    // repeated int32 yunyouItems = 118;
    public static final int YUNYOUITEMS_FIELD_NUMBER = 118;
    private java.util.List<java.lang.Integer> yunyouItems_;
    /**
     * <code>repeated int32 yunyouItems = 118;</code>
     *
     * <pre>
     * 购买过的云游道具
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getYunyouItemsList() {
      return yunyouItems_;
    }
    /**
     * <code>repeated int32 yunyouItems = 118;</code>
     *
     * <pre>
     * 购买过的云游道具
     * </pre>
     */
    public int getYunyouItemsCount() {
      return yunyouItems_.size();
    }
    /**
     * <code>repeated int32 yunyouItems = 118;</code>
     *
     * <pre>
     * 购买过的云游道具
     * </pre>
     */
    public int getYunyouItems(int index) {
      return yunyouItems_.get(index);
    }

    // optional int32 lvReward = 119;
    public static final int LVREWARD_FIELD_NUMBER = 119;
    private int lvReward_;
    /**
     * <code>optional int32 lvReward = 119;</code>
     *
     * <pre>
     * 上次等级抽奖
     * </pre>
     */
    public boolean hasLvReward() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 lvReward = 119;</code>
     *
     * <pre>
     * 上次等级抽奖
     * </pre>
     */
    public int getLvReward() {
      return lvReward_;
    }

    // optional int64 qiuBaoDate = 120;
    public static final int QIUBAODATE_FIELD_NUMBER = 120;
    private long qiuBaoDate_;
    /**
     * <code>optional int64 qiuBaoDate = 120;</code>
     */
    public boolean hasQiuBaoDate() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 qiuBaoDate = 120;</code>
     */
    public long getQiuBaoDate() {
      return qiuBaoDate_;
    }

    // optional int32 qiuBaoTimes = 121;
    public static final int QIUBAOTIMES_FIELD_NUMBER = 121;
    private int qiuBaoTimes_;
    /**
     * <code>optional int32 qiuBaoTimes = 121;</code>
     */
    public boolean hasQiuBaoTimes() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 qiuBaoTimes = 121;</code>
     */
    public int getQiuBaoTimes() {
      return qiuBaoTimes_;
    }

    // repeated .MapItem itemTask = 122;
    public static final int ITEMTASK_FIELD_NUMBER = 122;
    private java.util.List<myudfs.Common.MapItem> itemTask_;
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    public java.util.List<myudfs.Common.MapItem> getItemTaskList() {
      return itemTask_;
    }
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getItemTaskOrBuilderList() {
      return itemTask_;
    }
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    public int getItemTaskCount() {
      return itemTask_.size();
    }
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    public myudfs.Common.MapItem getItemTask(int index) {
      return itemTask_.get(index);
    }
    /**
     * <code>repeated .MapItem itemTask = 122;</code>
     */
    public myudfs.Common.MapItemOrBuilder getItemTaskOrBuilder(
        int index) {
      return itemTask_.get(index);
    }

    // repeated .MapItem cardTask = 123;
    public static final int CARDTASK_FIELD_NUMBER = 123;
    private java.util.List<myudfs.Common.MapItem> cardTask_;
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    public java.util.List<myudfs.Common.MapItem> getCardTaskList() {
      return cardTask_;
    }
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getCardTaskOrBuilderList() {
      return cardTask_;
    }
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    public int getCardTaskCount() {
      return cardTask_.size();
    }
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    public myudfs.Common.MapItem getCardTask(int index) {
      return cardTask_.get(index);
    }
    /**
     * <code>repeated .MapItem cardTask = 123;</code>
     */
    public myudfs.Common.MapItemOrBuilder getCardTaskOrBuilder(
        int index) {
      return cardTask_.get(index);
    }

    // repeated int32 collectCardReward = 124;
    public static final int COLLECTCARDREWARD_FIELD_NUMBER = 124;
    private java.util.List<java.lang.Integer> collectCardReward_;
    /**
     * <code>repeated int32 collectCardReward = 124;</code>
     */
    public java.util.List<java.lang.Integer>
        getCollectCardRewardList() {
      return collectCardReward_;
    }
    /**
     * <code>repeated int32 collectCardReward = 124;</code>
     */
    public int getCollectCardRewardCount() {
      return collectCardReward_.size();
    }
    /**
     * <code>repeated int32 collectCardReward = 124;</code>
     */
    public int getCollectCardReward(int index) {
      return collectCardReward_.get(index);
    }

    // repeated int32 cardReward = 125;
    public static final int CARDREWARD_FIELD_NUMBER = 125;
    private java.util.List<java.lang.Integer> cardReward_;
    /**
     * <code>repeated int32 cardReward = 125;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardRewardList() {
      return cardReward_;
    }
    /**
     * <code>repeated int32 cardReward = 125;</code>
     */
    public int getCardRewardCount() {
      return cardReward_.size();
    }
    /**
     * <code>repeated int32 cardReward = 125;</code>
     */
    public int getCardReward(int index) {
      return cardReward_.get(index);
    }

    // repeated int32 itemReward = 126;
    public static final int ITEMREWARD_FIELD_NUMBER = 126;
    private java.util.List<java.lang.Integer> itemReward_;
    /**
     * <code>repeated int32 itemReward = 126;</code>
     */
    public java.util.List<java.lang.Integer>
        getItemRewardList() {
      return itemReward_;
    }
    /**
     * <code>repeated int32 itemReward = 126;</code>
     */
    public int getItemRewardCount() {
      return itemReward_.size();
    }
    /**
     * <code>repeated int32 itemReward = 126;</code>
     */
    public int getItemReward(int index) {
      return itemReward_.get(index);
    }

    // repeated .MapItem vipNums = 127;
    public static final int VIPNUMS_FIELD_NUMBER = 127;
    private java.util.List<myudfs.Common.MapItem> vipNums_;
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getVipNumsList() {
      return vipNums_;
    }
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getVipNumsOrBuilderList() {
      return vipNums_;
    }
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    public int getVipNumsCount() {
      return vipNums_.size();
    }
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    public myudfs.Common.MapItem getVipNums(int index) {
      return vipNums_.get(index);
    }
    /**
     * <code>repeated .MapItem vipNums = 127;</code>
     *
     * <pre>
     *vip 人数
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getVipNumsOrBuilder(
        int index) {
      return vipNums_.get(index);
    }

    // repeated int32 firstPayExtraIds = 128;
    public static final int FIRSTPAYEXTRAIDS_FIELD_NUMBER = 128;
    private java.util.List<java.lang.Integer> firstPayExtraIds_;
    /**
     * <code>repeated int32 firstPayExtraIds = 128;</code>
     *
     * <pre>
     * 已获得首充额外奖励的支付id列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFirstPayExtraIdsList() {
      return firstPayExtraIds_;
    }
    /**
     * <code>repeated int32 firstPayExtraIds = 128;</code>
     *
     * <pre>
     * 已获得首充额外奖励的支付id列表
     * </pre>
     */
    public int getFirstPayExtraIdsCount() {
      return firstPayExtraIds_.size();
    }
    /**
     * <code>repeated int32 firstPayExtraIds = 128;</code>
     *
     * <pre>
     * 已获得首充额外奖励的支付id列表
     * </pre>
     */
    public int getFirstPayExtraIds(int index) {
      return firstPayExtraIds_.get(index);
    }

    // optional int32 assetBundle_State = 129;
    public static final int ASSETBUNDLE_STATE_FIELD_NUMBER = 129;
    private int assetBundleState_;
    /**
     * <code>optional int32 assetBundle_State = 129;</code>
     *
     * <pre>
     * 记录资源下载状态
     * </pre>
     */
    public boolean hasAssetBundleState() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 assetBundle_State = 129;</code>
     *
     * <pre>
     * 记录资源下载状态
     * </pre>
     */
    public int getAssetBundleState() {
      return assetBundleState_;
    }

    // optional int64 userId = 130;
    public static final int USERID_FIELD_NUMBER = 130;
    private long userId_;
    /**
     * <code>optional int64 userId = 130;</code>
     *
     * <pre>
     * 帐号id
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 userId = 130;</code>
     *
     * <pre>
     * 帐号id
     * </pre>
     */
    public long getUserId() {
      return userId_;
    }

    // optional int32 serverId = 131;
    public static final int SERVERID_FIELD_NUMBER = 131;
    private int serverId_;
    /**
     * <code>optional int32 serverId = 131;</code>
     *
     * <pre>
     * 服务器id
     * </pre>
     */
    public boolean hasServerId() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 serverId = 131;</code>
     *
     * <pre>
     * 服务器id
     * </pre>
     */
    public int getServerId() {
      return serverId_;
    }

    // optional string username = 132;
    public static final int USERNAME_FIELD_NUMBER = 132;
    private java.lang.Object username_;
    /**
     * <code>optional string username = 132;</code>
     *
     * <pre>
     * 用户名
     * </pre>
     */
    public boolean hasUsername() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional string username = 132;</code>
     *
     * <pre>
     * 用户名
     * </pre>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          username_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string username = 132;</code>
     *
     * <pre>
     * 用户名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .PvpExchangeItem pvpExchangeItems = 133;
    public static final int PVPEXCHANGEITEMS_FIELD_NUMBER = 133;
    private java.util.List<myudfs.Common.PvpExchangeItem> pvpExchangeItems_;
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    public java.util.List<myudfs.Common.PvpExchangeItem> getPvpExchangeItemsList() {
      return pvpExchangeItems_;
    }
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.PvpExchangeItemOrBuilder> 
        getPvpExchangeItemsOrBuilderList() {
      return pvpExchangeItems_;
    }
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    public int getPvpExchangeItemsCount() {
      return pvpExchangeItems_.size();
    }
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    public myudfs.Common.PvpExchangeItem getPvpExchangeItems(int index) {
      return pvpExchangeItems_.get(index);
    }
    /**
     * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
     *
     * <pre>
     * pvp声望兑换物品
     * </pre>
     */
    public myudfs.Common.PvpExchangeItemOrBuilder getPvpExchangeItemsOrBuilder(
        int index) {
      return pvpExchangeItems_.get(index);
    }

    // optional int32 hunyu = 134;
    public static final int HUNYU_FIELD_NUMBER = 134;
    private int hunyu_;
    /**
     * <code>optional int32 hunyu = 134;</code>
     *
     * <pre>
     * 魂玉
     * </pre>
     */
    public boolean hasHunyu() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 hunyu = 134;</code>
     *
     * <pre>
     * 魂玉
     * </pre>
     */
    public int getHunyu() {
      return hunyu_;
    }

    // repeated int32 firstDrawIds = 135;
    public static final int FIRSTDRAWIDS_FIELD_NUMBER = 135;
    private java.util.List<java.lang.Integer> firstDrawIds_;
    /**
     * <code>repeated int32 firstDrawIds = 135;</code>
     *
     * <pre>
     * 首抽卡包id列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFirstDrawIdsList() {
      return firstDrawIds_;
    }
    /**
     * <code>repeated int32 firstDrawIds = 135;</code>
     *
     * <pre>
     * 首抽卡包id列表
     * </pre>
     */
    public int getFirstDrawIdsCount() {
      return firstDrawIds_.size();
    }
    /**
     * <code>repeated int32 firstDrawIds = 135;</code>
     *
     * <pre>
     * 首抽卡包id列表
     * </pre>
     */
    public int getFirstDrawIds(int index) {
      return firstDrawIds_.get(index);
    }

    // optional uint64 openDate = 136;
    public static final int OPENDATE_FIELD_NUMBER = 136;
    private long openDate_;
    /**
     * <code>optional uint64 openDate = 136;</code>
     *
     * <pre>
     *服务器开服时间
     * </pre>
     */
    public boolean hasOpenDate() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint64 openDate = 136;</code>
     *
     * <pre>
     *服务器开服时间
     * </pre>
     */
    public long getOpenDate() {
      return openDate_;
    }

    // repeated .MapItem todyTastePantaos = 137;
    public static final int TODYTASTEPANTAOS_FIELD_NUMBER = 137;
    private java.util.List<myudfs.Common.MapItem> todyTastePantaos_;
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getTodyTastePantaosList() {
      return todyTastePantaos_;
    }
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getTodyTastePantaosOrBuilderList() {
      return todyTastePantaos_;
    }
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    public int getTodyTastePantaosCount() {
      return todyTastePantaos_.size();
    }
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    public myudfs.Common.MapItem getTodyTastePantaos(int index) {
      return todyTastePantaos_.get(index);
    }
    /**
     * <code>repeated .MapItem todyTastePantaos = 137;</code>
     *
     * <pre>
     * 当天指定时间是否品尝了蟠桃
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getTodyTastePantaosOrBuilder(
        int index) {
      return todyTastePantaos_.get(index);
    }

    // optional int32 battleScore = 138;
    public static final int BATTLESCORE_FIELD_NUMBER = 138;
    private int battleScore_;
    /**
     * <code>optional int32 battleScore = 138;</code>
     *
     * <pre>
     * 总战力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 battleScore = 138;</code>
     *
     * <pre>
     * 总战力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    // optional int32 lingLi = 139;
    public static final int LINGLI_FIELD_NUMBER = 139;
    private int lingLi_;
    /**
     * <code>optional int32 lingLi = 139;</code>
     *
     * <pre>
     * 灵力
     * </pre>
     */
    public boolean hasLingLi() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 lingLi = 139;</code>
     *
     * <pre>
     * 灵力
     * </pre>
     */
    public int getLingLi() {
      return lingLi_;
    }

    // optional int32 buyLingli = 140;
    public static final int BUYLINGLI_FIELD_NUMBER = 140;
    private int buyLingli_;
    /**
     * <code>optional int32 buyLingli = 140;</code>
     */
    public boolean hasBuyLingli() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 buyLingli = 140;</code>
     */
    public int getBuyLingli() {
      return buyLingli_;
    }

    // optional uint64 lingLiDate = 141;
    public static final int LINGLIDATE_FIELD_NUMBER = 141;
    private long lingLiDate_;
    /**
     * <code>optional uint64 lingLiDate = 141;</code>
     */
    public boolean hasLingLiDate() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 lingLiDate = 141;</code>
     */
    public long getLingLiDate() {
      return lingLiDate_;
    }

    // repeated int32 shenMoDuiHuan = 151;
    public static final int SHENMODUIHUAN_FIELD_NUMBER = 151;
    private java.util.List<java.lang.Integer> shenMoDuiHuan_;
    /**
     * <code>repeated int32 shenMoDuiHuan = 151;</code>
     *
     * <pre>
     * 神魔兑换道具
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getShenMoDuiHuanList() {
      return shenMoDuiHuan_;
    }
    /**
     * <code>repeated int32 shenMoDuiHuan = 151;</code>
     *
     * <pre>
     * 神魔兑换道具
     * </pre>
     */
    public int getShenMoDuiHuanCount() {
      return shenMoDuiHuan_.size();
    }
    /**
     * <code>repeated int32 shenMoDuiHuan = 151;</code>
     *
     * <pre>
     * 神魔兑换道具
     * </pre>
     */
    public int getShenMoDuiHuan(int index) {
      return shenMoDuiHuan_.get(index);
    }

    // repeated int32 buyShenMoItem = 152;
    public static final int BUYSHENMOITEM_FIELD_NUMBER = 152;
    private java.util.List<java.lang.Integer> buyShenMoItem_;
    /**
     * <code>repeated int32 buyShenMoItem = 152;</code>
     *
     * <pre>
     * 购买的神魔兑换道具
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBuyShenMoItemList() {
      return buyShenMoItem_;
    }
    /**
     * <code>repeated int32 buyShenMoItem = 152;</code>
     *
     * <pre>
     * 购买的神魔兑换道具
     * </pre>
     */
    public int getBuyShenMoItemCount() {
      return buyShenMoItem_.size();
    }
    /**
     * <code>repeated int32 buyShenMoItem = 152;</code>
     *
     * <pre>
     * 购买的神魔兑换道具
     * </pre>
     */
    public int getBuyShenMoItem(int index) {
      return buyShenMoItem_.get(index);
    }

    // optional int32 xiuWei = 153;
    public static final int XIUWEI_FIELD_NUMBER = 153;
    private int xiuWei_;
    /**
     * <code>optional int32 xiuWei = 153;</code>
     */
    public boolean hasXiuWei() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 xiuWei = 153;</code>
     */
    public int getXiuWei() {
      return xiuWei_;
    }

    // optional bool hasPvpReward = 154;
    public static final int HASPVPREWARD_FIELD_NUMBER = 154;
    private boolean hasPvpReward_;
    /**
     * <code>optional bool hasPvpReward = 154;</code>
     *
     * <pre>
     *true:有新pvp奖励
     * </pre>
     */
    public boolean hasHasPvpReward() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool hasPvpReward = 154;</code>
     *
     * <pre>
     *true:有新pvp奖励
     * </pre>
     */
    public boolean getHasPvpReward() {
      return hasPvpReward_;
    }

    // optional int64 gongDe = 155;
    public static final int GONGDE_FIELD_NUMBER = 155;
    private long gongDe_;
    /**
     * <code>optional int64 gongDe = 155;</code>
     *
     * <pre>
     * 功德
     * </pre>
     */
    public boolean hasGongDe() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 gongDe = 155;</code>
     *
     * <pre>
     * 功德
     * </pre>
     */
    public long getGongDe() {
      return gongDe_;
    }

    // repeated int32 gongDeReward = 156;
    public static final int GONGDEREWARD_FIELD_NUMBER = 156;
    private java.util.List<java.lang.Integer> gongDeReward_;
    /**
     * <code>repeated int32 gongDeReward = 156;</code>
     *
     * <pre>
     * 领取过的功德达标奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGongDeRewardList() {
      return gongDeReward_;
    }
    /**
     * <code>repeated int32 gongDeReward = 156;</code>
     *
     * <pre>
     * 领取过的功德达标奖励
     * </pre>
     */
    public int getGongDeRewardCount() {
      return gongDeReward_.size();
    }
    /**
     * <code>repeated int32 gongDeReward = 156;</code>
     *
     * <pre>
     * 领取过的功德达标奖励
     * </pre>
     */
    public int getGongDeReward(int index) {
      return gongDeReward_.get(index);
    }

    // optional int32 rankRise = 157;
    public static final int RANKRISE_FIELD_NUMBER = 157;
    private int rankRise_;
    /**
     * <code>optional int32 rankRise = 157;</code>
     *
     * <pre>
     *1下降 2上升  0不变
     * </pre>
     */
    public boolean hasRankRise() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 rankRise = 157;</code>
     *
     * <pre>
     *1下降 2上升  0不变
     * </pre>
     */
    public int getRankRise() {
      return rankRise_;
    }

    // optional int64 rank = 158;
    public static final int RANK_FIELD_NUMBER = 158;
    private long rank_;
    /**
     * <code>optional int64 rank = 158;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    public boolean hasRank() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 rank = 158;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    public long getRank() {
      return rank_;
    }

    // repeated .MapItem drawCard = 159;
    public static final int DRAWCARD_FIELD_NUMBER = 159;
    private java.util.List<myudfs.Common.MapItem> drawCard_;
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getDrawCardList() {
      return drawCard_;
    }
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getDrawCardOrBuilderList() {
      return drawCard_;
    }
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public int getDrawCardCount() {
      return drawCard_.size();
    }
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public myudfs.Common.MapItem getDrawCard(int index) {
      return drawCard_.get(index);
    }
    /**
     * <code>repeated .MapItem drawCard = 159;</code>
     *
     * <pre>
     * key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getDrawCardOrBuilder(
        int index) {
      return drawCard_.get(index);
    }

    // optional bool hufaOpen = 160;
    public static final int HUFAOPEN_FIELD_NUMBER = 160;
    private boolean hufaOpen_;
    /**
     * <code>optional bool hufaOpen = 160;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasHufaOpen() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool hufaOpen = 160;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean getHufaOpen() {
      return hufaOpen_;
    }

    // optional int32 caishenSilverNum = 161;
    public static final int CAISHENSILVERNUM_FIELD_NUMBER = 161;
    private int caishenSilverNum_;
    /**
     * <code>optional int32 caishenSilverNum = 161;</code>
     *
     * <pre>
     *财神银两
     * </pre>
     */
    public boolean hasCaishenSilverNum() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 caishenSilverNum = 161;</code>
     *
     * <pre>
     *财神银两
     * </pre>
     */
    public int getCaishenSilverNum() {
      return caishenSilverNum_;
    }

    // optional bool drawCardReward2 = 162;
    public static final int DRAWCARDREWARD2_FIELD_NUMBER = 162;
    private boolean drawCardReward2_;
    /**
     * <code>optional bool drawCardReward2 = 162;</code>
     *
     * <pre>
     *每日抽卡奖励 0点清零
     * </pre>
     */
    public boolean hasDrawCardReward2() {
      return ((bitField2_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool drawCardReward2 = 162;</code>
     *
     * <pre>
     *每日抽卡奖励 0点清零
     * </pre>
     */
    public boolean getDrawCardReward2() {
      return drawCardReward2_;
    }

    // repeated string playerPrefs = 163;
    public static final int PLAYERPREFS_FIELD_NUMBER = 163;
    private com.google.protobuf.LazyStringList playerPrefs_;
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    public java.util.List<java.lang.String>
        getPlayerPrefsList() {
      return playerPrefs_;
    }
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    public int getPlayerPrefsCount() {
      return playerPrefs_.size();
    }
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    public java.lang.String getPlayerPrefs(int index) {
      return playerPrefs_.get(index);
    }
    /**
     * <code>repeated string playerPrefs = 163;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerPrefsBytes(int index) {
      return playerPrefs_.getByteString(index);
    }

    // repeated .DaliyMissionItem missionMap = 164;
    public static final int MISSIONMAP_FIELD_NUMBER = 164;
    private java.util.List<myudfs.Common.DaliyMissionItem> missionMap_;
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    public java.util.List<myudfs.Common.DaliyMissionItem> getMissionMapList() {
      return missionMap_;
    }
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    public java.util.List<? extends myudfs.Common.DaliyMissionItemOrBuilder> 
        getMissionMapOrBuilderList() {
      return missionMap_;
    }
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    public int getMissionMapCount() {
      return missionMap_.size();
    }
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    public myudfs.Common.DaliyMissionItem getMissionMap(int index) {
      return missionMap_.get(index);
    }
    /**
     * <code>repeated .DaliyMissionItem missionMap = 164;</code>
     */
    public myudfs.Common.DaliyMissionItemOrBuilder getMissionMapOrBuilder(
        int index) {
      return missionMap_.get(index);
    }

    // optional int32 missionNum = 165;
    public static final int MISSIONNUM_FIELD_NUMBER = 165;
    private int missionNum_;
    /**
     * <code>optional int32 missionNum = 165;</code>
     *
     * <pre>
     * 完成每日任务的个数
     * </pre>
     */
    public boolean hasMissionNum() {
      return ((bitField2_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 missionNum = 165;</code>
     *
     * <pre>
     * 完成每日任务的个数
     * </pre>
     */
    public int getMissionNum() {
      return missionNum_;
    }

    // optional int32 yunyouNum = 166;
    public static final int YUNYOUNUM_FIELD_NUMBER = 166;
    private int yunyouNum_;
    /**
     * <code>optional int32 yunyouNum = 166;</code>
     *
     * <pre>
     * 云游兑换数量
     * </pre>
     */
    public boolean hasYunyouNum() {
      return ((bitField2_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 yunyouNum = 166;</code>
     *
     * <pre>
     * 云游兑换数量
     * </pre>
     */
    public int getYunyouNum() {
      return yunyouNum_;
    }

    // optional int32 pvpExchangeNum = 167;
    public static final int PVPEXCHANGENUM_FIELD_NUMBER = 167;
    private int pvpExchangeNum_;
    /**
     * <code>optional int32 pvpExchangeNum = 167;</code>
     *
     * <pre>
     * pvp兑换数量
     * </pre>
     */
    public boolean hasPvpExchangeNum() {
      return ((bitField2_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 pvpExchangeNum = 167;</code>
     *
     * <pre>
     * pvp兑换数量
     * </pre>
     */
    public int getPvpExchangeNum() {
      return pvpExchangeNum_;
    }

    // optional int32 friendNum = 168;
    public static final int FRIENDNUM_FIELD_NUMBER = 168;
    private int friendNum_;
    /**
     * <code>optional int32 friendNum = 168;</code>
     */
    public boolean hasFriendNum() {
      return ((bitField2_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 friendNum = 168;</code>
     */
    public int getFriendNum() {
      return friendNum_;
    }

    // optional bool clearShenMoItem = 171;
    public static final int CLEARSHENMOITEM_FIELD_NUMBER = 171;
    private boolean clearShenMoItem_;
    /**
     * <code>optional bool clearShenMoItem = 171;</code>
     *
     * <pre>
     * 清空神魔兑换 true清空
     * </pre>
     */
    public boolean hasClearShenMoItem() {
      return ((bitField2_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool clearShenMoItem = 171;</code>
     *
     * <pre>
     * 清空神魔兑换 true清空
     * </pre>
     */
    public boolean getClearShenMoItem() {
      return clearShenMoItem_;
    }

    // optional bool refreshHour24 = 172;
    public static final int REFRESHHOUR24_FIELD_NUMBER = 172;
    private boolean refreshHour24_;
    /**
     * <code>optional bool refreshHour24 = 172;</code>
     *
     * <pre>
     * 0点清空数据 true：清空
     * </pre>
     */
    public boolean hasRefreshHour24() {
      return ((bitField2_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool refreshHour24 = 172;</code>
     *
     * <pre>
     * 0点清空数据 true：清空
     * </pre>
     */
    public boolean getRefreshHour24() {
      return refreshHour24_;
    }

    // optional bool pay = 173;
    public static final int PAY_FIELD_NUMBER = 173;
    private boolean pay_;
    /**
     * <code>optional bool pay = 173;</code>
     *
     * <pre>
     *true:充值消息
     * </pre>
     */
    public boolean hasPay() {
      return ((bitField2_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool pay = 173;</code>
     *
     * <pre>
     *true:充值消息
     * </pre>
     */
    public boolean getPay() {
      return pay_;
    }

    // optional bool isShutUp = 174;
    public static final int ISSHUTUP_FIELD_NUMBER = 174;
    private boolean isShutUp_;
    /**
     * <code>optional bool isShutUp = 174;</code>
     */
    public boolean hasIsShutUp() {
      return ((bitField2_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional bool isShutUp = 174;</code>
     */
    public boolean getIsShutUp() {
      return isShutUp_;
    }

    // optional uint64 shutUpDate = 175;
    public static final int SHUTUPDATE_FIELD_NUMBER = 175;
    private long shutUpDate_;
    /**
     * <code>optional uint64 shutUpDate = 175;</code>
     */
    public boolean hasShutUpDate() {
      return ((bitField2_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint64 shutUpDate = 175;</code>
     */
    public long getShutUpDate() {
      return shutUpDate_;
    }

    // optional uint64 shutUpEnd = 176;
    public static final int SHUTUPEND_FIELD_NUMBER = 176;
    private long shutUpEnd_;
    /**
     * <code>optional uint64 shutUpEnd = 176;</code>
     */
    public boolean hasShutUpEnd() {
      return ((bitField2_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint64 shutUpEnd = 176;</code>
     */
    public long getShutUpEnd() {
      return shutUpEnd_;
    }

    // repeated .ActivityItem activityItem = 177;
    public static final int ACTIVITYITEM_FIELD_NUMBER = 177;
    private java.util.List<myudfs.Common.ActivityItem> activityItem_;
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    public java.util.List<myudfs.Common.ActivityItem> getActivityItemList() {
      return activityItem_;
    }
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    public java.util.List<? extends myudfs.Common.ActivityItemOrBuilder> 
        getActivityItemOrBuilderList() {
      return activityItem_;
    }
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    public int getActivityItemCount() {
      return activityItem_.size();
    }
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    public myudfs.Common.ActivityItem getActivityItem(int index) {
      return activityItem_.get(index);
    }
    /**
     * <code>repeated .ActivityItem activityItem = 177;</code>
     */
    public myudfs.Common.ActivityItemOrBuilder getActivityItemOrBuilder(
        int index) {
      return activityItem_.get(index);
    }

    // repeated .PayReward payReward = 178;
    public static final int PAYREWARD_FIELD_NUMBER = 178;
    private java.util.List<myudfs.Common.PayReward> payReward_;
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    public java.util.List<myudfs.Common.PayReward> getPayRewardList() {
      return payReward_;
    }
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    public java.util.List<? extends myudfs.Common.PayRewardOrBuilder> 
        getPayRewardOrBuilderList() {
      return payReward_;
    }
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    public int getPayRewardCount() {
      return payReward_.size();
    }
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    public myudfs.Common.PayReward getPayReward(int index) {
      return payReward_.get(index);
    }
    /**
     * <code>repeated .PayReward payReward = 178;</code>
     */
    public myudfs.Common.PayRewardOrBuilder getPayRewardOrBuilder(
        int index) {
      return payReward_.get(index);
    }

    // optional int32 yunYouTime = 179;
    public static final int YUNYOUTIME_FIELD_NUMBER = 179;
    private int yunYouTime_;
    /**
     * <code>optional int32 yunYouTime = 179;</code>
     *
     * <pre>
     *云游刷新次数
     * </pre>
     */
    public boolean hasYunYouTime() {
      return ((bitField2_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 yunYouTime = 179;</code>
     *
     * <pre>
     *云游刷新次数
     * </pre>
     */
    public int getYunYouTime() {
      return yunYouTime_;
    }

    // optional int32 pvpChangeTime = 180;
    public static final int PVPCHANGETIME_FIELD_NUMBER = 180;
    private int pvpChangeTime_;
    /**
     * <code>optional int32 pvpChangeTime = 180;</code>
     *
     * <pre>
     *决战兑换商店刷新次数
     * </pre>
     */
    public boolean hasPvpChangeTime() {
      return ((bitField2_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 pvpChangeTime = 180;</code>
     *
     * <pre>
     *决战兑换商店刷新次数
     * </pre>
     */
    public int getPvpChangeTime() {
      return pvpChangeTime_;
    }

    // optional int32 shenMoChangeTime = 181;
    public static final int SHENMOCHANGETIME_FIELD_NUMBER = 181;
    private int shenMoChangeTime_;
    /**
     * <code>optional int32 shenMoChangeTime = 181;</code>
     *
     * <pre>
     *神魔兑换商店次数
     * </pre>
     */
    public boolean hasShenMoChangeTime() {
      return ((bitField2_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 shenMoChangeTime = 181;</code>
     *
     * <pre>
     *神魔兑换商店次数
     * </pre>
     */
    public int getShenMoChangeTime() {
      return shenMoChangeTime_;
    }

    // optional int32 shenMoNum = 182;
    public static final int SHENMONUM_FIELD_NUMBER = 182;
    private int shenMoNum_;
    /**
     * <code>optional int32 shenMoNum = 182;</code>
     *
     * <pre>
     * 挑战神魔次数
     * </pre>
     */
    public boolean hasShenMoNum() {
      return ((bitField2_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 shenMoNum = 182;</code>
     *
     * <pre>
     * 挑战神魔次数
     * </pre>
     */
    public int getShenMoNum() {
      return shenMoNum_;
    }

    // optional int32 itemLvUpNum = 183;
    public static final int ITEMLVUPNUM_FIELD_NUMBER = 183;
    private int itemLvUpNum_;
    /**
     * <code>optional int32 itemLvUpNum = 183;</code>
     *
     * <pre>
     * 装备强化次数
     * </pre>
     */
    public boolean hasItemLvUpNum() {
      return ((bitField2_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 itemLvUpNum = 183;</code>
     *
     * <pre>
     * 装备强化次数
     * </pre>
     */
    public int getItemLvUpNum() {
      return itemLvUpNum_;
    }

    // optional int32 cardLvUpNum = 184;
    public static final int CARDLVUPNUM_FIELD_NUMBER = 184;
    private int cardLvUpNum_;
    /**
     * <code>optional int32 cardLvUpNum = 184;</code>
     *
     * <pre>
     * 卡牌强化次数
     * </pre>
     */
    public boolean hasCardLvUpNum() {
      return ((bitField2_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 cardLvUpNum = 184;</code>
     *
     * <pre>
     * 卡牌强化次数
     * </pre>
     */
    public int getCardLvUpNum() {
      return cardLvUpNum_;
    }

    // optional int32 shenTongNum = 185;
    public static final int SHENTONGNUM_FIELD_NUMBER = 185;
    private int shenTongNum_;
    /**
     * <code>optional int32 shenTongNum = 185;</code>
     *
     * <pre>
     * 提升申通次数
     * </pre>
     */
    public boolean hasShenTongNum() {
      return ((bitField2_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 shenTongNum = 185;</code>
     *
     * <pre>
     * 提升申通次数
     * </pre>
     */
    public int getShenTongNum() {
      return shenTongNum_;
    }

    // optional int32 skillNum = 186;
    public static final int SKILLNUM_FIELD_NUMBER = 186;
    private int skillNum_;
    /**
     * <code>optional int32 skillNum = 186;</code>
     *
     * <pre>
     * 绝技升级次数
     * </pre>
     */
    public boolean hasSkillNum() {
      return ((bitField2_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 skillNum = 186;</code>
     *
     * <pre>
     * 绝技升级次数
     * </pre>
     */
    public int getSkillNum() {
      return skillNum_;
    }

    // optional int32 huFaNum = 187;
    public static final int HUFANUM_FIELD_NUMBER = 187;
    private int huFaNum_;
    /**
     * <code>optional int32 huFaNum = 187;</code>
     *
     * <pre>
     * 护法洗练次数
     * </pre>
     */
    public boolean hasHuFaNum() {
      return ((bitField2_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 huFaNum = 187;</code>
     *
     * <pre>
     * 护法洗练次数
     * </pre>
     */
    public int getHuFaNum() {
      return huFaNum_;
    }

    // optional int32 xiuLianNum = 188;
    public static final int XIULIANNUM_FIELD_NUMBER = 188;
    private int xiuLianNum_;
    /**
     * <code>optional int32 xiuLianNum = 188;</code>
     *
     * <pre>
     * 卡牌修炼次数
     * </pre>
     */
    public boolean hasXiuLianNum() {
      return ((bitField2_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 xiuLianNum = 188;</code>
     *
     * <pre>
     * 卡牌修炼次数
     * </pre>
     */
    public int getXiuLianNum() {
      return xiuLianNum_;
    }

    // optional int32 changeName = 189;
    public static final int CHANGENAME_FIELD_NUMBER = 189;
    private int changeName_;
    /**
     * <code>optional int32 changeName = 189;</code>
     *
     * <pre>
     * 修改名字的次数
     * </pre>
     */
    public boolean hasChangeName() {
      return ((bitField3_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 changeName = 189;</code>
     *
     * <pre>
     * 修改名字的次数
     * </pre>
     */
    public int getChangeName() {
      return changeName_;
    }

    // repeated int32 chengjiuReward = 190;
    public static final int CHENGJIUREWARD_FIELD_NUMBER = 190;
    private java.util.List<java.lang.Integer> chengjiuReward_;
    /**
     * <code>repeated int32 chengjiuReward = 190;</code>
     *
     * <pre>
     *领取过的pvp成就奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getChengjiuRewardList() {
      return chengjiuReward_;
    }
    /**
     * <code>repeated int32 chengjiuReward = 190;</code>
     *
     * <pre>
     *领取过的pvp成就奖励
     * </pre>
     */
    public int getChengjiuRewardCount() {
      return chengjiuReward_.size();
    }
    /**
     * <code>repeated int32 chengjiuReward = 190;</code>
     *
     * <pre>
     *领取过的pvp成就奖励
     * </pre>
     */
    public int getChengjiuReward(int index) {
      return chengjiuReward_.get(index);
    }

    // optional int32 fenXiangRewardTimes = 191;
    public static final int FENXIANGREWARDTIMES_FIELD_NUMBER = 191;
    private int fenXiangRewardTimes_;
    /**
     * <code>optional int32 fenXiangRewardTimes = 191;</code>
     *
     * <pre>
     *微信本日分享次数
     * </pre>
     */
    public boolean hasFenXiangRewardTimes() {
      return ((bitField3_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 fenXiangRewardTimes = 191;</code>
     *
     * <pre>
     *微信本日分享次数
     * </pre>
     */
    public int getFenXiangRewardTimes() {
      return fenXiangRewardTimes_;
    }

    // optional bool weiXinFirstShare = 192;
    public static final int WEIXINFIRSTSHARE_FIELD_NUMBER = 192;
    private boolean weiXinFirstShare_;
    /**
     * <code>optional bool weiXinFirstShare = 192;</code>
     *
     * <pre>
     * true:微信首次分享奖励已经领取
     * </pre>
     */
    public boolean hasWeiXinFirstShare() {
      return ((bitField3_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool weiXinFirstShare = 192;</code>
     *
     * <pre>
     * true:微信首次分享奖励已经领取
     * </pre>
     */
    public boolean getWeiXinFirstShare() {
      return weiXinFirstShare_;
    }

    // optional bool weiXinOpen = 193;
    public static final int WEIXINOPEN_FIELD_NUMBER = 193;
    private boolean weiXinOpen_;
    /**
     * <code>optional bool weiXinOpen = 193;</code>
     *
     * <pre>
     * true:微信分享活动开启
     * </pre>
     */
    public boolean hasWeiXinOpen() {
      return ((bitField3_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool weiXinOpen = 193;</code>
     *
     * <pre>
     * true:微信分享活动开启
     * </pre>
     */
    public boolean getWeiXinOpen() {
      return weiXinOpen_;
    }

    // optional bool xilianOpen = 194;
    public static final int XILIANOPEN_FIELD_NUMBER = 194;
    private boolean xilianOpen_;
    /**
     * <code>optional bool xilianOpen = 194;</code>
     *
     * <pre>
     *洗练是否开启
     * </pre>
     */
    public boolean hasXilianOpen() {
      return ((bitField3_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool xilianOpen = 194;</code>
     *
     * <pre>
     *洗练是否开启
     * </pre>
     */
    public boolean getXilianOpen() {
      return xilianOpen_;
    }

    // optional int32 pvpWinMax = 195;
    public static final int PVPWINMAX_FIELD_NUMBER = 195;
    private int pvpWinMax_;
    /**
     * <code>optional int32 pvpWinMax = 195;</code>
     *
     * <pre>
     * 连胜次数，奖励用
     * </pre>
     */
    public boolean hasPvpWinMax() {
      return ((bitField3_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pvpWinMax = 195;</code>
     *
     * <pre>
     * 连胜次数，奖励用
     * </pre>
     */
    public int getPvpWinMax() {
      return pvpWinMax_;
    }

    // optional string inviteCode = 196;
    public static final int INVITECODE_FIELD_NUMBER = 196;
    private java.lang.Object inviteCode_;
    /**
     * <code>optional string inviteCode = 196;</code>
     *
     * <pre>
     *个人邀请码
     * </pre>
     */
    public boolean hasInviteCode() {
      return ((bitField3_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string inviteCode = 196;</code>
     *
     * <pre>
     *个人邀请码
     * </pre>
     */
    public java.lang.String getInviteCode() {
      java.lang.Object ref = inviteCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inviteCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string inviteCode = 196;</code>
     *
     * <pre>
     *个人邀请码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInviteCodeBytes() {
      java.lang.Object ref = inviteCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inviteCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 inviteNum = 197;
    public static final int INVITENUM_FIELD_NUMBER = 197;
    private int inviteNum_;
    /**
     * <code>optional int32 inviteNum = 197;</code>
     *
     * <pre>
     * 邀请人数
     * </pre>
     */
    public boolean hasInviteNum() {
      return ((bitField3_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 inviteNum = 197;</code>
     *
     * <pre>
     * 邀请人数
     * </pre>
     */
    public int getInviteNum() {
      return inviteNum_;
    }

    // optional int64 inviterId = 198;
    public static final int INVITERID_FIELD_NUMBER = 198;
    private long inviterId_;
    /**
     * <code>optional int64 inviterId = 198;</code>
     *
     * <pre>
     * 自己的邀请人id
     * </pre>
     */
    public boolean hasInviterId() {
      return ((bitField3_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 inviterId = 198;</code>
     *
     * <pre>
     * 自己的邀请人id
     * </pre>
     */
    public long getInviterId() {
      return inviterId_;
    }

    // optional bool clearFirstPayExtraIds = 199;
    public static final int CLEARFIRSTPAYEXTRAIDS_FIELD_NUMBER = 199;
    private boolean clearFirstPayExtraIds_;
    /**
     * <code>optional bool clearFirstPayExtraIds = 199;</code>
     *
     * <pre>
     * true:清空客户端的FirstPayExtraIds列表
     * </pre>
     */
    public boolean hasClearFirstPayExtraIds() {
      return ((bitField3_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool clearFirstPayExtraIds = 199;</code>
     *
     * <pre>
     * true:清空客户端的FirstPayExtraIds列表
     * </pre>
     */
    public boolean getClearFirstPayExtraIds() {
      return clearFirstPayExtraIds_;
    }

    // optional .MapItem3 loginActivity = 200;
    public static final int LOGINACTIVITY_FIELD_NUMBER = 200;
    private myudfs.Common.MapItem3 loginActivity_;
    /**
     * <code>optional .MapItem3 loginActivity = 200;</code>
     *
     * <pre>
     *登陆领奖活动
     * </pre>
     */
    public boolean hasLoginActivity() {
      return ((bitField3_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .MapItem3 loginActivity = 200;</code>
     *
     * <pre>
     *登陆领奖活动
     * </pre>
     */
    public myudfs.Common.MapItem3 getLoginActivity() {
      return loginActivity_;
    }
    /**
     * <code>optional .MapItem3 loginActivity = 200;</code>
     *
     * <pre>
     *登陆领奖活动
     * </pre>
     */
    public myudfs.Common.MapItem3OrBuilder getLoginActivityOrBuilder() {
      return loginActivity_;
    }

    // optional int32 choukaQuan = 201;
    public static final int CHOUKAQUAN_FIELD_NUMBER = 201;
    private int choukaQuan_;
    /**
     * <code>optional int32 choukaQuan = 201;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    public boolean hasChoukaQuan() {
      return ((bitField3_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 choukaQuan = 201;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    public int getChoukaQuan() {
      return choukaQuan_;
    }

    // optional int32 shenJiangScore = 206;
    public static final int SHENJIANGSCORE_FIELD_NUMBER = 206;
    private int shenJiangScore_;
    /**
     * <code>optional int32 shenJiangScore = 206;</code>
     *
     * <pre>
     *神将活动积分
     * </pre>
     */
    public boolean hasShenJiangScore() {
      return ((bitField3_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 shenJiangScore = 206;</code>
     *
     * <pre>
     *神将活动积分
     * </pre>
     */
    public int getShenJiangScore() {
      return shenJiangScore_;
    }

    // optional int32 shenJiangTotalScore = 207;
    public static final int SHENJIANGTOTALSCORE_FIELD_NUMBER = 207;
    private int shenJiangTotalScore_;
    /**
     * <code>optional int32 shenJiangTotalScore = 207;</code>
     *
     * <pre>
     * 神将活动总积分
     * </pre>
     */
    public boolean hasShenJiangTotalScore() {
      return ((bitField3_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 shenJiangTotalScore = 207;</code>
     *
     * <pre>
     * 神将活动总积分
     * </pre>
     */
    public int getShenJiangTotalScore() {
      return shenJiangTotalScore_;
    }

    // optional int32 shenJiangRank = 208;
    public static final int SHENJIANGRANK_FIELD_NUMBER = 208;
    private int shenJiangRank_;
    /**
     * <code>optional int32 shenJiangRank = 208;</code>
     *
     * <pre>
     * 神将活动排名
     * </pre>
     */
    public boolean hasShenJiangRank() {
      return ((bitField3_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 shenJiangRank = 208;</code>
     *
     * <pre>
     * 神将活动排名
     * </pre>
     */
    public int getShenJiangRank() {
      return shenJiangRank_;
    }

    // repeated int32 inviteNumReward = 209;
    public static final int INVITENUMREWARD_FIELD_NUMBER = 209;
    private java.util.List<java.lang.Integer> inviteNumReward_;
    /**
     * <code>repeated int32 inviteNumReward = 209;</code>
     *
     * <pre>
     * 已经领过的邀请人奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getInviteNumRewardList() {
      return inviteNumReward_;
    }
    /**
     * <code>repeated int32 inviteNumReward = 209;</code>
     *
     * <pre>
     * 已经领过的邀请人奖励
     * </pre>
     */
    public int getInviteNumRewardCount() {
      return inviteNumReward_.size();
    }
    /**
     * <code>repeated int32 inviteNumReward = 209;</code>
     *
     * <pre>
     * 已经领过的邀请人奖励
     * </pre>
     */
    public int getInviteNumReward(int index) {
      return inviteNumReward_.get(index);
    }

    // repeated string yuanshenBox = 210;
    public static final int YUANSHENBOX_FIELD_NUMBER = 210;
    private com.google.protobuf.LazyStringList yuanshenBox_;
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    public java.util.List<java.lang.String>
        getYuanshenBoxList() {
      return yuanshenBox_;
    }
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    public int getYuanshenBoxCount() {
      return yuanshenBox_.size();
    }
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    public java.lang.String getYuanshenBox(int index) {
      return yuanshenBox_.get(index);
    }
    /**
     * <code>repeated string yuanshenBox = 210;</code>
     *
     * <pre>
     *魂匣推荐元神
     * </pre>
     */
    public com.google.protobuf.ByteString
        getYuanshenBoxBytes(int index) {
      return yuanshenBox_.getByteString(index);
    }

    // repeated .MapItem boxs = 211;
    public static final int BOXS_FIELD_NUMBER = 211;
    private java.util.List<myudfs.Common.MapItem> boxs_;
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getBoxsList() {
      return boxs_;
    }
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getBoxsOrBuilderList() {
      return boxs_;
    }
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    public int getBoxsCount() {
      return boxs_.size();
    }
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    public myudfs.Common.MapItem getBoxs(int index) {
      return boxs_.get(index);
    }
    /**
     * <code>repeated .MapItem boxs = 211;</code>
     *
     * <pre>
     * 宝箱 key：宝箱id value：数量
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getBoxsOrBuilder(
        int index) {
      return boxs_.get(index);
    }

    // repeated .MapItem buyBox = 212;
    public static final int BUYBOX_FIELD_NUMBER = 212;
    private java.util.List<myudfs.Common.MapItem> buyBox_;
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getBuyBoxList() {
      return buyBox_;
    }
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getBuyBoxOrBuilderList() {
      return buyBox_;
    }
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    public int getBuyBoxCount() {
      return buyBox_.size();
    }
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    public myudfs.Common.MapItem getBuyBox(int index) {
      return buyBox_.get(index);
    }
    /**
     * <code>repeated .MapItem buyBox = 212;</code>
     *
     * <pre>
     * 购买宝箱的次数，0点清零
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getBuyBoxOrBuilder(
        int index) {
      return buyBox_.get(index);
    }

    // optional int32 zhuanpan = 213;
    public static final int ZHUANPAN_FIELD_NUMBER = 213;
    private int zhuanpan_;
    /**
     * <code>optional int32 zhuanpan = 213;</code>
     *
     * <pre>
     *每天转盘次数
     * </pre>
     */
    public boolean hasZhuanpan() {
      return ((bitField3_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 zhuanpan = 213;</code>
     *
     * <pre>
     *每天转盘次数
     * </pre>
     */
    public int getZhuanpan() {
      return zhuanpan_;
    }

    // repeated int32 sevenReward = 214;
    public static final int SEVENREWARD_FIELD_NUMBER = 214;
    private java.util.List<java.lang.Integer> sevenReward_;
    /**
     * <code>repeated int32 sevenReward = 214;</code>
     *
     * <pre>
     * 领取过的7天奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSevenRewardList() {
      return sevenReward_;
    }
    /**
     * <code>repeated int32 sevenReward = 214;</code>
     *
     * <pre>
     * 领取过的7天奖励
     * </pre>
     */
    public int getSevenRewardCount() {
      return sevenReward_.size();
    }
    /**
     * <code>repeated int32 sevenReward = 214;</code>
     *
     * <pre>
     * 领取过的7天奖励
     * </pre>
     */
    public int getSevenReward(int index) {
      return sevenReward_.get(index);
    }

    // repeated int32 playerNum = 215;
    public static final int PLAYERNUM_FIELD_NUMBER = 215;
    private java.util.List<java.lang.Integer> playerNum_;
    /**
     * <code>repeated int32 playerNum = 215;</code>
     *
     * <pre>
     * 邀请码需要达到的人数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerNumList() {
      return playerNum_;
    }
    /**
     * <code>repeated int32 playerNum = 215;</code>
     *
     * <pre>
     * 邀请码需要达到的人数
     * </pre>
     */
    public int getPlayerNumCount() {
      return playerNum_.size();
    }
    /**
     * <code>repeated int32 playerNum = 215;</code>
     *
     * <pre>
     * 邀请码需要达到的人数
     * </pre>
     */
    public int getPlayerNum(int index) {
      return playerNum_.get(index);
    }

    // repeated int32 rewardId = 216;
    public static final int REWARDID_FIELD_NUMBER = 216;
    private java.util.List<java.lang.Integer> rewardId_;
    /**
     * <code>repeated int32 rewardId = 216;</code>
     *
     * <pre>
     * 邀请码奖励id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRewardIdList() {
      return rewardId_;
    }
    /**
     * <code>repeated int32 rewardId = 216;</code>
     *
     * <pre>
     * 邀请码奖励id
     * </pre>
     */
    public int getRewardIdCount() {
      return rewardId_.size();
    }
    /**
     * <code>repeated int32 rewardId = 216;</code>
     *
     * <pre>
     * 邀请码奖励id
     * </pre>
     */
    public int getRewardId(int index) {
      return rewardId_.get(index);
    }

    // optional bool inviteReward = 217;
    public static final int INVITEREWARD_FIELD_NUMBER = 217;
    private boolean inviteReward_;
    /**
     * <code>optional bool inviteReward = 217;</code>
     *
     * <pre>
     * true:已经领取过填写邀请人奖励
     * </pre>
     */
    public boolean hasInviteReward() {
      return ((bitField3_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool inviteReward = 217;</code>
     *
     * <pre>
     * true:已经领取过填写邀请人奖励
     * </pre>
     */
    public boolean getInviteReward() {
      return inviteReward_;
    }

    // optional int64 lingHun = 218;
    public static final int LINGHUN_FIELD_NUMBER = 218;
    private long lingHun_;
    /**
     * <code>optional int64 lingHun = 218;</code>
     *
     * <pre>
     * 六道中的货币：灵魂
     * </pre>
     */
    public boolean hasLingHun() {
      return ((bitField3_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 lingHun = 218;</code>
     *
     * <pre>
     * 六道中的货币：灵魂
     * </pre>
     */
    public long getLingHun() {
      return lingHun_;
    }

    // repeated int32 liuDaoDuiHuanIds = 219;
    public static final int LIUDAODUIHUANIDS_FIELD_NUMBER = 219;
    private java.util.List<java.lang.Integer> liuDaoDuiHuanIds_;
    /**
     * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
     *
     * <pre>
     * 六道中的兑换物品
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLiuDaoDuiHuanIdsList() {
      return liuDaoDuiHuanIds_;
    }
    /**
     * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
     *
     * <pre>
     * 六道中的兑换物品
     * </pre>
     */
    public int getLiuDaoDuiHuanIdsCount() {
      return liuDaoDuiHuanIds_.size();
    }
    /**
     * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
     *
     * <pre>
     * 六道中的兑换物品
     * </pre>
     */
    public int getLiuDaoDuiHuanIds(int index) {
      return liuDaoDuiHuanIds_.get(index);
    }

    // repeated int32 liuDaoDuiHuanIdsBuyed = 220;
    public static final int LIUDAODUIHUANIDSBUYED_FIELD_NUMBER = 220;
    private java.util.List<java.lang.Integer> liuDaoDuiHuanIdsBuyed_;
    /**
     * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
     *
     * <pre>
     * true:已经购买的六道兑换物品
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLiuDaoDuiHuanIdsBuyedList() {
      return liuDaoDuiHuanIdsBuyed_;
    }
    /**
     * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
     *
     * <pre>
     * true:已经购买的六道兑换物品
     * </pre>
     */
    public int getLiuDaoDuiHuanIdsBuyedCount() {
      return liuDaoDuiHuanIdsBuyed_.size();
    }
    /**
     * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
     *
     * <pre>
     * true:已经购买的六道兑换物品
     * </pre>
     */
    public int getLiuDaoDuiHuanIdsBuyed(int index) {
      return liuDaoDuiHuanIdsBuyed_.get(index);
    }

    // optional int32 liuDaoChangeTime = 221;
    public static final int LIUDAOCHANGETIME_FIELD_NUMBER = 221;
    private int liuDaoChangeTime_;
    /**
     * <code>optional int32 liuDaoChangeTime = 221;</code>
     *
     * <pre>
     * 六道兑换　当天已刷新次数
     * </pre>
     */
    public boolean hasLiuDaoChangeTime() {
      return ((bitField3_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 liuDaoChangeTime = 221;</code>
     *
     * <pre>
     * 六道兑换　当天已刷新次数
     * </pre>
     */
    public int getLiuDaoChangeTime() {
      return liuDaoChangeTime_;
    }

    // optional int32 liuDaoBaoXiangOpenNum = 222;
    public static final int LIUDAOBAOXIANGOPENNUM_FIELD_NUMBER = 222;
    private int liuDaoBaoXiangOpenNum_;
    /**
     * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
     *
     * <pre>
     * 六道宝箱已开次数
     * </pre>
     */
    public boolean hasLiuDaoBaoXiangOpenNum() {
      return ((bitField3_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
     *
     * <pre>
     * 六道宝箱已开次数
     * </pre>
     */
    public int getLiuDaoBaoXiangOpenNum() {
      return liuDaoBaoXiangOpenNum_;
    }

    // optional int32 vipCardAllLift = 226;
    public static final int VIPCARDALLLIFT_FIELD_NUMBER = 226;
    private int vipCardAllLift_;
    /**
     * <code>optional int32 vipCardAllLift = 226;</code>
     *
     * <pre>
     *1:为终身月卡用户
     * </pre>
     */
    public boolean hasVipCardAllLift() {
      return ((bitField3_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 vipCardAllLift = 226;</code>
     *
     * <pre>
     *1:为终身月卡用户
     * </pre>
     */
    public int getVipCardAllLift() {
      return vipCardAllLift_;
    }

    // optional bool vipAllLifeReward = 227;
    public static final int VIPALLLIFEREWARD_FIELD_NUMBER = 227;
    private boolean vipAllLifeReward_;
    /**
     * <code>optional bool vipAllLifeReward = 227;</code>
     *
     * <pre>
     * true:本日终身月卡奖励已经领取
     * </pre>
     */
    public boolean hasVipAllLifeReward() {
      return ((bitField3_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional bool vipAllLifeReward = 227;</code>
     *
     * <pre>
     * true:本日终身月卡奖励已经领取
     * </pre>
     */
    public boolean getVipAllLifeReward() {
      return vipAllLifeReward_;
    }

    // repeated int64 cardGroupLiuDao = 228;
    public static final int CARDGROUPLIUDAO_FIELD_NUMBER = 228;
    private java.util.List<java.lang.Long> cardGroupLiuDao_;
    /**
     * <code>repeated int64 cardGroupLiuDao = 228;</code>
     *
     * <pre>
     *六道卡组(卡牌的id,  card.id)
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCardGroupLiuDaoList() {
      return cardGroupLiuDao_;
    }
    /**
     * <code>repeated int64 cardGroupLiuDao = 228;</code>
     *
     * <pre>
     *六道卡组(卡牌的id,  card.id)
     * </pre>
     */
    public int getCardGroupLiuDaoCount() {
      return cardGroupLiuDao_.size();
    }
    /**
     * <code>repeated int64 cardGroupLiuDao = 228;</code>
     *
     * <pre>
     *六道卡组(卡牌的id,  card.id)
     * </pre>
     */
    public long getCardGroupLiuDao(int index) {
      return cardGroupLiuDao_.get(index);
    }

    // repeated int32 cardGroupFightLiuDao = 229;
    public static final int CARDGROUPFIGHTLIUDAO_FIELD_NUMBER = 229;
    private java.util.List<java.lang.Integer> cardGroupFightLiuDao_;
    /**
     * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
     *
     * <pre>
     *六道战前卡组与自己的卡组对应关系
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardGroupFightLiuDaoList() {
      return cardGroupFightLiuDao_;
    }
    /**
     * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
     *
     * <pre>
     *六道战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getCardGroupFightLiuDaoCount() {
      return cardGroupFightLiuDao_.size();
    }
    /**
     * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
     *
     * <pre>
     *六道战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getCardGroupFightLiuDao(int index) {
      return cardGroupFightLiuDao_.get(index);
    }

    // repeated .MapItem drawCardFree = 230;
    public static final int DRAWCARDFREE_FIELD_NUMBER = 230;
    private java.util.List<myudfs.Common.MapItem> drawCardFree_;
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getDrawCardFreeList() {
      return drawCardFree_;
    }
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getDrawCardFreeOrBuilderList() {
      return drawCardFree_;
    }
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public int getDrawCardFreeCount() {
      return drawCardFree_.size();
    }
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public myudfs.Common.MapItem getDrawCardFree(int index) {
      return drawCardFree_.get(index);
    }
    /**
     * <code>repeated .MapItem drawCardFree = 230;</code>
     *
     * <pre>
     * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getDrawCardFreeOrBuilder(
        int index) {
      return drawCardFree_.get(index);
    }

    // optional int32 liudaoEnterHeroLimit = 231;
    public static final int LIUDAOENTERHEROLIMIT_FIELD_NUMBER = 231;
    private int liudaoEnterHeroLimit_;
    /**
     * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
     *
     * <pre>
     * 六道允许进入的最多卡牌数量
     * </pre>
     */
    public boolean hasLiudaoEnterHeroLimit() {
      return ((bitField3_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
     *
     * <pre>
     * 六道允许进入的最多卡牌数量
     * </pre>
     */
    public int getLiudaoEnterHeroLimit() {
      return liudaoEnterHeroLimit_;
    }

    // optional int32 todayQuestNum = 232;
    public static final int TODAYQUESTNUM_FIELD_NUMBER = 232;
    private int todayQuestNum_;
    /**
     * <code>optional int32 todayQuestNum = 232;</code>
     *
     * <pre>
     * 每天任意西行次数0点清零
     * </pre>
     */
    public boolean hasTodayQuestNum() {
      return ((bitField3_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 todayQuestNum = 232;</code>
     *
     * <pre>
     * 每天任意西行次数0点清零
     * </pre>
     */
    public int getTodayQuestNum() {
      return todayQuestNum_;
    }

    // optional int32 cardId = 233;
    public static final int CARDID_FIELD_NUMBER = 233;
    private int cardId_;
    /**
     * <code>optional int32 cardId = 233;</code>
     *
     * <pre>
     * 队长卡配置id
     * </pre>
     */
    public boolean hasCardId() {
      return ((bitField3_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 cardId = 233;</code>
     *
     * <pre>
     * 队长卡配置id
     * </pre>
     */
    public int getCardId() {
      return cardId_;
    }

    // optional int32 enterLiuDaoTimes = 234;
    public static final int ENTERLIUDAOTIMES_FIELD_NUMBER = 234;
    private int enterLiuDaoTimes_;
    /**
     * <code>optional int32 enterLiuDaoTimes = 234;</code>
     *
     * <pre>
     *每天六道派遣的次数
     * </pre>
     */
    public boolean hasEnterLiuDaoTimes() {
      return ((bitField3_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 enterLiuDaoTimes = 234;</code>
     *
     * <pre>
     *每天六道派遣的次数
     * </pre>
     */
    public int getEnterLiuDaoTimes() {
      return enterLiuDaoTimes_;
    }

    // optional int32 xunshan = 235;
    public static final int XUNSHAN_FIELD_NUMBER = 235;
    private int xunshan_;
    /**
     * <code>optional int32 xunshan = 235;</code>
     *
     * <pre>
     * 巡山次数
     * </pre>
     */
    public boolean hasXunshan() {
      return ((bitField3_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 xunshan = 235;</code>
     *
     * <pre>
     * 巡山次数
     * </pre>
     */
    public int getXunshan() {
      return xunshan_;
    }

    // optional int32 dailyLeftTimes = 236;
    public static final int DAILYLEFTTIMES_FIELD_NUMBER = 236;
    private int dailyLeftTimes_;
    /**
     * <code>optional int32 dailyLeftTimes = 236;</code>
     *
     * <pre>
     * 人参果每日赠送次数的剩余次数
     * </pre>
     */
    public boolean hasDailyLeftTimes() {
      return ((bitField3_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 dailyLeftTimes = 236;</code>
     *
     * <pre>
     * 人参果每日赠送次数的剩余次数
     * </pre>
     */
    public int getDailyLeftTimes() {
      return dailyLeftTimes_;
    }

    // optional int32 dailyBuyTimes = 257;
    public static final int DAILYBUYTIMES_FIELD_NUMBER = 257;
    private int dailyBuyTimes_;
    /**
     * <code>optional int32 dailyBuyTimes = 257;</code>
     *
     * <pre>
     * 人生果每日vip购买次数
     * </pre>
     */
    public boolean hasDailyBuyTimes() {
      return ((bitField3_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 dailyBuyTimes = 257;</code>
     *
     * <pre>
     * 人生果每日vip购买次数
     * </pre>
     */
    public int getDailyBuyTimes() {
      return dailyBuyTimes_;
    }

    // optional int64 nextCDTime = 258;
    public static final int NEXTCDTIME_FIELD_NUMBER = 258;
    private long nextCDTime_;
    /**
     * <code>optional int64 nextCDTime = 258;</code>
     *
     * <pre>
     * 人参果下次进行人参果活动的冷却时间
     * </pre>
     */
    public boolean hasNextCDTime() {
      return ((bitField3_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 nextCDTime = 258;</code>
     *
     * <pre>
     * 人参果下次进行人参果活动的冷却时间
     * </pre>
     */
    public long getNextCDTime() {
      return nextCDTime_;
    }

    // optional int32 shouHuId = 259;
    public static final int SHOUHUID_FIELD_NUMBER = 259;
    private int shouHuId_;
    /**
     * <code>optional int32 shouHuId = 259;</code>
     *
     * <pre>
     * 人参果活动开始时的守护id
     * </pre>
     */
    public boolean hasShouHuId() {
      return ((bitField3_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 shouHuId = 259;</code>
     *
     * <pre>
     * 人参果活动开始时的守护id
     * </pre>
     */
    public int getShouHuId() {
      return shouHuId_;
    }

    // optional int32 cancelCDTimes = 260;
    public static final int CANCELCDTIMES_FIELD_NUMBER = 260;
    private int cancelCDTimes_;
    /**
     * <code>optional int32 cancelCDTimes = 260;</code>
     *
     * <pre>
     * 人参果每日取消cd次数
     * </pre>
     */
    public boolean hasCancelCDTimes() {
      return ((bitField3_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 cancelCDTimes = 260;</code>
     *
     * <pre>
     * 人参果每日取消cd次数
     * </pre>
     */
    public int getCancelCDTimes() {
      return cancelCDTimes_;
    }

    // repeated int32 xunshanStr = 261;
    public static final int XUNSHANSTR_FIELD_NUMBER = 261;
    private java.util.List<java.lang.Integer> xunshanStr_;
    /**
     * <code>repeated int32 xunshanStr = 261;</code>
     *
     * <pre>
     * 巡山对话id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getXunshanStrList() {
      return xunshanStr_;
    }
    /**
     * <code>repeated int32 xunshanStr = 261;</code>
     *
     * <pre>
     * 巡山对话id
     * </pre>
     */
    public int getXunshanStrCount() {
      return xunshanStr_.size();
    }
    /**
     * <code>repeated int32 xunshanStr = 261;</code>
     *
     * <pre>
     * 巡山对话id
     * </pre>
     */
    public int getXunshanStr(int index) {
      return xunshanStr_.get(index);
    }

    // optional .PlayerGangItem gangInfo = 262;
    public static final int GANGINFO_FIELD_NUMBER = 262;
    private myudfs.Common.PlayerGangItem gangInfo_;
    /**
     * <code>optional .PlayerGangItem gangInfo = 262;</code>
     *
     * <pre>
     * 玩家帮派信息
     * </pre>
     */
    public boolean hasGangInfo() {
      return ((bitField4_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PlayerGangItem gangInfo = 262;</code>
     *
     * <pre>
     * 玩家帮派信息
     * </pre>
     */
    public myudfs.Common.PlayerGangItem getGangInfo() {
      return gangInfo_;
    }
    /**
     * <code>optional .PlayerGangItem gangInfo = 262;</code>
     *
     * <pre>
     * 玩家帮派信息
     * </pre>
     */
    public myudfs.Common.PlayerGangItemOrBuilder getGangInfoOrBuilder() {
      return gangInfo_;
    }

    // optional bool hasDFBet = 263;
    public static final int HASDFBET_FIELD_NUMBER = 263;
    private boolean hasDFBet_;
    /**
     * <code>optional bool hasDFBet = 263;</code>
     *
     * <pre>
     * 斗法是否已押注
     * </pre>
     */
    public boolean hasHasDFBet() {
      return ((bitField4_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool hasDFBet = 263;</code>
     *
     * <pre>
     * 斗法是否已押注
     * </pre>
     */
    public boolean getHasDFBet() {
      return hasDFBet_;
    }

    // repeated .MapItem gangExchange = 264;
    public static final int GANGEXCHANGE_FIELD_NUMBER = 264;
    private java.util.List<myudfs.Common.MapItem> gangExchange_;
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getGangExchangeList() {
      return gangExchange_;
    }
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getGangExchangeOrBuilderList() {
      return gangExchange_;
    }
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    public int getGangExchangeCount() {
      return gangExchange_.size();
    }
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    public myudfs.Common.MapItem getGangExchange(int index) {
      return gangExchange_.get(index);
    }
    /**
     * <code>repeated .MapItem gangExchange = 264;</code>
     *
     * <pre>
     * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getGangExchangeOrBuilder(
        int index) {
      return gangExchange_.get(index);
    }

    // optional int32 gangRefreshExchangeTimes = 265;
    public static final int GANGREFRESHEXCHANGETIMES_FIELD_NUMBER = 265;
    private int gangRefreshExchangeTimes_;
    /**
     * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
     *
     * <pre>
     * 帮派兑换刷新次数
     * </pre>
     */
    public boolean hasGangRefreshExchangeTimes() {
      return ((bitField4_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
     *
     * <pre>
     * 帮派兑换刷新次数
     * </pre>
     */
    public int getGangRefreshExchangeTimes() {
      return gangRefreshExchangeTimes_;
    }

    // optional .DFTeamItem dfTeamInfo = 266;
    public static final int DFTEAMINFO_FIELD_NUMBER = 266;
    private myudfs.Common.DFTeamItem dfTeamInfo_;
    /**
     * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
     *
     * <pre>
     * 斗法队伍信息
     * </pre>
     */
    public boolean hasDfTeamInfo() {
      return ((bitField4_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
     *
     * <pre>
     * 斗法队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItem getDfTeamInfo() {
      return dfTeamInfo_;
    }
    /**
     * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
     *
     * <pre>
     * 斗法队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItemOrBuilder getDfTeamInfoOrBuilder() {
      return dfTeamInfo_;
    }

    // optional int32 vipDailyGiftBuyCount = 267;
    public static final int VIPDAILYGIFTBUYCOUNT_FIELD_NUMBER = 267;
    private int vipDailyGiftBuyCount_;
    /**
     * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
     *
     * <pre>
     * 每日vip礼包的当日购买次数
     * </pre>
     */
    public boolean hasVipDailyGiftBuyCount() {
      return ((bitField4_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
     *
     * <pre>
     * 每日vip礼包的当日购买次数
     * </pre>
     */
    public int getVipDailyGiftBuyCount() {
      return vipDailyGiftBuyCount_;
    }

    // optional int32 trialsDFTimes = 268;
    public static final int TRIALSDFTIMES_FIELD_NUMBER = 268;
    private int trialsDFTimes_;
    /**
     * <code>optional int32 trialsDFTimes = 268;</code>
     *
     * <pre>
     * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
     * </pre>
     */
    public boolean hasTrialsDFTimes() {
      return ((bitField4_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 trialsDFTimes = 268;</code>
     *
     * <pre>
     * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
     * </pre>
     */
    public int getTrialsDFTimes() {
      return trialsDFTimes_;
    }

    // optional int64 dfBetId = 269;
    public static final int DFBETID_FIELD_NUMBER = 269;
    private long dfBetId_;
    /**
     * <code>optional int64 dfBetId = 269;</code>
     *
     * <pre>
     * 押注的玩家id
     * </pre>
     */
    public boolean hasDfBetId() {
      return ((bitField4_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 dfBetId = 269;</code>
     *
     * <pre>
     * 押注的玩家id
     * </pre>
     */
    public long getDfBetId() {
      return dfBetId_;
    }

    // optional .Xunxian xunxian = 270;
    public static final int XUNXIAN_FIELD_NUMBER = 270;
    private myudfs.Common.Xunxian xunxian_;
    /**
     * <code>optional .Xunxian xunxian = 270;</code>
     *
     * <pre>
     * 寻仙捉妖的相关信息
     * </pre>
     */
    public boolean hasXunxian() {
      return ((bitField4_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .Xunxian xunxian = 270;</code>
     *
     * <pre>
     * 寻仙捉妖的相关信息
     * </pre>
     */
    public myudfs.Common.Xunxian getXunxian() {
      return xunxian_;
    }
    /**
     * <code>optional .Xunxian xunxian = 270;</code>
     *
     * <pre>
     * 寻仙捉妖的相关信息
     * </pre>
     */
    public myudfs.Common.XunxianOrBuilder getXunxianOrBuilder() {
      return xunxian_;
    }

    // optional int32 auctionType = 271;
    public static final int AUCTIONTYPE_FIELD_NUMBER = 271;
    private int auctionType_;
    /**
     * <code>optional int32 auctionType = 271;</code>
     *
     * <pre>
     * 拍卖行限制类型 0:无限制 1:有限制
     * </pre>
     */
    public boolean hasAuctionType() {
      return ((bitField4_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 auctionType = 271;</code>
     *
     * <pre>
     * 拍卖行限制类型 0:无限制 1:有限制
     * </pre>
     */
    public int getAuctionType() {
      return auctionType_;
    }

    // optional .SecurityCodeItem securityCodeItem = 272;
    public static final int SECURITYCODEITEM_FIELD_NUMBER = 272;
    private myudfs.Common.SecurityCodeItem securityCodeItem_;
    /**
     * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
     *
     * <pre>
     * 安全码信息
     * </pre>
     */
    public boolean hasSecurityCodeItem() {
      return ((bitField4_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
     *
     * <pre>
     * 安全码信息
     * </pre>
     */
    public myudfs.Common.SecurityCodeItem getSecurityCodeItem() {
      return securityCodeItem_;
    }
    /**
     * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
     *
     * <pre>
     * 安全码信息
     * </pre>
     */
    public myudfs.Common.SecurityCodeItemOrBuilder getSecurityCodeItemOrBuilder() {
      return securityCodeItem_;
    }

    // optional bool login1100 = 273;
    public static final int LOGIN1100_FIELD_NUMBER = 273;
    private boolean login1100_;
    /**
     * <code>optional bool login1100 = 273;</code>
     *
     * <pre>
     * true:第一次登陆成功后获得的playerItem 1100
     * </pre>
     */
    public boolean hasLogin1100() {
      return ((bitField4_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool login1100 = 273;</code>
     *
     * <pre>
     * true:第一次登陆成功后获得的playerItem 1100
     * </pre>
     */
    public boolean getLogin1100() {
      return login1100_;
    }

    // optional bool isShowDFInMainUI = 274;
    public static final int ISSHOWDFINMAINUI_FIELD_NUMBER = 274;
    private boolean isShowDFInMainUI_;
    /**
     * <code>optional bool isShowDFInMainUI = 274;</code>
     *
     * <pre>
     * 是否在主ui显示斗法
     * </pre>
     */
    public boolean hasIsShowDFInMainUI() {
      return ((bitField4_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool isShowDFInMainUI = 274;</code>
     *
     * <pre>
     * 是否在主ui显示斗法
     * </pre>
     */
    public boolean getIsShowDFInMainUI() {
      return isShowDFInMainUI_;
    }

    // optional bool isVipUpByPlayerLv = 275;
    public static final int ISVIPUPBYPLAYERLV_FIELD_NUMBER = 275;
    private boolean isVipUpByPlayerLv_;
    /**
     * <code>optional bool isVipUpByPlayerLv = 275;</code>
     *
     * <pre>
     * 是否当角色的等级到达指定等级时
     * </pre>
     */
    public boolean hasIsVipUpByPlayerLv() {
      return ((bitField4_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool isVipUpByPlayerLv = 275;</code>
     *
     * <pre>
     * 是否当角色的等级到达指定等级时
     * </pre>
     */
    public boolean getIsVipUpByPlayerLv() {
      return isVipUpByPlayerLv_;
    }

    // optional .HongbaoActivityMessage hongbaoActivitys = 276;
    public static final int HONGBAOACTIVITYS_FIELD_NUMBER = 276;
    private myudfs.Common.HongbaoActivityMessage hongbaoActivitys_;
    /**
     * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
     *
     * <pre>
     * 红包活动数据
     * </pre>
     */
    public boolean hasHongbaoActivitys() {
      return ((bitField4_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
     *
     * <pre>
     * 红包活动数据
     * </pre>
     */
    public myudfs.Common.HongbaoActivityMessage getHongbaoActivitys() {
      return hongbaoActivitys_;
    }
    /**
     * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
     *
     * <pre>
     * 红包活动数据
     * </pre>
     */
    public myudfs.Common.HongbaoActivityMessageOrBuilder getHongbaoActivitysOrBuilder() {
      return hongbaoActivitys_;
    }

    // optional bool isOpenedBoxEveryDay = 277;
    public static final int ISOPENEDBOXEVERYDAY_FIELD_NUMBER = 277;
    private boolean isOpenedBoxEveryDay_;
    /**
     * <code>optional bool isOpenedBoxEveryDay = 277;</code>
     *
     * <pre>
     * 龙宫宝箱每天是不是打开了龙宫宝箱
     * </pre>
     */
    public boolean hasIsOpenedBoxEveryDay() {
      return ((bitField4_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool isOpenedBoxEveryDay = 277;</code>
     *
     * <pre>
     * 龙宫宝箱每天是不是打开了龙宫宝箱
     * </pre>
     */
    public boolean getIsOpenedBoxEveryDay() {
      return isOpenedBoxEveryDay_;
    }

    // optional bool admobSwitch = 278;
    public static final int ADMOBSWITCH_FIELD_NUMBER = 278;
    private boolean admobSwitch_;
    /**
     * <code>optional bool admobSwitch = 278;</code>
     *
     * <pre>
     * 客户端广告判断
     * </pre>
     */
    public boolean hasAdmobSwitch() {
      return ((bitField4_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool admobSwitch = 278;</code>
     *
     * <pre>
     * 客户端广告判断
     * </pre>
     */
    public boolean getAdmobSwitch() {
      return admobSwitch_;
    }

    // optional .ArenaTeamItem arenaTeamInfo = 280;
    public static final int ARENATEAMINFO_FIELD_NUMBER = 280;
    private myudfs.Common.ArenaTeamItem arenaTeamInfo_;
    /**
     * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
     *
     * <pre>
     * optional int32 baoKuTime=279;// 当前剩余次数
     * </pre>
     */
    public boolean hasArenaTeamInfo() {
      return ((bitField4_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
     *
     * <pre>
     * optional int32 baoKuTime=279;// 当前剩余次数
     * </pre>
     */
    public myudfs.Common.ArenaTeamItem getArenaTeamInfo() {
      return arenaTeamInfo_;
    }
    /**
     * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
     *
     * <pre>
     * optional int32 baoKuTime=279;// 当前剩余次数
     * </pre>
     */
    public myudfs.Common.ArenaTeamItemOrBuilder getArenaTeamInfoOrBuilder() {
      return arenaTeamInfo_;
    }

    // optional int32 sectionGuideIndex = 281;
    public static final int SECTIONGUIDEINDEX_FIELD_NUMBER = 281;
    private int sectionGuideIndex_;
    /**
     * <code>optional int32 sectionGuideIndex = 281;</code>
     */
    public boolean hasSectionGuideIndex() {
      return ((bitField4_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 sectionGuideIndex = 281;</code>
     */
    public int getSectionGuideIndex() {
      return sectionGuideIndex_;
    }

    // optional int32 jiaoYiBuy = 282;
    public static final int JIAOYIBUY_FIELD_NUMBER = 282;
    private int jiaoYiBuy_;
    /**
     * <code>optional int32 jiaoYiBuy = 282;</code>
     *
     * <pre>
     * 每日任务交易所购买
     * </pre>
     */
    public boolean hasJiaoYiBuy() {
      return ((bitField4_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 jiaoYiBuy = 282;</code>
     *
     * <pre>
     * 每日任务交易所购买
     * </pre>
     */
    public int getJiaoYiBuy() {
      return jiaoYiBuy_;
    }

    // optional int32 jiaoYiSale = 283;
    public static final int JIAOYISALE_FIELD_NUMBER = 283;
    private int jiaoYiSale_;
    /**
     * <code>optional int32 jiaoYiSale = 283;</code>
     *
     * <pre>
     * 每日任务交易所出售
     * </pre>
     */
    public boolean hasJiaoYiSale() {
      return ((bitField4_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 jiaoYiSale = 283;</code>
     *
     * <pre>
     * 每日任务交易所出售
     * </pre>
     */
    public int getJiaoYiSale() {
      return jiaoYiSale_;
    }

    // optional int32 dailyLongGongBox = 284;
    public static final int DAILYLONGGONGBOX_FIELD_NUMBER = 284;
    private int dailyLongGongBox_;
    /**
     * <code>optional int32 dailyLongGongBox = 284;</code>
     *
     * <pre>
     * 每日任务开启龙宫宝箱
     * </pre>
     */
    public boolean hasDailyLongGongBox() {
      return ((bitField4_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 dailyLongGongBox = 284;</code>
     *
     * <pre>
     * 每日任务开启龙宫宝箱
     * </pre>
     */
    public int getDailyLongGongBox() {
      return dailyLongGongBox_;
    }

    // optional int32 dailyLiuDao = 285;
    public static final int DAILYLIUDAO_FIELD_NUMBER = 285;
    private int dailyLiuDao_;
    /**
     * <code>optional int32 dailyLiuDao = 285;</code>
     *
     * <pre>
     * 每日任务参与轮回塔
     * </pre>
     */
    public boolean hasDailyLiuDao() {
      return ((bitField4_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 dailyLiuDao = 285;</code>
     *
     * <pre>
     * 每日任务参与轮回塔
     * </pre>
     */
    public int getDailyLiuDao() {
      return dailyLiuDao_;
    }

    // optional .PlayerEscortItem escortItem = 286;
    public static final int ESCORTITEM_FIELD_NUMBER = 286;
    private myudfs.Common.PlayerEscortItem escortItem_;
    /**
     * <code>optional .PlayerEscortItem escortItem = 286;</code>
     *
     * <pre>
     * 押镖信息
     * </pre>
     */
    public boolean hasEscortItem() {
      return ((bitField4_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .PlayerEscortItem escortItem = 286;</code>
     *
     * <pre>
     * 押镖信息
     * </pre>
     */
    public myudfs.Common.PlayerEscortItem getEscortItem() {
      return escortItem_;
    }
    /**
     * <code>optional .PlayerEscortItem escortItem = 286;</code>
     *
     * <pre>
     * 押镖信息
     * </pre>
     */
    public myudfs.Common.PlayerEscortItemOrBuilder getEscortItemOrBuilder() {
      return escortItem_;
    }

    // optional .DFTeamItem escortTeamInfo = 287;
    public static final int ESCORTTEAMINFO_FIELD_NUMBER = 287;
    private myudfs.Common.DFTeamItem escortTeamInfo_;
    /**
     * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
     *
     * <pre>
     * 押镖队伍信息,和队伍信息返回一致
     * </pre>
     */
    public boolean hasEscortTeamInfo() {
      return ((bitField4_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
     *
     * <pre>
     * 押镖队伍信息,和队伍信息返回一致
     * </pre>
     */
    public myudfs.Common.DFTeamItem getEscortTeamInfo() {
      return escortTeamInfo_;
    }
    /**
     * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
     *
     * <pre>
     * 押镖队伍信息,和队伍信息返回一致
     * </pre>
     */
    public myudfs.Common.DFTeamItemOrBuilder getEscortTeamInfoOrBuilder() {
      return escortTeamInfo_;
    }

    // optional int32 position = 288;
    public static final int POSITION_FIELD_NUMBER = 288;
    private int position_;
    /**
     * <code>optional int32 position = 288;</code>
     *
     * <pre>
     * 帮派位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField4_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 position = 288;</code>
     *
     * <pre>
     * 帮派位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // optional .DFTeamItem shenMoTeamItem = 289;
    public static final int SHENMOTEAMITEM_FIELD_NUMBER = 289;
    private myudfs.Common.DFTeamItem shenMoTeamItem_;
    /**
     * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
     *
     * <pre>
     * 神魔队伍信息
     * </pre>
     */
    public boolean hasShenMoTeamItem() {
      return ((bitField4_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
     *
     * <pre>
     * 神魔队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItem getShenMoTeamItem() {
      return shenMoTeamItem_;
    }
    /**
     * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
     *
     * <pre>
     * 神魔队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItemOrBuilder getShenMoTeamItemOrBuilder() {
      return shenMoTeamItem_;
    }

    // optional .DFTeamItem pvpTeamItem = 290;
    public static final int PVPTEAMITEM_FIELD_NUMBER = 290;
    private myudfs.Common.DFTeamItem pvpTeamItem_;
    /**
     * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
     *
     * <pre>
     * pvp队伍信息
     * </pre>
     */
    public boolean hasPvpTeamItem() {
      return ((bitField4_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
     *
     * <pre>
     * pvp队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItem getPvpTeamItem() {
      return pvpTeamItem_;
    }
    /**
     * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
     *
     * <pre>
     * pvp队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItemOrBuilder getPvpTeamItemOrBuilder() {
      return pvpTeamItem_;
    }

    // optional .DFTeamItem fbTeamItem = 291;
    public static final int FBTEAMITEM_FIELD_NUMBER = 291;
    private myudfs.Common.DFTeamItem fbTeamItem_;
    /**
     * <code>optional .DFTeamItem fbTeamItem = 291;</code>
     *
     * <pre>
     * 资源副本队伍信息
     * </pre>
     */
    public boolean hasFbTeamItem() {
      return ((bitField4_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .DFTeamItem fbTeamItem = 291;</code>
     *
     * <pre>
     * 资源副本队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItem getFbTeamItem() {
      return fbTeamItem_;
    }
    /**
     * <code>optional .DFTeamItem fbTeamItem = 291;</code>
     *
     * <pre>
     * 资源副本队伍信息
     * </pre>
     */
    public myudfs.Common.DFTeamItemOrBuilder getFbTeamItemOrBuilder() {
      return fbTeamItem_;
    }

    // optional int32 gangModifyNameTimes = 292;
    public static final int GANGMODIFYNAMETIMES_FIELD_NUMBER = 292;
    private int gangModifyNameTimes_;
    /**
     * <code>optional int32 gangModifyNameTimes = 292;</code>
     *
     * <pre>
     * 帮派改名次数
     * </pre>
     */
    public boolean hasGangModifyNameTimes() {
      return ((bitField4_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 gangModifyNameTimes = 292;</code>
     *
     * <pre>
     * 帮派改名次数
     * </pre>
     */
    public int getGangModifyNameTimes() {
      return gangModifyNameTimes_;
    }

    // optional uint64 startTime_MultiExp = 293;
    public static final int STARTTIME_MULTIEXP_FIELD_NUMBER = 293;
    private long startTimeMultiExp_;
    /**
     * <code>optional uint64 startTime_MultiExp = 293;</code>
     *
     * <pre>
     * 双倍经验开始时间
     * </pre>
     */
    public boolean hasStartTimeMultiExp() {
      return ((bitField4_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint64 startTime_MultiExp = 293;</code>
     *
     * <pre>
     * 双倍经验开始时间
     * </pre>
     */
    public long getStartTimeMultiExp() {
      return startTimeMultiExp_;
    }

    // optional uint64 endTime_MultiExp = 294;
    public static final int ENDTIME_MULTIEXP_FIELD_NUMBER = 294;
    private long endTimeMultiExp_;
    /**
     * <code>optional uint64 endTime_MultiExp = 294;</code>
     *
     * <pre>
     * 双倍经验结束时间
     * </pre>
     */
    public boolean hasEndTimeMultiExp() {
      return ((bitField4_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint64 endTime_MultiExp = 294;</code>
     *
     * <pre>
     * 双倍经验结束时间
     * </pre>
     */
    public long getEndTimeMultiExp() {
      return endTimeMultiExp_;
    }

    // optional int32 rate = 295;
    public static final int RATE_FIELD_NUMBER = 295;
    private int rate_;
    /**
     * <code>optional int32 rate = 295;</code>
     *
     * <pre>
     *经验倍率
     * </pre>
     */
    public boolean hasRate() {
      return ((bitField4_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 rate = 295;</code>
     *
     * <pre>
     *经验倍率
     * </pre>
     */
    public int getRate() {
      return rate_;
    }

    // optional int64 nextTime = 296;
    public static final int NEXTTIME_FIELD_NUMBER = 296;
    private long nextTime_;
    /**
     * <code>optional int64 nextTime = 296;</code>
     *
     * <pre>
     * 下次六道扫荡时间
     * </pre>
     */
    public boolean hasNextTime() {
      return ((bitField5_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 nextTime = 296;</code>
     *
     * <pre>
     * 下次六道扫荡时间
     * </pre>
     */
    public long getNextTime() {
      return nextTime_;
    }

    // optional int32 liuDaoEnemyStartIndex = 297;
    public static final int LIUDAOENEMYSTARTINDEX_FIELD_NUMBER = 297;
    private int liuDaoEnemyStartIndex_;
    /**
     * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
     *
     * <pre>
     * 六道扫荡开始关卡索引
     * </pre>
     */
    public boolean hasLiuDaoEnemyStartIndex() {
      return ((bitField5_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
     *
     * <pre>
     * 六道扫荡开始关卡索引
     * </pre>
     */
    public int getLiuDaoEnemyStartIndex() {
      return liuDaoEnemyStartIndex_;
    }

    // optional int32 liuDaoEnemyEndIndex = 298;
    public static final int LIUDAOENEMYENDINDEX_FIELD_NUMBER = 298;
    private int liuDaoEnemyEndIndex_;
    /**
     * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
     *
     * <pre>
     * 六道扫荡结束关卡索引
     * </pre>
     */
    public boolean hasLiuDaoEnemyEndIndex() {
      return ((bitField5_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
     *
     * <pre>
     * 六道扫荡结束关卡索引
     * </pre>
     */
    public int getLiuDaoEnemyEndIndex() {
      return liuDaoEnemyEndIndex_;
    }

    // repeated int32 rewardIds = 299;
    public static final int REWARDIDS_FIELD_NUMBER = 299;
    private java.util.List<java.lang.Integer> rewardIds_;
    /**
     * <code>repeated int32 rewardIds = 299;</code>
     *
     * <pre>
     * 当前扫荡奖励
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRewardIdsList() {
      return rewardIds_;
    }
    /**
     * <code>repeated int32 rewardIds = 299;</code>
     *
     * <pre>
     * 当前扫荡奖励
     * </pre>
     */
    public int getRewardIdsCount() {
      return rewardIds_.size();
    }
    /**
     * <code>repeated int32 rewardIds = 299;</code>
     *
     * <pre>
     * 当前扫荡奖励
     * </pre>
     */
    public int getRewardIds(int index) {
      return rewardIds_.get(index);
    }

    // optional int32 liuDaoSweepHaveReward = 300;
    public static final int LIUDAOSWEEPHAVEREWARD_FIELD_NUMBER = 300;
    private int liuDaoSweepHaveReward_;
    /**
     * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
     *
     * <pre>
     * 六道扫荡可否领奖, 1有奖, 2没奖
     * </pre>
     */
    public boolean hasLiuDaoSweepHaveReward() {
      return ((bitField5_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
     *
     * <pre>
     * 六道扫荡可否领奖, 1有奖, 2没奖
     * </pre>
     */
    public int getLiuDaoSweepHaveReward() {
      return liuDaoSweepHaveReward_;
    }

    // repeated .PayReward exchangeItemReward = 301;
    public static final int EXCHANGEITEMREWARD_FIELD_NUMBER = 301;
    private java.util.List<myudfs.Common.PayReward> exchangeItemReward_;
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    public java.util.List<myudfs.Common.PayReward> getExchangeItemRewardList() {
      return exchangeItemReward_;
    }
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    public java.util.List<? extends myudfs.Common.PayRewardOrBuilder> 
        getExchangeItemRewardOrBuilderList() {
      return exchangeItemReward_;
    }
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    public int getExchangeItemRewardCount() {
      return exchangeItemReward_.size();
    }
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    public myudfs.Common.PayReward getExchangeItemReward(int index) {
      return exchangeItemReward_.get(index);
    }
    /**
     * <code>repeated .PayReward exchangeItemReward = 301;</code>
     */
    public myudfs.Common.PayRewardOrBuilder getExchangeItemRewardOrBuilder(
        int index) {
      return exchangeItemReward_.get(index);
    }

    // optional int32 templeDayRemainSeekTimes = 302;
    public static final int TEMPLEDAYREMAINSEEKTIMES_FIELD_NUMBER = 302;
    private int templeDayRemainSeekTimes_;
    /**
     * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
     *
     * <pre>
     * 神殿每日剩余探寻次数
     * </pre>
     */
    public boolean hasTempleDayRemainSeekTimes() {
      return ((bitField5_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
     *
     * <pre>
     * 神殿每日剩余探寻次数
     * </pre>
     */
    public int getTempleDayRemainSeekTimes() {
      return templeDayRemainSeekTimes_;
    }

    // optional .DFTeamItem templeTeam = 303;
    public static final int TEMPLETEAM_FIELD_NUMBER = 303;
    private myudfs.Common.DFTeamItem templeTeam_;
    /**
     * <code>optional .DFTeamItem templeTeam = 303;</code>
     *
     * <pre>
     * 神殿队伍_无护法
     * </pre>
     */
    public boolean hasTempleTeam() {
      return ((bitField5_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .DFTeamItem templeTeam = 303;</code>
     *
     * <pre>
     * 神殿队伍_无护法
     * </pre>
     */
    public myudfs.Common.DFTeamItem getTempleTeam() {
      return templeTeam_;
    }
    /**
     * <code>optional .DFTeamItem templeTeam = 303;</code>
     *
     * <pre>
     * 神殿队伍_无护法
     * </pre>
     */
    public myudfs.Common.DFTeamItemOrBuilder getTempleTeamOrBuilder() {
      return templeTeam_;
    }

    // repeated .DoubleReward doubleReward = 304;
    public static final int DOUBLEREWARD_FIELD_NUMBER = 304;
    private java.util.List<myudfs.Common.DoubleReward> doubleReward_;
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    public java.util.List<myudfs.Common.DoubleReward> getDoubleRewardList() {
      return doubleReward_;
    }
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.DoubleRewardOrBuilder> 
        getDoubleRewardOrBuilderList() {
      return doubleReward_;
    }
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    public int getDoubleRewardCount() {
      return doubleReward_.size();
    }
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    public myudfs.Common.DoubleReward getDoubleReward(int index) {
      return doubleReward_.get(index);
    }
    /**
     * <code>repeated .DoubleReward doubleReward = 304;</code>
     *
     * <pre>
     *各种翻倍活动
     * </pre>
     */
    public myudfs.Common.DoubleRewardOrBuilder getDoubleRewardOrBuilder(
        int index) {
      return doubleReward_.get(index);
    }

    // optional .YunyingActivity shenmoRankActivityReward = 305;
    public static final int SHENMORANKACTIVITYREWARD_FIELD_NUMBER = 305;
    private myudfs.Common.YunyingActivity shenmoRankActivityReward_;
    /**
     * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
     */
    public boolean hasShenmoRankActivityReward() {
      return ((bitField5_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
     */
    public myudfs.Common.YunyingActivity getShenmoRankActivityReward() {
      return shenmoRankActivityReward_;
    }
    /**
     * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
     */
    public myudfs.Common.YunyingActivityOrBuilder getShenmoRankActivityRewardOrBuilder() {
      return shenmoRankActivityReward_;
    }

    // optional .YunyingActivity arenaRankActivityReward = 306;
    public static final int ARENARANKACTIVITYREWARD_FIELD_NUMBER = 306;
    private myudfs.Common.YunyingActivity arenaRankActivityReward_;
    /**
     * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
     */
    public boolean hasArenaRankActivityReward() {
      return ((bitField5_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
     */
    public myudfs.Common.YunyingActivity getArenaRankActivityReward() {
      return arenaRankActivityReward_;
    }
    /**
     * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
     */
    public myudfs.Common.YunyingActivityOrBuilder getArenaRankActivityRewardOrBuilder() {
      return arenaRankActivityReward_;
    }

    // optional .YunyingActivity openBoxRankActivityReward = 307;
    public static final int OPENBOXRANKACTIVITYREWARD_FIELD_NUMBER = 307;
    private myudfs.Common.YunyingActivity openBoxRankActivityReward_;
    /**
     * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
     */
    public boolean hasOpenBoxRankActivityReward() {
      return ((bitField5_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
     */
    public myudfs.Common.YunyingActivity getOpenBoxRankActivityReward() {
      return openBoxRankActivityReward_;
    }
    /**
     * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
     */
    public myudfs.Common.YunyingActivityOrBuilder getOpenBoxRankActivityRewardOrBuilder() {
      return openBoxRankActivityReward_;
    }

    // repeated int64 templeCultivateCards = 308;
    public static final int TEMPLECULTIVATECARDS_FIELD_NUMBER = 308;
    private java.util.List<java.lang.Long> templeCultivateCards_;
    /**
     * <code>repeated int64 templeCultivateCards = 308;</code>
     *
     * <pre>
     * 神殿已上阵修炼的卡牌列表
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getTempleCultivateCardsList() {
      return templeCultivateCards_;
    }
    /**
     * <code>repeated int64 templeCultivateCards = 308;</code>
     *
     * <pre>
     * 神殿已上阵修炼的卡牌列表
     * </pre>
     */
    public int getTempleCultivateCardsCount() {
      return templeCultivateCards_.size();
    }
    /**
     * <code>repeated int64 templeCultivateCards = 308;</code>
     *
     * <pre>
     * 神殿已上阵修炼的卡牌列表
     * </pre>
     */
    public long getTempleCultivateCards(int index) {
      return templeCultivateCards_.get(index);
    }

    // optional int32 jingYanDanCostGold = 309;
    public static final int JINGYANDANCOSTGOLD_FIELD_NUMBER = 309;
    private int jingYanDanCostGold_;
    /**
     * <code>optional int32 jingYanDanCostGold = 309;</code>
     *
     * <pre>
     *转生使用元宝次数
     * </pre>
     */
    public boolean hasJingYanDanCostGold() {
      return ((bitField5_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 jingYanDanCostGold = 309;</code>
     *
     * <pre>
     *转生使用元宝次数
     * </pre>
     */
    public int getJingYanDanCostGold() {
      return jingYanDanCostGold_;
    }

    // optional int32 cardExpDeclineNum = 310;
    public static final int CARDEXPDECLINENUM_FIELD_NUMBER = 310;
    private int cardExpDeclineNum_;
    /**
     * <code>optional int32 cardExpDeclineNum = 310;</code>
     */
    public boolean hasCardExpDeclineNum() {
      return ((bitField5_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 cardExpDeclineNum = 310;</code>
     */
    public int getCardExpDeclineNum() {
      return cardExpDeclineNum_;
    }

    // optional int32 rankValue = 311;
    public static final int RANKVALUE_FIELD_NUMBER = 311;
    private int rankValue_;
    /**
     * <code>optional int32 rankValue = 311;</code>
     *
     * <pre>
     * 排行活动数值
     * </pre>
     */
    public boolean hasRankValue() {
      return ((bitField5_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 rankValue = 311;</code>
     *
     * <pre>
     * 排行活动数值
     * </pre>
     */
    public int getRankValue() {
      return rankValue_;
    }

    // optional bool hasTempleEvent = 312;
    public static final int HASTEMPLEEVENT_FIELD_NUMBER = 312;
    private boolean hasTempleEvent_;
    /**
     * <code>optional bool hasTempleEvent = 312;</code>
     *
     * <pre>
     * 是否有神殿事件
     * </pre>
     */
    public boolean hasHasTempleEvent() {
      return ((bitField5_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool hasTempleEvent = 312;</code>
     *
     * <pre>
     * 是否有神殿事件
     * </pre>
     */
    public boolean getHasTempleEvent() {
      return hasTempleEvent_;
    }

    // optional int32 redPacketId = 313;
    public static final int REDPACKETID_FIELD_NUMBER = 313;
    private int redPacketId_;
    /**
     * <code>optional int32 redPacketId = 313;</code>
     *
     * <pre>
     *春节活动红包id
     * </pre>
     */
    public boolean hasRedPacketId() {
      return ((bitField5_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 redPacketId = 313;</code>
     *
     * <pre>
     *春节活动红包id
     * </pre>
     */
    public int getRedPacketId() {
      return redPacketId_;
    }

    // optional int32 redPacketNum = 314;
    public static final int REDPACKETNUM_FIELD_NUMBER = 314;
    private int redPacketNum_;
    /**
     * <code>optional int32 redPacketNum = 314;</code>
     *
     * <pre>
     * 春节活动红包数目
     * </pre>
     */
    public boolean hasRedPacketNum() {
      return ((bitField5_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 redPacketNum = 314;</code>
     *
     * <pre>
     * 春节活动红包数目
     * </pre>
     */
    public int getRedPacketNum() {
      return redPacketNum_;
    }

    // optional .CustomPushItemMessage customPushItemMessage = 315;
    public static final int CUSTOMPUSHITEMMESSAGE_FIELD_NUMBER = 315;
    private myudfs.Common.CustomPushItemMessage customPushItemMessage_;
    /**
     * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
     *
     * <pre>
     * 个性化推送
     * </pre>
     */
    public boolean hasCustomPushItemMessage() {
      return ((bitField5_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
     *
     * <pre>
     * 个性化推送
     * </pre>
     */
    public myudfs.Common.CustomPushItemMessage getCustomPushItemMessage() {
      return customPushItemMessage_;
    }
    /**
     * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
     *
     * <pre>
     * 个性化推送
     * </pre>
     */
    public myudfs.Common.CustomPushItemMessageOrBuilder getCustomPushItemMessageOrBuilder() {
      return customPushItemMessage_;
    }

    // optional int32 zhuanPanNums = 316;
    public static final int ZHUANPANNUMS_FIELD_NUMBER = 316;
    private int zhuanPanNums_;
    /**
     * <code>optional int32 zhuanPanNums = 316;</code>
     *
     * <pre>
     * 本次活动周期已经转的次数
     * </pre>
     */
    public boolean hasZhuanPanNums() {
      return ((bitField5_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 zhuanPanNums = 316;</code>
     *
     * <pre>
     * 本次活动周期已经转的次数
     * </pre>
     */
    public int getZhuanPanNums() {
      return zhuanPanNums_;
    }

    // repeated int32 zhuanPanOpenIds = 317;
    public static final int ZHUANPANOPENIDS_FIELD_NUMBER = 317;
    private java.util.List<java.lang.Integer> zhuanPanOpenIds_;
    /**
     * <code>repeated int32 zhuanPanOpenIds = 317;</code>
     *
     * <pre>
     *已经开过的箱子
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getZhuanPanOpenIdsList() {
      return zhuanPanOpenIds_;
    }
    /**
     * <code>repeated int32 zhuanPanOpenIds = 317;</code>
     *
     * <pre>
     *已经开过的箱子
     * </pre>
     */
    public int getZhuanPanOpenIdsCount() {
      return zhuanPanOpenIds_.size();
    }
    /**
     * <code>repeated int32 zhuanPanOpenIds = 317;</code>
     *
     * <pre>
     *已经开过的箱子
     * </pre>
     */
    public int getZhuanPanOpenIds(int index) {
      return zhuanPanOpenIds_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      lv_ = 0;
      exp_ = 0;
      daoXing_ = 0;
      vip_ = 0;
      gold_ = 0L;
      shengWang_ = 0;
      xianYuan_ = 0;
      bagsUnlockGold_ = 0;
      stamina_ = 0;
      spirit_ = 0;
      friendsCost_ = 0;
      trainFreeRenew_ = 0;
      receiveStaminaNum_ = 0L;
      todayQuestNums_ = java.util.Collections.emptyList();
      todayQuestRestNums_ = java.util.Collections.emptyList();
      donateStamina_ = java.util.Collections.emptyList();
      receiveStamina_ = java.util.Collections.emptyList();
      staminaDate_ = 0L;
      friendId_ = java.util.Collections.emptyList();
      loginDate_ = 0L;
      onlineTime_ = 0L;
      bagsUnlockGoldCd_ = 0L;
      coin_ = 0L;
      moonStarItem_ = java.util.Collections.emptyList();
      magicWeapons_ = java.util.Collections.emptyList();
      drawCardDate_ = java.util.Collections.emptyList();
      firstPay_ = 0;
      firstPayIds_ = java.util.Collections.emptyList();
      spiritDate_ = 0L;
      worshipTimes_ = 0;
      worshipIds_ = java.util.Collections.emptyList();
      gainRewardTime_ = 0L;
      exchangeTimes_ = java.util.Collections.emptyList();
      mails_ = java.util.Collections.emptyList();
      mailFinished_ = java.util.Collections.emptyList();
      mailDeleted_ = java.util.Collections.emptyList();
      pvpFightResult_ = java.util.Collections.emptyList();
      buyStamina_ = 0;
      buySpirit_ = 0;
      pvpWins_ = 0;
      shopItems_ = java.util.Collections.emptyList();
      loginDays_ = 0;
      missions_ = java.util.Collections.emptyList();
      silver_ = 0L;
      cards_ = java.util.Collections.emptyList();
      cardGroup_ = java.util.Collections.emptyList();
      pieces_ = java.util.Collections.emptyList();
      items_ = java.util.Collections.emptyList();
      hufas_ = java.util.Collections.emptyList();
      trains_ = java.util.Collections.emptyList();
      quests_ = java.util.Collections.emptyList();
      cardGroupFight_ = java.util.Collections.emptyList();
      magicWeaponGroup_ = java.util.Collections.emptyList();
      rewardLastTime_ = 0L;
      pvpWinReward_ = java.util.Collections.emptyList();
      loginReward_ = java.util.Collections.emptyList();
      pvpFightNumReward_ = java.util.Collections.emptyList();
      drawCardReward_ = java.util.Collections.emptyList();
      gainBuyStamina_ = 0L;
      gainBuySpiritReward_ = 0L;
      gainQiuYuanReward_ = java.util.Collections.emptyList();
      gainLvUpReward_ = java.util.Collections.emptyList();
      gainChapterReward_ = java.util.Collections.emptyList();
      gainChapterStarReward_ = java.util.Collections.emptyList();
      gainFriendNumReward_ = java.util.Collections.emptyList();
      gainCardReward_ = java.util.Collections.emptyList();
      gainItemReward_ = java.util.Collections.emptyList();
      gainEveryDayTili_ = 0L;
      gainEveryDayGold_ = 0L;
      receiveXianYuan_ = 0;
      drawCardTimes_ = 0;
      pvpFightWinNum_ = 0;
      multiLoginDays_ = 0;
      totalPayGold_ = 0L;
      amountPaymentReward_ = java.util.Collections.emptyList();
      missionsDaily_ = java.util.Collections.emptyList();
      pvpNewFightFlag_ = false;
      qiuyuan_ = 0;
      qiuyuanGold_ = 0;
      newMail_ = false;
      pvpWinNum_ = 0;
      firstPayReward_ = false;
      vipGifts_ = java.util.Collections.emptyList();
      vipReward_ = false;
      vipCard_ = 0;
      vipAllGift_ = java.util.Collections.emptyList();
      guideIndex_ = 0;
      isQianDao_ = false;
      qianDao_ = myudfs.Common.MapItem.getDefaultInstance();
      battleIndex_ = 0;
      caishenCoinNum_ = 0;
      triggerGuideIndex_ = java.util.Collections.emptyList();
      chapterEasyReward_ = java.util.Collections.emptyList();
      chapterNormalReward_ = java.util.Collections.emptyList();
      chapterHardReward_ = java.util.Collections.emptyList();
      activityEasyReward_ = java.util.Collections.emptyList();
      cardEffectNum_ = 0;
      baoXiangReward_ = java.util.Collections.emptyList();
      newFriendInvite_ = 0;
      yunyouRefreshTime_ = 0L;
      yunyouItems_ = java.util.Collections.emptyList();
      lvReward_ = 0;
      qiuBaoDate_ = 0L;
      qiuBaoTimes_ = 0;
      itemTask_ = java.util.Collections.emptyList();
      cardTask_ = java.util.Collections.emptyList();
      collectCardReward_ = java.util.Collections.emptyList();
      cardReward_ = java.util.Collections.emptyList();
      itemReward_ = java.util.Collections.emptyList();
      vipNums_ = java.util.Collections.emptyList();
      firstPayExtraIds_ = java.util.Collections.emptyList();
      assetBundleState_ = 0;
      userId_ = 0L;
      serverId_ = 0;
      username_ = "";
      pvpExchangeItems_ = java.util.Collections.emptyList();
      hunyu_ = 0;
      firstDrawIds_ = java.util.Collections.emptyList();
      openDate_ = 0L;
      todyTastePantaos_ = java.util.Collections.emptyList();
      battleScore_ = 0;
      lingLi_ = 0;
      buyLingli_ = 0;
      lingLiDate_ = 0L;
      shenMoDuiHuan_ = java.util.Collections.emptyList();
      buyShenMoItem_ = java.util.Collections.emptyList();
      xiuWei_ = 0;
      hasPvpReward_ = false;
      gongDe_ = 0L;
      gongDeReward_ = java.util.Collections.emptyList();
      rankRise_ = 0;
      rank_ = 0L;
      drawCard_ = java.util.Collections.emptyList();
      hufaOpen_ = false;
      caishenSilverNum_ = 0;
      drawCardReward2_ = false;
      playerPrefs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      missionMap_ = java.util.Collections.emptyList();
      missionNum_ = 0;
      yunyouNum_ = 0;
      pvpExchangeNum_ = 0;
      friendNum_ = 0;
      clearShenMoItem_ = false;
      refreshHour24_ = false;
      pay_ = false;
      isShutUp_ = false;
      shutUpDate_ = 0L;
      shutUpEnd_ = 0L;
      activityItem_ = java.util.Collections.emptyList();
      payReward_ = java.util.Collections.emptyList();
      yunYouTime_ = 0;
      pvpChangeTime_ = 0;
      shenMoChangeTime_ = 0;
      shenMoNum_ = 0;
      itemLvUpNum_ = 0;
      cardLvUpNum_ = 0;
      shenTongNum_ = 0;
      skillNum_ = 0;
      huFaNum_ = 0;
      xiuLianNum_ = 0;
      changeName_ = 0;
      chengjiuReward_ = java.util.Collections.emptyList();
      fenXiangRewardTimes_ = 0;
      weiXinFirstShare_ = false;
      weiXinOpen_ = false;
      xilianOpen_ = false;
      pvpWinMax_ = 0;
      inviteCode_ = "";
      inviteNum_ = 0;
      inviterId_ = 0L;
      clearFirstPayExtraIds_ = false;
      loginActivity_ = myudfs.Common.MapItem3.getDefaultInstance();
      choukaQuan_ = 0;
      shenJiangScore_ = 0;
      shenJiangTotalScore_ = 0;
      shenJiangRank_ = 0;
      inviteNumReward_ = java.util.Collections.emptyList();
      yuanshenBox_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      boxs_ = java.util.Collections.emptyList();
      buyBox_ = java.util.Collections.emptyList();
      zhuanpan_ = 0;
      sevenReward_ = java.util.Collections.emptyList();
      playerNum_ = java.util.Collections.emptyList();
      rewardId_ = java.util.Collections.emptyList();
      inviteReward_ = false;
      lingHun_ = 0L;
      liuDaoDuiHuanIds_ = java.util.Collections.emptyList();
      liuDaoDuiHuanIdsBuyed_ = java.util.Collections.emptyList();
      liuDaoChangeTime_ = 0;
      liuDaoBaoXiangOpenNum_ = 0;
      vipCardAllLift_ = 0;
      vipAllLifeReward_ = false;
      cardGroupLiuDao_ = java.util.Collections.emptyList();
      cardGroupFightLiuDao_ = java.util.Collections.emptyList();
      drawCardFree_ = java.util.Collections.emptyList();
      liudaoEnterHeroLimit_ = 0;
      todayQuestNum_ = 0;
      cardId_ = 0;
      enterLiuDaoTimes_ = 0;
      xunshan_ = 0;
      dailyLeftTimes_ = 0;
      dailyBuyTimes_ = 0;
      nextCDTime_ = 0L;
      shouHuId_ = 0;
      cancelCDTimes_ = 0;
      xunshanStr_ = java.util.Collections.emptyList();
      gangInfo_ = myudfs.Common.PlayerGangItem.getDefaultInstance();
      hasDFBet_ = false;
      gangExchange_ = java.util.Collections.emptyList();
      gangRefreshExchangeTimes_ = 0;
      dfTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      vipDailyGiftBuyCount_ = 0;
      trialsDFTimes_ = 0;
      dfBetId_ = 0L;
      xunxian_ = myudfs.Common.Xunxian.getDefaultInstance();
      auctionType_ = 0;
      securityCodeItem_ = myudfs.Common.SecurityCodeItem.getDefaultInstance();
      login1100_ = false;
      isShowDFInMainUI_ = false;
      isVipUpByPlayerLv_ = false;
      hongbaoActivitys_ = myudfs.Common.HongbaoActivityMessage.getDefaultInstance();
      isOpenedBoxEveryDay_ = false;
      admobSwitch_ = false;
      arenaTeamInfo_ = myudfs.Common.ArenaTeamItem.getDefaultInstance();
      sectionGuideIndex_ = 0;
      jiaoYiBuy_ = 0;
      jiaoYiSale_ = 0;
      dailyLongGongBox_ = 0;
      dailyLiuDao_ = 0;
      escortItem_ = myudfs.Common.PlayerEscortItem.getDefaultInstance();
      escortTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      position_ = 0;
      shenMoTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      pvpTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      fbTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      gangModifyNameTimes_ = 0;
      startTimeMultiExp_ = 0L;
      endTimeMultiExp_ = 0L;
      rate_ = 0;
      nextTime_ = 0L;
      liuDaoEnemyStartIndex_ = 0;
      liuDaoEnemyEndIndex_ = 0;
      rewardIds_ = java.util.Collections.emptyList();
      liuDaoSweepHaveReward_ = 0;
      exchangeItemReward_ = java.util.Collections.emptyList();
      templeDayRemainSeekTimes_ = 0;
      templeTeam_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      doubleReward_ = java.util.Collections.emptyList();
      shenmoRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
      arenaRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
      openBoxRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
      templeCultivateCards_ = java.util.Collections.emptyList();
      jingYanDanCostGold_ = 0;
      cardExpDeclineNum_ = 0;
      rankValue_ = 0;
      hasTempleEvent_ = false;
      redPacketId_ = 0;
      redPacketNum_ = 0;
      customPushItemMessage_ = myudfs.Common.CustomPushItemMessage.getDefaultInstance();
      zhuanPanNums_ = 0;
      zhuanPanOpenIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, exp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, daoXing_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, vip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, gold_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, shengWang_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, xianYuan_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, bagsUnlockGold_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, stamina_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, spirit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(18, friendsCost_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(19, trainFreeRenew_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(20, receiveStaminaNum_);
      }
      for (int i = 0; i < todayQuestNums_.size(); i++) {
        output.writeMessage(21, todayQuestNums_.get(i));
      }
      for (int i = 0; i < todayQuestRestNums_.size(); i++) {
        output.writeMessage(22, todayQuestRestNums_.get(i));
      }
      for (int i = 0; i < donateStamina_.size(); i++) {
        output.writeInt64(24, donateStamina_.get(i));
      }
      for (int i = 0; i < receiveStamina_.size(); i++) {
        output.writeInt64(25, receiveStamina_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt64(26, staminaDate_);
      }
      for (int i = 0; i < friendId_.size(); i++) {
        output.writeInt64(27, friendId_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt64(28, loginDate_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt64(29, onlineTime_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt64(30, bagsUnlockGoldCd_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(31, coin_);
      }
      for (int i = 0; i < moonStarItem_.size(); i++) {
        output.writeMessage(32, moonStarItem_.get(i));
      }
      for (int i = 0; i < magicWeapons_.size(); i++) {
        output.writeMessage(33, magicWeapons_.get(i));
      }
      for (int i = 0; i < drawCardDate_.size(); i++) {
        output.writeMessage(36, drawCardDate_.get(i));
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(37, firstPay_);
      }
      for (int i = 0; i < firstPayIds_.size(); i++) {
        output.writeInt32(38, firstPayIds_.get(i));
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt64(39, spiritDate_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(40, worshipTimes_);
      }
      for (int i = 0; i < worshipIds_.size(); i++) {
        output.writeInt64(41, worshipIds_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt64(42, gainRewardTime_);
      }
      for (int i = 0; i < exchangeTimes_.size(); i++) {
        output.writeInt32(43, exchangeTimes_.get(i));
      }
      for (int i = 0; i < mails_.size(); i++) {
        output.writeInt64(44, mails_.get(i));
      }
      for (int i = 0; i < mailFinished_.size(); i++) {
        output.writeInt64(45, mailFinished_.get(i));
      }
      for (int i = 0; i < mailDeleted_.size(); i++) {
        output.writeInt64(46, mailDeleted_.get(i));
      }
      for (int i = 0; i < pvpFightResult_.size(); i++) {
        output.writeMessage(47, pvpFightResult_.get(i));
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(48, buyStamina_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(49, buySpirit_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(50, pvpWins_);
      }
      for (int i = 0; i < shopItems_.size(); i++) {
        output.writeMessage(53, shopItems_.get(i));
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(54, loginDays_);
      }
      for (int i = 0; i < missions_.size(); i++) {
        output.writeMessage(55, missions_.get(i));
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(56, silver_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(57, cards_.get(i));
      }
      for (int i = 0; i < cardGroup_.size(); i++) {
        output.writeInt64(58, cardGroup_.get(i));
      }
      for (int i = 0; i < pieces_.size(); i++) {
        output.writeMessage(59, pieces_.get(i));
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(60, items_.get(i));
      }
      for (int i = 0; i < hufas_.size(); i++) {
        output.writeMessage(61, hufas_.get(i));
      }
      for (int i = 0; i < trains_.size(); i++) {
        output.writeMessage(62, trains_.get(i));
      }
      for (int i = 0; i < quests_.size(); i++) {
        output.writeMessage(64, quests_.get(i));
      }
      for (int i = 0; i < cardGroupFight_.size(); i++) {
        output.writeInt32(65, cardGroupFight_.get(i));
      }
      for (int i = 0; i < magicWeaponGroup_.size(); i++) {
        output.writeInt32(66, magicWeaponGroup_.get(i));
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt64(68, rewardLastTime_);
      }
      for (int i = 0; i < pvpWinReward_.size(); i++) {
        output.writeInt32(69, pvpWinReward_.get(i));
      }
      for (int i = 0; i < loginReward_.size(); i++) {
        output.writeInt32(70, loginReward_.get(i));
      }
      for (int i = 0; i < pvpFightNumReward_.size(); i++) {
        output.writeInt32(71, pvpFightNumReward_.get(i));
      }
      for (int i = 0; i < drawCardReward_.size(); i++) {
        output.writeInt32(72, drawCardReward_.get(i));
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt64(73, gainBuyStamina_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt64(74, gainBuySpiritReward_);
      }
      for (int i = 0; i < gainQiuYuanReward_.size(); i++) {
        output.writeInt32(75, gainQiuYuanReward_.get(i));
      }
      for (int i = 0; i < gainLvUpReward_.size(); i++) {
        output.writeInt32(76, gainLvUpReward_.get(i));
      }
      for (int i = 0; i < gainChapterReward_.size(); i++) {
        output.writeInt32(77, gainChapterReward_.get(i));
      }
      for (int i = 0; i < gainChapterStarReward_.size(); i++) {
        output.writeInt32(79, gainChapterStarReward_.get(i));
      }
      for (int i = 0; i < gainFriendNumReward_.size(); i++) {
        output.writeInt32(80, gainFriendNumReward_.get(i));
      }
      for (int i = 0; i < gainCardReward_.size(); i++) {
        output.writeInt32(81, gainCardReward_.get(i));
      }
      for (int i = 0; i < gainItemReward_.size(); i++) {
        output.writeInt32(82, gainItemReward_.get(i));
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(83, gainEveryDayTili_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(84, gainEveryDayGold_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(85, receiveXianYuan_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(87, drawCardTimes_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(88, pvpFightWinNum_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(89, multiLoginDays_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(90, totalPayGold_);
      }
      for (int i = 0; i < amountPaymentReward_.size(); i++) {
        output.writeInt32(91, amountPaymentReward_.get(i));
      }
      for (int i = 0; i < missionsDaily_.size(); i++) {
        output.writeMessage(93, missionsDaily_.get(i));
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeBool(94, pvpNewFightFlag_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(95, qiuyuan_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(96, qiuyuanGold_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeBool(97, newMail_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(98, pvpWinNum_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeBool(99, firstPayReward_);
      }
      for (int i = 0; i < vipGifts_.size(); i++) {
        output.writeInt32(100, vipGifts_.get(i));
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeBool(101, vipReward_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(102, vipCard_);
      }
      for (int i = 0; i < vipAllGift_.size(); i++) {
        output.writeMessage(103, vipAllGift_.get(i));
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(104, guideIndex_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeBool(105, isQianDao_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(106, qianDao_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(107, battleIndex_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(108, caishenCoinNum_);
      }
      for (int i = 0; i < triggerGuideIndex_.size(); i++) {
        output.writeInt32(109, triggerGuideIndex_.get(i));
      }
      for (int i = 0; i < chapterEasyReward_.size(); i++) {
        output.writeInt32(110, chapterEasyReward_.get(i));
      }
      for (int i = 0; i < chapterNormalReward_.size(); i++) {
        output.writeInt32(111, chapterNormalReward_.get(i));
      }
      for (int i = 0; i < chapterHardReward_.size(); i++) {
        output.writeInt32(112, chapterHardReward_.get(i));
      }
      for (int i = 0; i < activityEasyReward_.size(); i++) {
        output.writeInt32(113, activityEasyReward_.get(i));
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(114, cardEffectNum_);
      }
      for (int i = 0; i < baoXiangReward_.size(); i++) {
        output.writeInt32(115, baoXiangReward_.get(i));
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(116, newFriendInvite_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(117, yunyouRefreshTime_);
      }
      for (int i = 0; i < yunyouItems_.size(); i++) {
        output.writeInt32(118, yunyouItems_.get(i));
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(119, lvReward_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(120, qiuBaoDate_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(121, qiuBaoTimes_);
      }
      for (int i = 0; i < itemTask_.size(); i++) {
        output.writeMessage(122, itemTask_.get(i));
      }
      for (int i = 0; i < cardTask_.size(); i++) {
        output.writeMessage(123, cardTask_.get(i));
      }
      for (int i = 0; i < collectCardReward_.size(); i++) {
        output.writeInt32(124, collectCardReward_.get(i));
      }
      for (int i = 0; i < cardReward_.size(); i++) {
        output.writeInt32(125, cardReward_.get(i));
      }
      for (int i = 0; i < itemReward_.size(); i++) {
        output.writeInt32(126, itemReward_.get(i));
      }
      for (int i = 0; i < vipNums_.size(); i++) {
        output.writeMessage(127, vipNums_.get(i));
      }
      for (int i = 0; i < firstPayExtraIds_.size(); i++) {
        output.writeInt32(128, firstPayExtraIds_.get(i));
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(129, assetBundleState_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(130, userId_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(131, serverId_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeBytes(132, getUsernameBytes());
      }
      for (int i = 0; i < pvpExchangeItems_.size(); i++) {
        output.writeMessage(133, pvpExchangeItems_.get(i));
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(134, hunyu_);
      }
      for (int i = 0; i < firstDrawIds_.size(); i++) {
        output.writeInt32(135, firstDrawIds_.get(i));
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeUInt64(136, openDate_);
      }
      for (int i = 0; i < todyTastePantaos_.size(); i++) {
        output.writeMessage(137, todyTastePantaos_.get(i));
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(138, battleScore_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(139, lingLi_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(140, buyLingli_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(141, lingLiDate_);
      }
      for (int i = 0; i < shenMoDuiHuan_.size(); i++) {
        output.writeInt32(151, shenMoDuiHuan_.get(i));
      }
      for (int i = 0; i < buyShenMoItem_.size(); i++) {
        output.writeInt32(152, buyShenMoItem_.get(i));
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(153, xiuWei_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeBool(154, hasPvpReward_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(155, gongDe_);
      }
      for (int i = 0; i < gongDeReward_.size(); i++) {
        output.writeInt32(156, gongDeReward_.get(i));
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(157, rankRise_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(158, rank_);
      }
      for (int i = 0; i < drawCard_.size(); i++) {
        output.writeMessage(159, drawCard_.get(i));
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeBool(160, hufaOpen_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(161, caishenSilverNum_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        output.writeBool(162, drawCardReward2_);
      }
      for (int i = 0; i < playerPrefs_.size(); i++) {
        output.writeBytes(163, playerPrefs_.getByteString(i));
      }
      for (int i = 0; i < missionMap_.size(); i++) {
        output.writeMessage(164, missionMap_.get(i));
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(165, missionNum_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(166, yunyouNum_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(167, pvpExchangeNum_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(168, friendNum_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        output.writeBool(171, clearShenMoItem_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        output.writeBool(172, refreshHour24_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        output.writeBool(173, pay_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        output.writeBool(174, isShutUp_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        output.writeUInt64(175, shutUpDate_);
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        output.writeUInt64(176, shutUpEnd_);
      }
      for (int i = 0; i < activityItem_.size(); i++) {
        output.writeMessage(177, activityItem_.get(i));
      }
      for (int i = 0; i < payReward_.size(); i++) {
        output.writeMessage(178, payReward_.get(i));
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(179, yunYouTime_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(180, pvpChangeTime_);
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(181, shenMoChangeTime_);
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(182, shenMoNum_);
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(183, itemLvUpNum_);
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(184, cardLvUpNum_);
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(185, shenTongNum_);
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(186, skillNum_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(187, huFaNum_);
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(188, xiuLianNum_);
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(189, changeName_);
      }
      for (int i = 0; i < chengjiuReward_.size(); i++) {
        output.writeInt32(190, chengjiuReward_.get(i));
      }
      if (((bitField3_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(191, fenXiangRewardTimes_);
      }
      if (((bitField3_ & 0x00000004) == 0x00000004)) {
        output.writeBool(192, weiXinFirstShare_);
      }
      if (((bitField3_ & 0x00000008) == 0x00000008)) {
        output.writeBool(193, weiXinOpen_);
      }
      if (((bitField3_ & 0x00000010) == 0x00000010)) {
        output.writeBool(194, xilianOpen_);
      }
      if (((bitField3_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(195, pvpWinMax_);
      }
      if (((bitField3_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(196, getInviteCodeBytes());
      }
      if (((bitField3_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(197, inviteNum_);
      }
      if (((bitField3_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(198, inviterId_);
      }
      if (((bitField3_ & 0x00000200) == 0x00000200)) {
        output.writeBool(199, clearFirstPayExtraIds_);
      }
      if (((bitField3_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(200, loginActivity_);
      }
      if (((bitField3_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(201, choukaQuan_);
      }
      if (((bitField3_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(206, shenJiangScore_);
      }
      if (((bitField3_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(207, shenJiangTotalScore_);
      }
      if (((bitField3_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(208, shenJiangRank_);
      }
      for (int i = 0; i < inviteNumReward_.size(); i++) {
        output.writeInt32(209, inviteNumReward_.get(i));
      }
      for (int i = 0; i < yuanshenBox_.size(); i++) {
        output.writeBytes(210, yuanshenBox_.getByteString(i));
      }
      for (int i = 0; i < boxs_.size(); i++) {
        output.writeMessage(211, boxs_.get(i));
      }
      for (int i = 0; i < buyBox_.size(); i++) {
        output.writeMessage(212, buyBox_.get(i));
      }
      if (((bitField3_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(213, zhuanpan_);
      }
      for (int i = 0; i < sevenReward_.size(); i++) {
        output.writeInt32(214, sevenReward_.get(i));
      }
      for (int i = 0; i < playerNum_.size(); i++) {
        output.writeInt32(215, playerNum_.get(i));
      }
      for (int i = 0; i < rewardId_.size(); i++) {
        output.writeInt32(216, rewardId_.get(i));
      }
      if (((bitField3_ & 0x00010000) == 0x00010000)) {
        output.writeBool(217, inviteReward_);
      }
      if (((bitField3_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(218, lingHun_);
      }
      for (int i = 0; i < liuDaoDuiHuanIds_.size(); i++) {
        output.writeInt32(219, liuDaoDuiHuanIds_.get(i));
      }
      for (int i = 0; i < liuDaoDuiHuanIdsBuyed_.size(); i++) {
        output.writeInt32(220, liuDaoDuiHuanIdsBuyed_.get(i));
      }
      if (((bitField3_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(221, liuDaoChangeTime_);
      }
      if (((bitField3_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(222, liuDaoBaoXiangOpenNum_);
      }
      if (((bitField3_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(226, vipCardAllLift_);
      }
      if (((bitField3_ & 0x00200000) == 0x00200000)) {
        output.writeBool(227, vipAllLifeReward_);
      }
      for (int i = 0; i < cardGroupLiuDao_.size(); i++) {
        output.writeInt64(228, cardGroupLiuDao_.get(i));
      }
      for (int i = 0; i < cardGroupFightLiuDao_.size(); i++) {
        output.writeInt32(229, cardGroupFightLiuDao_.get(i));
      }
      for (int i = 0; i < drawCardFree_.size(); i++) {
        output.writeMessage(230, drawCardFree_.get(i));
      }
      if (((bitField3_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(231, liudaoEnterHeroLimit_);
      }
      if (((bitField3_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(232, todayQuestNum_);
      }
      if (((bitField3_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(233, cardId_);
      }
      if (((bitField3_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(234, enterLiuDaoTimes_);
      }
      if (((bitField3_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(235, xunshan_);
      }
      if (((bitField3_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(236, dailyLeftTimes_);
      }
      if (((bitField3_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(257, dailyBuyTimes_);
      }
      if (((bitField3_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(258, nextCDTime_);
      }
      if (((bitField3_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(259, shouHuId_);
      }
      if (((bitField3_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(260, cancelCDTimes_);
      }
      for (int i = 0; i < xunshanStr_.size(); i++) {
        output.writeInt32(261, xunshanStr_.get(i));
      }
      if (((bitField4_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(262, gangInfo_);
      }
      if (((bitField4_ & 0x00000002) == 0x00000002)) {
        output.writeBool(263, hasDFBet_);
      }
      for (int i = 0; i < gangExchange_.size(); i++) {
        output.writeMessage(264, gangExchange_.get(i));
      }
      if (((bitField4_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(265, gangRefreshExchangeTimes_);
      }
      if (((bitField4_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(266, dfTeamInfo_);
      }
      if (((bitField4_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(267, vipDailyGiftBuyCount_);
      }
      if (((bitField4_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(268, trialsDFTimes_);
      }
      if (((bitField4_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(269, dfBetId_);
      }
      if (((bitField4_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(270, xunxian_);
      }
      if (((bitField4_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(271, auctionType_);
      }
      if (((bitField4_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(272, securityCodeItem_);
      }
      if (((bitField4_ & 0x00000400) == 0x00000400)) {
        output.writeBool(273, login1100_);
      }
      if (((bitField4_ & 0x00000800) == 0x00000800)) {
        output.writeBool(274, isShowDFInMainUI_);
      }
      if (((bitField4_ & 0x00001000) == 0x00001000)) {
        output.writeBool(275, isVipUpByPlayerLv_);
      }
      if (((bitField4_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(276, hongbaoActivitys_);
      }
      if (((bitField4_ & 0x00004000) == 0x00004000)) {
        output.writeBool(277, isOpenedBoxEveryDay_);
      }
      if (((bitField4_ & 0x00008000) == 0x00008000)) {
        output.writeBool(278, admobSwitch_);
      }
      if (((bitField4_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(280, arenaTeamInfo_);
      }
      if (((bitField4_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(281, sectionGuideIndex_);
      }
      if (((bitField4_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(282, jiaoYiBuy_);
      }
      if (((bitField4_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(283, jiaoYiSale_);
      }
      if (((bitField4_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(284, dailyLongGongBox_);
      }
      if (((bitField4_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(285, dailyLiuDao_);
      }
      if (((bitField4_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(286, escortItem_);
      }
      if (((bitField4_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(287, escortTeamInfo_);
      }
      if (((bitField4_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(288, position_);
      }
      if (((bitField4_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(289, shenMoTeamItem_);
      }
      if (((bitField4_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(290, pvpTeamItem_);
      }
      if (((bitField4_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(291, fbTeamItem_);
      }
      if (((bitField4_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(292, gangModifyNameTimes_);
      }
      if (((bitField4_ & 0x20000000) == 0x20000000)) {
        output.writeUInt64(293, startTimeMultiExp_);
      }
      if (((bitField4_ & 0x40000000) == 0x40000000)) {
        output.writeUInt64(294, endTimeMultiExp_);
      }
      if (((bitField4_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(295, rate_);
      }
      if (((bitField5_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(296, nextTime_);
      }
      if (((bitField5_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(297, liuDaoEnemyStartIndex_);
      }
      if (((bitField5_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(298, liuDaoEnemyEndIndex_);
      }
      for (int i = 0; i < rewardIds_.size(); i++) {
        output.writeInt32(299, rewardIds_.get(i));
      }
      if (((bitField5_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(300, liuDaoSweepHaveReward_);
      }
      for (int i = 0; i < exchangeItemReward_.size(); i++) {
        output.writeMessage(301, exchangeItemReward_.get(i));
      }
      if (((bitField5_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(302, templeDayRemainSeekTimes_);
      }
      if (((bitField5_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(303, templeTeam_);
      }
      for (int i = 0; i < doubleReward_.size(); i++) {
        output.writeMessage(304, doubleReward_.get(i));
      }
      if (((bitField5_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(305, shenmoRankActivityReward_);
      }
      if (((bitField5_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(306, arenaRankActivityReward_);
      }
      if (((bitField5_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(307, openBoxRankActivityReward_);
      }
      for (int i = 0; i < templeCultivateCards_.size(); i++) {
        output.writeInt64(308, templeCultivateCards_.get(i));
      }
      if (((bitField5_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(309, jingYanDanCostGold_);
      }
      if (((bitField5_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(310, cardExpDeclineNum_);
      }
      if (((bitField5_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(311, rankValue_);
      }
      if (((bitField5_ & 0x00001000) == 0x00001000)) {
        output.writeBool(312, hasTempleEvent_);
      }
      if (((bitField5_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(313, redPacketId_);
      }
      if (((bitField5_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(314, redPacketNum_);
      }
      if (((bitField5_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(315, customPushItemMessage_);
      }
      if (((bitField5_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(316, zhuanPanNums_);
      }
      for (int i = 0; i < zhuanPanOpenIds_.size(); i++) {
        output.writeInt32(317, zhuanPanOpenIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, exp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, daoXing_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, vip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, gold_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, shengWang_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, xianYuan_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bagsUnlockGold_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, stamina_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, spirit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, friendsCost_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, trainFreeRenew_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, receiveStaminaNum_);
      }
      for (int i = 0; i < todayQuestNums_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, todayQuestNums_.get(i));
      }
      for (int i = 0; i < todayQuestRestNums_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, todayQuestRestNums_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < donateStamina_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(donateStamina_.get(i));
        }
        size += dataSize;
        size += 2 * getDonateStaminaList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < receiveStamina_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(receiveStamina_.get(i));
        }
        size += dataSize;
        size += 2 * getReceiveStaminaList().size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(26, staminaDate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < friendId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(friendId_.get(i));
        }
        size += dataSize;
        size += 2 * getFriendIdList().size();
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(28, loginDate_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(29, onlineTime_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(30, bagsUnlockGoldCd_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(31, coin_);
      }
      for (int i = 0; i < moonStarItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, moonStarItem_.get(i));
      }
      for (int i = 0; i < magicWeapons_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, magicWeapons_.get(i));
      }
      for (int i = 0; i < drawCardDate_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, drawCardDate_.get(i));
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, firstPay_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < firstPayIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(firstPayIds_.get(i));
        }
        size += dataSize;
        size += 2 * getFirstPayIdsList().size();
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(39, spiritDate_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, worshipTimes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < worshipIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(worshipIds_.get(i));
        }
        size += dataSize;
        size += 2 * getWorshipIdsList().size();
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(42, gainRewardTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < exchangeTimes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(exchangeTimes_.get(i));
        }
        size += dataSize;
        size += 2 * getExchangeTimesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mails_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(mails_.get(i));
        }
        size += dataSize;
        size += 2 * getMailsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mailFinished_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(mailFinished_.get(i));
        }
        size += dataSize;
        size += 2 * getMailFinishedList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mailDeleted_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(mailDeleted_.get(i));
        }
        size += dataSize;
        size += 2 * getMailDeletedList().size();
      }
      for (int i = 0; i < pvpFightResult_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, pvpFightResult_.get(i));
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, buyStamina_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, buySpirit_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, pvpWins_);
      }
      for (int i = 0; i < shopItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, shopItems_.get(i));
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(54, loginDays_);
      }
      for (int i = 0; i < missions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, missions_.get(i));
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(56, silver_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, cards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardGroup_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(cardGroup_.get(i));
        }
        size += dataSize;
        size += 2 * getCardGroupList().size();
      }
      for (int i = 0; i < pieces_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, pieces_.get(i));
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(60, items_.get(i));
      }
      for (int i = 0; i < hufas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(61, hufas_.get(i));
      }
      for (int i = 0; i < trains_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, trains_.get(i));
      }
      for (int i = 0; i < quests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(64, quests_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardGroupFight_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardGroupFight_.get(i));
        }
        size += dataSize;
        size += 2 * getCardGroupFightList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < magicWeaponGroup_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(magicWeaponGroup_.get(i));
        }
        size += dataSize;
        size += 2 * getMagicWeaponGroupList().size();
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(68, rewardLastTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pvpWinReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pvpWinReward_.get(i));
        }
        size += dataSize;
        size += 2 * getPvpWinRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < loginReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(loginReward_.get(i));
        }
        size += dataSize;
        size += 2 * getLoginRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pvpFightNumReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pvpFightNumReward_.get(i));
        }
        size += dataSize;
        size += 2 * getPvpFightNumRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < drawCardReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(drawCardReward_.get(i));
        }
        size += dataSize;
        size += 2 * getDrawCardRewardList().size();
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(73, gainBuyStamina_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(74, gainBuySpiritReward_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gainQiuYuanReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gainQiuYuanReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGainQiuYuanRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gainLvUpReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gainLvUpReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGainLvUpRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gainChapterReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gainChapterReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGainChapterRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gainChapterStarReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gainChapterStarReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGainChapterStarRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gainFriendNumReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gainFriendNumReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGainFriendNumRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gainCardReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gainCardReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGainCardRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gainItemReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gainItemReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGainItemRewardList().size();
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(83, gainEveryDayTili_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(84, gainEveryDayGold_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(85, receiveXianYuan_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(87, drawCardTimes_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(88, pvpFightWinNum_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(89, multiLoginDays_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(90, totalPayGold_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < amountPaymentReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(amountPaymentReward_.get(i));
        }
        size += dataSize;
        size += 2 * getAmountPaymentRewardList().size();
      }
      for (int i = 0; i < missionsDaily_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(93, missionsDaily_.get(i));
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(94, pvpNewFightFlag_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(95, qiuyuan_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(96, qiuyuanGold_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(97, newMail_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(98, pvpWinNum_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(99, firstPayReward_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vipGifts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(vipGifts_.get(i));
        }
        size += dataSize;
        size += 2 * getVipGiftsList().size();
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(101, vipReward_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(102, vipCard_);
      }
      for (int i = 0; i < vipAllGift_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, vipAllGift_.get(i));
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(104, guideIndex_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(105, isQianDao_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, qianDao_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(107, battleIndex_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(108, caishenCoinNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < triggerGuideIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(triggerGuideIndex_.get(i));
        }
        size += dataSize;
        size += 2 * getTriggerGuideIndexList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chapterEasyReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chapterEasyReward_.get(i));
        }
        size += dataSize;
        size += 2 * getChapterEasyRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chapterNormalReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chapterNormalReward_.get(i));
        }
        size += dataSize;
        size += 2 * getChapterNormalRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chapterHardReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chapterHardReward_.get(i));
        }
        size += dataSize;
        size += 2 * getChapterHardRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < activityEasyReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(activityEasyReward_.get(i));
        }
        size += dataSize;
        size += 2 * getActivityEasyRewardList().size();
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(114, cardEffectNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < baoXiangReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(baoXiangReward_.get(i));
        }
        size += dataSize;
        size += 2 * getBaoXiangRewardList().size();
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(116, newFriendInvite_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(117, yunyouRefreshTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < yunyouItems_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(yunyouItems_.get(i));
        }
        size += dataSize;
        size += 2 * getYunyouItemsList().size();
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(119, lvReward_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(120, qiuBaoDate_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(121, qiuBaoTimes_);
      }
      for (int i = 0; i < itemTask_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(122, itemTask_.get(i));
      }
      for (int i = 0; i < cardTask_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(123, cardTask_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < collectCardReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(collectCardReward_.get(i));
        }
        size += dataSize;
        size += 2 * getCollectCardRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardReward_.get(i));
        }
        size += dataSize;
        size += 2 * getCardRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(itemReward_.get(i));
        }
        size += dataSize;
        size += 2 * getItemRewardList().size();
      }
      for (int i = 0; i < vipNums_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(127, vipNums_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < firstPayExtraIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(firstPayExtraIds_.get(i));
        }
        size += dataSize;
        size += 2 * getFirstPayExtraIdsList().size();
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(129, assetBundleState_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(130, userId_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(131, serverId_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(132, getUsernameBytes());
      }
      for (int i = 0; i < pvpExchangeItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(133, pvpExchangeItems_.get(i));
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(134, hunyu_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < firstDrawIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(firstDrawIds_.get(i));
        }
        size += dataSize;
        size += 2 * getFirstDrawIdsList().size();
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(136, openDate_);
      }
      for (int i = 0; i < todyTastePantaos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(137, todyTastePantaos_.get(i));
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(138, battleScore_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(139, lingLi_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(140, buyLingli_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(141, lingLiDate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shenMoDuiHuan_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shenMoDuiHuan_.get(i));
        }
        size += dataSize;
        size += 2 * getShenMoDuiHuanList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < buyShenMoItem_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(buyShenMoItem_.get(i));
        }
        size += dataSize;
        size += 2 * getBuyShenMoItemList().size();
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(153, xiuWei_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(154, hasPvpReward_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(155, gongDe_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gongDeReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gongDeReward_.get(i));
        }
        size += dataSize;
        size += 2 * getGongDeRewardList().size();
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(157, rankRise_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(158, rank_);
      }
      for (int i = 0; i < drawCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(159, drawCard_.get(i));
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(160, hufaOpen_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(161, caishenSilverNum_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(162, drawCardReward2_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerPrefs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(playerPrefs_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getPlayerPrefsList().size();
      }
      for (int i = 0; i < missionMap_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(164, missionMap_.get(i));
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(165, missionNum_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(166, yunyouNum_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(167, pvpExchangeNum_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(168, friendNum_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(171, clearShenMoItem_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(172, refreshHour24_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(173, pay_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(174, isShutUp_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(175, shutUpDate_);
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(176, shutUpEnd_);
      }
      for (int i = 0; i < activityItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(177, activityItem_.get(i));
      }
      for (int i = 0; i < payReward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(178, payReward_.get(i));
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(179, yunYouTime_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(180, pvpChangeTime_);
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(181, shenMoChangeTime_);
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(182, shenMoNum_);
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(183, itemLvUpNum_);
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(184, cardLvUpNum_);
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(185, shenTongNum_);
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(186, skillNum_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(187, huFaNum_);
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(188, xiuLianNum_);
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(189, changeName_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chengjiuReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chengjiuReward_.get(i));
        }
        size += dataSize;
        size += 2 * getChengjiuRewardList().size();
      }
      if (((bitField3_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(191, fenXiangRewardTimes_);
      }
      if (((bitField3_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(192, weiXinFirstShare_);
      }
      if (((bitField3_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(193, weiXinOpen_);
      }
      if (((bitField3_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(194, xilianOpen_);
      }
      if (((bitField3_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(195, pvpWinMax_);
      }
      if (((bitField3_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(196, getInviteCodeBytes());
      }
      if (((bitField3_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(197, inviteNum_);
      }
      if (((bitField3_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(198, inviterId_);
      }
      if (((bitField3_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(199, clearFirstPayExtraIds_);
      }
      if (((bitField3_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(200, loginActivity_);
      }
      if (((bitField3_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(201, choukaQuan_);
      }
      if (((bitField3_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(206, shenJiangScore_);
      }
      if (((bitField3_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(207, shenJiangTotalScore_);
      }
      if (((bitField3_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(208, shenJiangRank_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inviteNumReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inviteNumReward_.get(i));
        }
        size += dataSize;
        size += 2 * getInviteNumRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < yuanshenBox_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(yuanshenBox_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getYuanshenBoxList().size();
      }
      for (int i = 0; i < boxs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(211, boxs_.get(i));
      }
      for (int i = 0; i < buyBox_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(212, buyBox_.get(i));
      }
      if (((bitField3_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(213, zhuanpan_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sevenReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(sevenReward_.get(i));
        }
        size += dataSize;
        size += 2 * getSevenRewardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerNum_.get(i));
        }
        size += dataSize;
        size += 2 * getPlayerNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rewardId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rewardId_.get(i));
        }
        size += dataSize;
        size += 2 * getRewardIdList().size();
      }
      if (((bitField3_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(217, inviteReward_);
      }
      if (((bitField3_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(218, lingHun_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < liuDaoDuiHuanIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(liuDaoDuiHuanIds_.get(i));
        }
        size += dataSize;
        size += 2 * getLiuDaoDuiHuanIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < liuDaoDuiHuanIdsBuyed_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(liuDaoDuiHuanIdsBuyed_.get(i));
        }
        size += dataSize;
        size += 2 * getLiuDaoDuiHuanIdsBuyedList().size();
      }
      if (((bitField3_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(221, liuDaoChangeTime_);
      }
      if (((bitField3_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(222, liuDaoBaoXiangOpenNum_);
      }
      if (((bitField3_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(226, vipCardAllLift_);
      }
      if (((bitField3_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(227, vipAllLifeReward_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardGroupLiuDao_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(cardGroupLiuDao_.get(i));
        }
        size += dataSize;
        size += 2 * getCardGroupLiuDaoList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardGroupFightLiuDao_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardGroupFightLiuDao_.get(i));
        }
        size += dataSize;
        size += 2 * getCardGroupFightLiuDaoList().size();
      }
      for (int i = 0; i < drawCardFree_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(230, drawCardFree_.get(i));
      }
      if (((bitField3_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(231, liudaoEnterHeroLimit_);
      }
      if (((bitField3_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(232, todayQuestNum_);
      }
      if (((bitField3_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(233, cardId_);
      }
      if (((bitField3_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(234, enterLiuDaoTimes_);
      }
      if (((bitField3_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(235, xunshan_);
      }
      if (((bitField3_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(236, dailyLeftTimes_);
      }
      if (((bitField3_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(257, dailyBuyTimes_);
      }
      if (((bitField3_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(258, nextCDTime_);
      }
      if (((bitField3_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(259, shouHuId_);
      }
      if (((bitField3_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(260, cancelCDTimes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xunshanStr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xunshanStr_.get(i));
        }
        size += dataSize;
        size += 2 * getXunshanStrList().size();
      }
      if (((bitField4_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(262, gangInfo_);
      }
      if (((bitField4_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(263, hasDFBet_);
      }
      for (int i = 0; i < gangExchange_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(264, gangExchange_.get(i));
      }
      if (((bitField4_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(265, gangRefreshExchangeTimes_);
      }
      if (((bitField4_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(266, dfTeamInfo_);
      }
      if (((bitField4_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(267, vipDailyGiftBuyCount_);
      }
      if (((bitField4_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(268, trialsDFTimes_);
      }
      if (((bitField4_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(269, dfBetId_);
      }
      if (((bitField4_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(270, xunxian_);
      }
      if (((bitField4_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(271, auctionType_);
      }
      if (((bitField4_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(272, securityCodeItem_);
      }
      if (((bitField4_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(273, login1100_);
      }
      if (((bitField4_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(274, isShowDFInMainUI_);
      }
      if (((bitField4_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(275, isVipUpByPlayerLv_);
      }
      if (((bitField4_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(276, hongbaoActivitys_);
      }
      if (((bitField4_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(277, isOpenedBoxEveryDay_);
      }
      if (((bitField4_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(278, admobSwitch_);
      }
      if (((bitField4_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(280, arenaTeamInfo_);
      }
      if (((bitField4_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(281, sectionGuideIndex_);
      }
      if (((bitField4_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(282, jiaoYiBuy_);
      }
      if (((bitField4_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(283, jiaoYiSale_);
      }
      if (((bitField4_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(284, dailyLongGongBox_);
      }
      if (((bitField4_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(285, dailyLiuDao_);
      }
      if (((bitField4_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(286, escortItem_);
      }
      if (((bitField4_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(287, escortTeamInfo_);
      }
      if (((bitField4_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(288, position_);
      }
      if (((bitField4_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(289, shenMoTeamItem_);
      }
      if (((bitField4_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(290, pvpTeamItem_);
      }
      if (((bitField4_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(291, fbTeamItem_);
      }
      if (((bitField4_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(292, gangModifyNameTimes_);
      }
      if (((bitField4_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(293, startTimeMultiExp_);
      }
      if (((bitField4_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(294, endTimeMultiExp_);
      }
      if (((bitField4_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(295, rate_);
      }
      if (((bitField5_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(296, nextTime_);
      }
      if (((bitField5_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(297, liuDaoEnemyStartIndex_);
      }
      if (((bitField5_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(298, liuDaoEnemyEndIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rewardIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rewardIds_.get(i));
        }
        size += dataSize;
        size += 2 * getRewardIdsList().size();
      }
      if (((bitField5_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(300, liuDaoSweepHaveReward_);
      }
      for (int i = 0; i < exchangeItemReward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(301, exchangeItemReward_.get(i));
      }
      if (((bitField5_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(302, templeDayRemainSeekTimes_);
      }
      if (((bitField5_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(303, templeTeam_);
      }
      for (int i = 0; i < doubleReward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(304, doubleReward_.get(i));
      }
      if (((bitField5_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(305, shenmoRankActivityReward_);
      }
      if (((bitField5_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(306, arenaRankActivityReward_);
      }
      if (((bitField5_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(307, openBoxRankActivityReward_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < templeCultivateCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(templeCultivateCards_.get(i));
        }
        size += dataSize;
        size += 2 * getTempleCultivateCardsList().size();
      }
      if (((bitField5_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(309, jingYanDanCostGold_);
      }
      if (((bitField5_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(310, cardExpDeclineNum_);
      }
      if (((bitField5_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(311, rankValue_);
      }
      if (((bitField5_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(312, hasTempleEvent_);
      }
      if (((bitField5_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(313, redPacketId_);
      }
      if (((bitField5_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(314, redPacketNum_);
      }
      if (((bitField5_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(315, customPushItemMessage_);
      }
      if (((bitField5_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(316, zhuanPanNums_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < zhuanPanOpenIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(zhuanPanOpenIds_.get(i));
        }
        size += dataSize;
        size += 2 * getZhuanPanOpenIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PlayerItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PlayerItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PlayerItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PlayerItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PlayerItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PlayerItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PlayerItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PlayerItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PlayerItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PlayerItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PlayerItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerItem}
     *
     * <pre>
     *角色:玩家自己的详细信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PlayerItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PlayerItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PlayerItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PlayerItem.class, myudfs.Common.PlayerItem.Builder.class);
      }

      // Construct using myudfs.Common.PlayerItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTodayQuestNumsFieldBuilder();
          getTodayQuestRestNumsFieldBuilder();
          getMoonStarItemFieldBuilder();
          getMagicWeaponsFieldBuilder();
          getDrawCardDateFieldBuilder();
          getPvpFightResultFieldBuilder();
          getShopItemsFieldBuilder();
          getMissionsFieldBuilder();
          getCardsFieldBuilder();
          getPiecesFieldBuilder();
          getItemsFieldBuilder();
          getHufasFieldBuilder();
          getTrainsFieldBuilder();
          getQuestsFieldBuilder();
          getMissionsDailyFieldBuilder();
          getVipAllGiftFieldBuilder();
          getQianDaoFieldBuilder();
          getItemTaskFieldBuilder();
          getCardTaskFieldBuilder();
          getVipNumsFieldBuilder();
          getPvpExchangeItemsFieldBuilder();
          getTodyTastePantaosFieldBuilder();
          getDrawCardFieldBuilder();
          getMissionMapFieldBuilder();
          getActivityItemFieldBuilder();
          getPayRewardFieldBuilder();
          getLoginActivityFieldBuilder();
          getBoxsFieldBuilder();
          getBuyBoxFieldBuilder();
          getDrawCardFreeFieldBuilder();
          getGangInfoFieldBuilder();
          getGangExchangeFieldBuilder();
          getDfTeamInfoFieldBuilder();
          getXunxianFieldBuilder();
          getSecurityCodeItemFieldBuilder();
          getHongbaoActivitysFieldBuilder();
          getArenaTeamInfoFieldBuilder();
          getEscortItemFieldBuilder();
          getEscortTeamInfoFieldBuilder();
          getShenMoTeamItemFieldBuilder();
          getPvpTeamItemFieldBuilder();
          getFbTeamItemFieldBuilder();
          getExchangeItemRewardFieldBuilder();
          getTempleTeamFieldBuilder();
          getDoubleRewardFieldBuilder();
          getShenmoRankActivityRewardFieldBuilder();
          getArenaRankActivityRewardFieldBuilder();
          getOpenBoxRankActivityRewardFieldBuilder();
          getCustomPushItemMessageFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        daoXing_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        shengWang_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        xianYuan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        bagsUnlockGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        stamina_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        spirit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        friendsCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        trainFreeRenew_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        receiveStaminaNum_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (todayQuestNumsBuilder_ == null) {
          todayQuestNums_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          todayQuestNumsBuilder_.clear();
        }
        if (todayQuestRestNumsBuilder_ == null) {
          todayQuestRestNums_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          todayQuestRestNumsBuilder_.clear();
        }
        donateStamina_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        receiveStamina_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        staminaDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        friendId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        loginDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        onlineTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        bagsUnlockGoldCd_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        coin_ = 0L;
        bitField0_ = (bitField0_ & ~0x01000000);
        if (moonStarItemBuilder_ == null) {
          moonStarItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x02000000);
        } else {
          moonStarItemBuilder_.clear();
        }
        if (magicWeaponsBuilder_ == null) {
          magicWeapons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
        } else {
          magicWeaponsBuilder_.clear();
        }
        if (drawCardDateBuilder_ == null) {
          drawCardDate_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
        } else {
          drawCardDateBuilder_.clear();
        }
        firstPay_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        firstPayIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x20000000);
        spiritDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x40000000);
        worshipTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        worshipIds_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000001);
        gainRewardTime_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000002);
        exchangeTimes_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000004);
        mails_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000008);
        mailFinished_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000010);
        mailDeleted_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000020);
        if (pvpFightResultBuilder_ == null) {
          pvpFightResult_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
        } else {
          pvpFightResultBuilder_.clear();
        }
        buyStamina_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        buySpirit_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        pvpWins_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        if (shopItemsBuilder_ == null) {
          shopItems_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000400);
        } else {
          shopItemsBuilder_.clear();
        }
        loginDays_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        if (missionsBuilder_ == null) {
          missions_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00001000);
        } else {
          missionsBuilder_.clear();
        }
        silver_ = 0L;
        bitField1_ = (bitField1_ & ~0x00002000);
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00004000);
        } else {
          cardsBuilder_.clear();
        }
        cardGroup_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00008000);
        if (piecesBuilder_ == null) {
          pieces_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00010000);
        } else {
          piecesBuilder_.clear();
        }
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00020000);
        } else {
          itemsBuilder_.clear();
        }
        if (hufasBuilder_ == null) {
          hufas_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00040000);
        } else {
          hufasBuilder_.clear();
        }
        if (trainsBuilder_ == null) {
          trains_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00080000);
        } else {
          trainsBuilder_.clear();
        }
        if (questsBuilder_ == null) {
          quests_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00100000);
        } else {
          questsBuilder_.clear();
        }
        cardGroupFight_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00200000);
        magicWeaponGroup_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00400000);
        rewardLastTime_ = 0L;
        bitField1_ = (bitField1_ & ~0x00800000);
        pvpWinReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x01000000);
        loginReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x02000000);
        pvpFightNumReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x04000000);
        drawCardReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x08000000);
        gainBuyStamina_ = 0L;
        bitField1_ = (bitField1_ & ~0x10000000);
        gainBuySpiritReward_ = 0L;
        bitField1_ = (bitField1_ & ~0x20000000);
        gainQiuYuanReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x40000000);
        gainLvUpReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x80000000);
        gainChapterReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000001);
        gainChapterStarReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000002);
        gainFriendNumReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000004);
        gainCardReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000008);
        gainItemReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000010);
        gainEveryDayTili_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000020);
        gainEveryDayGold_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000040);
        receiveXianYuan_ = 0;
        bitField2_ = (bitField2_ & ~0x00000080);
        drawCardTimes_ = 0;
        bitField2_ = (bitField2_ & ~0x00000100);
        pvpFightWinNum_ = 0;
        bitField2_ = (bitField2_ & ~0x00000200);
        multiLoginDays_ = 0;
        bitField2_ = (bitField2_ & ~0x00000400);
        totalPayGold_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000800);
        amountPaymentReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00001000);
        if (missionsDailyBuilder_ == null) {
          missionsDaily_ = java.util.Collections.emptyList();
          bitField2_ = (bitField2_ & ~0x00002000);
        } else {
          missionsDailyBuilder_.clear();
        }
        pvpNewFightFlag_ = false;
        bitField2_ = (bitField2_ & ~0x00004000);
        qiuyuan_ = 0;
        bitField2_ = (bitField2_ & ~0x00008000);
        qiuyuanGold_ = 0;
        bitField2_ = (bitField2_ & ~0x00010000);
        newMail_ = false;
        bitField2_ = (bitField2_ & ~0x00020000);
        pvpWinNum_ = 0;
        bitField2_ = (bitField2_ & ~0x00040000);
        firstPayReward_ = false;
        bitField2_ = (bitField2_ & ~0x00080000);
        vipGifts_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00100000);
        vipReward_ = false;
        bitField2_ = (bitField2_ & ~0x00200000);
        vipCard_ = 0;
        bitField2_ = (bitField2_ & ~0x00400000);
        if (vipAllGiftBuilder_ == null) {
          vipAllGift_ = java.util.Collections.emptyList();
          bitField2_ = (bitField2_ & ~0x00800000);
        } else {
          vipAllGiftBuilder_.clear();
        }
        guideIndex_ = 0;
        bitField2_ = (bitField2_ & ~0x01000000);
        isQianDao_ = false;
        bitField2_ = (bitField2_ & ~0x02000000);
        if (qianDaoBuilder_ == null) {
          qianDao_ = myudfs.Common.MapItem.getDefaultInstance();
        } else {
          qianDaoBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x04000000);
        battleIndex_ = 0;
        bitField2_ = (bitField2_ & ~0x08000000);
        caishenCoinNum_ = 0;
        bitField2_ = (bitField2_ & ~0x10000000);
        triggerGuideIndex_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x20000000);
        chapterEasyReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x40000000);
        chapterNormalReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x80000000);
        chapterHardReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000001);
        activityEasyReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000002);
        cardEffectNum_ = 0;
        bitField3_ = (bitField3_ & ~0x00000004);
        baoXiangReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000008);
        newFriendInvite_ = 0;
        bitField3_ = (bitField3_ & ~0x00000010);
        yunyouRefreshTime_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000020);
        yunyouItems_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000040);
        lvReward_ = 0;
        bitField3_ = (bitField3_ & ~0x00000080);
        qiuBaoDate_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000100);
        qiuBaoTimes_ = 0;
        bitField3_ = (bitField3_ & ~0x00000200);
        if (itemTaskBuilder_ == null) {
          itemTask_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00000400);
        } else {
          itemTaskBuilder_.clear();
        }
        if (cardTaskBuilder_ == null) {
          cardTask_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00000800);
        } else {
          cardTaskBuilder_.clear();
        }
        collectCardReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00001000);
        cardReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00002000);
        itemReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00004000);
        if (vipNumsBuilder_ == null) {
          vipNums_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00008000);
        } else {
          vipNumsBuilder_.clear();
        }
        firstPayExtraIds_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00010000);
        assetBundleState_ = 0;
        bitField3_ = (bitField3_ & ~0x00020000);
        userId_ = 0L;
        bitField3_ = (bitField3_ & ~0x00040000);
        serverId_ = 0;
        bitField3_ = (bitField3_ & ~0x00080000);
        username_ = "";
        bitField3_ = (bitField3_ & ~0x00100000);
        if (pvpExchangeItemsBuilder_ == null) {
          pvpExchangeItems_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00200000);
        } else {
          pvpExchangeItemsBuilder_.clear();
        }
        hunyu_ = 0;
        bitField3_ = (bitField3_ & ~0x00400000);
        firstDrawIds_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00800000);
        openDate_ = 0L;
        bitField3_ = (bitField3_ & ~0x01000000);
        if (todyTastePantaosBuilder_ == null) {
          todyTastePantaos_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x02000000);
        } else {
          todyTastePantaosBuilder_.clear();
        }
        battleScore_ = 0;
        bitField3_ = (bitField3_ & ~0x04000000);
        lingLi_ = 0;
        bitField3_ = (bitField3_ & ~0x08000000);
        buyLingli_ = 0;
        bitField3_ = (bitField3_ & ~0x10000000);
        lingLiDate_ = 0L;
        bitField3_ = (bitField3_ & ~0x20000000);
        shenMoDuiHuan_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x40000000);
        buyShenMoItem_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x80000000);
        xiuWei_ = 0;
        bitField4_ = (bitField4_ & ~0x00000001);
        hasPvpReward_ = false;
        bitField4_ = (bitField4_ & ~0x00000002);
        gongDe_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000004);
        gongDeReward_ = java.util.Collections.emptyList();
        bitField4_ = (bitField4_ & ~0x00000008);
        rankRise_ = 0;
        bitField4_ = (bitField4_ & ~0x00000010);
        rank_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000020);
        if (drawCardBuilder_ == null) {
          drawCard_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00000040);
        } else {
          drawCardBuilder_.clear();
        }
        hufaOpen_ = false;
        bitField4_ = (bitField4_ & ~0x00000080);
        caishenSilverNum_ = 0;
        bitField4_ = (bitField4_ & ~0x00000100);
        drawCardReward2_ = false;
        bitField4_ = (bitField4_ & ~0x00000200);
        playerPrefs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField4_ = (bitField4_ & ~0x00000400);
        if (missionMapBuilder_ == null) {
          missionMap_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00000800);
        } else {
          missionMapBuilder_.clear();
        }
        missionNum_ = 0;
        bitField4_ = (bitField4_ & ~0x00001000);
        yunyouNum_ = 0;
        bitField4_ = (bitField4_ & ~0x00002000);
        pvpExchangeNum_ = 0;
        bitField4_ = (bitField4_ & ~0x00004000);
        friendNum_ = 0;
        bitField4_ = (bitField4_ & ~0x00008000);
        clearShenMoItem_ = false;
        bitField4_ = (bitField4_ & ~0x00010000);
        refreshHour24_ = false;
        bitField4_ = (bitField4_ & ~0x00020000);
        pay_ = false;
        bitField4_ = (bitField4_ & ~0x00040000);
        isShutUp_ = false;
        bitField4_ = (bitField4_ & ~0x00080000);
        shutUpDate_ = 0L;
        bitField4_ = (bitField4_ & ~0x00100000);
        shutUpEnd_ = 0L;
        bitField4_ = (bitField4_ & ~0x00200000);
        if (activityItemBuilder_ == null) {
          activityItem_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00400000);
        } else {
          activityItemBuilder_.clear();
        }
        if (payRewardBuilder_ == null) {
          payReward_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00800000);
        } else {
          payRewardBuilder_.clear();
        }
        yunYouTime_ = 0;
        bitField4_ = (bitField4_ & ~0x01000000);
        pvpChangeTime_ = 0;
        bitField4_ = (bitField4_ & ~0x02000000);
        shenMoChangeTime_ = 0;
        bitField4_ = (bitField4_ & ~0x04000000);
        shenMoNum_ = 0;
        bitField4_ = (bitField4_ & ~0x08000000);
        itemLvUpNum_ = 0;
        bitField4_ = (bitField4_ & ~0x10000000);
        cardLvUpNum_ = 0;
        bitField4_ = (bitField4_ & ~0x20000000);
        shenTongNum_ = 0;
        bitField4_ = (bitField4_ & ~0x40000000);
        skillNum_ = 0;
        bitField4_ = (bitField4_ & ~0x80000000);
        huFaNum_ = 0;
        bitField5_ = (bitField5_ & ~0x00000001);
        xiuLianNum_ = 0;
        bitField5_ = (bitField5_ & ~0x00000002);
        changeName_ = 0;
        bitField5_ = (bitField5_ & ~0x00000004);
        chengjiuReward_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x00000008);
        fenXiangRewardTimes_ = 0;
        bitField5_ = (bitField5_ & ~0x00000010);
        weiXinFirstShare_ = false;
        bitField5_ = (bitField5_ & ~0x00000020);
        weiXinOpen_ = false;
        bitField5_ = (bitField5_ & ~0x00000040);
        xilianOpen_ = false;
        bitField5_ = (bitField5_ & ~0x00000080);
        pvpWinMax_ = 0;
        bitField5_ = (bitField5_ & ~0x00000100);
        inviteCode_ = "";
        bitField5_ = (bitField5_ & ~0x00000200);
        inviteNum_ = 0;
        bitField5_ = (bitField5_ & ~0x00000400);
        inviterId_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000800);
        clearFirstPayExtraIds_ = false;
        bitField5_ = (bitField5_ & ~0x00001000);
        if (loginActivityBuilder_ == null) {
          loginActivity_ = myudfs.Common.MapItem3.getDefaultInstance();
        } else {
          loginActivityBuilder_.clear();
        }
        bitField5_ = (bitField5_ & ~0x00002000);
        choukaQuan_ = 0;
        bitField5_ = (bitField5_ & ~0x00004000);
        shenJiangScore_ = 0;
        bitField5_ = (bitField5_ & ~0x00008000);
        shenJiangTotalScore_ = 0;
        bitField5_ = (bitField5_ & ~0x00010000);
        shenJiangRank_ = 0;
        bitField5_ = (bitField5_ & ~0x00020000);
        inviteNumReward_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x00040000);
        yuanshenBox_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField5_ = (bitField5_ & ~0x00080000);
        if (boxsBuilder_ == null) {
          boxs_ = java.util.Collections.emptyList();
          bitField5_ = (bitField5_ & ~0x00100000);
        } else {
          boxsBuilder_.clear();
        }
        if (buyBoxBuilder_ == null) {
          buyBox_ = java.util.Collections.emptyList();
          bitField5_ = (bitField5_ & ~0x00200000);
        } else {
          buyBoxBuilder_.clear();
        }
        zhuanpan_ = 0;
        bitField5_ = (bitField5_ & ~0x00400000);
        sevenReward_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x00800000);
        playerNum_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x01000000);
        rewardId_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x02000000);
        inviteReward_ = false;
        bitField5_ = (bitField5_ & ~0x04000000);
        lingHun_ = 0L;
        bitField5_ = (bitField5_ & ~0x08000000);
        liuDaoDuiHuanIds_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x10000000);
        liuDaoDuiHuanIdsBuyed_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x20000000);
        liuDaoChangeTime_ = 0;
        bitField5_ = (bitField5_ & ~0x40000000);
        liuDaoBaoXiangOpenNum_ = 0;
        bitField5_ = (bitField5_ & ~0x80000000);
        vipCardAllLift_ = 0;
        bitField6_ = (bitField6_ & ~0x00000001);
        vipAllLifeReward_ = false;
        bitField6_ = (bitField6_ & ~0x00000002);
        cardGroupLiuDao_ = java.util.Collections.emptyList();
        bitField6_ = (bitField6_ & ~0x00000004);
        cardGroupFightLiuDao_ = java.util.Collections.emptyList();
        bitField6_ = (bitField6_ & ~0x00000008);
        if (drawCardFreeBuilder_ == null) {
          drawCardFree_ = java.util.Collections.emptyList();
          bitField6_ = (bitField6_ & ~0x00000010);
        } else {
          drawCardFreeBuilder_.clear();
        }
        liudaoEnterHeroLimit_ = 0;
        bitField6_ = (bitField6_ & ~0x00000020);
        todayQuestNum_ = 0;
        bitField6_ = (bitField6_ & ~0x00000040);
        cardId_ = 0;
        bitField6_ = (bitField6_ & ~0x00000080);
        enterLiuDaoTimes_ = 0;
        bitField6_ = (bitField6_ & ~0x00000100);
        xunshan_ = 0;
        bitField6_ = (bitField6_ & ~0x00000200);
        dailyLeftTimes_ = 0;
        bitField6_ = (bitField6_ & ~0x00000400);
        dailyBuyTimes_ = 0;
        bitField6_ = (bitField6_ & ~0x00000800);
        nextCDTime_ = 0L;
        bitField6_ = (bitField6_ & ~0x00001000);
        shouHuId_ = 0;
        bitField6_ = (bitField6_ & ~0x00002000);
        cancelCDTimes_ = 0;
        bitField6_ = (bitField6_ & ~0x00004000);
        xunshanStr_ = java.util.Collections.emptyList();
        bitField6_ = (bitField6_ & ~0x00008000);
        if (gangInfoBuilder_ == null) {
          gangInfo_ = myudfs.Common.PlayerGangItem.getDefaultInstance();
        } else {
          gangInfoBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x00010000);
        hasDFBet_ = false;
        bitField6_ = (bitField6_ & ~0x00020000);
        if (gangExchangeBuilder_ == null) {
          gangExchange_ = java.util.Collections.emptyList();
          bitField6_ = (bitField6_ & ~0x00040000);
        } else {
          gangExchangeBuilder_.clear();
        }
        gangRefreshExchangeTimes_ = 0;
        bitField6_ = (bitField6_ & ~0x00080000);
        if (dfTeamInfoBuilder_ == null) {
          dfTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
        } else {
          dfTeamInfoBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x00100000);
        vipDailyGiftBuyCount_ = 0;
        bitField6_ = (bitField6_ & ~0x00200000);
        trialsDFTimes_ = 0;
        bitField6_ = (bitField6_ & ~0x00400000);
        dfBetId_ = 0L;
        bitField6_ = (bitField6_ & ~0x00800000);
        if (xunxianBuilder_ == null) {
          xunxian_ = myudfs.Common.Xunxian.getDefaultInstance();
        } else {
          xunxianBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x01000000);
        auctionType_ = 0;
        bitField6_ = (bitField6_ & ~0x02000000);
        if (securityCodeItemBuilder_ == null) {
          securityCodeItem_ = myudfs.Common.SecurityCodeItem.getDefaultInstance();
        } else {
          securityCodeItemBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x04000000);
        login1100_ = false;
        bitField6_ = (bitField6_ & ~0x08000000);
        isShowDFInMainUI_ = false;
        bitField6_ = (bitField6_ & ~0x10000000);
        isVipUpByPlayerLv_ = false;
        bitField6_ = (bitField6_ & ~0x20000000);
        if (hongbaoActivitysBuilder_ == null) {
          hongbaoActivitys_ = myudfs.Common.HongbaoActivityMessage.getDefaultInstance();
        } else {
          hongbaoActivitysBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x40000000);
        isOpenedBoxEveryDay_ = false;
        bitField6_ = (bitField6_ & ~0x80000000);
        admobSwitch_ = false;
        bitField7_ = (bitField7_ & ~0x00000001);
        if (arenaTeamInfoBuilder_ == null) {
          arenaTeamInfo_ = myudfs.Common.ArenaTeamItem.getDefaultInstance();
        } else {
          arenaTeamInfoBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000002);
        sectionGuideIndex_ = 0;
        bitField7_ = (bitField7_ & ~0x00000004);
        jiaoYiBuy_ = 0;
        bitField7_ = (bitField7_ & ~0x00000008);
        jiaoYiSale_ = 0;
        bitField7_ = (bitField7_ & ~0x00000010);
        dailyLongGongBox_ = 0;
        bitField7_ = (bitField7_ & ~0x00000020);
        dailyLiuDao_ = 0;
        bitField7_ = (bitField7_ & ~0x00000040);
        if (escortItemBuilder_ == null) {
          escortItem_ = myudfs.Common.PlayerEscortItem.getDefaultInstance();
        } else {
          escortItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000080);
        if (escortTeamInfoBuilder_ == null) {
          escortTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
        } else {
          escortTeamInfoBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000100);
        position_ = 0;
        bitField7_ = (bitField7_ & ~0x00000200);
        if (shenMoTeamItemBuilder_ == null) {
          shenMoTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
        } else {
          shenMoTeamItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000400);
        if (pvpTeamItemBuilder_ == null) {
          pvpTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
        } else {
          pvpTeamItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000800);
        if (fbTeamItemBuilder_ == null) {
          fbTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
        } else {
          fbTeamItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00001000);
        gangModifyNameTimes_ = 0;
        bitField7_ = (bitField7_ & ~0x00002000);
        startTimeMultiExp_ = 0L;
        bitField7_ = (bitField7_ & ~0x00004000);
        endTimeMultiExp_ = 0L;
        bitField7_ = (bitField7_ & ~0x00008000);
        rate_ = 0;
        bitField7_ = (bitField7_ & ~0x00010000);
        nextTime_ = 0L;
        bitField7_ = (bitField7_ & ~0x00020000);
        liuDaoEnemyStartIndex_ = 0;
        bitField7_ = (bitField7_ & ~0x00040000);
        liuDaoEnemyEndIndex_ = 0;
        bitField7_ = (bitField7_ & ~0x00080000);
        rewardIds_ = java.util.Collections.emptyList();
        bitField7_ = (bitField7_ & ~0x00100000);
        liuDaoSweepHaveReward_ = 0;
        bitField7_ = (bitField7_ & ~0x00200000);
        if (exchangeItemRewardBuilder_ == null) {
          exchangeItemReward_ = java.util.Collections.emptyList();
          bitField7_ = (bitField7_ & ~0x00400000);
        } else {
          exchangeItemRewardBuilder_.clear();
        }
        templeDayRemainSeekTimes_ = 0;
        bitField7_ = (bitField7_ & ~0x00800000);
        if (templeTeamBuilder_ == null) {
          templeTeam_ = myudfs.Common.DFTeamItem.getDefaultInstance();
        } else {
          templeTeamBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x01000000);
        if (doubleRewardBuilder_ == null) {
          doubleReward_ = java.util.Collections.emptyList();
          bitField7_ = (bitField7_ & ~0x02000000);
        } else {
          doubleRewardBuilder_.clear();
        }
        if (shenmoRankActivityRewardBuilder_ == null) {
          shenmoRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
        } else {
          shenmoRankActivityRewardBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x04000000);
        if (arenaRankActivityRewardBuilder_ == null) {
          arenaRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
        } else {
          arenaRankActivityRewardBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x08000000);
        if (openBoxRankActivityRewardBuilder_ == null) {
          openBoxRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
        } else {
          openBoxRankActivityRewardBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x10000000);
        templeCultivateCards_ = java.util.Collections.emptyList();
        bitField7_ = (bitField7_ & ~0x20000000);
        jingYanDanCostGold_ = 0;
        bitField7_ = (bitField7_ & ~0x40000000);
        cardExpDeclineNum_ = 0;
        bitField7_ = (bitField7_ & ~0x80000000);
        rankValue_ = 0;
        bitField8_ = (bitField8_ & ~0x00000001);
        hasTempleEvent_ = false;
        bitField8_ = (bitField8_ & ~0x00000002);
        redPacketId_ = 0;
        bitField8_ = (bitField8_ & ~0x00000004);
        redPacketNum_ = 0;
        bitField8_ = (bitField8_ & ~0x00000008);
        if (customPushItemMessageBuilder_ == null) {
          customPushItemMessage_ = myudfs.Common.CustomPushItemMessage.getDefaultInstance();
        } else {
          customPushItemMessageBuilder_.clear();
        }
        bitField8_ = (bitField8_ & ~0x00000010);
        zhuanPanNums_ = 0;
        bitField8_ = (bitField8_ & ~0x00000020);
        zhuanPanOpenIds_ = java.util.Collections.emptyList();
        bitField8_ = (bitField8_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PlayerItem_descriptor;
      }

      public myudfs.Common.PlayerItem getDefaultInstanceForType() {
        return myudfs.Common.PlayerItem.getDefaultInstance();
      }

      public myudfs.Common.PlayerItem build() {
        myudfs.Common.PlayerItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PlayerItem buildPartial() {
        myudfs.Common.PlayerItem result = new myudfs.Common.PlayerItem(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int from_bitField3_ = bitField3_;
        int from_bitField4_ = bitField4_;
        int from_bitField5_ = bitField5_;
        int from_bitField6_ = bitField6_;
        int from_bitField7_ = bitField7_;
        int from_bitField8_ = bitField8_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        int to_bitField3_ = 0;
        int to_bitField4_ = 0;
        int to_bitField5_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.daoXing_ = daoXing_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.shengWang_ = shengWang_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.xianYuan_ = xianYuan_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.bagsUnlockGold_ = bagsUnlockGold_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stamina_ = stamina_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.spirit_ = spirit_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.friendsCost_ = friendsCost_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.trainFreeRenew_ = trainFreeRenew_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.receiveStaminaNum_ = receiveStaminaNum_;
        if (todayQuestNumsBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            todayQuestNums_ = java.util.Collections.unmodifiableList(todayQuestNums_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.todayQuestNums_ = todayQuestNums_;
        } else {
          result.todayQuestNums_ = todayQuestNumsBuilder_.build();
        }
        if (todayQuestRestNumsBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            todayQuestRestNums_ = java.util.Collections.unmodifiableList(todayQuestRestNums_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.todayQuestRestNums_ = todayQuestRestNums_;
        } else {
          result.todayQuestRestNums_ = todayQuestRestNumsBuilder_.build();
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          donateStamina_ = java.util.Collections.unmodifiableList(donateStamina_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.donateStamina_ = donateStamina_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          receiveStamina_ = java.util.Collections.unmodifiableList(receiveStamina_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.receiveStamina_ = receiveStamina_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.staminaDate_ = staminaDate_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          friendId_ = java.util.Collections.unmodifiableList(friendId_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.friendId_ = friendId_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.loginDate_ = loginDate_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.onlineTime_ = onlineTime_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.bagsUnlockGoldCd_ = bagsUnlockGoldCd_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.coin_ = coin_;
        if (moonStarItemBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000)) {
            moonStarItem_ = java.util.Collections.unmodifiableList(moonStarItem_);
            bitField0_ = (bitField0_ & ~0x02000000);
          }
          result.moonStarItem_ = moonStarItem_;
        } else {
          result.moonStarItem_ = moonStarItemBuilder_.build();
        }
        if (magicWeaponsBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000)) {
            magicWeapons_ = java.util.Collections.unmodifiableList(magicWeapons_);
            bitField0_ = (bitField0_ & ~0x04000000);
          }
          result.magicWeapons_ = magicWeapons_;
        } else {
          result.magicWeapons_ = magicWeaponsBuilder_.build();
        }
        if (drawCardDateBuilder_ == null) {
          if (((bitField0_ & 0x08000000) == 0x08000000)) {
            drawCardDate_ = java.util.Collections.unmodifiableList(drawCardDate_);
            bitField0_ = (bitField0_ & ~0x08000000);
          }
          result.drawCardDate_ = drawCardDate_;
        } else {
          result.drawCardDate_ = drawCardDateBuilder_.build();
        }
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.firstPay_ = firstPay_;
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          firstPayIds_ = java.util.Collections.unmodifiableList(firstPayIds_);
          bitField0_ = (bitField0_ & ~0x20000000);
        }
        result.firstPayIds_ = firstPayIds_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.spiritDate_ = spiritDate_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.worshipTimes_ = worshipTimes_;
        if (((bitField1_ & 0x00000001) == 0x00000001)) {
          worshipIds_ = java.util.Collections.unmodifiableList(worshipIds_);
          bitField1_ = (bitField1_ & ~0x00000001);
        }
        result.worshipIds_ = worshipIds_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00800000;
        }
        result.gainRewardTime_ = gainRewardTime_;
        if (((bitField1_ & 0x00000004) == 0x00000004)) {
          exchangeTimes_ = java.util.Collections.unmodifiableList(exchangeTimes_);
          bitField1_ = (bitField1_ & ~0x00000004);
        }
        result.exchangeTimes_ = exchangeTimes_;
        if (((bitField1_ & 0x00000008) == 0x00000008)) {
          mails_ = java.util.Collections.unmodifiableList(mails_);
          bitField1_ = (bitField1_ & ~0x00000008);
        }
        result.mails_ = mails_;
        if (((bitField1_ & 0x00000010) == 0x00000010)) {
          mailFinished_ = java.util.Collections.unmodifiableList(mailFinished_);
          bitField1_ = (bitField1_ & ~0x00000010);
        }
        result.mailFinished_ = mailFinished_;
        if (((bitField1_ & 0x00000020) == 0x00000020)) {
          mailDeleted_ = java.util.Collections.unmodifiableList(mailDeleted_);
          bitField1_ = (bitField1_ & ~0x00000020);
        }
        result.mailDeleted_ = mailDeleted_;
        if (pvpFightResultBuilder_ == null) {
          if (((bitField1_ & 0x00000040) == 0x00000040)) {
            pvpFightResult_ = java.util.Collections.unmodifiableList(pvpFightResult_);
            bitField1_ = (bitField1_ & ~0x00000040);
          }
          result.pvpFightResult_ = pvpFightResult_;
        } else {
          result.pvpFightResult_ = pvpFightResultBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x01000000;
        }
        result.buyStamina_ = buyStamina_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x02000000;
        }
        result.buySpirit_ = buySpirit_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x04000000;
        }
        result.pvpWins_ = pvpWins_;
        if (shopItemsBuilder_ == null) {
          if (((bitField1_ & 0x00000400) == 0x00000400)) {
            shopItems_ = java.util.Collections.unmodifiableList(shopItems_);
            bitField1_ = (bitField1_ & ~0x00000400);
          }
          result.shopItems_ = shopItems_;
        } else {
          result.shopItems_ = shopItemsBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x08000000;
        }
        result.loginDays_ = loginDays_;
        if (missionsBuilder_ == null) {
          if (((bitField1_ & 0x00001000) == 0x00001000)) {
            missions_ = java.util.Collections.unmodifiableList(missions_);
            bitField1_ = (bitField1_ & ~0x00001000);
          }
          result.missions_ = missions_;
        } else {
          result.missions_ = missionsBuilder_.build();
        }
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.silver_ = silver_;
        if (cardsBuilder_ == null) {
          if (((bitField1_ & 0x00004000) == 0x00004000)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField1_ = (bitField1_ & ~0x00004000);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        if (((bitField1_ & 0x00008000) == 0x00008000)) {
          cardGroup_ = java.util.Collections.unmodifiableList(cardGroup_);
          bitField1_ = (bitField1_ & ~0x00008000);
        }
        result.cardGroup_ = cardGroup_;
        if (piecesBuilder_ == null) {
          if (((bitField1_ & 0x00010000) == 0x00010000)) {
            pieces_ = java.util.Collections.unmodifiableList(pieces_);
            bitField1_ = (bitField1_ & ~0x00010000);
          }
          result.pieces_ = pieces_;
        } else {
          result.pieces_ = piecesBuilder_.build();
        }
        if (itemsBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField1_ = (bitField1_ & ~0x00020000);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        if (hufasBuilder_ == null) {
          if (((bitField1_ & 0x00040000) == 0x00040000)) {
            hufas_ = java.util.Collections.unmodifiableList(hufas_);
            bitField1_ = (bitField1_ & ~0x00040000);
          }
          result.hufas_ = hufas_;
        } else {
          result.hufas_ = hufasBuilder_.build();
        }
        if (trainsBuilder_ == null) {
          if (((bitField1_ & 0x00080000) == 0x00080000)) {
            trains_ = java.util.Collections.unmodifiableList(trains_);
            bitField1_ = (bitField1_ & ~0x00080000);
          }
          result.trains_ = trains_;
        } else {
          result.trains_ = trainsBuilder_.build();
        }
        if (questsBuilder_ == null) {
          if (((bitField1_ & 0x00100000) == 0x00100000)) {
            quests_ = java.util.Collections.unmodifiableList(quests_);
            bitField1_ = (bitField1_ & ~0x00100000);
          }
          result.quests_ = quests_;
        } else {
          result.quests_ = questsBuilder_.build();
        }
        if (((bitField1_ & 0x00200000) == 0x00200000)) {
          cardGroupFight_ = java.util.Collections.unmodifiableList(cardGroupFight_);
          bitField1_ = (bitField1_ & ~0x00200000);
        }
        result.cardGroupFight_ = cardGroupFight_;
        if (((bitField1_ & 0x00400000) == 0x00400000)) {
          magicWeaponGroup_ = java.util.Collections.unmodifiableList(magicWeaponGroup_);
          bitField1_ = (bitField1_ & ~0x00400000);
        }
        result.magicWeaponGroup_ = magicWeaponGroup_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.rewardLastTime_ = rewardLastTime_;
        if (((bitField1_ & 0x01000000) == 0x01000000)) {
          pvpWinReward_ = java.util.Collections.unmodifiableList(pvpWinReward_);
          bitField1_ = (bitField1_ & ~0x01000000);
        }
        result.pvpWinReward_ = pvpWinReward_;
        if (((bitField1_ & 0x02000000) == 0x02000000)) {
          loginReward_ = java.util.Collections.unmodifiableList(loginReward_);
          bitField1_ = (bitField1_ & ~0x02000000);
        }
        result.loginReward_ = loginReward_;
        if (((bitField1_ & 0x04000000) == 0x04000000)) {
          pvpFightNumReward_ = java.util.Collections.unmodifiableList(pvpFightNumReward_);
          bitField1_ = (bitField1_ & ~0x04000000);
        }
        result.pvpFightNumReward_ = pvpFightNumReward_;
        if (((bitField1_ & 0x08000000) == 0x08000000)) {
          drawCardReward_ = java.util.Collections.unmodifiableList(drawCardReward_);
          bitField1_ = (bitField1_ & ~0x08000000);
        }
        result.drawCardReward_ = drawCardReward_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.gainBuyStamina_ = gainBuyStamina_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.gainBuySpiritReward_ = gainBuySpiritReward_;
        if (((bitField1_ & 0x40000000) == 0x40000000)) {
          gainQiuYuanReward_ = java.util.Collections.unmodifiableList(gainQiuYuanReward_);
          bitField1_ = (bitField1_ & ~0x40000000);
        }
        result.gainQiuYuanReward_ = gainQiuYuanReward_;
        if (((bitField1_ & 0x80000000) == 0x80000000)) {
          gainLvUpReward_ = java.util.Collections.unmodifiableList(gainLvUpReward_);
          bitField1_ = (bitField1_ & ~0x80000000);
        }
        result.gainLvUpReward_ = gainLvUpReward_;
        if (((bitField2_ & 0x00000001) == 0x00000001)) {
          gainChapterReward_ = java.util.Collections.unmodifiableList(gainChapterReward_);
          bitField2_ = (bitField2_ & ~0x00000001);
        }
        result.gainChapterReward_ = gainChapterReward_;
        if (((bitField2_ & 0x00000002) == 0x00000002)) {
          gainChapterStarReward_ = java.util.Collections.unmodifiableList(gainChapterStarReward_);
          bitField2_ = (bitField2_ & ~0x00000002);
        }
        result.gainChapterStarReward_ = gainChapterStarReward_;
        if (((bitField2_ & 0x00000004) == 0x00000004)) {
          gainFriendNumReward_ = java.util.Collections.unmodifiableList(gainFriendNumReward_);
          bitField2_ = (bitField2_ & ~0x00000004);
        }
        result.gainFriendNumReward_ = gainFriendNumReward_;
        if (((bitField2_ & 0x00000008) == 0x00000008)) {
          gainCardReward_ = java.util.Collections.unmodifiableList(gainCardReward_);
          bitField2_ = (bitField2_ & ~0x00000008);
        }
        result.gainCardReward_ = gainCardReward_;
        if (((bitField2_ & 0x00000010) == 0x00000010)) {
          gainItemReward_ = java.util.Collections.unmodifiableList(gainItemReward_);
          bitField2_ = (bitField2_ & ~0x00000010);
        }
        result.gainItemReward_ = gainItemReward_;
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000001;
        }
        result.gainEveryDayTili_ = gainEveryDayTili_;
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000002;
        }
        result.gainEveryDayGold_ = gainEveryDayGold_;
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000004;
        }
        result.receiveXianYuan_ = receiveXianYuan_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000008;
        }
        result.drawCardTimes_ = drawCardTimes_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000010;
        }
        result.pvpFightWinNum_ = pvpFightWinNum_;
        if (((from_bitField2_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000020;
        }
        result.multiLoginDays_ = multiLoginDays_;
        if (((from_bitField2_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000040;
        }
        result.totalPayGold_ = totalPayGold_;
        if (((bitField2_ & 0x00001000) == 0x00001000)) {
          amountPaymentReward_ = java.util.Collections.unmodifiableList(amountPaymentReward_);
          bitField2_ = (bitField2_ & ~0x00001000);
        }
        result.amountPaymentReward_ = amountPaymentReward_;
        if (missionsDailyBuilder_ == null) {
          if (((bitField2_ & 0x00002000) == 0x00002000)) {
            missionsDaily_ = java.util.Collections.unmodifiableList(missionsDaily_);
            bitField2_ = (bitField2_ & ~0x00002000);
          }
          result.missionsDaily_ = missionsDaily_;
        } else {
          result.missionsDaily_ = missionsDailyBuilder_.build();
        }
        if (((from_bitField2_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00000080;
        }
        result.pvpNewFightFlag_ = pvpNewFightFlag_;
        if (((from_bitField2_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00000100;
        }
        result.qiuyuan_ = qiuyuan_;
        if (((from_bitField2_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00000200;
        }
        result.qiuyuanGold_ = qiuyuanGold_;
        if (((from_bitField2_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00000400;
        }
        result.newMail_ = newMail_;
        if (((from_bitField2_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00000800;
        }
        result.pvpWinNum_ = pvpWinNum_;
        if (((from_bitField2_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.firstPayReward_ = firstPayReward_;
        if (((bitField2_ & 0x00100000) == 0x00100000)) {
          vipGifts_ = java.util.Collections.unmodifiableList(vipGifts_);
          bitField2_ = (bitField2_ & ~0x00100000);
        }
        result.vipGifts_ = vipGifts_;
        if (((from_bitField2_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.vipReward_ = vipReward_;
        if (((from_bitField2_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.vipCard_ = vipCard_;
        if (vipAllGiftBuilder_ == null) {
          if (((bitField2_ & 0x00800000) == 0x00800000)) {
            vipAllGift_ = java.util.Collections.unmodifiableList(vipAllGift_);
            bitField2_ = (bitField2_ & ~0x00800000);
          }
          result.vipAllGift_ = vipAllGift_;
        } else {
          result.vipAllGift_ = vipAllGiftBuilder_.build();
        }
        if (((from_bitField2_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.guideIndex_ = guideIndex_;
        if (((from_bitField2_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.isQianDao_ = isQianDao_;
        if (((from_bitField2_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x00020000;
        }
        if (qianDaoBuilder_ == null) {
          result.qianDao_ = qianDao_;
        } else {
          result.qianDao_ = qianDaoBuilder_.build();
        }
        if (((from_bitField2_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.battleIndex_ = battleIndex_;
        if (((from_bitField2_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.caishenCoinNum_ = caishenCoinNum_;
        if (((bitField2_ & 0x20000000) == 0x20000000)) {
          triggerGuideIndex_ = java.util.Collections.unmodifiableList(triggerGuideIndex_);
          bitField2_ = (bitField2_ & ~0x20000000);
        }
        result.triggerGuideIndex_ = triggerGuideIndex_;
        if (((bitField2_ & 0x40000000) == 0x40000000)) {
          chapterEasyReward_ = java.util.Collections.unmodifiableList(chapterEasyReward_);
          bitField2_ = (bitField2_ & ~0x40000000);
        }
        result.chapterEasyReward_ = chapterEasyReward_;
        if (((bitField2_ & 0x80000000) == 0x80000000)) {
          chapterNormalReward_ = java.util.Collections.unmodifiableList(chapterNormalReward_);
          bitField2_ = (bitField2_ & ~0x80000000);
        }
        result.chapterNormalReward_ = chapterNormalReward_;
        if (((bitField3_ & 0x00000001) == 0x00000001)) {
          chapterHardReward_ = java.util.Collections.unmodifiableList(chapterHardReward_);
          bitField3_ = (bitField3_ & ~0x00000001);
        }
        result.chapterHardReward_ = chapterHardReward_;
        if (((bitField3_ & 0x00000002) == 0x00000002)) {
          activityEasyReward_ = java.util.Collections.unmodifiableList(activityEasyReward_);
          bitField3_ = (bitField3_ & ~0x00000002);
        }
        result.activityEasyReward_ = activityEasyReward_;
        if (((from_bitField3_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00100000;
        }
        result.cardEffectNum_ = cardEffectNum_;
        if (((bitField3_ & 0x00000008) == 0x00000008)) {
          baoXiangReward_ = java.util.Collections.unmodifiableList(baoXiangReward_);
          bitField3_ = (bitField3_ & ~0x00000008);
        }
        result.baoXiangReward_ = baoXiangReward_;
        if (((from_bitField3_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00200000;
        }
        result.newFriendInvite_ = newFriendInvite_;
        if (((from_bitField3_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00400000;
        }
        result.yunyouRefreshTime_ = yunyouRefreshTime_;
        if (((bitField3_ & 0x00000040) == 0x00000040)) {
          yunyouItems_ = java.util.Collections.unmodifiableList(yunyouItems_);
          bitField3_ = (bitField3_ & ~0x00000040);
        }
        result.yunyouItems_ = yunyouItems_;
        if (((from_bitField3_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00800000;
        }
        result.lvReward_ = lvReward_;
        if (((from_bitField3_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x01000000;
        }
        result.qiuBaoDate_ = qiuBaoDate_;
        if (((from_bitField3_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x02000000;
        }
        result.qiuBaoTimes_ = qiuBaoTimes_;
        if (itemTaskBuilder_ == null) {
          if (((bitField3_ & 0x00000400) == 0x00000400)) {
            itemTask_ = java.util.Collections.unmodifiableList(itemTask_);
            bitField3_ = (bitField3_ & ~0x00000400);
          }
          result.itemTask_ = itemTask_;
        } else {
          result.itemTask_ = itemTaskBuilder_.build();
        }
        if (cardTaskBuilder_ == null) {
          if (((bitField3_ & 0x00000800) == 0x00000800)) {
            cardTask_ = java.util.Collections.unmodifiableList(cardTask_);
            bitField3_ = (bitField3_ & ~0x00000800);
          }
          result.cardTask_ = cardTask_;
        } else {
          result.cardTask_ = cardTaskBuilder_.build();
        }
        if (((bitField3_ & 0x00001000) == 0x00001000)) {
          collectCardReward_ = java.util.Collections.unmodifiableList(collectCardReward_);
          bitField3_ = (bitField3_ & ~0x00001000);
        }
        result.collectCardReward_ = collectCardReward_;
        if (((bitField3_ & 0x00002000) == 0x00002000)) {
          cardReward_ = java.util.Collections.unmodifiableList(cardReward_);
          bitField3_ = (bitField3_ & ~0x00002000);
        }
        result.cardReward_ = cardReward_;
        if (((bitField3_ & 0x00004000) == 0x00004000)) {
          itemReward_ = java.util.Collections.unmodifiableList(itemReward_);
          bitField3_ = (bitField3_ & ~0x00004000);
        }
        result.itemReward_ = itemReward_;
        if (vipNumsBuilder_ == null) {
          if (((bitField3_ & 0x00008000) == 0x00008000)) {
            vipNums_ = java.util.Collections.unmodifiableList(vipNums_);
            bitField3_ = (bitField3_ & ~0x00008000);
          }
          result.vipNums_ = vipNums_;
        } else {
          result.vipNums_ = vipNumsBuilder_.build();
        }
        if (((bitField3_ & 0x00010000) == 0x00010000)) {
          firstPayExtraIds_ = java.util.Collections.unmodifiableList(firstPayExtraIds_);
          bitField3_ = (bitField3_ & ~0x00010000);
        }
        result.firstPayExtraIds_ = firstPayExtraIds_;
        if (((from_bitField3_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.assetBundleState_ = assetBundleState_;
        if (((from_bitField3_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.userId_ = userId_;
        if (((from_bitField3_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.serverId_ = serverId_;
        if (((from_bitField3_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.username_ = username_;
        if (pvpExchangeItemsBuilder_ == null) {
          if (((bitField3_ & 0x00200000) == 0x00200000)) {
            pvpExchangeItems_ = java.util.Collections.unmodifiableList(pvpExchangeItems_);
            bitField3_ = (bitField3_ & ~0x00200000);
          }
          result.pvpExchangeItems_ = pvpExchangeItems_;
        } else {
          result.pvpExchangeItems_ = pvpExchangeItemsBuilder_.build();
        }
        if (((from_bitField3_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.hunyu_ = hunyu_;
        if (((bitField3_ & 0x00800000) == 0x00800000)) {
          firstDrawIds_ = java.util.Collections.unmodifiableList(firstDrawIds_);
          bitField3_ = (bitField3_ & ~0x00800000);
        }
        result.firstDrawIds_ = firstDrawIds_;
        if (((from_bitField3_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.openDate_ = openDate_;
        if (todyTastePantaosBuilder_ == null) {
          if (((bitField3_ & 0x02000000) == 0x02000000)) {
            todyTastePantaos_ = java.util.Collections.unmodifiableList(todyTastePantaos_);
            bitField3_ = (bitField3_ & ~0x02000000);
          }
          result.todyTastePantaos_ = todyTastePantaos_;
        } else {
          result.todyTastePantaos_ = todyTastePantaosBuilder_.build();
        }
        if (((from_bitField3_ & 0x04000000) == 0x04000000)) {
          to_bitField2_ |= 0x00000001;
        }
        result.battleScore_ = battleScore_;
        if (((from_bitField3_ & 0x08000000) == 0x08000000)) {
          to_bitField2_ |= 0x00000002;
        }
        result.lingLi_ = lingLi_;
        if (((from_bitField3_ & 0x10000000) == 0x10000000)) {
          to_bitField2_ |= 0x00000004;
        }
        result.buyLingli_ = buyLingli_;
        if (((from_bitField3_ & 0x20000000) == 0x20000000)) {
          to_bitField2_ |= 0x00000008;
        }
        result.lingLiDate_ = lingLiDate_;
        if (((bitField3_ & 0x40000000) == 0x40000000)) {
          shenMoDuiHuan_ = java.util.Collections.unmodifiableList(shenMoDuiHuan_);
          bitField3_ = (bitField3_ & ~0x40000000);
        }
        result.shenMoDuiHuan_ = shenMoDuiHuan_;
        if (((bitField3_ & 0x80000000) == 0x80000000)) {
          buyShenMoItem_ = java.util.Collections.unmodifiableList(buyShenMoItem_);
          bitField3_ = (bitField3_ & ~0x80000000);
        }
        result.buyShenMoItem_ = buyShenMoItem_;
        if (((from_bitField4_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000010;
        }
        result.xiuWei_ = xiuWei_;
        if (((from_bitField4_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000020;
        }
        result.hasPvpReward_ = hasPvpReward_;
        if (((from_bitField4_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000040;
        }
        result.gongDe_ = gongDe_;
        if (((bitField4_ & 0x00000008) == 0x00000008)) {
          gongDeReward_ = java.util.Collections.unmodifiableList(gongDeReward_);
          bitField4_ = (bitField4_ & ~0x00000008);
        }
        result.gongDeReward_ = gongDeReward_;
        if (((from_bitField4_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000080;
        }
        result.rankRise_ = rankRise_;
        if (((from_bitField4_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000100;
        }
        result.rank_ = rank_;
        if (drawCardBuilder_ == null) {
          if (((bitField4_ & 0x00000040) == 0x00000040)) {
            drawCard_ = java.util.Collections.unmodifiableList(drawCard_);
            bitField4_ = (bitField4_ & ~0x00000040);
          }
          result.drawCard_ = drawCard_;
        } else {
          result.drawCard_ = drawCardBuilder_.build();
        }
        if (((from_bitField4_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000200;
        }
        result.hufaOpen_ = hufaOpen_;
        if (((from_bitField4_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000400;
        }
        result.caishenSilverNum_ = caishenSilverNum_;
        if (((from_bitField4_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000800;
        }
        result.drawCardReward2_ = drawCardReward2_;
        if (((bitField4_ & 0x00000400) == 0x00000400)) {
          playerPrefs_ = new com.google.protobuf.UnmodifiableLazyStringList(
              playerPrefs_);
          bitField4_ = (bitField4_ & ~0x00000400);
        }
        result.playerPrefs_ = playerPrefs_;
        if (missionMapBuilder_ == null) {
          if (((bitField4_ & 0x00000800) == 0x00000800)) {
            missionMap_ = java.util.Collections.unmodifiableList(missionMap_);
            bitField4_ = (bitField4_ & ~0x00000800);
          }
          result.missionMap_ = missionMap_;
        } else {
          result.missionMap_ = missionMapBuilder_.build();
        }
        if (((from_bitField4_ & 0x00001000) == 0x00001000)) {
          to_bitField2_ |= 0x00001000;
        }
        result.missionNum_ = missionNum_;
        if (((from_bitField4_ & 0x00002000) == 0x00002000)) {
          to_bitField2_ |= 0x00002000;
        }
        result.yunyouNum_ = yunyouNum_;
        if (((from_bitField4_ & 0x00004000) == 0x00004000)) {
          to_bitField2_ |= 0x00004000;
        }
        result.pvpExchangeNum_ = pvpExchangeNum_;
        if (((from_bitField4_ & 0x00008000) == 0x00008000)) {
          to_bitField2_ |= 0x00008000;
        }
        result.friendNum_ = friendNum_;
        if (((from_bitField4_ & 0x00010000) == 0x00010000)) {
          to_bitField2_ |= 0x00010000;
        }
        result.clearShenMoItem_ = clearShenMoItem_;
        if (((from_bitField4_ & 0x00020000) == 0x00020000)) {
          to_bitField2_ |= 0x00020000;
        }
        result.refreshHour24_ = refreshHour24_;
        if (((from_bitField4_ & 0x00040000) == 0x00040000)) {
          to_bitField2_ |= 0x00040000;
        }
        result.pay_ = pay_;
        if (((from_bitField4_ & 0x00080000) == 0x00080000)) {
          to_bitField2_ |= 0x00080000;
        }
        result.isShutUp_ = isShutUp_;
        if (((from_bitField4_ & 0x00100000) == 0x00100000)) {
          to_bitField2_ |= 0x00100000;
        }
        result.shutUpDate_ = shutUpDate_;
        if (((from_bitField4_ & 0x00200000) == 0x00200000)) {
          to_bitField2_ |= 0x00200000;
        }
        result.shutUpEnd_ = shutUpEnd_;
        if (activityItemBuilder_ == null) {
          if (((bitField4_ & 0x00400000) == 0x00400000)) {
            activityItem_ = java.util.Collections.unmodifiableList(activityItem_);
            bitField4_ = (bitField4_ & ~0x00400000);
          }
          result.activityItem_ = activityItem_;
        } else {
          result.activityItem_ = activityItemBuilder_.build();
        }
        if (payRewardBuilder_ == null) {
          if (((bitField4_ & 0x00800000) == 0x00800000)) {
            payReward_ = java.util.Collections.unmodifiableList(payReward_);
            bitField4_ = (bitField4_ & ~0x00800000);
          }
          result.payReward_ = payReward_;
        } else {
          result.payReward_ = payRewardBuilder_.build();
        }
        if (((from_bitField4_ & 0x01000000) == 0x01000000)) {
          to_bitField2_ |= 0x00400000;
        }
        result.yunYouTime_ = yunYouTime_;
        if (((from_bitField4_ & 0x02000000) == 0x02000000)) {
          to_bitField2_ |= 0x00800000;
        }
        result.pvpChangeTime_ = pvpChangeTime_;
        if (((from_bitField4_ & 0x04000000) == 0x04000000)) {
          to_bitField2_ |= 0x01000000;
        }
        result.shenMoChangeTime_ = shenMoChangeTime_;
        if (((from_bitField4_ & 0x08000000) == 0x08000000)) {
          to_bitField2_ |= 0x02000000;
        }
        result.shenMoNum_ = shenMoNum_;
        if (((from_bitField4_ & 0x10000000) == 0x10000000)) {
          to_bitField2_ |= 0x04000000;
        }
        result.itemLvUpNum_ = itemLvUpNum_;
        if (((from_bitField4_ & 0x20000000) == 0x20000000)) {
          to_bitField2_ |= 0x08000000;
        }
        result.cardLvUpNum_ = cardLvUpNum_;
        if (((from_bitField4_ & 0x40000000) == 0x40000000)) {
          to_bitField2_ |= 0x10000000;
        }
        result.shenTongNum_ = shenTongNum_;
        if (((from_bitField4_ & 0x80000000) == 0x80000000)) {
          to_bitField2_ |= 0x20000000;
        }
        result.skillNum_ = skillNum_;
        if (((from_bitField5_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x40000000;
        }
        result.huFaNum_ = huFaNum_;
        if (((from_bitField5_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x80000000;
        }
        result.xiuLianNum_ = xiuLianNum_;
        if (((from_bitField5_ & 0x00000004) == 0x00000004)) {
          to_bitField3_ |= 0x00000001;
        }
        result.changeName_ = changeName_;
        if (((bitField5_ & 0x00000008) == 0x00000008)) {
          chengjiuReward_ = java.util.Collections.unmodifiableList(chengjiuReward_);
          bitField5_ = (bitField5_ & ~0x00000008);
        }
        result.chengjiuReward_ = chengjiuReward_;
        if (((from_bitField5_ & 0x00000010) == 0x00000010)) {
          to_bitField3_ |= 0x00000002;
        }
        result.fenXiangRewardTimes_ = fenXiangRewardTimes_;
        if (((from_bitField5_ & 0x00000020) == 0x00000020)) {
          to_bitField3_ |= 0x00000004;
        }
        result.weiXinFirstShare_ = weiXinFirstShare_;
        if (((from_bitField5_ & 0x00000040) == 0x00000040)) {
          to_bitField3_ |= 0x00000008;
        }
        result.weiXinOpen_ = weiXinOpen_;
        if (((from_bitField5_ & 0x00000080) == 0x00000080)) {
          to_bitField3_ |= 0x00000010;
        }
        result.xilianOpen_ = xilianOpen_;
        if (((from_bitField5_ & 0x00000100) == 0x00000100)) {
          to_bitField3_ |= 0x00000020;
        }
        result.pvpWinMax_ = pvpWinMax_;
        if (((from_bitField5_ & 0x00000200) == 0x00000200)) {
          to_bitField3_ |= 0x00000040;
        }
        result.inviteCode_ = inviteCode_;
        if (((from_bitField5_ & 0x00000400) == 0x00000400)) {
          to_bitField3_ |= 0x00000080;
        }
        result.inviteNum_ = inviteNum_;
        if (((from_bitField5_ & 0x00000800) == 0x00000800)) {
          to_bitField3_ |= 0x00000100;
        }
        result.inviterId_ = inviterId_;
        if (((from_bitField5_ & 0x00001000) == 0x00001000)) {
          to_bitField3_ |= 0x00000200;
        }
        result.clearFirstPayExtraIds_ = clearFirstPayExtraIds_;
        if (((from_bitField5_ & 0x00002000) == 0x00002000)) {
          to_bitField3_ |= 0x00000400;
        }
        if (loginActivityBuilder_ == null) {
          result.loginActivity_ = loginActivity_;
        } else {
          result.loginActivity_ = loginActivityBuilder_.build();
        }
        if (((from_bitField5_ & 0x00004000) == 0x00004000)) {
          to_bitField3_ |= 0x00000800;
        }
        result.choukaQuan_ = choukaQuan_;
        if (((from_bitField5_ & 0x00008000) == 0x00008000)) {
          to_bitField3_ |= 0x00001000;
        }
        result.shenJiangScore_ = shenJiangScore_;
        if (((from_bitField5_ & 0x00010000) == 0x00010000)) {
          to_bitField3_ |= 0x00002000;
        }
        result.shenJiangTotalScore_ = shenJiangTotalScore_;
        if (((from_bitField5_ & 0x00020000) == 0x00020000)) {
          to_bitField3_ |= 0x00004000;
        }
        result.shenJiangRank_ = shenJiangRank_;
        if (((bitField5_ & 0x00040000) == 0x00040000)) {
          inviteNumReward_ = java.util.Collections.unmodifiableList(inviteNumReward_);
          bitField5_ = (bitField5_ & ~0x00040000);
        }
        result.inviteNumReward_ = inviteNumReward_;
        if (((bitField5_ & 0x00080000) == 0x00080000)) {
          yuanshenBox_ = new com.google.protobuf.UnmodifiableLazyStringList(
              yuanshenBox_);
          bitField5_ = (bitField5_ & ~0x00080000);
        }
        result.yuanshenBox_ = yuanshenBox_;
        if (boxsBuilder_ == null) {
          if (((bitField5_ & 0x00100000) == 0x00100000)) {
            boxs_ = java.util.Collections.unmodifiableList(boxs_);
            bitField5_ = (bitField5_ & ~0x00100000);
          }
          result.boxs_ = boxs_;
        } else {
          result.boxs_ = boxsBuilder_.build();
        }
        if (buyBoxBuilder_ == null) {
          if (((bitField5_ & 0x00200000) == 0x00200000)) {
            buyBox_ = java.util.Collections.unmodifiableList(buyBox_);
            bitField5_ = (bitField5_ & ~0x00200000);
          }
          result.buyBox_ = buyBox_;
        } else {
          result.buyBox_ = buyBoxBuilder_.build();
        }
        if (((from_bitField5_ & 0x00400000) == 0x00400000)) {
          to_bitField3_ |= 0x00008000;
        }
        result.zhuanpan_ = zhuanpan_;
        if (((bitField5_ & 0x00800000) == 0x00800000)) {
          sevenReward_ = java.util.Collections.unmodifiableList(sevenReward_);
          bitField5_ = (bitField5_ & ~0x00800000);
        }
        result.sevenReward_ = sevenReward_;
        if (((bitField5_ & 0x01000000) == 0x01000000)) {
          playerNum_ = java.util.Collections.unmodifiableList(playerNum_);
          bitField5_ = (bitField5_ & ~0x01000000);
        }
        result.playerNum_ = playerNum_;
        if (((bitField5_ & 0x02000000) == 0x02000000)) {
          rewardId_ = java.util.Collections.unmodifiableList(rewardId_);
          bitField5_ = (bitField5_ & ~0x02000000);
        }
        result.rewardId_ = rewardId_;
        if (((from_bitField5_ & 0x04000000) == 0x04000000)) {
          to_bitField3_ |= 0x00010000;
        }
        result.inviteReward_ = inviteReward_;
        if (((from_bitField5_ & 0x08000000) == 0x08000000)) {
          to_bitField3_ |= 0x00020000;
        }
        result.lingHun_ = lingHun_;
        if (((bitField5_ & 0x10000000) == 0x10000000)) {
          liuDaoDuiHuanIds_ = java.util.Collections.unmodifiableList(liuDaoDuiHuanIds_);
          bitField5_ = (bitField5_ & ~0x10000000);
        }
        result.liuDaoDuiHuanIds_ = liuDaoDuiHuanIds_;
        if (((bitField5_ & 0x20000000) == 0x20000000)) {
          liuDaoDuiHuanIdsBuyed_ = java.util.Collections.unmodifiableList(liuDaoDuiHuanIdsBuyed_);
          bitField5_ = (bitField5_ & ~0x20000000);
        }
        result.liuDaoDuiHuanIdsBuyed_ = liuDaoDuiHuanIdsBuyed_;
        if (((from_bitField5_ & 0x40000000) == 0x40000000)) {
          to_bitField3_ |= 0x00040000;
        }
        result.liuDaoChangeTime_ = liuDaoChangeTime_;
        if (((from_bitField5_ & 0x80000000) == 0x80000000)) {
          to_bitField3_ |= 0x00080000;
        }
        result.liuDaoBaoXiangOpenNum_ = liuDaoBaoXiangOpenNum_;
        if (((from_bitField6_ & 0x00000001) == 0x00000001)) {
          to_bitField3_ |= 0x00100000;
        }
        result.vipCardAllLift_ = vipCardAllLift_;
        if (((from_bitField6_ & 0x00000002) == 0x00000002)) {
          to_bitField3_ |= 0x00200000;
        }
        result.vipAllLifeReward_ = vipAllLifeReward_;
        if (((bitField6_ & 0x00000004) == 0x00000004)) {
          cardGroupLiuDao_ = java.util.Collections.unmodifiableList(cardGroupLiuDao_);
          bitField6_ = (bitField6_ & ~0x00000004);
        }
        result.cardGroupLiuDao_ = cardGroupLiuDao_;
        if (((bitField6_ & 0x00000008) == 0x00000008)) {
          cardGroupFightLiuDao_ = java.util.Collections.unmodifiableList(cardGroupFightLiuDao_);
          bitField6_ = (bitField6_ & ~0x00000008);
        }
        result.cardGroupFightLiuDao_ = cardGroupFightLiuDao_;
        if (drawCardFreeBuilder_ == null) {
          if (((bitField6_ & 0x00000010) == 0x00000010)) {
            drawCardFree_ = java.util.Collections.unmodifiableList(drawCardFree_);
            bitField6_ = (bitField6_ & ~0x00000010);
          }
          result.drawCardFree_ = drawCardFree_;
        } else {
          result.drawCardFree_ = drawCardFreeBuilder_.build();
        }
        if (((from_bitField6_ & 0x00000020) == 0x00000020)) {
          to_bitField3_ |= 0x00400000;
        }
        result.liudaoEnterHeroLimit_ = liudaoEnterHeroLimit_;
        if (((from_bitField6_ & 0x00000040) == 0x00000040)) {
          to_bitField3_ |= 0x00800000;
        }
        result.todayQuestNum_ = todayQuestNum_;
        if (((from_bitField6_ & 0x00000080) == 0x00000080)) {
          to_bitField3_ |= 0x01000000;
        }
        result.cardId_ = cardId_;
        if (((from_bitField6_ & 0x00000100) == 0x00000100)) {
          to_bitField3_ |= 0x02000000;
        }
        result.enterLiuDaoTimes_ = enterLiuDaoTimes_;
        if (((from_bitField6_ & 0x00000200) == 0x00000200)) {
          to_bitField3_ |= 0x04000000;
        }
        result.xunshan_ = xunshan_;
        if (((from_bitField6_ & 0x00000400) == 0x00000400)) {
          to_bitField3_ |= 0x08000000;
        }
        result.dailyLeftTimes_ = dailyLeftTimes_;
        if (((from_bitField6_ & 0x00000800) == 0x00000800)) {
          to_bitField3_ |= 0x10000000;
        }
        result.dailyBuyTimes_ = dailyBuyTimes_;
        if (((from_bitField6_ & 0x00001000) == 0x00001000)) {
          to_bitField3_ |= 0x20000000;
        }
        result.nextCDTime_ = nextCDTime_;
        if (((from_bitField6_ & 0x00002000) == 0x00002000)) {
          to_bitField3_ |= 0x40000000;
        }
        result.shouHuId_ = shouHuId_;
        if (((from_bitField6_ & 0x00004000) == 0x00004000)) {
          to_bitField3_ |= 0x80000000;
        }
        result.cancelCDTimes_ = cancelCDTimes_;
        if (((bitField6_ & 0x00008000) == 0x00008000)) {
          xunshanStr_ = java.util.Collections.unmodifiableList(xunshanStr_);
          bitField6_ = (bitField6_ & ~0x00008000);
        }
        result.xunshanStr_ = xunshanStr_;
        if (((from_bitField6_ & 0x00010000) == 0x00010000)) {
          to_bitField4_ |= 0x00000001;
        }
        if (gangInfoBuilder_ == null) {
          result.gangInfo_ = gangInfo_;
        } else {
          result.gangInfo_ = gangInfoBuilder_.build();
        }
        if (((from_bitField6_ & 0x00020000) == 0x00020000)) {
          to_bitField4_ |= 0x00000002;
        }
        result.hasDFBet_ = hasDFBet_;
        if (gangExchangeBuilder_ == null) {
          if (((bitField6_ & 0x00040000) == 0x00040000)) {
            gangExchange_ = java.util.Collections.unmodifiableList(gangExchange_);
            bitField6_ = (bitField6_ & ~0x00040000);
          }
          result.gangExchange_ = gangExchange_;
        } else {
          result.gangExchange_ = gangExchangeBuilder_.build();
        }
        if (((from_bitField6_ & 0x00080000) == 0x00080000)) {
          to_bitField4_ |= 0x00000004;
        }
        result.gangRefreshExchangeTimes_ = gangRefreshExchangeTimes_;
        if (((from_bitField6_ & 0x00100000) == 0x00100000)) {
          to_bitField4_ |= 0x00000008;
        }
        if (dfTeamInfoBuilder_ == null) {
          result.dfTeamInfo_ = dfTeamInfo_;
        } else {
          result.dfTeamInfo_ = dfTeamInfoBuilder_.build();
        }
        if (((from_bitField6_ & 0x00200000) == 0x00200000)) {
          to_bitField4_ |= 0x00000010;
        }
        result.vipDailyGiftBuyCount_ = vipDailyGiftBuyCount_;
        if (((from_bitField6_ & 0x00400000) == 0x00400000)) {
          to_bitField4_ |= 0x00000020;
        }
        result.trialsDFTimes_ = trialsDFTimes_;
        if (((from_bitField6_ & 0x00800000) == 0x00800000)) {
          to_bitField4_ |= 0x00000040;
        }
        result.dfBetId_ = dfBetId_;
        if (((from_bitField6_ & 0x01000000) == 0x01000000)) {
          to_bitField4_ |= 0x00000080;
        }
        if (xunxianBuilder_ == null) {
          result.xunxian_ = xunxian_;
        } else {
          result.xunxian_ = xunxianBuilder_.build();
        }
        if (((from_bitField6_ & 0x02000000) == 0x02000000)) {
          to_bitField4_ |= 0x00000100;
        }
        result.auctionType_ = auctionType_;
        if (((from_bitField6_ & 0x04000000) == 0x04000000)) {
          to_bitField4_ |= 0x00000200;
        }
        if (securityCodeItemBuilder_ == null) {
          result.securityCodeItem_ = securityCodeItem_;
        } else {
          result.securityCodeItem_ = securityCodeItemBuilder_.build();
        }
        if (((from_bitField6_ & 0x08000000) == 0x08000000)) {
          to_bitField4_ |= 0x00000400;
        }
        result.login1100_ = login1100_;
        if (((from_bitField6_ & 0x10000000) == 0x10000000)) {
          to_bitField4_ |= 0x00000800;
        }
        result.isShowDFInMainUI_ = isShowDFInMainUI_;
        if (((from_bitField6_ & 0x20000000) == 0x20000000)) {
          to_bitField4_ |= 0x00001000;
        }
        result.isVipUpByPlayerLv_ = isVipUpByPlayerLv_;
        if (((from_bitField6_ & 0x40000000) == 0x40000000)) {
          to_bitField4_ |= 0x00002000;
        }
        if (hongbaoActivitysBuilder_ == null) {
          result.hongbaoActivitys_ = hongbaoActivitys_;
        } else {
          result.hongbaoActivitys_ = hongbaoActivitysBuilder_.build();
        }
        if (((from_bitField6_ & 0x80000000) == 0x80000000)) {
          to_bitField4_ |= 0x00004000;
        }
        result.isOpenedBoxEveryDay_ = isOpenedBoxEveryDay_;
        if (((from_bitField7_ & 0x00000001) == 0x00000001)) {
          to_bitField4_ |= 0x00008000;
        }
        result.admobSwitch_ = admobSwitch_;
        if (((from_bitField7_ & 0x00000002) == 0x00000002)) {
          to_bitField4_ |= 0x00010000;
        }
        if (arenaTeamInfoBuilder_ == null) {
          result.arenaTeamInfo_ = arenaTeamInfo_;
        } else {
          result.arenaTeamInfo_ = arenaTeamInfoBuilder_.build();
        }
        if (((from_bitField7_ & 0x00000004) == 0x00000004)) {
          to_bitField4_ |= 0x00020000;
        }
        result.sectionGuideIndex_ = sectionGuideIndex_;
        if (((from_bitField7_ & 0x00000008) == 0x00000008)) {
          to_bitField4_ |= 0x00040000;
        }
        result.jiaoYiBuy_ = jiaoYiBuy_;
        if (((from_bitField7_ & 0x00000010) == 0x00000010)) {
          to_bitField4_ |= 0x00080000;
        }
        result.jiaoYiSale_ = jiaoYiSale_;
        if (((from_bitField7_ & 0x00000020) == 0x00000020)) {
          to_bitField4_ |= 0x00100000;
        }
        result.dailyLongGongBox_ = dailyLongGongBox_;
        if (((from_bitField7_ & 0x00000040) == 0x00000040)) {
          to_bitField4_ |= 0x00200000;
        }
        result.dailyLiuDao_ = dailyLiuDao_;
        if (((from_bitField7_ & 0x00000080) == 0x00000080)) {
          to_bitField4_ |= 0x00400000;
        }
        if (escortItemBuilder_ == null) {
          result.escortItem_ = escortItem_;
        } else {
          result.escortItem_ = escortItemBuilder_.build();
        }
        if (((from_bitField7_ & 0x00000100) == 0x00000100)) {
          to_bitField4_ |= 0x00800000;
        }
        if (escortTeamInfoBuilder_ == null) {
          result.escortTeamInfo_ = escortTeamInfo_;
        } else {
          result.escortTeamInfo_ = escortTeamInfoBuilder_.build();
        }
        if (((from_bitField7_ & 0x00000200) == 0x00000200)) {
          to_bitField4_ |= 0x01000000;
        }
        result.position_ = position_;
        if (((from_bitField7_ & 0x00000400) == 0x00000400)) {
          to_bitField4_ |= 0x02000000;
        }
        if (shenMoTeamItemBuilder_ == null) {
          result.shenMoTeamItem_ = shenMoTeamItem_;
        } else {
          result.shenMoTeamItem_ = shenMoTeamItemBuilder_.build();
        }
        if (((from_bitField7_ & 0x00000800) == 0x00000800)) {
          to_bitField4_ |= 0x04000000;
        }
        if (pvpTeamItemBuilder_ == null) {
          result.pvpTeamItem_ = pvpTeamItem_;
        } else {
          result.pvpTeamItem_ = pvpTeamItemBuilder_.build();
        }
        if (((from_bitField7_ & 0x00001000) == 0x00001000)) {
          to_bitField4_ |= 0x08000000;
        }
        if (fbTeamItemBuilder_ == null) {
          result.fbTeamItem_ = fbTeamItem_;
        } else {
          result.fbTeamItem_ = fbTeamItemBuilder_.build();
        }
        if (((from_bitField7_ & 0x00002000) == 0x00002000)) {
          to_bitField4_ |= 0x10000000;
        }
        result.gangModifyNameTimes_ = gangModifyNameTimes_;
        if (((from_bitField7_ & 0x00004000) == 0x00004000)) {
          to_bitField4_ |= 0x20000000;
        }
        result.startTimeMultiExp_ = startTimeMultiExp_;
        if (((from_bitField7_ & 0x00008000) == 0x00008000)) {
          to_bitField4_ |= 0x40000000;
        }
        result.endTimeMultiExp_ = endTimeMultiExp_;
        if (((from_bitField7_ & 0x00010000) == 0x00010000)) {
          to_bitField4_ |= 0x80000000;
        }
        result.rate_ = rate_;
        if (((from_bitField7_ & 0x00020000) == 0x00020000)) {
          to_bitField5_ |= 0x00000001;
        }
        result.nextTime_ = nextTime_;
        if (((from_bitField7_ & 0x00040000) == 0x00040000)) {
          to_bitField5_ |= 0x00000002;
        }
        result.liuDaoEnemyStartIndex_ = liuDaoEnemyStartIndex_;
        if (((from_bitField7_ & 0x00080000) == 0x00080000)) {
          to_bitField5_ |= 0x00000004;
        }
        result.liuDaoEnemyEndIndex_ = liuDaoEnemyEndIndex_;
        if (((bitField7_ & 0x00100000) == 0x00100000)) {
          rewardIds_ = java.util.Collections.unmodifiableList(rewardIds_);
          bitField7_ = (bitField7_ & ~0x00100000);
        }
        result.rewardIds_ = rewardIds_;
        if (((from_bitField7_ & 0x00200000) == 0x00200000)) {
          to_bitField5_ |= 0x00000008;
        }
        result.liuDaoSweepHaveReward_ = liuDaoSweepHaveReward_;
        if (exchangeItemRewardBuilder_ == null) {
          if (((bitField7_ & 0x00400000) == 0x00400000)) {
            exchangeItemReward_ = java.util.Collections.unmodifiableList(exchangeItemReward_);
            bitField7_ = (bitField7_ & ~0x00400000);
          }
          result.exchangeItemReward_ = exchangeItemReward_;
        } else {
          result.exchangeItemReward_ = exchangeItemRewardBuilder_.build();
        }
        if (((from_bitField7_ & 0x00800000) == 0x00800000)) {
          to_bitField5_ |= 0x00000010;
        }
        result.templeDayRemainSeekTimes_ = templeDayRemainSeekTimes_;
        if (((from_bitField7_ & 0x01000000) == 0x01000000)) {
          to_bitField5_ |= 0x00000020;
        }
        if (templeTeamBuilder_ == null) {
          result.templeTeam_ = templeTeam_;
        } else {
          result.templeTeam_ = templeTeamBuilder_.build();
        }
        if (doubleRewardBuilder_ == null) {
          if (((bitField7_ & 0x02000000) == 0x02000000)) {
            doubleReward_ = java.util.Collections.unmodifiableList(doubleReward_);
            bitField7_ = (bitField7_ & ~0x02000000);
          }
          result.doubleReward_ = doubleReward_;
        } else {
          result.doubleReward_ = doubleRewardBuilder_.build();
        }
        if (((from_bitField7_ & 0x04000000) == 0x04000000)) {
          to_bitField5_ |= 0x00000040;
        }
        if (shenmoRankActivityRewardBuilder_ == null) {
          result.shenmoRankActivityReward_ = shenmoRankActivityReward_;
        } else {
          result.shenmoRankActivityReward_ = shenmoRankActivityRewardBuilder_.build();
        }
        if (((from_bitField7_ & 0x08000000) == 0x08000000)) {
          to_bitField5_ |= 0x00000080;
        }
        if (arenaRankActivityRewardBuilder_ == null) {
          result.arenaRankActivityReward_ = arenaRankActivityReward_;
        } else {
          result.arenaRankActivityReward_ = arenaRankActivityRewardBuilder_.build();
        }
        if (((from_bitField7_ & 0x10000000) == 0x10000000)) {
          to_bitField5_ |= 0x00000100;
        }
        if (openBoxRankActivityRewardBuilder_ == null) {
          result.openBoxRankActivityReward_ = openBoxRankActivityReward_;
        } else {
          result.openBoxRankActivityReward_ = openBoxRankActivityRewardBuilder_.build();
        }
        if (((bitField7_ & 0x20000000) == 0x20000000)) {
          templeCultivateCards_ = java.util.Collections.unmodifiableList(templeCultivateCards_);
          bitField7_ = (bitField7_ & ~0x20000000);
        }
        result.templeCultivateCards_ = templeCultivateCards_;
        if (((from_bitField7_ & 0x40000000) == 0x40000000)) {
          to_bitField5_ |= 0x00000200;
        }
        result.jingYanDanCostGold_ = jingYanDanCostGold_;
        if (((from_bitField7_ & 0x80000000) == 0x80000000)) {
          to_bitField5_ |= 0x00000400;
        }
        result.cardExpDeclineNum_ = cardExpDeclineNum_;
        if (((from_bitField8_ & 0x00000001) == 0x00000001)) {
          to_bitField5_ |= 0x00000800;
        }
        result.rankValue_ = rankValue_;
        if (((from_bitField8_ & 0x00000002) == 0x00000002)) {
          to_bitField5_ |= 0x00001000;
        }
        result.hasTempleEvent_ = hasTempleEvent_;
        if (((from_bitField8_ & 0x00000004) == 0x00000004)) {
          to_bitField5_ |= 0x00002000;
        }
        result.redPacketId_ = redPacketId_;
        if (((from_bitField8_ & 0x00000008) == 0x00000008)) {
          to_bitField5_ |= 0x00004000;
        }
        result.redPacketNum_ = redPacketNum_;
        if (((from_bitField8_ & 0x00000010) == 0x00000010)) {
          to_bitField5_ |= 0x00008000;
        }
        if (customPushItemMessageBuilder_ == null) {
          result.customPushItemMessage_ = customPushItemMessage_;
        } else {
          result.customPushItemMessage_ = customPushItemMessageBuilder_.build();
        }
        if (((from_bitField8_ & 0x00000020) == 0x00000020)) {
          to_bitField5_ |= 0x00010000;
        }
        result.zhuanPanNums_ = zhuanPanNums_;
        if (((bitField8_ & 0x00000040) == 0x00000040)) {
          zhuanPanOpenIds_ = java.util.Collections.unmodifiableList(zhuanPanOpenIds_);
          bitField8_ = (bitField8_ & ~0x00000040);
        }
        result.zhuanPanOpenIds_ = zhuanPanOpenIds_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        result.bitField3_ = to_bitField3_;
        result.bitField4_ = to_bitField4_;
        result.bitField5_ = to_bitField5_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PlayerItem) {
          return mergeFrom((myudfs.Common.PlayerItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PlayerItem other) {
        if (other == myudfs.Common.PlayerItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasDaoXing()) {
          setDaoXing(other.getDaoXing());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasShengWang()) {
          setShengWang(other.getShengWang());
        }
        if (other.hasXianYuan()) {
          setXianYuan(other.getXianYuan());
        }
        if (other.hasBagsUnlockGold()) {
          setBagsUnlockGold(other.getBagsUnlockGold());
        }
        if (other.hasStamina()) {
          setStamina(other.getStamina());
        }
        if (other.hasSpirit()) {
          setSpirit(other.getSpirit());
        }
        if (other.hasFriendsCost()) {
          setFriendsCost(other.getFriendsCost());
        }
        if (other.hasTrainFreeRenew()) {
          setTrainFreeRenew(other.getTrainFreeRenew());
        }
        if (other.hasReceiveStaminaNum()) {
          setReceiveStaminaNum(other.getReceiveStaminaNum());
        }
        if (todayQuestNumsBuilder_ == null) {
          if (!other.todayQuestNums_.isEmpty()) {
            if (todayQuestNums_.isEmpty()) {
              todayQuestNums_ = other.todayQuestNums_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureTodayQuestNumsIsMutable();
              todayQuestNums_.addAll(other.todayQuestNums_);
            }
            onChanged();
          }
        } else {
          if (!other.todayQuestNums_.isEmpty()) {
            if (todayQuestNumsBuilder_.isEmpty()) {
              todayQuestNumsBuilder_.dispose();
              todayQuestNumsBuilder_ = null;
              todayQuestNums_ = other.todayQuestNums_;
              bitField0_ = (bitField0_ & ~0x00008000);
              todayQuestNumsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTodayQuestNumsFieldBuilder() : null;
            } else {
              todayQuestNumsBuilder_.addAllMessages(other.todayQuestNums_);
            }
          }
        }
        if (todayQuestRestNumsBuilder_ == null) {
          if (!other.todayQuestRestNums_.isEmpty()) {
            if (todayQuestRestNums_.isEmpty()) {
              todayQuestRestNums_ = other.todayQuestRestNums_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureTodayQuestRestNumsIsMutable();
              todayQuestRestNums_.addAll(other.todayQuestRestNums_);
            }
            onChanged();
          }
        } else {
          if (!other.todayQuestRestNums_.isEmpty()) {
            if (todayQuestRestNumsBuilder_.isEmpty()) {
              todayQuestRestNumsBuilder_.dispose();
              todayQuestRestNumsBuilder_ = null;
              todayQuestRestNums_ = other.todayQuestRestNums_;
              bitField0_ = (bitField0_ & ~0x00010000);
              todayQuestRestNumsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTodayQuestRestNumsFieldBuilder() : null;
            } else {
              todayQuestRestNumsBuilder_.addAllMessages(other.todayQuestRestNums_);
            }
          }
        }
        if (!other.donateStamina_.isEmpty()) {
          if (donateStamina_.isEmpty()) {
            donateStamina_ = other.donateStamina_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureDonateStaminaIsMutable();
            donateStamina_.addAll(other.donateStamina_);
          }
          onChanged();
        }
        if (!other.receiveStamina_.isEmpty()) {
          if (receiveStamina_.isEmpty()) {
            receiveStamina_ = other.receiveStamina_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureReceiveStaminaIsMutable();
            receiveStamina_.addAll(other.receiveStamina_);
          }
          onChanged();
        }
        if (other.hasStaminaDate()) {
          setStaminaDate(other.getStaminaDate());
        }
        if (!other.friendId_.isEmpty()) {
          if (friendId_.isEmpty()) {
            friendId_ = other.friendId_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureFriendIdIsMutable();
            friendId_.addAll(other.friendId_);
          }
          onChanged();
        }
        if (other.hasLoginDate()) {
          setLoginDate(other.getLoginDate());
        }
        if (other.hasOnlineTime()) {
          setOnlineTime(other.getOnlineTime());
        }
        if (other.hasBagsUnlockGoldCd()) {
          setBagsUnlockGoldCd(other.getBagsUnlockGoldCd());
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (moonStarItemBuilder_ == null) {
          if (!other.moonStarItem_.isEmpty()) {
            if (moonStarItem_.isEmpty()) {
              moonStarItem_ = other.moonStarItem_;
              bitField0_ = (bitField0_ & ~0x02000000);
            } else {
              ensureMoonStarItemIsMutable();
              moonStarItem_.addAll(other.moonStarItem_);
            }
            onChanged();
          }
        } else {
          if (!other.moonStarItem_.isEmpty()) {
            if (moonStarItemBuilder_.isEmpty()) {
              moonStarItemBuilder_.dispose();
              moonStarItemBuilder_ = null;
              moonStarItem_ = other.moonStarItem_;
              bitField0_ = (bitField0_ & ~0x02000000);
              moonStarItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMoonStarItemFieldBuilder() : null;
            } else {
              moonStarItemBuilder_.addAllMessages(other.moonStarItem_);
            }
          }
        }
        if (magicWeaponsBuilder_ == null) {
          if (!other.magicWeapons_.isEmpty()) {
            if (magicWeapons_.isEmpty()) {
              magicWeapons_ = other.magicWeapons_;
              bitField0_ = (bitField0_ & ~0x04000000);
            } else {
              ensureMagicWeaponsIsMutable();
              magicWeapons_.addAll(other.magicWeapons_);
            }
            onChanged();
          }
        } else {
          if (!other.magicWeapons_.isEmpty()) {
            if (magicWeaponsBuilder_.isEmpty()) {
              magicWeaponsBuilder_.dispose();
              magicWeaponsBuilder_ = null;
              magicWeapons_ = other.magicWeapons_;
              bitField0_ = (bitField0_ & ~0x04000000);
              magicWeaponsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMagicWeaponsFieldBuilder() : null;
            } else {
              magicWeaponsBuilder_.addAllMessages(other.magicWeapons_);
            }
          }
        }
        if (drawCardDateBuilder_ == null) {
          if (!other.drawCardDate_.isEmpty()) {
            if (drawCardDate_.isEmpty()) {
              drawCardDate_ = other.drawCardDate_;
              bitField0_ = (bitField0_ & ~0x08000000);
            } else {
              ensureDrawCardDateIsMutable();
              drawCardDate_.addAll(other.drawCardDate_);
            }
            onChanged();
          }
        } else {
          if (!other.drawCardDate_.isEmpty()) {
            if (drawCardDateBuilder_.isEmpty()) {
              drawCardDateBuilder_.dispose();
              drawCardDateBuilder_ = null;
              drawCardDate_ = other.drawCardDate_;
              bitField0_ = (bitField0_ & ~0x08000000);
              drawCardDateBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDrawCardDateFieldBuilder() : null;
            } else {
              drawCardDateBuilder_.addAllMessages(other.drawCardDate_);
            }
          }
        }
        if (other.hasFirstPay()) {
          setFirstPay(other.getFirstPay());
        }
        if (!other.firstPayIds_.isEmpty()) {
          if (firstPayIds_.isEmpty()) {
            firstPayIds_ = other.firstPayIds_;
            bitField0_ = (bitField0_ & ~0x20000000);
          } else {
            ensureFirstPayIdsIsMutable();
            firstPayIds_.addAll(other.firstPayIds_);
          }
          onChanged();
        }
        if (other.hasSpiritDate()) {
          setSpiritDate(other.getSpiritDate());
        }
        if (other.hasWorshipTimes()) {
          setWorshipTimes(other.getWorshipTimes());
        }
        if (!other.worshipIds_.isEmpty()) {
          if (worshipIds_.isEmpty()) {
            worshipIds_ = other.worshipIds_;
            bitField1_ = (bitField1_ & ~0x00000001);
          } else {
            ensureWorshipIdsIsMutable();
            worshipIds_.addAll(other.worshipIds_);
          }
          onChanged();
        }
        if (other.hasGainRewardTime()) {
          setGainRewardTime(other.getGainRewardTime());
        }
        if (!other.exchangeTimes_.isEmpty()) {
          if (exchangeTimes_.isEmpty()) {
            exchangeTimes_ = other.exchangeTimes_;
            bitField1_ = (bitField1_ & ~0x00000004);
          } else {
            ensureExchangeTimesIsMutable();
            exchangeTimes_.addAll(other.exchangeTimes_);
          }
          onChanged();
        }
        if (!other.mails_.isEmpty()) {
          if (mails_.isEmpty()) {
            mails_ = other.mails_;
            bitField1_ = (bitField1_ & ~0x00000008);
          } else {
            ensureMailsIsMutable();
            mails_.addAll(other.mails_);
          }
          onChanged();
        }
        if (!other.mailFinished_.isEmpty()) {
          if (mailFinished_.isEmpty()) {
            mailFinished_ = other.mailFinished_;
            bitField1_ = (bitField1_ & ~0x00000010);
          } else {
            ensureMailFinishedIsMutable();
            mailFinished_.addAll(other.mailFinished_);
          }
          onChanged();
        }
        if (!other.mailDeleted_.isEmpty()) {
          if (mailDeleted_.isEmpty()) {
            mailDeleted_ = other.mailDeleted_;
            bitField1_ = (bitField1_ & ~0x00000020);
          } else {
            ensureMailDeletedIsMutable();
            mailDeleted_.addAll(other.mailDeleted_);
          }
          onChanged();
        }
        if (pvpFightResultBuilder_ == null) {
          if (!other.pvpFightResult_.isEmpty()) {
            if (pvpFightResult_.isEmpty()) {
              pvpFightResult_ = other.pvpFightResult_;
              bitField1_ = (bitField1_ & ~0x00000040);
            } else {
              ensurePvpFightResultIsMutable();
              pvpFightResult_.addAll(other.pvpFightResult_);
            }
            onChanged();
          }
        } else {
          if (!other.pvpFightResult_.isEmpty()) {
            if (pvpFightResultBuilder_.isEmpty()) {
              pvpFightResultBuilder_.dispose();
              pvpFightResultBuilder_ = null;
              pvpFightResult_ = other.pvpFightResult_;
              bitField1_ = (bitField1_ & ~0x00000040);
              pvpFightResultBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPvpFightResultFieldBuilder() : null;
            } else {
              pvpFightResultBuilder_.addAllMessages(other.pvpFightResult_);
            }
          }
        }
        if (other.hasBuyStamina()) {
          setBuyStamina(other.getBuyStamina());
        }
        if (other.hasBuySpirit()) {
          setBuySpirit(other.getBuySpirit());
        }
        if (other.hasPvpWins()) {
          setPvpWins(other.getPvpWins());
        }
        if (shopItemsBuilder_ == null) {
          if (!other.shopItems_.isEmpty()) {
            if (shopItems_.isEmpty()) {
              shopItems_ = other.shopItems_;
              bitField1_ = (bitField1_ & ~0x00000400);
            } else {
              ensureShopItemsIsMutable();
              shopItems_.addAll(other.shopItems_);
            }
            onChanged();
          }
        } else {
          if (!other.shopItems_.isEmpty()) {
            if (shopItemsBuilder_.isEmpty()) {
              shopItemsBuilder_.dispose();
              shopItemsBuilder_ = null;
              shopItems_ = other.shopItems_;
              bitField1_ = (bitField1_ & ~0x00000400);
              shopItemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getShopItemsFieldBuilder() : null;
            } else {
              shopItemsBuilder_.addAllMessages(other.shopItems_);
            }
          }
        }
        if (other.hasLoginDays()) {
          setLoginDays(other.getLoginDays());
        }
        if (missionsBuilder_ == null) {
          if (!other.missions_.isEmpty()) {
            if (missions_.isEmpty()) {
              missions_ = other.missions_;
              bitField1_ = (bitField1_ & ~0x00001000);
            } else {
              ensureMissionsIsMutable();
              missions_.addAll(other.missions_);
            }
            onChanged();
          }
        } else {
          if (!other.missions_.isEmpty()) {
            if (missionsBuilder_.isEmpty()) {
              missionsBuilder_.dispose();
              missionsBuilder_ = null;
              missions_ = other.missions_;
              bitField1_ = (bitField1_ & ~0x00001000);
              missionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMissionsFieldBuilder() : null;
            } else {
              missionsBuilder_.addAllMessages(other.missions_);
            }
          }
        }
        if (other.hasSilver()) {
          setSilver(other.getSilver());
        }
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField1_ = (bitField1_ & ~0x00004000);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField1_ = (bitField1_ & ~0x00004000);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        if (!other.cardGroup_.isEmpty()) {
          if (cardGroup_.isEmpty()) {
            cardGroup_ = other.cardGroup_;
            bitField1_ = (bitField1_ & ~0x00008000);
          } else {
            ensureCardGroupIsMutable();
            cardGroup_.addAll(other.cardGroup_);
          }
          onChanged();
        }
        if (piecesBuilder_ == null) {
          if (!other.pieces_.isEmpty()) {
            if (pieces_.isEmpty()) {
              pieces_ = other.pieces_;
              bitField1_ = (bitField1_ & ~0x00010000);
            } else {
              ensurePiecesIsMutable();
              pieces_.addAll(other.pieces_);
            }
            onChanged();
          }
        } else {
          if (!other.pieces_.isEmpty()) {
            if (piecesBuilder_.isEmpty()) {
              piecesBuilder_.dispose();
              piecesBuilder_ = null;
              pieces_ = other.pieces_;
              bitField1_ = (bitField1_ & ~0x00010000);
              piecesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPiecesFieldBuilder() : null;
            } else {
              piecesBuilder_.addAllMessages(other.pieces_);
            }
          }
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField1_ = (bitField1_ & ~0x00020000);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField1_ = (bitField1_ & ~0x00020000);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        if (hufasBuilder_ == null) {
          if (!other.hufas_.isEmpty()) {
            if (hufas_.isEmpty()) {
              hufas_ = other.hufas_;
              bitField1_ = (bitField1_ & ~0x00040000);
            } else {
              ensureHufasIsMutable();
              hufas_.addAll(other.hufas_);
            }
            onChanged();
          }
        } else {
          if (!other.hufas_.isEmpty()) {
            if (hufasBuilder_.isEmpty()) {
              hufasBuilder_.dispose();
              hufasBuilder_ = null;
              hufas_ = other.hufas_;
              bitField1_ = (bitField1_ & ~0x00040000);
              hufasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHufasFieldBuilder() : null;
            } else {
              hufasBuilder_.addAllMessages(other.hufas_);
            }
          }
        }
        if (trainsBuilder_ == null) {
          if (!other.trains_.isEmpty()) {
            if (trains_.isEmpty()) {
              trains_ = other.trains_;
              bitField1_ = (bitField1_ & ~0x00080000);
            } else {
              ensureTrainsIsMutable();
              trains_.addAll(other.trains_);
            }
            onChanged();
          }
        } else {
          if (!other.trains_.isEmpty()) {
            if (trainsBuilder_.isEmpty()) {
              trainsBuilder_.dispose();
              trainsBuilder_ = null;
              trains_ = other.trains_;
              bitField1_ = (bitField1_ & ~0x00080000);
              trainsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTrainsFieldBuilder() : null;
            } else {
              trainsBuilder_.addAllMessages(other.trains_);
            }
          }
        }
        if (questsBuilder_ == null) {
          if (!other.quests_.isEmpty()) {
            if (quests_.isEmpty()) {
              quests_ = other.quests_;
              bitField1_ = (bitField1_ & ~0x00100000);
            } else {
              ensureQuestsIsMutable();
              quests_.addAll(other.quests_);
            }
            onChanged();
          }
        } else {
          if (!other.quests_.isEmpty()) {
            if (questsBuilder_.isEmpty()) {
              questsBuilder_.dispose();
              questsBuilder_ = null;
              quests_ = other.quests_;
              bitField1_ = (bitField1_ & ~0x00100000);
              questsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getQuestsFieldBuilder() : null;
            } else {
              questsBuilder_.addAllMessages(other.quests_);
            }
          }
        }
        if (!other.cardGroupFight_.isEmpty()) {
          if (cardGroupFight_.isEmpty()) {
            cardGroupFight_ = other.cardGroupFight_;
            bitField1_ = (bitField1_ & ~0x00200000);
          } else {
            ensureCardGroupFightIsMutable();
            cardGroupFight_.addAll(other.cardGroupFight_);
          }
          onChanged();
        }
        if (!other.magicWeaponGroup_.isEmpty()) {
          if (magicWeaponGroup_.isEmpty()) {
            magicWeaponGroup_ = other.magicWeaponGroup_;
            bitField1_ = (bitField1_ & ~0x00400000);
          } else {
            ensureMagicWeaponGroupIsMutable();
            magicWeaponGroup_.addAll(other.magicWeaponGroup_);
          }
          onChanged();
        }
        if (other.hasRewardLastTime()) {
          setRewardLastTime(other.getRewardLastTime());
        }
        if (!other.pvpWinReward_.isEmpty()) {
          if (pvpWinReward_.isEmpty()) {
            pvpWinReward_ = other.pvpWinReward_;
            bitField1_ = (bitField1_ & ~0x01000000);
          } else {
            ensurePvpWinRewardIsMutable();
            pvpWinReward_.addAll(other.pvpWinReward_);
          }
          onChanged();
        }
        if (!other.loginReward_.isEmpty()) {
          if (loginReward_.isEmpty()) {
            loginReward_ = other.loginReward_;
            bitField1_ = (bitField1_ & ~0x02000000);
          } else {
            ensureLoginRewardIsMutable();
            loginReward_.addAll(other.loginReward_);
          }
          onChanged();
        }
        if (!other.pvpFightNumReward_.isEmpty()) {
          if (pvpFightNumReward_.isEmpty()) {
            pvpFightNumReward_ = other.pvpFightNumReward_;
            bitField1_ = (bitField1_ & ~0x04000000);
          } else {
            ensurePvpFightNumRewardIsMutable();
            pvpFightNumReward_.addAll(other.pvpFightNumReward_);
          }
          onChanged();
        }
        if (!other.drawCardReward_.isEmpty()) {
          if (drawCardReward_.isEmpty()) {
            drawCardReward_ = other.drawCardReward_;
            bitField1_ = (bitField1_ & ~0x08000000);
          } else {
            ensureDrawCardRewardIsMutable();
            drawCardReward_.addAll(other.drawCardReward_);
          }
          onChanged();
        }
        if (other.hasGainBuyStamina()) {
          setGainBuyStamina(other.getGainBuyStamina());
        }
        if (other.hasGainBuySpiritReward()) {
          setGainBuySpiritReward(other.getGainBuySpiritReward());
        }
        if (!other.gainQiuYuanReward_.isEmpty()) {
          if (gainQiuYuanReward_.isEmpty()) {
            gainQiuYuanReward_ = other.gainQiuYuanReward_;
            bitField1_ = (bitField1_ & ~0x40000000);
          } else {
            ensureGainQiuYuanRewardIsMutable();
            gainQiuYuanReward_.addAll(other.gainQiuYuanReward_);
          }
          onChanged();
        }
        if (!other.gainLvUpReward_.isEmpty()) {
          if (gainLvUpReward_.isEmpty()) {
            gainLvUpReward_ = other.gainLvUpReward_;
            bitField1_ = (bitField1_ & ~0x80000000);
          } else {
            ensureGainLvUpRewardIsMutable();
            gainLvUpReward_.addAll(other.gainLvUpReward_);
          }
          onChanged();
        }
        if (!other.gainChapterReward_.isEmpty()) {
          if (gainChapterReward_.isEmpty()) {
            gainChapterReward_ = other.gainChapterReward_;
            bitField2_ = (bitField2_ & ~0x00000001);
          } else {
            ensureGainChapterRewardIsMutable();
            gainChapterReward_.addAll(other.gainChapterReward_);
          }
          onChanged();
        }
        if (!other.gainChapterStarReward_.isEmpty()) {
          if (gainChapterStarReward_.isEmpty()) {
            gainChapterStarReward_ = other.gainChapterStarReward_;
            bitField2_ = (bitField2_ & ~0x00000002);
          } else {
            ensureGainChapterStarRewardIsMutable();
            gainChapterStarReward_.addAll(other.gainChapterStarReward_);
          }
          onChanged();
        }
        if (!other.gainFriendNumReward_.isEmpty()) {
          if (gainFriendNumReward_.isEmpty()) {
            gainFriendNumReward_ = other.gainFriendNumReward_;
            bitField2_ = (bitField2_ & ~0x00000004);
          } else {
            ensureGainFriendNumRewardIsMutable();
            gainFriendNumReward_.addAll(other.gainFriendNumReward_);
          }
          onChanged();
        }
        if (!other.gainCardReward_.isEmpty()) {
          if (gainCardReward_.isEmpty()) {
            gainCardReward_ = other.gainCardReward_;
            bitField2_ = (bitField2_ & ~0x00000008);
          } else {
            ensureGainCardRewardIsMutable();
            gainCardReward_.addAll(other.gainCardReward_);
          }
          onChanged();
        }
        if (!other.gainItemReward_.isEmpty()) {
          if (gainItemReward_.isEmpty()) {
            gainItemReward_ = other.gainItemReward_;
            bitField2_ = (bitField2_ & ~0x00000010);
          } else {
            ensureGainItemRewardIsMutable();
            gainItemReward_.addAll(other.gainItemReward_);
          }
          onChanged();
        }
        if (other.hasGainEveryDayTili()) {
          setGainEveryDayTili(other.getGainEveryDayTili());
        }
        if (other.hasGainEveryDayGold()) {
          setGainEveryDayGold(other.getGainEveryDayGold());
        }
        if (other.hasReceiveXianYuan()) {
          setReceiveXianYuan(other.getReceiveXianYuan());
        }
        if (other.hasDrawCardTimes()) {
          setDrawCardTimes(other.getDrawCardTimes());
        }
        if (other.hasPvpFightWinNum()) {
          setPvpFightWinNum(other.getPvpFightWinNum());
        }
        if (other.hasMultiLoginDays()) {
          setMultiLoginDays(other.getMultiLoginDays());
        }
        if (other.hasTotalPayGold()) {
          setTotalPayGold(other.getTotalPayGold());
        }
        if (!other.amountPaymentReward_.isEmpty()) {
          if (amountPaymentReward_.isEmpty()) {
            amountPaymentReward_ = other.amountPaymentReward_;
            bitField2_ = (bitField2_ & ~0x00001000);
          } else {
            ensureAmountPaymentRewardIsMutable();
            amountPaymentReward_.addAll(other.amountPaymentReward_);
          }
          onChanged();
        }
        if (missionsDailyBuilder_ == null) {
          if (!other.missionsDaily_.isEmpty()) {
            if (missionsDaily_.isEmpty()) {
              missionsDaily_ = other.missionsDaily_;
              bitField2_ = (bitField2_ & ~0x00002000);
            } else {
              ensureMissionsDailyIsMutable();
              missionsDaily_.addAll(other.missionsDaily_);
            }
            onChanged();
          }
        } else {
          if (!other.missionsDaily_.isEmpty()) {
            if (missionsDailyBuilder_.isEmpty()) {
              missionsDailyBuilder_.dispose();
              missionsDailyBuilder_ = null;
              missionsDaily_ = other.missionsDaily_;
              bitField2_ = (bitField2_ & ~0x00002000);
              missionsDailyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMissionsDailyFieldBuilder() : null;
            } else {
              missionsDailyBuilder_.addAllMessages(other.missionsDaily_);
            }
          }
        }
        if (other.hasPvpNewFightFlag()) {
          setPvpNewFightFlag(other.getPvpNewFightFlag());
        }
        if (other.hasQiuyuan()) {
          setQiuyuan(other.getQiuyuan());
        }
        if (other.hasQiuyuanGold()) {
          setQiuyuanGold(other.getQiuyuanGold());
        }
        if (other.hasNewMail()) {
          setNewMail(other.getNewMail());
        }
        if (other.hasPvpWinNum()) {
          setPvpWinNum(other.getPvpWinNum());
        }
        if (other.hasFirstPayReward()) {
          setFirstPayReward(other.getFirstPayReward());
        }
        if (!other.vipGifts_.isEmpty()) {
          if (vipGifts_.isEmpty()) {
            vipGifts_ = other.vipGifts_;
            bitField2_ = (bitField2_ & ~0x00100000);
          } else {
            ensureVipGiftsIsMutable();
            vipGifts_.addAll(other.vipGifts_);
          }
          onChanged();
        }
        if (other.hasVipReward()) {
          setVipReward(other.getVipReward());
        }
        if (other.hasVipCard()) {
          setVipCard(other.getVipCard());
        }
        if (vipAllGiftBuilder_ == null) {
          if (!other.vipAllGift_.isEmpty()) {
            if (vipAllGift_.isEmpty()) {
              vipAllGift_ = other.vipAllGift_;
              bitField2_ = (bitField2_ & ~0x00800000);
            } else {
              ensureVipAllGiftIsMutable();
              vipAllGift_.addAll(other.vipAllGift_);
            }
            onChanged();
          }
        } else {
          if (!other.vipAllGift_.isEmpty()) {
            if (vipAllGiftBuilder_.isEmpty()) {
              vipAllGiftBuilder_.dispose();
              vipAllGiftBuilder_ = null;
              vipAllGift_ = other.vipAllGift_;
              bitField2_ = (bitField2_ & ~0x00800000);
              vipAllGiftBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVipAllGiftFieldBuilder() : null;
            } else {
              vipAllGiftBuilder_.addAllMessages(other.vipAllGift_);
            }
          }
        }
        if (other.hasGuideIndex()) {
          setGuideIndex(other.getGuideIndex());
        }
        if (other.hasIsQianDao()) {
          setIsQianDao(other.getIsQianDao());
        }
        if (other.hasQianDao()) {
          mergeQianDao(other.getQianDao());
        }
        if (other.hasBattleIndex()) {
          setBattleIndex(other.getBattleIndex());
        }
        if (other.hasCaishenCoinNum()) {
          setCaishenCoinNum(other.getCaishenCoinNum());
        }
        if (!other.triggerGuideIndex_.isEmpty()) {
          if (triggerGuideIndex_.isEmpty()) {
            triggerGuideIndex_ = other.triggerGuideIndex_;
            bitField2_ = (bitField2_ & ~0x20000000);
          } else {
            ensureTriggerGuideIndexIsMutable();
            triggerGuideIndex_.addAll(other.triggerGuideIndex_);
          }
          onChanged();
        }
        if (!other.chapterEasyReward_.isEmpty()) {
          if (chapterEasyReward_.isEmpty()) {
            chapterEasyReward_ = other.chapterEasyReward_;
            bitField2_ = (bitField2_ & ~0x40000000);
          } else {
            ensureChapterEasyRewardIsMutable();
            chapterEasyReward_.addAll(other.chapterEasyReward_);
          }
          onChanged();
        }
        if (!other.chapterNormalReward_.isEmpty()) {
          if (chapterNormalReward_.isEmpty()) {
            chapterNormalReward_ = other.chapterNormalReward_;
            bitField2_ = (bitField2_ & ~0x80000000);
          } else {
            ensureChapterNormalRewardIsMutable();
            chapterNormalReward_.addAll(other.chapterNormalReward_);
          }
          onChanged();
        }
        if (!other.chapterHardReward_.isEmpty()) {
          if (chapterHardReward_.isEmpty()) {
            chapterHardReward_ = other.chapterHardReward_;
            bitField3_ = (bitField3_ & ~0x00000001);
          } else {
            ensureChapterHardRewardIsMutable();
            chapterHardReward_.addAll(other.chapterHardReward_);
          }
          onChanged();
        }
        if (!other.activityEasyReward_.isEmpty()) {
          if (activityEasyReward_.isEmpty()) {
            activityEasyReward_ = other.activityEasyReward_;
            bitField3_ = (bitField3_ & ~0x00000002);
          } else {
            ensureActivityEasyRewardIsMutable();
            activityEasyReward_.addAll(other.activityEasyReward_);
          }
          onChanged();
        }
        if (other.hasCardEffectNum()) {
          setCardEffectNum(other.getCardEffectNum());
        }
        if (!other.baoXiangReward_.isEmpty()) {
          if (baoXiangReward_.isEmpty()) {
            baoXiangReward_ = other.baoXiangReward_;
            bitField3_ = (bitField3_ & ~0x00000008);
          } else {
            ensureBaoXiangRewardIsMutable();
            baoXiangReward_.addAll(other.baoXiangReward_);
          }
          onChanged();
        }
        if (other.hasNewFriendInvite()) {
          setNewFriendInvite(other.getNewFriendInvite());
        }
        if (other.hasYunyouRefreshTime()) {
          setYunyouRefreshTime(other.getYunyouRefreshTime());
        }
        if (!other.yunyouItems_.isEmpty()) {
          if (yunyouItems_.isEmpty()) {
            yunyouItems_ = other.yunyouItems_;
            bitField3_ = (bitField3_ & ~0x00000040);
          } else {
            ensureYunyouItemsIsMutable();
            yunyouItems_.addAll(other.yunyouItems_);
          }
          onChanged();
        }
        if (other.hasLvReward()) {
          setLvReward(other.getLvReward());
        }
        if (other.hasQiuBaoDate()) {
          setQiuBaoDate(other.getQiuBaoDate());
        }
        if (other.hasQiuBaoTimes()) {
          setQiuBaoTimes(other.getQiuBaoTimes());
        }
        if (itemTaskBuilder_ == null) {
          if (!other.itemTask_.isEmpty()) {
            if (itemTask_.isEmpty()) {
              itemTask_ = other.itemTask_;
              bitField3_ = (bitField3_ & ~0x00000400);
            } else {
              ensureItemTaskIsMutable();
              itemTask_.addAll(other.itemTask_);
            }
            onChanged();
          }
        } else {
          if (!other.itemTask_.isEmpty()) {
            if (itemTaskBuilder_.isEmpty()) {
              itemTaskBuilder_.dispose();
              itemTaskBuilder_ = null;
              itemTask_ = other.itemTask_;
              bitField3_ = (bitField3_ & ~0x00000400);
              itemTaskBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemTaskFieldBuilder() : null;
            } else {
              itemTaskBuilder_.addAllMessages(other.itemTask_);
            }
          }
        }
        if (cardTaskBuilder_ == null) {
          if (!other.cardTask_.isEmpty()) {
            if (cardTask_.isEmpty()) {
              cardTask_ = other.cardTask_;
              bitField3_ = (bitField3_ & ~0x00000800);
            } else {
              ensureCardTaskIsMutable();
              cardTask_.addAll(other.cardTask_);
            }
            onChanged();
          }
        } else {
          if (!other.cardTask_.isEmpty()) {
            if (cardTaskBuilder_.isEmpty()) {
              cardTaskBuilder_.dispose();
              cardTaskBuilder_ = null;
              cardTask_ = other.cardTask_;
              bitField3_ = (bitField3_ & ~0x00000800);
              cardTaskBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardTaskFieldBuilder() : null;
            } else {
              cardTaskBuilder_.addAllMessages(other.cardTask_);
            }
          }
        }
        if (!other.collectCardReward_.isEmpty()) {
          if (collectCardReward_.isEmpty()) {
            collectCardReward_ = other.collectCardReward_;
            bitField3_ = (bitField3_ & ~0x00001000);
          } else {
            ensureCollectCardRewardIsMutable();
            collectCardReward_.addAll(other.collectCardReward_);
          }
          onChanged();
        }
        if (!other.cardReward_.isEmpty()) {
          if (cardReward_.isEmpty()) {
            cardReward_ = other.cardReward_;
            bitField3_ = (bitField3_ & ~0x00002000);
          } else {
            ensureCardRewardIsMutable();
            cardReward_.addAll(other.cardReward_);
          }
          onChanged();
        }
        if (!other.itemReward_.isEmpty()) {
          if (itemReward_.isEmpty()) {
            itemReward_ = other.itemReward_;
            bitField3_ = (bitField3_ & ~0x00004000);
          } else {
            ensureItemRewardIsMutable();
            itemReward_.addAll(other.itemReward_);
          }
          onChanged();
        }
        if (vipNumsBuilder_ == null) {
          if (!other.vipNums_.isEmpty()) {
            if (vipNums_.isEmpty()) {
              vipNums_ = other.vipNums_;
              bitField3_ = (bitField3_ & ~0x00008000);
            } else {
              ensureVipNumsIsMutable();
              vipNums_.addAll(other.vipNums_);
            }
            onChanged();
          }
        } else {
          if (!other.vipNums_.isEmpty()) {
            if (vipNumsBuilder_.isEmpty()) {
              vipNumsBuilder_.dispose();
              vipNumsBuilder_ = null;
              vipNums_ = other.vipNums_;
              bitField3_ = (bitField3_ & ~0x00008000);
              vipNumsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVipNumsFieldBuilder() : null;
            } else {
              vipNumsBuilder_.addAllMessages(other.vipNums_);
            }
          }
        }
        if (!other.firstPayExtraIds_.isEmpty()) {
          if (firstPayExtraIds_.isEmpty()) {
            firstPayExtraIds_ = other.firstPayExtraIds_;
            bitField3_ = (bitField3_ & ~0x00010000);
          } else {
            ensureFirstPayExtraIdsIsMutable();
            firstPayExtraIds_.addAll(other.firstPayExtraIds_);
          }
          onChanged();
        }
        if (other.hasAssetBundleState()) {
          setAssetBundleState(other.getAssetBundleState());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasServerId()) {
          setServerId(other.getServerId());
        }
        if (other.hasUsername()) {
          bitField3_ |= 0x00100000;
          username_ = other.username_;
          onChanged();
        }
        if (pvpExchangeItemsBuilder_ == null) {
          if (!other.pvpExchangeItems_.isEmpty()) {
            if (pvpExchangeItems_.isEmpty()) {
              pvpExchangeItems_ = other.pvpExchangeItems_;
              bitField3_ = (bitField3_ & ~0x00200000);
            } else {
              ensurePvpExchangeItemsIsMutable();
              pvpExchangeItems_.addAll(other.pvpExchangeItems_);
            }
            onChanged();
          }
        } else {
          if (!other.pvpExchangeItems_.isEmpty()) {
            if (pvpExchangeItemsBuilder_.isEmpty()) {
              pvpExchangeItemsBuilder_.dispose();
              pvpExchangeItemsBuilder_ = null;
              pvpExchangeItems_ = other.pvpExchangeItems_;
              bitField3_ = (bitField3_ & ~0x00200000);
              pvpExchangeItemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPvpExchangeItemsFieldBuilder() : null;
            } else {
              pvpExchangeItemsBuilder_.addAllMessages(other.pvpExchangeItems_);
            }
          }
        }
        if (other.hasHunyu()) {
          setHunyu(other.getHunyu());
        }
        if (!other.firstDrawIds_.isEmpty()) {
          if (firstDrawIds_.isEmpty()) {
            firstDrawIds_ = other.firstDrawIds_;
            bitField3_ = (bitField3_ & ~0x00800000);
          } else {
            ensureFirstDrawIdsIsMutable();
            firstDrawIds_.addAll(other.firstDrawIds_);
          }
          onChanged();
        }
        if (other.hasOpenDate()) {
          setOpenDate(other.getOpenDate());
        }
        if (todyTastePantaosBuilder_ == null) {
          if (!other.todyTastePantaos_.isEmpty()) {
            if (todyTastePantaos_.isEmpty()) {
              todyTastePantaos_ = other.todyTastePantaos_;
              bitField3_ = (bitField3_ & ~0x02000000);
            } else {
              ensureTodyTastePantaosIsMutable();
              todyTastePantaos_.addAll(other.todyTastePantaos_);
            }
            onChanged();
          }
        } else {
          if (!other.todyTastePantaos_.isEmpty()) {
            if (todyTastePantaosBuilder_.isEmpty()) {
              todyTastePantaosBuilder_.dispose();
              todyTastePantaosBuilder_ = null;
              todyTastePantaos_ = other.todyTastePantaos_;
              bitField3_ = (bitField3_ & ~0x02000000);
              todyTastePantaosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTodyTastePantaosFieldBuilder() : null;
            } else {
              todyTastePantaosBuilder_.addAllMessages(other.todyTastePantaos_);
            }
          }
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        if (other.hasLingLi()) {
          setLingLi(other.getLingLi());
        }
        if (other.hasBuyLingli()) {
          setBuyLingli(other.getBuyLingli());
        }
        if (other.hasLingLiDate()) {
          setLingLiDate(other.getLingLiDate());
        }
        if (!other.shenMoDuiHuan_.isEmpty()) {
          if (shenMoDuiHuan_.isEmpty()) {
            shenMoDuiHuan_ = other.shenMoDuiHuan_;
            bitField3_ = (bitField3_ & ~0x40000000);
          } else {
            ensureShenMoDuiHuanIsMutable();
            shenMoDuiHuan_.addAll(other.shenMoDuiHuan_);
          }
          onChanged();
        }
        if (!other.buyShenMoItem_.isEmpty()) {
          if (buyShenMoItem_.isEmpty()) {
            buyShenMoItem_ = other.buyShenMoItem_;
            bitField3_ = (bitField3_ & ~0x80000000);
          } else {
            ensureBuyShenMoItemIsMutable();
            buyShenMoItem_.addAll(other.buyShenMoItem_);
          }
          onChanged();
        }
        if (other.hasXiuWei()) {
          setXiuWei(other.getXiuWei());
        }
        if (other.hasHasPvpReward()) {
          setHasPvpReward(other.getHasPvpReward());
        }
        if (other.hasGongDe()) {
          setGongDe(other.getGongDe());
        }
        if (!other.gongDeReward_.isEmpty()) {
          if (gongDeReward_.isEmpty()) {
            gongDeReward_ = other.gongDeReward_;
            bitField4_ = (bitField4_ & ~0x00000008);
          } else {
            ensureGongDeRewardIsMutable();
            gongDeReward_.addAll(other.gongDeReward_);
          }
          onChanged();
        }
        if (other.hasRankRise()) {
          setRankRise(other.getRankRise());
        }
        if (other.hasRank()) {
          setRank(other.getRank());
        }
        if (drawCardBuilder_ == null) {
          if (!other.drawCard_.isEmpty()) {
            if (drawCard_.isEmpty()) {
              drawCard_ = other.drawCard_;
              bitField4_ = (bitField4_ & ~0x00000040);
            } else {
              ensureDrawCardIsMutable();
              drawCard_.addAll(other.drawCard_);
            }
            onChanged();
          }
        } else {
          if (!other.drawCard_.isEmpty()) {
            if (drawCardBuilder_.isEmpty()) {
              drawCardBuilder_.dispose();
              drawCardBuilder_ = null;
              drawCard_ = other.drawCard_;
              bitField4_ = (bitField4_ & ~0x00000040);
              drawCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDrawCardFieldBuilder() : null;
            } else {
              drawCardBuilder_.addAllMessages(other.drawCard_);
            }
          }
        }
        if (other.hasHufaOpen()) {
          setHufaOpen(other.getHufaOpen());
        }
        if (other.hasCaishenSilverNum()) {
          setCaishenSilverNum(other.getCaishenSilverNum());
        }
        if (other.hasDrawCardReward2()) {
          setDrawCardReward2(other.getDrawCardReward2());
        }
        if (!other.playerPrefs_.isEmpty()) {
          if (playerPrefs_.isEmpty()) {
            playerPrefs_ = other.playerPrefs_;
            bitField4_ = (bitField4_ & ~0x00000400);
          } else {
            ensurePlayerPrefsIsMutable();
            playerPrefs_.addAll(other.playerPrefs_);
          }
          onChanged();
        }
        if (missionMapBuilder_ == null) {
          if (!other.missionMap_.isEmpty()) {
            if (missionMap_.isEmpty()) {
              missionMap_ = other.missionMap_;
              bitField4_ = (bitField4_ & ~0x00000800);
            } else {
              ensureMissionMapIsMutable();
              missionMap_.addAll(other.missionMap_);
            }
            onChanged();
          }
        } else {
          if (!other.missionMap_.isEmpty()) {
            if (missionMapBuilder_.isEmpty()) {
              missionMapBuilder_.dispose();
              missionMapBuilder_ = null;
              missionMap_ = other.missionMap_;
              bitField4_ = (bitField4_ & ~0x00000800);
              missionMapBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMissionMapFieldBuilder() : null;
            } else {
              missionMapBuilder_.addAllMessages(other.missionMap_);
            }
          }
        }
        if (other.hasMissionNum()) {
          setMissionNum(other.getMissionNum());
        }
        if (other.hasYunyouNum()) {
          setYunyouNum(other.getYunyouNum());
        }
        if (other.hasPvpExchangeNum()) {
          setPvpExchangeNum(other.getPvpExchangeNum());
        }
        if (other.hasFriendNum()) {
          setFriendNum(other.getFriendNum());
        }
        if (other.hasClearShenMoItem()) {
          setClearShenMoItem(other.getClearShenMoItem());
        }
        if (other.hasRefreshHour24()) {
          setRefreshHour24(other.getRefreshHour24());
        }
        if (other.hasPay()) {
          setPay(other.getPay());
        }
        if (other.hasIsShutUp()) {
          setIsShutUp(other.getIsShutUp());
        }
        if (other.hasShutUpDate()) {
          setShutUpDate(other.getShutUpDate());
        }
        if (other.hasShutUpEnd()) {
          setShutUpEnd(other.getShutUpEnd());
        }
        if (activityItemBuilder_ == null) {
          if (!other.activityItem_.isEmpty()) {
            if (activityItem_.isEmpty()) {
              activityItem_ = other.activityItem_;
              bitField4_ = (bitField4_ & ~0x00400000);
            } else {
              ensureActivityItemIsMutable();
              activityItem_.addAll(other.activityItem_);
            }
            onChanged();
          }
        } else {
          if (!other.activityItem_.isEmpty()) {
            if (activityItemBuilder_.isEmpty()) {
              activityItemBuilder_.dispose();
              activityItemBuilder_ = null;
              activityItem_ = other.activityItem_;
              bitField4_ = (bitField4_ & ~0x00400000);
              activityItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActivityItemFieldBuilder() : null;
            } else {
              activityItemBuilder_.addAllMessages(other.activityItem_);
            }
          }
        }
        if (payRewardBuilder_ == null) {
          if (!other.payReward_.isEmpty()) {
            if (payReward_.isEmpty()) {
              payReward_ = other.payReward_;
              bitField4_ = (bitField4_ & ~0x00800000);
            } else {
              ensurePayRewardIsMutable();
              payReward_.addAll(other.payReward_);
            }
            onChanged();
          }
        } else {
          if (!other.payReward_.isEmpty()) {
            if (payRewardBuilder_.isEmpty()) {
              payRewardBuilder_.dispose();
              payRewardBuilder_ = null;
              payReward_ = other.payReward_;
              bitField4_ = (bitField4_ & ~0x00800000);
              payRewardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPayRewardFieldBuilder() : null;
            } else {
              payRewardBuilder_.addAllMessages(other.payReward_);
            }
          }
        }
        if (other.hasYunYouTime()) {
          setYunYouTime(other.getYunYouTime());
        }
        if (other.hasPvpChangeTime()) {
          setPvpChangeTime(other.getPvpChangeTime());
        }
        if (other.hasShenMoChangeTime()) {
          setShenMoChangeTime(other.getShenMoChangeTime());
        }
        if (other.hasShenMoNum()) {
          setShenMoNum(other.getShenMoNum());
        }
        if (other.hasItemLvUpNum()) {
          setItemLvUpNum(other.getItemLvUpNum());
        }
        if (other.hasCardLvUpNum()) {
          setCardLvUpNum(other.getCardLvUpNum());
        }
        if (other.hasShenTongNum()) {
          setShenTongNum(other.getShenTongNum());
        }
        if (other.hasSkillNum()) {
          setSkillNum(other.getSkillNum());
        }
        if (other.hasHuFaNum()) {
          setHuFaNum(other.getHuFaNum());
        }
        if (other.hasXiuLianNum()) {
          setXiuLianNum(other.getXiuLianNum());
        }
        if (other.hasChangeName()) {
          setChangeName(other.getChangeName());
        }
        if (!other.chengjiuReward_.isEmpty()) {
          if (chengjiuReward_.isEmpty()) {
            chengjiuReward_ = other.chengjiuReward_;
            bitField5_ = (bitField5_ & ~0x00000008);
          } else {
            ensureChengjiuRewardIsMutable();
            chengjiuReward_.addAll(other.chengjiuReward_);
          }
          onChanged();
        }
        if (other.hasFenXiangRewardTimes()) {
          setFenXiangRewardTimes(other.getFenXiangRewardTimes());
        }
        if (other.hasWeiXinFirstShare()) {
          setWeiXinFirstShare(other.getWeiXinFirstShare());
        }
        if (other.hasWeiXinOpen()) {
          setWeiXinOpen(other.getWeiXinOpen());
        }
        if (other.hasXilianOpen()) {
          setXilianOpen(other.getXilianOpen());
        }
        if (other.hasPvpWinMax()) {
          setPvpWinMax(other.getPvpWinMax());
        }
        if (other.hasInviteCode()) {
          bitField5_ |= 0x00000200;
          inviteCode_ = other.inviteCode_;
          onChanged();
        }
        if (other.hasInviteNum()) {
          setInviteNum(other.getInviteNum());
        }
        if (other.hasInviterId()) {
          setInviterId(other.getInviterId());
        }
        if (other.hasClearFirstPayExtraIds()) {
          setClearFirstPayExtraIds(other.getClearFirstPayExtraIds());
        }
        if (other.hasLoginActivity()) {
          mergeLoginActivity(other.getLoginActivity());
        }
        if (other.hasChoukaQuan()) {
          setChoukaQuan(other.getChoukaQuan());
        }
        if (other.hasShenJiangScore()) {
          setShenJiangScore(other.getShenJiangScore());
        }
        if (other.hasShenJiangTotalScore()) {
          setShenJiangTotalScore(other.getShenJiangTotalScore());
        }
        if (other.hasShenJiangRank()) {
          setShenJiangRank(other.getShenJiangRank());
        }
        if (!other.inviteNumReward_.isEmpty()) {
          if (inviteNumReward_.isEmpty()) {
            inviteNumReward_ = other.inviteNumReward_;
            bitField5_ = (bitField5_ & ~0x00040000);
          } else {
            ensureInviteNumRewardIsMutable();
            inviteNumReward_.addAll(other.inviteNumReward_);
          }
          onChanged();
        }
        if (!other.yuanshenBox_.isEmpty()) {
          if (yuanshenBox_.isEmpty()) {
            yuanshenBox_ = other.yuanshenBox_;
            bitField5_ = (bitField5_ & ~0x00080000);
          } else {
            ensureYuanshenBoxIsMutable();
            yuanshenBox_.addAll(other.yuanshenBox_);
          }
          onChanged();
        }
        if (boxsBuilder_ == null) {
          if (!other.boxs_.isEmpty()) {
            if (boxs_.isEmpty()) {
              boxs_ = other.boxs_;
              bitField5_ = (bitField5_ & ~0x00100000);
            } else {
              ensureBoxsIsMutable();
              boxs_.addAll(other.boxs_);
            }
            onChanged();
          }
        } else {
          if (!other.boxs_.isEmpty()) {
            if (boxsBuilder_.isEmpty()) {
              boxsBuilder_.dispose();
              boxsBuilder_ = null;
              boxs_ = other.boxs_;
              bitField5_ = (bitField5_ & ~0x00100000);
              boxsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoxsFieldBuilder() : null;
            } else {
              boxsBuilder_.addAllMessages(other.boxs_);
            }
          }
        }
        if (buyBoxBuilder_ == null) {
          if (!other.buyBox_.isEmpty()) {
            if (buyBox_.isEmpty()) {
              buyBox_ = other.buyBox_;
              bitField5_ = (bitField5_ & ~0x00200000);
            } else {
              ensureBuyBoxIsMutable();
              buyBox_.addAll(other.buyBox_);
            }
            onChanged();
          }
        } else {
          if (!other.buyBox_.isEmpty()) {
            if (buyBoxBuilder_.isEmpty()) {
              buyBoxBuilder_.dispose();
              buyBoxBuilder_ = null;
              buyBox_ = other.buyBox_;
              bitField5_ = (bitField5_ & ~0x00200000);
              buyBoxBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBuyBoxFieldBuilder() : null;
            } else {
              buyBoxBuilder_.addAllMessages(other.buyBox_);
            }
          }
        }
        if (other.hasZhuanpan()) {
          setZhuanpan(other.getZhuanpan());
        }
        if (!other.sevenReward_.isEmpty()) {
          if (sevenReward_.isEmpty()) {
            sevenReward_ = other.sevenReward_;
            bitField5_ = (bitField5_ & ~0x00800000);
          } else {
            ensureSevenRewardIsMutable();
            sevenReward_.addAll(other.sevenReward_);
          }
          onChanged();
        }
        if (!other.playerNum_.isEmpty()) {
          if (playerNum_.isEmpty()) {
            playerNum_ = other.playerNum_;
            bitField5_ = (bitField5_ & ~0x01000000);
          } else {
            ensurePlayerNumIsMutable();
            playerNum_.addAll(other.playerNum_);
          }
          onChanged();
        }
        if (!other.rewardId_.isEmpty()) {
          if (rewardId_.isEmpty()) {
            rewardId_ = other.rewardId_;
            bitField5_ = (bitField5_ & ~0x02000000);
          } else {
            ensureRewardIdIsMutable();
            rewardId_.addAll(other.rewardId_);
          }
          onChanged();
        }
        if (other.hasInviteReward()) {
          setInviteReward(other.getInviteReward());
        }
        if (other.hasLingHun()) {
          setLingHun(other.getLingHun());
        }
        if (!other.liuDaoDuiHuanIds_.isEmpty()) {
          if (liuDaoDuiHuanIds_.isEmpty()) {
            liuDaoDuiHuanIds_ = other.liuDaoDuiHuanIds_;
            bitField5_ = (bitField5_ & ~0x10000000);
          } else {
            ensureLiuDaoDuiHuanIdsIsMutable();
            liuDaoDuiHuanIds_.addAll(other.liuDaoDuiHuanIds_);
          }
          onChanged();
        }
        if (!other.liuDaoDuiHuanIdsBuyed_.isEmpty()) {
          if (liuDaoDuiHuanIdsBuyed_.isEmpty()) {
            liuDaoDuiHuanIdsBuyed_ = other.liuDaoDuiHuanIdsBuyed_;
            bitField5_ = (bitField5_ & ~0x20000000);
          } else {
            ensureLiuDaoDuiHuanIdsBuyedIsMutable();
            liuDaoDuiHuanIdsBuyed_.addAll(other.liuDaoDuiHuanIdsBuyed_);
          }
          onChanged();
        }
        if (other.hasLiuDaoChangeTime()) {
          setLiuDaoChangeTime(other.getLiuDaoChangeTime());
        }
        if (other.hasLiuDaoBaoXiangOpenNum()) {
          setLiuDaoBaoXiangOpenNum(other.getLiuDaoBaoXiangOpenNum());
        }
        if (other.hasVipCardAllLift()) {
          setVipCardAllLift(other.getVipCardAllLift());
        }
        if (other.hasVipAllLifeReward()) {
          setVipAllLifeReward(other.getVipAllLifeReward());
        }
        if (!other.cardGroupLiuDao_.isEmpty()) {
          if (cardGroupLiuDao_.isEmpty()) {
            cardGroupLiuDao_ = other.cardGroupLiuDao_;
            bitField6_ = (bitField6_ & ~0x00000004);
          } else {
            ensureCardGroupLiuDaoIsMutable();
            cardGroupLiuDao_.addAll(other.cardGroupLiuDao_);
          }
          onChanged();
        }
        if (!other.cardGroupFightLiuDao_.isEmpty()) {
          if (cardGroupFightLiuDao_.isEmpty()) {
            cardGroupFightLiuDao_ = other.cardGroupFightLiuDao_;
            bitField6_ = (bitField6_ & ~0x00000008);
          } else {
            ensureCardGroupFightLiuDaoIsMutable();
            cardGroupFightLiuDao_.addAll(other.cardGroupFightLiuDao_);
          }
          onChanged();
        }
        if (drawCardFreeBuilder_ == null) {
          if (!other.drawCardFree_.isEmpty()) {
            if (drawCardFree_.isEmpty()) {
              drawCardFree_ = other.drawCardFree_;
              bitField6_ = (bitField6_ & ~0x00000010);
            } else {
              ensureDrawCardFreeIsMutable();
              drawCardFree_.addAll(other.drawCardFree_);
            }
            onChanged();
          }
        } else {
          if (!other.drawCardFree_.isEmpty()) {
            if (drawCardFreeBuilder_.isEmpty()) {
              drawCardFreeBuilder_.dispose();
              drawCardFreeBuilder_ = null;
              drawCardFree_ = other.drawCardFree_;
              bitField6_ = (bitField6_ & ~0x00000010);
              drawCardFreeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDrawCardFreeFieldBuilder() : null;
            } else {
              drawCardFreeBuilder_.addAllMessages(other.drawCardFree_);
            }
          }
        }
        if (other.hasLiudaoEnterHeroLimit()) {
          setLiudaoEnterHeroLimit(other.getLiudaoEnterHeroLimit());
        }
        if (other.hasTodayQuestNum()) {
          setTodayQuestNum(other.getTodayQuestNum());
        }
        if (other.hasCardId()) {
          setCardId(other.getCardId());
        }
        if (other.hasEnterLiuDaoTimes()) {
          setEnterLiuDaoTimes(other.getEnterLiuDaoTimes());
        }
        if (other.hasXunshan()) {
          setXunshan(other.getXunshan());
        }
        if (other.hasDailyLeftTimes()) {
          setDailyLeftTimes(other.getDailyLeftTimes());
        }
        if (other.hasDailyBuyTimes()) {
          setDailyBuyTimes(other.getDailyBuyTimes());
        }
        if (other.hasNextCDTime()) {
          setNextCDTime(other.getNextCDTime());
        }
        if (other.hasShouHuId()) {
          setShouHuId(other.getShouHuId());
        }
        if (other.hasCancelCDTimes()) {
          setCancelCDTimes(other.getCancelCDTimes());
        }
        if (!other.xunshanStr_.isEmpty()) {
          if (xunshanStr_.isEmpty()) {
            xunshanStr_ = other.xunshanStr_;
            bitField6_ = (bitField6_ & ~0x00008000);
          } else {
            ensureXunshanStrIsMutable();
            xunshanStr_.addAll(other.xunshanStr_);
          }
          onChanged();
        }
        if (other.hasGangInfo()) {
          mergeGangInfo(other.getGangInfo());
        }
        if (other.hasHasDFBet()) {
          setHasDFBet(other.getHasDFBet());
        }
        if (gangExchangeBuilder_ == null) {
          if (!other.gangExchange_.isEmpty()) {
            if (gangExchange_.isEmpty()) {
              gangExchange_ = other.gangExchange_;
              bitField6_ = (bitField6_ & ~0x00040000);
            } else {
              ensureGangExchangeIsMutable();
              gangExchange_.addAll(other.gangExchange_);
            }
            onChanged();
          }
        } else {
          if (!other.gangExchange_.isEmpty()) {
            if (gangExchangeBuilder_.isEmpty()) {
              gangExchangeBuilder_.dispose();
              gangExchangeBuilder_ = null;
              gangExchange_ = other.gangExchange_;
              bitField6_ = (bitField6_ & ~0x00040000);
              gangExchangeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGangExchangeFieldBuilder() : null;
            } else {
              gangExchangeBuilder_.addAllMessages(other.gangExchange_);
            }
          }
        }
        if (other.hasGangRefreshExchangeTimes()) {
          setGangRefreshExchangeTimes(other.getGangRefreshExchangeTimes());
        }
        if (other.hasDfTeamInfo()) {
          mergeDfTeamInfo(other.getDfTeamInfo());
        }
        if (other.hasVipDailyGiftBuyCount()) {
          setVipDailyGiftBuyCount(other.getVipDailyGiftBuyCount());
        }
        if (other.hasTrialsDFTimes()) {
          setTrialsDFTimes(other.getTrialsDFTimes());
        }
        if (other.hasDfBetId()) {
          setDfBetId(other.getDfBetId());
        }
        if (other.hasXunxian()) {
          mergeXunxian(other.getXunxian());
        }
        if (other.hasAuctionType()) {
          setAuctionType(other.getAuctionType());
        }
        if (other.hasSecurityCodeItem()) {
          mergeSecurityCodeItem(other.getSecurityCodeItem());
        }
        if (other.hasLogin1100()) {
          setLogin1100(other.getLogin1100());
        }
        if (other.hasIsShowDFInMainUI()) {
          setIsShowDFInMainUI(other.getIsShowDFInMainUI());
        }
        if (other.hasIsVipUpByPlayerLv()) {
          setIsVipUpByPlayerLv(other.getIsVipUpByPlayerLv());
        }
        if (other.hasHongbaoActivitys()) {
          mergeHongbaoActivitys(other.getHongbaoActivitys());
        }
        if (other.hasIsOpenedBoxEveryDay()) {
          setIsOpenedBoxEveryDay(other.getIsOpenedBoxEveryDay());
        }
        if (other.hasAdmobSwitch()) {
          setAdmobSwitch(other.getAdmobSwitch());
        }
        if (other.hasArenaTeamInfo()) {
          mergeArenaTeamInfo(other.getArenaTeamInfo());
        }
        if (other.hasSectionGuideIndex()) {
          setSectionGuideIndex(other.getSectionGuideIndex());
        }
        if (other.hasJiaoYiBuy()) {
          setJiaoYiBuy(other.getJiaoYiBuy());
        }
        if (other.hasJiaoYiSale()) {
          setJiaoYiSale(other.getJiaoYiSale());
        }
        if (other.hasDailyLongGongBox()) {
          setDailyLongGongBox(other.getDailyLongGongBox());
        }
        if (other.hasDailyLiuDao()) {
          setDailyLiuDao(other.getDailyLiuDao());
        }
        if (other.hasEscortItem()) {
          mergeEscortItem(other.getEscortItem());
        }
        if (other.hasEscortTeamInfo()) {
          mergeEscortTeamInfo(other.getEscortTeamInfo());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasShenMoTeamItem()) {
          mergeShenMoTeamItem(other.getShenMoTeamItem());
        }
        if (other.hasPvpTeamItem()) {
          mergePvpTeamItem(other.getPvpTeamItem());
        }
        if (other.hasFbTeamItem()) {
          mergeFbTeamItem(other.getFbTeamItem());
        }
        if (other.hasGangModifyNameTimes()) {
          setGangModifyNameTimes(other.getGangModifyNameTimes());
        }
        if (other.hasStartTimeMultiExp()) {
          setStartTimeMultiExp(other.getStartTimeMultiExp());
        }
        if (other.hasEndTimeMultiExp()) {
          setEndTimeMultiExp(other.getEndTimeMultiExp());
        }
        if (other.hasRate()) {
          setRate(other.getRate());
        }
        if (other.hasNextTime()) {
          setNextTime(other.getNextTime());
        }
        if (other.hasLiuDaoEnemyStartIndex()) {
          setLiuDaoEnemyStartIndex(other.getLiuDaoEnemyStartIndex());
        }
        if (other.hasLiuDaoEnemyEndIndex()) {
          setLiuDaoEnemyEndIndex(other.getLiuDaoEnemyEndIndex());
        }
        if (!other.rewardIds_.isEmpty()) {
          if (rewardIds_.isEmpty()) {
            rewardIds_ = other.rewardIds_;
            bitField7_ = (bitField7_ & ~0x00100000);
          } else {
            ensureRewardIdsIsMutable();
            rewardIds_.addAll(other.rewardIds_);
          }
          onChanged();
        }
        if (other.hasLiuDaoSweepHaveReward()) {
          setLiuDaoSweepHaveReward(other.getLiuDaoSweepHaveReward());
        }
        if (exchangeItemRewardBuilder_ == null) {
          if (!other.exchangeItemReward_.isEmpty()) {
            if (exchangeItemReward_.isEmpty()) {
              exchangeItemReward_ = other.exchangeItemReward_;
              bitField7_ = (bitField7_ & ~0x00400000);
            } else {
              ensureExchangeItemRewardIsMutable();
              exchangeItemReward_.addAll(other.exchangeItemReward_);
            }
            onChanged();
          }
        } else {
          if (!other.exchangeItemReward_.isEmpty()) {
            if (exchangeItemRewardBuilder_.isEmpty()) {
              exchangeItemRewardBuilder_.dispose();
              exchangeItemRewardBuilder_ = null;
              exchangeItemReward_ = other.exchangeItemReward_;
              bitField7_ = (bitField7_ & ~0x00400000);
              exchangeItemRewardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExchangeItemRewardFieldBuilder() : null;
            } else {
              exchangeItemRewardBuilder_.addAllMessages(other.exchangeItemReward_);
            }
          }
        }
        if (other.hasTempleDayRemainSeekTimes()) {
          setTempleDayRemainSeekTimes(other.getTempleDayRemainSeekTimes());
        }
        if (other.hasTempleTeam()) {
          mergeTempleTeam(other.getTempleTeam());
        }
        if (doubleRewardBuilder_ == null) {
          if (!other.doubleReward_.isEmpty()) {
            if (doubleReward_.isEmpty()) {
              doubleReward_ = other.doubleReward_;
              bitField7_ = (bitField7_ & ~0x02000000);
            } else {
              ensureDoubleRewardIsMutable();
              doubleReward_.addAll(other.doubleReward_);
            }
            onChanged();
          }
        } else {
          if (!other.doubleReward_.isEmpty()) {
            if (doubleRewardBuilder_.isEmpty()) {
              doubleRewardBuilder_.dispose();
              doubleRewardBuilder_ = null;
              doubleReward_ = other.doubleReward_;
              bitField7_ = (bitField7_ & ~0x02000000);
              doubleRewardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDoubleRewardFieldBuilder() : null;
            } else {
              doubleRewardBuilder_.addAllMessages(other.doubleReward_);
            }
          }
        }
        if (other.hasShenmoRankActivityReward()) {
          mergeShenmoRankActivityReward(other.getShenmoRankActivityReward());
        }
        if (other.hasArenaRankActivityReward()) {
          mergeArenaRankActivityReward(other.getArenaRankActivityReward());
        }
        if (other.hasOpenBoxRankActivityReward()) {
          mergeOpenBoxRankActivityReward(other.getOpenBoxRankActivityReward());
        }
        if (!other.templeCultivateCards_.isEmpty()) {
          if (templeCultivateCards_.isEmpty()) {
            templeCultivateCards_ = other.templeCultivateCards_;
            bitField7_ = (bitField7_ & ~0x20000000);
          } else {
            ensureTempleCultivateCardsIsMutable();
            templeCultivateCards_.addAll(other.templeCultivateCards_);
          }
          onChanged();
        }
        if (other.hasJingYanDanCostGold()) {
          setJingYanDanCostGold(other.getJingYanDanCostGold());
        }
        if (other.hasCardExpDeclineNum()) {
          setCardExpDeclineNum(other.getCardExpDeclineNum());
        }
        if (other.hasRankValue()) {
          setRankValue(other.getRankValue());
        }
        if (other.hasHasTempleEvent()) {
          setHasTempleEvent(other.getHasTempleEvent());
        }
        if (other.hasRedPacketId()) {
          setRedPacketId(other.getRedPacketId());
        }
        if (other.hasRedPacketNum()) {
          setRedPacketNum(other.getRedPacketNum());
        }
        if (other.hasCustomPushItemMessage()) {
          mergeCustomPushItemMessage(other.getCustomPushItemMessage());
        }
        if (other.hasZhuanPanNums()) {
          setZhuanPanNums(other.getZhuanPanNums());
        }
        if (!other.zhuanPanOpenIds_.isEmpty()) {
          if (zhuanPanOpenIds_.isEmpty()) {
            zhuanPanOpenIds_ = other.zhuanPanOpenIds_;
            bitField8_ = (bitField8_ & ~0x00000040);
          } else {
            ensureZhuanPanOpenIdsIsMutable();
            zhuanPanOpenIds_.addAll(other.zhuanPanOpenIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PlayerItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PlayerItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;
      private int bitField3_;
      private int bitField4_;
      private int bitField5_;
      private int bitField6_;
      private int bitField7_;
      private int bitField8_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 lv = 3;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000004;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 exp = 4;
      private int exp_ ;
      /**
       * <code>optional int32 exp = 4;</code>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 exp = 4;</code>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional int32 exp = 4;</code>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000008;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exp = 4;</code>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 daoXing = 5;
      private int daoXing_ ;
      /**
       * <code>optional int32 daoXing = 5;</code>
       *
       * <pre>
       *道行
       * </pre>
       */
      public boolean hasDaoXing() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 daoXing = 5;</code>
       *
       * <pre>
       *道行
       * </pre>
       */
      public int getDaoXing() {
        return daoXing_;
      }
      /**
       * <code>optional int32 daoXing = 5;</code>
       *
       * <pre>
       *道行
       * </pre>
       */
      public Builder setDaoXing(int value) {
        bitField0_ |= 0x00000010;
        daoXing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 daoXing = 5;</code>
       *
       * <pre>
       *道行
       * </pre>
       */
      public Builder clearDaoXing() {
        bitField0_ = (bitField0_ & ~0x00000010);
        daoXing_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vip = 6;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000020;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 6;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional int64 gold = 7;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00000040;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 shengWang = 8;
      private int shengWang_ ;
      /**
       * <code>optional int32 shengWang = 8;</code>
       *
       * <pre>
       *声望
       * </pre>
       */
      public boolean hasShengWang() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 shengWang = 8;</code>
       *
       * <pre>
       *声望
       * </pre>
       */
      public int getShengWang() {
        return shengWang_;
      }
      /**
       * <code>optional int32 shengWang = 8;</code>
       *
       * <pre>
       *声望
       * </pre>
       */
      public Builder setShengWang(int value) {
        bitField0_ |= 0x00000080;
        shengWang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shengWang = 8;</code>
       *
       * <pre>
       *声望
       * </pre>
       */
      public Builder clearShengWang() {
        bitField0_ = (bitField0_ & ~0x00000080);
        shengWang_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xianYuan = 9;
      private int xianYuan_ ;
      /**
       * <code>optional int32 xianYuan = 9;</code>
       *
       * <pre>
       *仙缘
       * </pre>
       */
      public boolean hasXianYuan() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 xianYuan = 9;</code>
       *
       * <pre>
       *仙缘
       * </pre>
       */
      public int getXianYuan() {
        return xianYuan_;
      }
      /**
       * <code>optional int32 xianYuan = 9;</code>
       *
       * <pre>
       *仙缘
       * </pre>
       */
      public Builder setXianYuan(int value) {
        bitField0_ |= 0x00000100;
        xianYuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xianYuan = 9;</code>
       *
       * <pre>
       *仙缘
       * </pre>
       */
      public Builder clearXianYuan() {
        bitField0_ = (bitField0_ & ~0x00000100);
        xianYuan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bagsUnlockGold = 10;
      private int bagsUnlockGold_ ;
      /**
       * <code>optional int32 bagsUnlockGold = 10;</code>
       *
       * <pre>
       *金币解锁的背包数量
       * </pre>
       */
      public boolean hasBagsUnlockGold() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 bagsUnlockGold = 10;</code>
       *
       * <pre>
       *金币解锁的背包数量
       * </pre>
       */
      public int getBagsUnlockGold() {
        return bagsUnlockGold_;
      }
      /**
       * <code>optional int32 bagsUnlockGold = 10;</code>
       *
       * <pre>
       *金币解锁的背包数量
       * </pre>
       */
      public Builder setBagsUnlockGold(int value) {
        bitField0_ |= 0x00000200;
        bagsUnlockGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bagsUnlockGold = 10;</code>
       *
       * <pre>
       *金币解锁的背包数量
       * </pre>
       */
      public Builder clearBagsUnlockGold() {
        bitField0_ = (bitField0_ & ~0x00000200);
        bagsUnlockGold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 stamina = 11;
      private int stamina_ ;
      /**
       * <code>optional int32 stamina = 11;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public boolean hasStamina() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 stamina = 11;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public int getStamina() {
        return stamina_;
      }
      /**
       * <code>optional int32 stamina = 11;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public Builder setStamina(int value) {
        bitField0_ |= 0x00000400;
        stamina_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stamina = 11;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public Builder clearStamina() {
        bitField0_ = (bitField0_ & ~0x00000400);
        stamina_ = 0;
        onChanged();
        return this;
      }

      // optional int32 spirit = 12;
      private int spirit_ ;
      /**
       * <code>optional int32 spirit = 12;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public boolean hasSpirit() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 spirit = 12;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public int getSpirit() {
        return spirit_;
      }
      /**
       * <code>optional int32 spirit = 12;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public Builder setSpirit(int value) {
        bitField0_ |= 0x00000800;
        spirit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 spirit = 12;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public Builder clearSpirit() {
        bitField0_ = (bitField0_ & ~0x00000800);
        spirit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 friendsCost = 18;
      private int friendsCost_ ;
      /**
       * <code>optional int32 friendsCost = 18;</code>
       *
       * <pre>
       *付费增加的好友上限数量
       * </pre>
       */
      public boolean hasFriendsCost() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 friendsCost = 18;</code>
       *
       * <pre>
       *付费增加的好友上限数量
       * </pre>
       */
      public int getFriendsCost() {
        return friendsCost_;
      }
      /**
       * <code>optional int32 friendsCost = 18;</code>
       *
       * <pre>
       *付费增加的好友上限数量
       * </pre>
       */
      public Builder setFriendsCost(int value) {
        bitField0_ |= 0x00001000;
        friendsCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 friendsCost = 18;</code>
       *
       * <pre>
       *付费增加的好友上限数量
       * </pre>
       */
      public Builder clearFriendsCost() {
        bitField0_ = (bitField0_ & ~0x00001000);
        friendsCost_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trainFreeRenew = 19;
      private int trainFreeRenew_ ;
      /**
       * <code>optional int32 trainFreeRenew = 19;</code>
       *
       * <pre>
       *本日免费刷新修炼的次数
       * </pre>
       */
      public boolean hasTrainFreeRenew() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 trainFreeRenew = 19;</code>
       *
       * <pre>
       *本日免费刷新修炼的次数
       * </pre>
       */
      public int getTrainFreeRenew() {
        return trainFreeRenew_;
      }
      /**
       * <code>optional int32 trainFreeRenew = 19;</code>
       *
       * <pre>
       *本日免费刷新修炼的次数
       * </pre>
       */
      public Builder setTrainFreeRenew(int value) {
        bitField0_ |= 0x00002000;
        trainFreeRenew_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainFreeRenew = 19;</code>
       *
       * <pre>
       *本日免费刷新修炼的次数
       * </pre>
       */
      public Builder clearTrainFreeRenew() {
        bitField0_ = (bitField0_ & ~0x00002000);
        trainFreeRenew_ = 0;
        onChanged();
        return this;
      }

      // optional int64 receiveStaminaNum = 20;
      private long receiveStaminaNum_ ;
      /**
       * <code>optional int64 receiveStaminaNum = 20;</code>
       *
       * <pre>
       *本日已领取的赠送体力的数量,0点清0
       * </pre>
       */
      public boolean hasReceiveStaminaNum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 receiveStaminaNum = 20;</code>
       *
       * <pre>
       *本日已领取的赠送体力的数量,0点清0
       * </pre>
       */
      public long getReceiveStaminaNum() {
        return receiveStaminaNum_;
      }
      /**
       * <code>optional int64 receiveStaminaNum = 20;</code>
       *
       * <pre>
       *本日已领取的赠送体力的数量,0点清0
       * </pre>
       */
      public Builder setReceiveStaminaNum(long value) {
        bitField0_ |= 0x00004000;
        receiveStaminaNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 receiveStaminaNum = 20;</code>
       *
       * <pre>
       *本日已领取的赠送体力的数量,0点清0
       * </pre>
       */
      public Builder clearReceiveStaminaNum() {
        bitField0_ = (bitField0_ & ~0x00004000);
        receiveStaminaNum_ = 0L;
        onChanged();
        return this;
      }

      // repeated .MapItem todayQuestNums = 21;
      private java.util.List<myudfs.Common.MapItem> todayQuestNums_ =
        java.util.Collections.emptyList();
      private void ensureTodayQuestNumsIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          todayQuestNums_ = new java.util.ArrayList<myudfs.Common.MapItem>(todayQuestNums_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> todayQuestNumsBuilder_;

      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getTodayQuestNumsList() {
        if (todayQuestNumsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(todayQuestNums_);
        } else {
          return todayQuestNumsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public int getTodayQuestNumsCount() {
        if (todayQuestNumsBuilder_ == null) {
          return todayQuestNums_.size();
        } else {
          return todayQuestNumsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem getTodayQuestNums(int index) {
        if (todayQuestNumsBuilder_ == null) {
          return todayQuestNums_.get(index);
        } else {
          return todayQuestNumsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder setTodayQuestNums(
          int index, myudfs.Common.MapItem value) {
        if (todayQuestNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodayQuestNumsIsMutable();
          todayQuestNums_.set(index, value);
          onChanged();
        } else {
          todayQuestNumsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder setTodayQuestNums(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (todayQuestNumsBuilder_ == null) {
          ensureTodayQuestNumsIsMutable();
          todayQuestNums_.set(index, builderForValue.build());
          onChanged();
        } else {
          todayQuestNumsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder addTodayQuestNums(myudfs.Common.MapItem value) {
        if (todayQuestNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodayQuestNumsIsMutable();
          todayQuestNums_.add(value);
          onChanged();
        } else {
          todayQuestNumsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder addTodayQuestNums(
          int index, myudfs.Common.MapItem value) {
        if (todayQuestNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodayQuestNumsIsMutable();
          todayQuestNums_.add(index, value);
          onChanged();
        } else {
          todayQuestNumsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder addTodayQuestNums(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (todayQuestNumsBuilder_ == null) {
          ensureTodayQuestNumsIsMutable();
          todayQuestNums_.add(builderForValue.build());
          onChanged();
        } else {
          todayQuestNumsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder addTodayQuestNums(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (todayQuestNumsBuilder_ == null) {
          ensureTodayQuestNumsIsMutable();
          todayQuestNums_.add(index, builderForValue.build());
          onChanged();
        } else {
          todayQuestNumsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder addAllTodayQuestNums(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (todayQuestNumsBuilder_ == null) {
          ensureTodayQuestNumsIsMutable();
          super.addAll(values, todayQuestNums_);
          onChanged();
        } else {
          todayQuestNumsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder clearTodayQuestNums() {
        if (todayQuestNumsBuilder_ == null) {
          todayQuestNums_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          todayQuestNumsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public Builder removeTodayQuestNums(int index) {
        if (todayQuestNumsBuilder_ == null) {
          ensureTodayQuestNumsIsMutable();
          todayQuestNums_.remove(index);
          onChanged();
        } else {
          todayQuestNumsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getTodayQuestNumsBuilder(
          int index) {
        return getTodayQuestNumsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getTodayQuestNumsOrBuilder(
          int index) {
        if (todayQuestNumsBuilder_ == null) {
          return todayQuestNums_.get(index);  } else {
          return todayQuestNumsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getTodayQuestNumsOrBuilderList() {
        if (todayQuestNumsBuilder_ != null) {
          return todayQuestNumsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(todayQuestNums_);
        }
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addTodayQuestNumsBuilder() {
        return getTodayQuestNumsFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addTodayQuestNumsBuilder(
          int index) {
        return getTodayQuestNumsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem todayQuestNums = 21;</code>
       *
       * <pre>
       *本日已打关卡次数, key:关卡id
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getTodayQuestNumsBuilderList() {
        return getTodayQuestNumsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getTodayQuestNumsFieldBuilder() {
        if (todayQuestNumsBuilder_ == null) {
          todayQuestNumsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  todayQuestNums_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          todayQuestNums_ = null;
        }
        return todayQuestNumsBuilder_;
      }

      // repeated .MapItem todayQuestRestNums = 22;
      private java.util.List<myudfs.Common.MapItem> todayQuestRestNums_ =
        java.util.Collections.emptyList();
      private void ensureTodayQuestRestNumsIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          todayQuestRestNums_ = new java.util.ArrayList<myudfs.Common.MapItem>(todayQuestRestNums_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> todayQuestRestNumsBuilder_;

      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getTodayQuestRestNumsList() {
        if (todayQuestRestNumsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(todayQuestRestNums_);
        } else {
          return todayQuestRestNumsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public int getTodayQuestRestNumsCount() {
        if (todayQuestRestNumsBuilder_ == null) {
          return todayQuestRestNums_.size();
        } else {
          return todayQuestRestNumsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem getTodayQuestRestNums(int index) {
        if (todayQuestRestNumsBuilder_ == null) {
          return todayQuestRestNums_.get(index);
        } else {
          return todayQuestRestNumsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder setTodayQuestRestNums(
          int index, myudfs.Common.MapItem value) {
        if (todayQuestRestNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodayQuestRestNumsIsMutable();
          todayQuestRestNums_.set(index, value);
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder setTodayQuestRestNums(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (todayQuestRestNumsBuilder_ == null) {
          ensureTodayQuestRestNumsIsMutable();
          todayQuestRestNums_.set(index, builderForValue.build());
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder addTodayQuestRestNums(myudfs.Common.MapItem value) {
        if (todayQuestRestNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodayQuestRestNumsIsMutable();
          todayQuestRestNums_.add(value);
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder addTodayQuestRestNums(
          int index, myudfs.Common.MapItem value) {
        if (todayQuestRestNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodayQuestRestNumsIsMutable();
          todayQuestRestNums_.add(index, value);
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder addTodayQuestRestNums(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (todayQuestRestNumsBuilder_ == null) {
          ensureTodayQuestRestNumsIsMutable();
          todayQuestRestNums_.add(builderForValue.build());
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder addTodayQuestRestNums(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (todayQuestRestNumsBuilder_ == null) {
          ensureTodayQuestRestNumsIsMutable();
          todayQuestRestNums_.add(index, builderForValue.build());
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder addAllTodayQuestRestNums(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (todayQuestRestNumsBuilder_ == null) {
          ensureTodayQuestRestNumsIsMutable();
          super.addAll(values, todayQuestRestNums_);
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder clearTodayQuestRestNums() {
        if (todayQuestRestNumsBuilder_ == null) {
          todayQuestRestNums_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public Builder removeTodayQuestRestNums(int index) {
        if (todayQuestRestNumsBuilder_ == null) {
          ensureTodayQuestRestNumsIsMutable();
          todayQuestRestNums_.remove(index);
          onChanged();
        } else {
          todayQuestRestNumsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getTodayQuestRestNumsBuilder(
          int index) {
        return getTodayQuestRestNumsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getTodayQuestRestNumsOrBuilder(
          int index) {
        if (todayQuestRestNumsBuilder_ == null) {
          return todayQuestRestNums_.get(index);  } else {
          return todayQuestRestNumsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getTodayQuestRestNumsOrBuilderList() {
        if (todayQuestRestNumsBuilder_ != null) {
          return todayQuestRestNumsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(todayQuestRestNums_);
        }
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addTodayQuestRestNumsBuilder() {
        return getTodayQuestRestNumsFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addTodayQuestRestNumsBuilder(
          int index) {
        return getTodayQuestRestNumsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem todayQuestRestNums = 22;</code>
       *
       * <pre>
       *本日金币重置关卡次数,key:关卡id
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getTodayQuestRestNumsBuilderList() {
        return getTodayQuestRestNumsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getTodayQuestRestNumsFieldBuilder() {
        if (todayQuestRestNumsBuilder_ == null) {
          todayQuestRestNumsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  todayQuestRestNums_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          todayQuestRestNums_ = null;
        }
        return todayQuestRestNumsBuilder_;
      }

      // repeated int64 donateStamina = 24;
      private java.util.List<java.lang.Long> donateStamina_ = java.util.Collections.emptyList();
      private void ensureDonateStaminaIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          donateStamina_ = new java.util.ArrayList<java.lang.Long>(donateStamina_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int64 donateStamina = 24;</code>
       *
       * <pre>
       *本日已经赠送过体力的好友，这里是好友id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getDonateStaminaList() {
        return java.util.Collections.unmodifiableList(donateStamina_);
      }
      /**
       * <code>repeated int64 donateStamina = 24;</code>
       *
       * <pre>
       *本日已经赠送过体力的好友，这里是好友id
       * </pre>
       */
      public int getDonateStaminaCount() {
        return donateStamina_.size();
      }
      /**
       * <code>repeated int64 donateStamina = 24;</code>
       *
       * <pre>
       *本日已经赠送过体力的好友，这里是好友id
       * </pre>
       */
      public long getDonateStamina(int index) {
        return donateStamina_.get(index);
      }
      /**
       * <code>repeated int64 donateStamina = 24;</code>
       *
       * <pre>
       *本日已经赠送过体力的好友，这里是好友id
       * </pre>
       */
      public Builder setDonateStamina(
          int index, long value) {
        ensureDonateStaminaIsMutable();
        donateStamina_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 donateStamina = 24;</code>
       *
       * <pre>
       *本日已经赠送过体力的好友，这里是好友id
       * </pre>
       */
      public Builder addDonateStamina(long value) {
        ensureDonateStaminaIsMutable();
        donateStamina_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 donateStamina = 24;</code>
       *
       * <pre>
       *本日已经赠送过体力的好友，这里是好友id
       * </pre>
       */
      public Builder addAllDonateStamina(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDonateStaminaIsMutable();
        super.addAll(values, donateStamina_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 donateStamina = 24;</code>
       *
       * <pre>
       *本日已经赠送过体力的好友，这里是好友id
       * </pre>
       */
      public Builder clearDonateStamina() {
        donateStamina_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated int64 receiveStamina = 25;
      private java.util.List<java.lang.Long> receiveStamina_ = java.util.Collections.emptyList();
      private void ensureReceiveStaminaIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          receiveStamina_ = new java.util.ArrayList<java.lang.Long>(receiveStamina_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int64 receiveStamina = 25;</code>
       *
       * <pre>
       *收到的赠送的体力,这里放的是好友id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getReceiveStaminaList() {
        return java.util.Collections.unmodifiableList(receiveStamina_);
      }
      /**
       * <code>repeated int64 receiveStamina = 25;</code>
       *
       * <pre>
       *收到的赠送的体力,这里放的是好友id
       * </pre>
       */
      public int getReceiveStaminaCount() {
        return receiveStamina_.size();
      }
      /**
       * <code>repeated int64 receiveStamina = 25;</code>
       *
       * <pre>
       *收到的赠送的体力,这里放的是好友id
       * </pre>
       */
      public long getReceiveStamina(int index) {
        return receiveStamina_.get(index);
      }
      /**
       * <code>repeated int64 receiveStamina = 25;</code>
       *
       * <pre>
       *收到的赠送的体力,这里放的是好友id
       * </pre>
       */
      public Builder setReceiveStamina(
          int index, long value) {
        ensureReceiveStaminaIsMutable();
        receiveStamina_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receiveStamina = 25;</code>
       *
       * <pre>
       *收到的赠送的体力,这里放的是好友id
       * </pre>
       */
      public Builder addReceiveStamina(long value) {
        ensureReceiveStaminaIsMutable();
        receiveStamina_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receiveStamina = 25;</code>
       *
       * <pre>
       *收到的赠送的体力,这里放的是好友id
       * </pre>
       */
      public Builder addAllReceiveStamina(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureReceiveStaminaIsMutable();
        super.addAll(values, receiveStamina_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receiveStamina = 25;</code>
       *
       * <pre>
       *收到的赠送的体力,这里放的是好友id
       * </pre>
       */
      public Builder clearReceiveStamina() {
        receiveStamina_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // optional uint64 staminaDate = 26;
      private long staminaDate_ ;
      /**
       * <code>optional uint64 staminaDate = 26;</code>
       *
       * <pre>
       *体力开始恢复的时间
       * </pre>
       */
      public boolean hasStaminaDate() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint64 staminaDate = 26;</code>
       *
       * <pre>
       *体力开始恢复的时间
       * </pre>
       */
      public long getStaminaDate() {
        return staminaDate_;
      }
      /**
       * <code>optional uint64 staminaDate = 26;</code>
       *
       * <pre>
       *体力开始恢复的时间
       * </pre>
       */
      public Builder setStaminaDate(long value) {
        bitField0_ |= 0x00080000;
        staminaDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 staminaDate = 26;</code>
       *
       * <pre>
       *体力开始恢复的时间
       * </pre>
       */
      public Builder clearStaminaDate() {
        bitField0_ = (bitField0_ & ~0x00080000);
        staminaDate_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 friendId = 27;
      private java.util.List<java.lang.Long> friendId_ = java.util.Collections.emptyList();
      private void ensureFriendIdIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          friendId_ = new java.util.ArrayList<java.lang.Long>(friendId_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int64 friendId = 27;</code>
       *
       * <pre>
       *好友id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFriendIdList() {
        return java.util.Collections.unmodifiableList(friendId_);
      }
      /**
       * <code>repeated int64 friendId = 27;</code>
       *
       * <pre>
       *好友id
       * </pre>
       */
      public int getFriendIdCount() {
        return friendId_.size();
      }
      /**
       * <code>repeated int64 friendId = 27;</code>
       *
       * <pre>
       *好友id
       * </pre>
       */
      public long getFriendId(int index) {
        return friendId_.get(index);
      }
      /**
       * <code>repeated int64 friendId = 27;</code>
       *
       * <pre>
       *好友id
       * </pre>
       */
      public Builder setFriendId(
          int index, long value) {
        ensureFriendIdIsMutable();
        friendId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 friendId = 27;</code>
       *
       * <pre>
       *好友id
       * </pre>
       */
      public Builder addFriendId(long value) {
        ensureFriendIdIsMutable();
        friendId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 friendId = 27;</code>
       *
       * <pre>
       *好友id
       * </pre>
       */
      public Builder addAllFriendId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFriendIdIsMutable();
        super.addAll(values, friendId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 friendId = 27;</code>
       *
       * <pre>
       *好友id
       * </pre>
       */
      public Builder clearFriendId() {
        friendId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // optional uint64 loginDate = 28;
      private long loginDate_ ;
      /**
       * <code>optional uint64 loginDate = 28;</code>
       *
       * <pre>
       * 上线时间
       * </pre>
       */
      public boolean hasLoginDate() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint64 loginDate = 28;</code>
       *
       * <pre>
       * 上线时间
       * </pre>
       */
      public long getLoginDate() {
        return loginDate_;
      }
      /**
       * <code>optional uint64 loginDate = 28;</code>
       *
       * <pre>
       * 上线时间
       * </pre>
       */
      public Builder setLoginDate(long value) {
        bitField0_ |= 0x00200000;
        loginDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loginDate = 28;</code>
       *
       * <pre>
       * 上线时间
       * </pre>
       */
      public Builder clearLoginDate() {
        bitField0_ = (bitField0_ & ~0x00200000);
        loginDate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 onlineTime = 29;
      private long onlineTime_ ;
      /**
       * <code>optional uint64 onlineTime = 29;</code>
       *
       * <pre>
       * 已在线时间
       * </pre>
       */
      public boolean hasOnlineTime() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint64 onlineTime = 29;</code>
       *
       * <pre>
       * 已在线时间
       * </pre>
       */
      public long getOnlineTime() {
        return onlineTime_;
      }
      /**
       * <code>optional uint64 onlineTime = 29;</code>
       *
       * <pre>
       * 已在线时间
       * </pre>
       */
      public Builder setOnlineTime(long value) {
        bitField0_ |= 0x00400000;
        onlineTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 onlineTime = 29;</code>
       *
       * <pre>
       * 已在线时间
       * </pre>
       */
      public Builder clearOnlineTime() {
        bitField0_ = (bitField0_ & ~0x00400000);
        onlineTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 bagsUnlockGoldCd = 30;
      private long bagsUnlockGoldCd_ ;
      /**
       * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
       *
       * <pre>
       * 元宝解锁减少的cd时间
       * </pre>
       */
      public boolean hasBagsUnlockGoldCd() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
       *
       * <pre>
       * 元宝解锁减少的cd时间
       * </pre>
       */
      public long getBagsUnlockGoldCd() {
        return bagsUnlockGoldCd_;
      }
      /**
       * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
       *
       * <pre>
       * 元宝解锁减少的cd时间
       * </pre>
       */
      public Builder setBagsUnlockGoldCd(long value) {
        bitField0_ |= 0x00800000;
        bagsUnlockGoldCd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 bagsUnlockGoldCd = 30;</code>
       *
       * <pre>
       * 元宝解锁减少的cd时间
       * </pre>
       */
      public Builder clearBagsUnlockGoldCd() {
        bitField0_ = (bitField0_ & ~0x00800000);
        bagsUnlockGoldCd_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 coin = 31;
      private long coin_ ;
      /**
       * <code>optional int64 coin = 31;</code>
       *
       * <pre>
       *元气
       * </pre>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 coin = 31;</code>
       *
       * <pre>
       *元气
       * </pre>
       */
      public long getCoin() {
        return coin_;
      }
      /**
       * <code>optional int64 coin = 31;</code>
       *
       * <pre>
       *元气
       * </pre>
       */
      public Builder setCoin(long value) {
        bitField0_ |= 0x01000000;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 coin = 31;</code>
       *
       * <pre>
       *元气
       * </pre>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x01000000);
        coin_ = 0L;
        onChanged();
        return this;
      }

      // repeated .MapItem moonStarItem = 32;
      private java.util.List<myudfs.Common.MapItem> moonStarItem_ =
        java.util.Collections.emptyList();
      private void ensureMoonStarItemIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          moonStarItem_ = new java.util.ArrayList<myudfs.Common.MapItem>(moonStarItem_);
          bitField0_ |= 0x02000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> moonStarItemBuilder_;

      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getMoonStarItemList() {
        if (moonStarItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(moonStarItem_);
        } else {
          return moonStarItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public int getMoonStarItemCount() {
        if (moonStarItemBuilder_ == null) {
          return moonStarItem_.size();
        } else {
          return moonStarItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public myudfs.Common.MapItem getMoonStarItem(int index) {
        if (moonStarItemBuilder_ == null) {
          return moonStarItem_.get(index);
        } else {
          return moonStarItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder setMoonStarItem(
          int index, myudfs.Common.MapItem value) {
        if (moonStarItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoonStarItemIsMutable();
          moonStarItem_.set(index, value);
          onChanged();
        } else {
          moonStarItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder setMoonStarItem(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (moonStarItemBuilder_ == null) {
          ensureMoonStarItemIsMutable();
          moonStarItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          moonStarItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder addMoonStarItem(myudfs.Common.MapItem value) {
        if (moonStarItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoonStarItemIsMutable();
          moonStarItem_.add(value);
          onChanged();
        } else {
          moonStarItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder addMoonStarItem(
          int index, myudfs.Common.MapItem value) {
        if (moonStarItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoonStarItemIsMutable();
          moonStarItem_.add(index, value);
          onChanged();
        } else {
          moonStarItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder addMoonStarItem(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (moonStarItemBuilder_ == null) {
          ensureMoonStarItemIsMutable();
          moonStarItem_.add(builderForValue.build());
          onChanged();
        } else {
          moonStarItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder addMoonStarItem(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (moonStarItemBuilder_ == null) {
          ensureMoonStarItemIsMutable();
          moonStarItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          moonStarItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder addAllMoonStarItem(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (moonStarItemBuilder_ == null) {
          ensureMoonStarItemIsMutable();
          super.addAll(values, moonStarItem_);
          onChanged();
        } else {
          moonStarItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder clearMoonStarItem() {
        if (moonStarItemBuilder_ == null) {
          moonStarItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x02000000);
          onChanged();
        } else {
          moonStarItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public Builder removeMoonStarItem(int index) {
        if (moonStarItemBuilder_ == null) {
          ensureMoonStarItemIsMutable();
          moonStarItem_.remove(index);
          onChanged();
        } else {
          moonStarItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getMoonStarItemBuilder(
          int index) {
        return getMoonStarItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getMoonStarItemOrBuilder(
          int index) {
        if (moonStarItemBuilder_ == null) {
          return moonStarItem_.get(index);  } else {
          return moonStarItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getMoonStarItemOrBuilderList() {
        if (moonStarItemBuilder_ != null) {
          return moonStarItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(moonStarItem_);
        }
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addMoonStarItemBuilder() {
        return getMoonStarItemFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addMoonStarItemBuilder(
          int index) {
        return getMoonStarItemFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem moonStarItem = 32;</code>
       *
       * <pre>
       * 月光宝盒 key：moonStartId  value:星点等级
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getMoonStarItemBuilderList() {
        return getMoonStarItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getMoonStarItemFieldBuilder() {
        if (moonStarItemBuilder_ == null) {
          moonStarItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  moonStarItem_,
                  ((bitField0_ & 0x02000000) == 0x02000000),
                  getParentForChildren(),
                  isClean());
          moonStarItem_ = null;
        }
        return moonStarItemBuilder_;
      }

      // repeated .MapItem magicWeapons = 33;
      private java.util.List<myudfs.Common.MapItem> magicWeapons_ =
        java.util.Collections.emptyList();
      private void ensureMagicWeaponsIsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          magicWeapons_ = new java.util.ArrayList<myudfs.Common.MapItem>(magicWeapons_);
          bitField0_ |= 0x04000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> magicWeaponsBuilder_;

      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getMagicWeaponsList() {
        if (magicWeaponsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(magicWeapons_);
        } else {
          return magicWeaponsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public int getMagicWeaponsCount() {
        if (magicWeaponsBuilder_ == null) {
          return magicWeapons_.size();
        } else {
          return magicWeaponsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public myudfs.Common.MapItem getMagicWeapons(int index) {
        if (magicWeaponsBuilder_ == null) {
          return magicWeapons_.get(index);
        } else {
          return magicWeaponsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder setMagicWeapons(
          int index, myudfs.Common.MapItem value) {
        if (magicWeaponsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMagicWeaponsIsMutable();
          magicWeapons_.set(index, value);
          onChanged();
        } else {
          magicWeaponsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder setMagicWeapons(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (magicWeaponsBuilder_ == null) {
          ensureMagicWeaponsIsMutable();
          magicWeapons_.set(index, builderForValue.build());
          onChanged();
        } else {
          magicWeaponsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder addMagicWeapons(myudfs.Common.MapItem value) {
        if (magicWeaponsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMagicWeaponsIsMutable();
          magicWeapons_.add(value);
          onChanged();
        } else {
          magicWeaponsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder addMagicWeapons(
          int index, myudfs.Common.MapItem value) {
        if (magicWeaponsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMagicWeaponsIsMutable();
          magicWeapons_.add(index, value);
          onChanged();
        } else {
          magicWeaponsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder addMagicWeapons(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (magicWeaponsBuilder_ == null) {
          ensureMagicWeaponsIsMutable();
          magicWeapons_.add(builderForValue.build());
          onChanged();
        } else {
          magicWeaponsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder addMagicWeapons(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (magicWeaponsBuilder_ == null) {
          ensureMagicWeaponsIsMutable();
          magicWeapons_.add(index, builderForValue.build());
          onChanged();
        } else {
          magicWeaponsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder addAllMagicWeapons(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (magicWeaponsBuilder_ == null) {
          ensureMagicWeaponsIsMutable();
          super.addAll(values, magicWeapons_);
          onChanged();
        } else {
          magicWeaponsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder clearMagicWeapons() {
        if (magicWeaponsBuilder_ == null) {
          magicWeapons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
          onChanged();
        } else {
          magicWeaponsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public Builder removeMagicWeapons(int index) {
        if (magicWeaponsBuilder_ == null) {
          ensureMagicWeaponsIsMutable();
          magicWeapons_.remove(index);
          onChanged();
        } else {
          magicWeaponsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getMagicWeaponsBuilder(
          int index) {
        return getMagicWeaponsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getMagicWeaponsOrBuilder(
          int index) {
        if (magicWeaponsBuilder_ == null) {
          return magicWeapons_.get(index);  } else {
          return magicWeaponsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getMagicWeaponsOrBuilderList() {
        if (magicWeaponsBuilder_ != null) {
          return magicWeaponsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(magicWeapons_);
        }
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addMagicWeaponsBuilder() {
        return getMagicWeaponsFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addMagicWeaponsBuilder(
          int index) {
        return getMagicWeaponsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem magicWeapons = 33;</code>
       *
       * <pre>
       *法宝
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getMagicWeaponsBuilderList() {
        return getMagicWeaponsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getMagicWeaponsFieldBuilder() {
        if (magicWeaponsBuilder_ == null) {
          magicWeaponsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  magicWeapons_,
                  ((bitField0_ & 0x04000000) == 0x04000000),
                  getParentForChildren(),
                  isClean());
          magicWeapons_ = null;
        }
        return magicWeaponsBuilder_;
      }

      // repeated .MapDateItem drawCardDate = 36;
      private java.util.List<myudfs.Common.MapDateItem> drawCardDate_ =
        java.util.Collections.emptyList();
      private void ensureDrawCardDateIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          drawCardDate_ = new java.util.ArrayList<myudfs.Common.MapDateItem>(drawCardDate_);
          bitField0_ |= 0x08000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapDateItem, myudfs.Common.MapDateItem.Builder, myudfs.Common.MapDateItemOrBuilder> drawCardDateBuilder_;

      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public java.util.List<myudfs.Common.MapDateItem> getDrawCardDateList() {
        if (drawCardDateBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drawCardDate_);
        } else {
          return drawCardDateBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public int getDrawCardDateCount() {
        if (drawCardDateBuilder_ == null) {
          return drawCardDate_.size();
        } else {
          return drawCardDateBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public myudfs.Common.MapDateItem getDrawCardDate(int index) {
        if (drawCardDateBuilder_ == null) {
          return drawCardDate_.get(index);
        } else {
          return drawCardDateBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder setDrawCardDate(
          int index, myudfs.Common.MapDateItem value) {
        if (drawCardDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardDateIsMutable();
          drawCardDate_.set(index, value);
          onChanged();
        } else {
          drawCardDateBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder setDrawCardDate(
          int index, myudfs.Common.MapDateItem.Builder builderForValue) {
        if (drawCardDateBuilder_ == null) {
          ensureDrawCardDateIsMutable();
          drawCardDate_.set(index, builderForValue.build());
          onChanged();
        } else {
          drawCardDateBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder addDrawCardDate(myudfs.Common.MapDateItem value) {
        if (drawCardDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardDateIsMutable();
          drawCardDate_.add(value);
          onChanged();
        } else {
          drawCardDateBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder addDrawCardDate(
          int index, myudfs.Common.MapDateItem value) {
        if (drawCardDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardDateIsMutable();
          drawCardDate_.add(index, value);
          onChanged();
        } else {
          drawCardDateBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder addDrawCardDate(
          myudfs.Common.MapDateItem.Builder builderForValue) {
        if (drawCardDateBuilder_ == null) {
          ensureDrawCardDateIsMutable();
          drawCardDate_.add(builderForValue.build());
          onChanged();
        } else {
          drawCardDateBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder addDrawCardDate(
          int index, myudfs.Common.MapDateItem.Builder builderForValue) {
        if (drawCardDateBuilder_ == null) {
          ensureDrawCardDateIsMutable();
          drawCardDate_.add(index, builderForValue.build());
          onChanged();
        } else {
          drawCardDateBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder addAllDrawCardDate(
          java.lang.Iterable<? extends myudfs.Common.MapDateItem> values) {
        if (drawCardDateBuilder_ == null) {
          ensureDrawCardDateIsMutable();
          super.addAll(values, drawCardDate_);
          onChanged();
        } else {
          drawCardDateBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder clearDrawCardDate() {
        if (drawCardDateBuilder_ == null) {
          drawCardDate_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
          onChanged();
        } else {
          drawCardDateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public Builder removeDrawCardDate(int index) {
        if (drawCardDateBuilder_ == null) {
          ensureDrawCardDateIsMutable();
          drawCardDate_.remove(index);
          onChanged();
        } else {
          drawCardDateBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public myudfs.Common.MapDateItem.Builder getDrawCardDateBuilder(
          int index) {
        return getDrawCardDateFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public myudfs.Common.MapDateItemOrBuilder getDrawCardDateOrBuilder(
          int index) {
        if (drawCardDateBuilder_ == null) {
          return drawCardDate_.get(index);  } else {
          return drawCardDateBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapDateItemOrBuilder> 
           getDrawCardDateOrBuilderList() {
        if (drawCardDateBuilder_ != null) {
          return drawCardDateBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drawCardDate_);
        }
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public myudfs.Common.MapDateItem.Builder addDrawCardDateBuilder() {
        return getDrawCardDateFieldBuilder().addBuilder(
            myudfs.Common.MapDateItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public myudfs.Common.MapDateItem.Builder addDrawCardDateBuilder(
          int index) {
        return getDrawCardDateFieldBuilder().addBuilder(
            index, myudfs.Common.MapDateItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapDateItem drawCardDate = 36;</code>
       *
       * <pre>
       *三种卡包上次免费抽卡时间
       * </pre>
       */
      public java.util.List<myudfs.Common.MapDateItem.Builder> 
           getDrawCardDateBuilderList() {
        return getDrawCardDateFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapDateItem, myudfs.Common.MapDateItem.Builder, myudfs.Common.MapDateItemOrBuilder> 
          getDrawCardDateFieldBuilder() {
        if (drawCardDateBuilder_ == null) {
          drawCardDateBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapDateItem, myudfs.Common.MapDateItem.Builder, myudfs.Common.MapDateItemOrBuilder>(
                  drawCardDate_,
                  ((bitField0_ & 0x08000000) == 0x08000000),
                  getParentForChildren(),
                  isClean());
          drawCardDate_ = null;
        }
        return drawCardDateBuilder_;
      }

      // optional int32 firstPay = 37;
      private int firstPay_ ;
      /**
       * <code>optional int32 firstPay = 37;</code>
       *
       * <pre>
       * 0:无首充抽卡 1:有首充抽卡
       * </pre>
       */
      public boolean hasFirstPay() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 firstPay = 37;</code>
       *
       * <pre>
       * 0:无首充抽卡 1:有首充抽卡
       * </pre>
       */
      public int getFirstPay() {
        return firstPay_;
      }
      /**
       * <code>optional int32 firstPay = 37;</code>
       *
       * <pre>
       * 0:无首充抽卡 1:有首充抽卡
       * </pre>
       */
      public Builder setFirstPay(int value) {
        bitField0_ |= 0x10000000;
        firstPay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 firstPay = 37;</code>
       *
       * <pre>
       * 0:无首充抽卡 1:有首充抽卡
       * </pre>
       */
      public Builder clearFirstPay() {
        bitField0_ = (bitField0_ & ~0x10000000);
        firstPay_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 firstPayIds = 38;
      private java.util.List<java.lang.Integer> firstPayIds_ = java.util.Collections.emptyList();
      private void ensureFirstPayIdsIsMutable() {
        if (!((bitField0_ & 0x20000000) == 0x20000000)) {
          firstPayIds_ = new java.util.ArrayList<java.lang.Integer>(firstPayIds_);
          bitField0_ |= 0x20000000;
         }
      }
      /**
       * <code>repeated int32 firstPayIds = 38;</code>
       *
       * <pre>
       * 已经抽过首充抽卡的卡包id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFirstPayIdsList() {
        return java.util.Collections.unmodifiableList(firstPayIds_);
      }
      /**
       * <code>repeated int32 firstPayIds = 38;</code>
       *
       * <pre>
       * 已经抽过首充抽卡的卡包id
       * </pre>
       */
      public int getFirstPayIdsCount() {
        return firstPayIds_.size();
      }
      /**
       * <code>repeated int32 firstPayIds = 38;</code>
       *
       * <pre>
       * 已经抽过首充抽卡的卡包id
       * </pre>
       */
      public int getFirstPayIds(int index) {
        return firstPayIds_.get(index);
      }
      /**
       * <code>repeated int32 firstPayIds = 38;</code>
       *
       * <pre>
       * 已经抽过首充抽卡的卡包id
       * </pre>
       */
      public Builder setFirstPayIds(
          int index, int value) {
        ensureFirstPayIdsIsMutable();
        firstPayIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstPayIds = 38;</code>
       *
       * <pre>
       * 已经抽过首充抽卡的卡包id
       * </pre>
       */
      public Builder addFirstPayIds(int value) {
        ensureFirstPayIdsIsMutable();
        firstPayIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstPayIds = 38;</code>
       *
       * <pre>
       * 已经抽过首充抽卡的卡包id
       * </pre>
       */
      public Builder addAllFirstPayIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFirstPayIdsIsMutable();
        super.addAll(values, firstPayIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstPayIds = 38;</code>
       *
       * <pre>
       * 已经抽过首充抽卡的卡包id
       * </pre>
       */
      public Builder clearFirstPayIds() {
        firstPayIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x20000000);
        onChanged();
        return this;
      }

      // optional uint64 spiritDate = 39;
      private long spiritDate_ ;
      /**
       * <code>optional uint64 spiritDate = 39;</code>
       *
       * <pre>
       * 精力开始恢复的时间
       * </pre>
       */
      public boolean hasSpiritDate() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint64 spiritDate = 39;</code>
       *
       * <pre>
       * 精力开始恢复的时间
       * </pre>
       */
      public long getSpiritDate() {
        return spiritDate_;
      }
      /**
       * <code>optional uint64 spiritDate = 39;</code>
       *
       * <pre>
       * 精力开始恢复的时间
       * </pre>
       */
      public Builder setSpiritDate(long value) {
        bitField0_ |= 0x40000000;
        spiritDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 spiritDate = 39;</code>
       *
       * <pre>
       * 精力开始恢复的时间
       * </pre>
       */
      public Builder clearSpiritDate() {
        bitField0_ = (bitField0_ & ~0x40000000);
        spiritDate_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 worshipTimes = 40;
      private int worshipTimes_ ;
      /**
       * <code>optional int32 worshipTimes = 40;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public boolean hasWorshipTimes() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 worshipTimes = 40;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public int getWorshipTimes() {
        return worshipTimes_;
      }
      /**
       * <code>optional int32 worshipTimes = 40;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public Builder setWorshipTimes(int value) {
        bitField0_ |= 0x80000000;
        worshipTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 worshipTimes = 40;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public Builder clearWorshipTimes() {
        bitField0_ = (bitField0_ & ~0x80000000);
        worshipTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 worshipIds = 41;
      private java.util.List<java.lang.Long> worshipIds_ = java.util.Collections.emptyList();
      private void ensureWorshipIdsIsMutable() {
        if (!((bitField1_ & 0x00000001) == 0x00000001)) {
          worshipIds_ = new java.util.ArrayList<java.lang.Long>(worshipIds_);
          bitField1_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 worshipIds = 41;</code>
       *
       * <pre>
       *膜拜过的玩家
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getWorshipIdsList() {
        return java.util.Collections.unmodifiableList(worshipIds_);
      }
      /**
       * <code>repeated int64 worshipIds = 41;</code>
       *
       * <pre>
       *膜拜过的玩家
       * </pre>
       */
      public int getWorshipIdsCount() {
        return worshipIds_.size();
      }
      /**
       * <code>repeated int64 worshipIds = 41;</code>
       *
       * <pre>
       *膜拜过的玩家
       * </pre>
       */
      public long getWorshipIds(int index) {
        return worshipIds_.get(index);
      }
      /**
       * <code>repeated int64 worshipIds = 41;</code>
       *
       * <pre>
       *膜拜过的玩家
       * </pre>
       */
      public Builder setWorshipIds(
          int index, long value) {
        ensureWorshipIdsIsMutable();
        worshipIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 worshipIds = 41;</code>
       *
       * <pre>
       *膜拜过的玩家
       * </pre>
       */
      public Builder addWorshipIds(long value) {
        ensureWorshipIdsIsMutable();
        worshipIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 worshipIds = 41;</code>
       *
       * <pre>
       *膜拜过的玩家
       * </pre>
       */
      public Builder addAllWorshipIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureWorshipIdsIsMutable();
        super.addAll(values, worshipIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 worshipIds = 41;</code>
       *
       * <pre>
       *膜拜过的玩家
       * </pre>
       */
      public Builder clearWorshipIds() {
        worshipIds_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional uint64 gainRewardTime = 42;
      private long gainRewardTime_ ;
      /**
       * <code>optional uint64 gainRewardTime = 42;</code>
       *
       * <pre>
       *领取结算奖励的时间
       * </pre>
       */
      public boolean hasGainRewardTime() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 gainRewardTime = 42;</code>
       *
       * <pre>
       *领取结算奖励的时间
       * </pre>
       */
      public long getGainRewardTime() {
        return gainRewardTime_;
      }
      /**
       * <code>optional uint64 gainRewardTime = 42;</code>
       *
       * <pre>
       *领取结算奖励的时间
       * </pre>
       */
      public Builder setGainRewardTime(long value) {
        bitField1_ |= 0x00000002;
        gainRewardTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gainRewardTime = 42;</code>
       *
       * <pre>
       *领取结算奖励的时间
       * </pre>
       */
      public Builder clearGainRewardTime() {
        bitField1_ = (bitField1_ & ~0x00000002);
        gainRewardTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 exchangeTimes = 43;
      private java.util.List<java.lang.Integer> exchangeTimes_ = java.util.Collections.emptyList();
      private void ensureExchangeTimesIsMutable() {
        if (!((bitField1_ & 0x00000004) == 0x00000004)) {
          exchangeTimes_ = new java.util.ArrayList<java.lang.Integer>(exchangeTimes_);
          bitField1_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 exchangeTimes = 43;</code>
       *
       * <pre>
       *兑换次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getExchangeTimesList() {
        return java.util.Collections.unmodifiableList(exchangeTimes_);
      }
      /**
       * <code>repeated int32 exchangeTimes = 43;</code>
       *
       * <pre>
       *兑换次数
       * </pre>
       */
      public int getExchangeTimesCount() {
        return exchangeTimes_.size();
      }
      /**
       * <code>repeated int32 exchangeTimes = 43;</code>
       *
       * <pre>
       *兑换次数
       * </pre>
       */
      public int getExchangeTimes(int index) {
        return exchangeTimes_.get(index);
      }
      /**
       * <code>repeated int32 exchangeTimes = 43;</code>
       *
       * <pre>
       *兑换次数
       * </pre>
       */
      public Builder setExchangeTimes(
          int index, int value) {
        ensureExchangeTimesIsMutable();
        exchangeTimes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 exchangeTimes = 43;</code>
       *
       * <pre>
       *兑换次数
       * </pre>
       */
      public Builder addExchangeTimes(int value) {
        ensureExchangeTimesIsMutable();
        exchangeTimes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 exchangeTimes = 43;</code>
       *
       * <pre>
       *兑换次数
       * </pre>
       */
      public Builder addAllExchangeTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExchangeTimesIsMutable();
        super.addAll(values, exchangeTimes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 exchangeTimes = 43;</code>
       *
       * <pre>
       *兑换次数
       * </pre>
       */
      public Builder clearExchangeTimes() {
        exchangeTimes_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int64 mails = 44;
      private java.util.List<java.lang.Long> mails_ = java.util.Collections.emptyList();
      private void ensureMailsIsMutable() {
        if (!((bitField1_ & 0x00000008) == 0x00000008)) {
          mails_ = new java.util.ArrayList<java.lang.Long>(mails_);
          bitField1_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 mails = 44;</code>
       */
      public java.util.List<java.lang.Long>
          getMailsList() {
        return java.util.Collections.unmodifiableList(mails_);
      }
      /**
       * <code>repeated int64 mails = 44;</code>
       */
      public int getMailsCount() {
        return mails_.size();
      }
      /**
       * <code>repeated int64 mails = 44;</code>
       */
      public long getMails(int index) {
        return mails_.get(index);
      }
      /**
       * <code>repeated int64 mails = 44;</code>
       */
      public Builder setMails(
          int index, long value) {
        ensureMailsIsMutable();
        mails_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mails = 44;</code>
       */
      public Builder addMails(long value) {
        ensureMailsIsMutable();
        mails_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mails = 44;</code>
       */
      public Builder addAllMails(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMailsIsMutable();
        super.addAll(values, mails_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mails = 44;</code>
       */
      public Builder clearMails() {
        mails_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int64 mailFinished = 45;
      private java.util.List<java.lang.Long> mailFinished_ = java.util.Collections.emptyList();
      private void ensureMailFinishedIsMutable() {
        if (!((bitField1_ & 0x00000010) == 0x00000010)) {
          mailFinished_ = new java.util.ArrayList<java.lang.Long>(mailFinished_);
          bitField1_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int64 mailFinished = 45;</code>
       */
      public java.util.List<java.lang.Long>
          getMailFinishedList() {
        return java.util.Collections.unmodifiableList(mailFinished_);
      }
      /**
       * <code>repeated int64 mailFinished = 45;</code>
       */
      public int getMailFinishedCount() {
        return mailFinished_.size();
      }
      /**
       * <code>repeated int64 mailFinished = 45;</code>
       */
      public long getMailFinished(int index) {
        return mailFinished_.get(index);
      }
      /**
       * <code>repeated int64 mailFinished = 45;</code>
       */
      public Builder setMailFinished(
          int index, long value) {
        ensureMailFinishedIsMutable();
        mailFinished_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mailFinished = 45;</code>
       */
      public Builder addMailFinished(long value) {
        ensureMailFinishedIsMutable();
        mailFinished_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mailFinished = 45;</code>
       */
      public Builder addAllMailFinished(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMailFinishedIsMutable();
        super.addAll(values, mailFinished_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mailFinished = 45;</code>
       */
      public Builder clearMailFinished() {
        mailFinished_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int64 mailDeleted = 46;
      private java.util.List<java.lang.Long> mailDeleted_ = java.util.Collections.emptyList();
      private void ensureMailDeletedIsMutable() {
        if (!((bitField1_ & 0x00000020) == 0x00000020)) {
          mailDeleted_ = new java.util.ArrayList<java.lang.Long>(mailDeleted_);
          bitField1_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int64 mailDeleted = 46;</code>
       */
      public java.util.List<java.lang.Long>
          getMailDeletedList() {
        return java.util.Collections.unmodifiableList(mailDeleted_);
      }
      /**
       * <code>repeated int64 mailDeleted = 46;</code>
       */
      public int getMailDeletedCount() {
        return mailDeleted_.size();
      }
      /**
       * <code>repeated int64 mailDeleted = 46;</code>
       */
      public long getMailDeleted(int index) {
        return mailDeleted_.get(index);
      }
      /**
       * <code>repeated int64 mailDeleted = 46;</code>
       */
      public Builder setMailDeleted(
          int index, long value) {
        ensureMailDeletedIsMutable();
        mailDeleted_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mailDeleted = 46;</code>
       */
      public Builder addMailDeleted(long value) {
        ensureMailDeletedIsMutable();
        mailDeleted_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mailDeleted = 46;</code>
       */
      public Builder addAllMailDeleted(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMailDeletedIsMutable();
        super.addAll(values, mailDeleted_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 mailDeleted = 46;</code>
       */
      public Builder clearMailDeleted() {
        mailDeleted_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated .PvpFightResultItem pvpFightResult = 47;
      private java.util.List<myudfs.Common.PvpFightResultItem> pvpFightResult_ =
        java.util.Collections.emptyList();
      private void ensurePvpFightResultIsMutable() {
        if (!((bitField1_ & 0x00000040) == 0x00000040)) {
          pvpFightResult_ = new java.util.ArrayList<myudfs.Common.PvpFightResultItem>(pvpFightResult_);
          bitField1_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PvpFightResultItem, myudfs.Common.PvpFightResultItem.Builder, myudfs.Common.PvpFightResultItemOrBuilder> pvpFightResultBuilder_;

      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public java.util.List<myudfs.Common.PvpFightResultItem> getPvpFightResultList() {
        if (pvpFightResultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pvpFightResult_);
        } else {
          return pvpFightResultBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public int getPvpFightResultCount() {
        if (pvpFightResultBuilder_ == null) {
          return pvpFightResult_.size();
        } else {
          return pvpFightResultBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public myudfs.Common.PvpFightResultItem getPvpFightResult(int index) {
        if (pvpFightResultBuilder_ == null) {
          return pvpFightResult_.get(index);
        } else {
          return pvpFightResultBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder setPvpFightResult(
          int index, myudfs.Common.PvpFightResultItem value) {
        if (pvpFightResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpFightResultIsMutable();
          pvpFightResult_.set(index, value);
          onChanged();
        } else {
          pvpFightResultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder setPvpFightResult(
          int index, myudfs.Common.PvpFightResultItem.Builder builderForValue) {
        if (pvpFightResultBuilder_ == null) {
          ensurePvpFightResultIsMutable();
          pvpFightResult_.set(index, builderForValue.build());
          onChanged();
        } else {
          pvpFightResultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder addPvpFightResult(myudfs.Common.PvpFightResultItem value) {
        if (pvpFightResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpFightResultIsMutable();
          pvpFightResult_.add(value);
          onChanged();
        } else {
          pvpFightResultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder addPvpFightResult(
          int index, myudfs.Common.PvpFightResultItem value) {
        if (pvpFightResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpFightResultIsMutable();
          pvpFightResult_.add(index, value);
          onChanged();
        } else {
          pvpFightResultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder addPvpFightResult(
          myudfs.Common.PvpFightResultItem.Builder builderForValue) {
        if (pvpFightResultBuilder_ == null) {
          ensurePvpFightResultIsMutable();
          pvpFightResult_.add(builderForValue.build());
          onChanged();
        } else {
          pvpFightResultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder addPvpFightResult(
          int index, myudfs.Common.PvpFightResultItem.Builder builderForValue) {
        if (pvpFightResultBuilder_ == null) {
          ensurePvpFightResultIsMutable();
          pvpFightResult_.add(index, builderForValue.build());
          onChanged();
        } else {
          pvpFightResultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder addAllPvpFightResult(
          java.lang.Iterable<? extends myudfs.Common.PvpFightResultItem> values) {
        if (pvpFightResultBuilder_ == null) {
          ensurePvpFightResultIsMutable();
          super.addAll(values, pvpFightResult_);
          onChanged();
        } else {
          pvpFightResultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder clearPvpFightResult() {
        if (pvpFightResultBuilder_ == null) {
          pvpFightResult_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
          onChanged();
        } else {
          pvpFightResultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public Builder removePvpFightResult(int index) {
        if (pvpFightResultBuilder_ == null) {
          ensurePvpFightResultIsMutable();
          pvpFightResult_.remove(index);
          onChanged();
        } else {
          pvpFightResultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public myudfs.Common.PvpFightResultItem.Builder getPvpFightResultBuilder(
          int index) {
        return getPvpFightResultFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public myudfs.Common.PvpFightResultItemOrBuilder getPvpFightResultOrBuilder(
          int index) {
        if (pvpFightResultBuilder_ == null) {
          return pvpFightResult_.get(index);  } else {
          return pvpFightResultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.PvpFightResultItemOrBuilder> 
           getPvpFightResultOrBuilderList() {
        if (pvpFightResultBuilder_ != null) {
          return pvpFightResultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pvpFightResult_);
        }
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public myudfs.Common.PvpFightResultItem.Builder addPvpFightResultBuilder() {
        return getPvpFightResultFieldBuilder().addBuilder(
            myudfs.Common.PvpFightResultItem.getDefaultInstance());
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public myudfs.Common.PvpFightResultItem.Builder addPvpFightResultBuilder(
          int index) {
        return getPvpFightResultFieldBuilder().addBuilder(
            index, myudfs.Common.PvpFightResultItem.getDefaultInstance());
      }
      /**
       * <code>repeated .PvpFightResultItem pvpFightResult = 47;</code>
       *
       * <pre>
       *个人PVP战报记录
       * </pre>
       */
      public java.util.List<myudfs.Common.PvpFightResultItem.Builder> 
           getPvpFightResultBuilderList() {
        return getPvpFightResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PvpFightResultItem, myudfs.Common.PvpFightResultItem.Builder, myudfs.Common.PvpFightResultItemOrBuilder> 
          getPvpFightResultFieldBuilder() {
        if (pvpFightResultBuilder_ == null) {
          pvpFightResultBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.PvpFightResultItem, myudfs.Common.PvpFightResultItem.Builder, myudfs.Common.PvpFightResultItemOrBuilder>(
                  pvpFightResult_,
                  ((bitField1_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          pvpFightResult_ = null;
        }
        return pvpFightResultBuilder_;
      }

      // optional int32 buyStamina = 48;
      private int buyStamina_ ;
      /**
       * <code>optional int32 buyStamina = 48;</code>
       *
       * <pre>
       *本日购买体力次数
       * </pre>
       */
      public boolean hasBuyStamina() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 buyStamina = 48;</code>
       *
       * <pre>
       *本日购买体力次数
       * </pre>
       */
      public int getBuyStamina() {
        return buyStamina_;
      }
      /**
       * <code>optional int32 buyStamina = 48;</code>
       *
       * <pre>
       *本日购买体力次数
       * </pre>
       */
      public Builder setBuyStamina(int value) {
        bitField1_ |= 0x00000080;
        buyStamina_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buyStamina = 48;</code>
       *
       * <pre>
       *本日购买体力次数
       * </pre>
       */
      public Builder clearBuyStamina() {
        bitField1_ = (bitField1_ & ~0x00000080);
        buyStamina_ = 0;
        onChanged();
        return this;
      }

      // optional int32 buySpirit = 49;
      private int buySpirit_ ;
      /**
       * <code>optional int32 buySpirit = 49;</code>
       *
       * <pre>
       * 本日购买精力次数
       * </pre>
       */
      public boolean hasBuySpirit() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 buySpirit = 49;</code>
       *
       * <pre>
       * 本日购买精力次数
       * </pre>
       */
      public int getBuySpirit() {
        return buySpirit_;
      }
      /**
       * <code>optional int32 buySpirit = 49;</code>
       *
       * <pre>
       * 本日购买精力次数
       * </pre>
       */
      public Builder setBuySpirit(int value) {
        bitField1_ |= 0x00000100;
        buySpirit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buySpirit = 49;</code>
       *
       * <pre>
       * 本日购买精力次数
       * </pre>
       */
      public Builder clearBuySpirit() {
        bitField1_ = (bitField1_ & ~0x00000100);
        buySpirit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pvpWins = 50;
      private int pvpWins_ ;
      /**
       * <code>optional int32 pvpWins = 50;</code>
       *
       * <pre>
       *本日pvp连胜次数
       * </pre>
       */
      public boolean hasPvpWins() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 pvpWins = 50;</code>
       *
       * <pre>
       *本日pvp连胜次数
       * </pre>
       */
      public int getPvpWins() {
        return pvpWins_;
      }
      /**
       * <code>optional int32 pvpWins = 50;</code>
       *
       * <pre>
       *本日pvp连胜次数
       * </pre>
       */
      public Builder setPvpWins(int value) {
        bitField1_ |= 0x00000200;
        pvpWins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpWins = 50;</code>
       *
       * <pre>
       *本日pvp连胜次数
       * </pre>
       */
      public Builder clearPvpWins() {
        bitField1_ = (bitField1_ & ~0x00000200);
        pvpWins_ = 0;
        onChanged();
        return this;
      }

      // repeated .MapItem shopItems = 53;
      private java.util.List<myudfs.Common.MapItem> shopItems_ =
        java.util.Collections.emptyList();
      private void ensureShopItemsIsMutable() {
        if (!((bitField1_ & 0x00000400) == 0x00000400)) {
          shopItems_ = new java.util.ArrayList<myudfs.Common.MapItem>(shopItems_);
          bitField1_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> shopItemsBuilder_;

      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getShopItemsList() {
        if (shopItemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shopItems_);
        } else {
          return shopItemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public int getShopItemsCount() {
        if (shopItemsBuilder_ == null) {
          return shopItems_.size();
        } else {
          return shopItemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public myudfs.Common.MapItem getShopItems(int index) {
        if (shopItemsBuilder_ == null) {
          return shopItems_.get(index);
        } else {
          return shopItemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder setShopItems(
          int index, myudfs.Common.MapItem value) {
        if (shopItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShopItemsIsMutable();
          shopItems_.set(index, value);
          onChanged();
        } else {
          shopItemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder setShopItems(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (shopItemsBuilder_ == null) {
          ensureShopItemsIsMutable();
          shopItems_.set(index, builderForValue.build());
          onChanged();
        } else {
          shopItemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder addShopItems(myudfs.Common.MapItem value) {
        if (shopItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShopItemsIsMutable();
          shopItems_.add(value);
          onChanged();
        } else {
          shopItemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder addShopItems(
          int index, myudfs.Common.MapItem value) {
        if (shopItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShopItemsIsMutable();
          shopItems_.add(index, value);
          onChanged();
        } else {
          shopItemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder addShopItems(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (shopItemsBuilder_ == null) {
          ensureShopItemsIsMutable();
          shopItems_.add(builderForValue.build());
          onChanged();
        } else {
          shopItemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder addShopItems(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (shopItemsBuilder_ == null) {
          ensureShopItemsIsMutable();
          shopItems_.add(index, builderForValue.build());
          onChanged();
        } else {
          shopItemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder addAllShopItems(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (shopItemsBuilder_ == null) {
          ensureShopItemsIsMutable();
          super.addAll(values, shopItems_);
          onChanged();
        } else {
          shopItemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder clearShopItems() {
        if (shopItemsBuilder_ == null) {
          shopItems_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000400);
          onChanged();
        } else {
          shopItemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public Builder removeShopItems(int index) {
        if (shopItemsBuilder_ == null) {
          ensureShopItemsIsMutable();
          shopItems_.remove(index);
          onChanged();
        } else {
          shopItemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getShopItemsBuilder(
          int index) {
        return getShopItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getShopItemsOrBuilder(
          int index) {
        if (shopItemsBuilder_ == null) {
          return shopItems_.get(index);  } else {
          return shopItemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getShopItemsOrBuilderList() {
        if (shopItemsBuilder_ != null) {
          return shopItemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shopItems_);
        }
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addShopItemsBuilder() {
        return getShopItemsFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addShopItemsBuilder(
          int index) {
        return getShopItemsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem shopItems = 53;</code>
       *
       * <pre>
       *购买的商品数量
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getShopItemsBuilderList() {
        return getShopItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getShopItemsFieldBuilder() {
        if (shopItemsBuilder_ == null) {
          shopItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  shopItems_,
                  ((bitField1_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          shopItems_ = null;
        }
        return shopItemsBuilder_;
      }

      // optional int32 loginDays = 54;
      private int loginDays_ ;
      /**
       * <code>optional int32 loginDays = 54;</code>
       *
       * <pre>
       *已登陆的天数
       * </pre>
       */
      public boolean hasLoginDays() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 loginDays = 54;</code>
       *
       * <pre>
       *已登陆的天数
       * </pre>
       */
      public int getLoginDays() {
        return loginDays_;
      }
      /**
       * <code>optional int32 loginDays = 54;</code>
       *
       * <pre>
       *已登陆的天数
       * </pre>
       */
      public Builder setLoginDays(int value) {
        bitField1_ |= 0x00000800;
        loginDays_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 loginDays = 54;</code>
       *
       * <pre>
       *已登陆的天数
       * </pre>
       */
      public Builder clearLoginDays() {
        bitField1_ = (bitField1_ & ~0x00000800);
        loginDays_ = 0;
        onChanged();
        return this;
      }

      // repeated .MissionItem missions = 55;
      private java.util.List<myudfs.Common.MissionItem> missions_ =
        java.util.Collections.emptyList();
      private void ensureMissionsIsMutable() {
        if (!((bitField1_ & 0x00001000) == 0x00001000)) {
          missions_ = new java.util.ArrayList<myudfs.Common.MissionItem>(missions_);
          bitField1_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MissionItem, myudfs.Common.MissionItem.Builder, myudfs.Common.MissionItemOrBuilder> missionsBuilder_;

      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public java.util.List<myudfs.Common.MissionItem> getMissionsList() {
        if (missionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(missions_);
        } else {
          return missionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public int getMissionsCount() {
        if (missionsBuilder_ == null) {
          return missions_.size();
        } else {
          return missionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public myudfs.Common.MissionItem getMissions(int index) {
        if (missionsBuilder_ == null) {
          return missions_.get(index);
        } else {
          return missionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder setMissions(
          int index, myudfs.Common.MissionItem value) {
        if (missionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionsIsMutable();
          missions_.set(index, value);
          onChanged();
        } else {
          missionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder setMissions(
          int index, myudfs.Common.MissionItem.Builder builderForValue) {
        if (missionsBuilder_ == null) {
          ensureMissionsIsMutable();
          missions_.set(index, builderForValue.build());
          onChanged();
        } else {
          missionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder addMissions(myudfs.Common.MissionItem value) {
        if (missionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionsIsMutable();
          missions_.add(value);
          onChanged();
        } else {
          missionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder addMissions(
          int index, myudfs.Common.MissionItem value) {
        if (missionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionsIsMutable();
          missions_.add(index, value);
          onChanged();
        } else {
          missionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder addMissions(
          myudfs.Common.MissionItem.Builder builderForValue) {
        if (missionsBuilder_ == null) {
          ensureMissionsIsMutable();
          missions_.add(builderForValue.build());
          onChanged();
        } else {
          missionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder addMissions(
          int index, myudfs.Common.MissionItem.Builder builderForValue) {
        if (missionsBuilder_ == null) {
          ensureMissionsIsMutable();
          missions_.add(index, builderForValue.build());
          onChanged();
        } else {
          missionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder addAllMissions(
          java.lang.Iterable<? extends myudfs.Common.MissionItem> values) {
        if (missionsBuilder_ == null) {
          ensureMissionsIsMutable();
          super.addAll(values, missions_);
          onChanged();
        } else {
          missionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder clearMissions() {
        if (missionsBuilder_ == null) {
          missions_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00001000);
          onChanged();
        } else {
          missionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public Builder removeMissions(int index) {
        if (missionsBuilder_ == null) {
          ensureMissionsIsMutable();
          missions_.remove(index);
          onChanged();
        } else {
          missionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public myudfs.Common.MissionItem.Builder getMissionsBuilder(
          int index) {
        return getMissionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public myudfs.Common.MissionItemOrBuilder getMissionsOrBuilder(
          int index) {
        if (missionsBuilder_ == null) {
          return missions_.get(index);  } else {
          return missionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MissionItemOrBuilder> 
           getMissionsOrBuilderList() {
        if (missionsBuilder_ != null) {
          return missionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(missions_);
        }
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public myudfs.Common.MissionItem.Builder addMissionsBuilder() {
        return getMissionsFieldBuilder().addBuilder(
            myudfs.Common.MissionItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public myudfs.Common.MissionItem.Builder addMissionsBuilder(
          int index) {
        return getMissionsFieldBuilder().addBuilder(
            index, myudfs.Common.MissionItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionItem missions = 55;</code>
       *
       * <pre>
       * 任务
       * </pre>
       */
      public java.util.List<myudfs.Common.MissionItem.Builder> 
           getMissionsBuilderList() {
        return getMissionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MissionItem, myudfs.Common.MissionItem.Builder, myudfs.Common.MissionItemOrBuilder> 
          getMissionsFieldBuilder() {
        if (missionsBuilder_ == null) {
          missionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MissionItem, myudfs.Common.MissionItem.Builder, myudfs.Common.MissionItemOrBuilder>(
                  missions_,
                  ((bitField1_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          missions_ = null;
        }
        return missionsBuilder_;
      }

      // optional int64 silver = 56;
      private long silver_ ;
      /**
       * <code>optional int64 silver = 56;</code>
       *
       * <pre>
       * 银两
       * </pre>
       */
      public boolean hasSilver() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 silver = 56;</code>
       *
       * <pre>
       * 银两
       * </pre>
       */
      public long getSilver() {
        return silver_;
      }
      /**
       * <code>optional int64 silver = 56;</code>
       *
       * <pre>
       * 银两
       * </pre>
       */
      public Builder setSilver(long value) {
        bitField1_ |= 0x00002000;
        silver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 silver = 56;</code>
       *
       * <pre>
       * 银两
       * </pre>
       */
      public Builder clearSilver() {
        bitField1_ = (bitField1_ & ~0x00002000);
        silver_ = 0L;
        onChanged();
        return this;
      }

      // repeated .CardItem cards = 57;
      private java.util.List<myudfs.Common.CardItem> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField1_ & 0x00004000) == 0x00004000)) {
          cards_ = new java.util.ArrayList<myudfs.Common.CardItem>(cards_);
          bitField1_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public java.util.List<myudfs.Common.CardItem> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public myudfs.Common.CardItem getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder setCards(
          int index, myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder setCards(
          int index, myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder addCards(myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder addCards(
          int index, myudfs.Common.CardItem value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder addCards(
          myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder addCards(
          int index, myudfs.Common.CardItem.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends myudfs.Common.CardItem> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          super.addAll(values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00004000);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public myudfs.Common.CardItem.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public myudfs.Common.CardItemOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.CardItemOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public myudfs.Common.CardItem.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            myudfs.Common.CardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public myudfs.Common.CardItem.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, myudfs.Common.CardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CardItem cards = 57;</code>
       *
       * <pre>
       *自己的卡牌
       * </pre>
       */
      public java.util.List<myudfs.Common.CardItem.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.CardItem, myudfs.Common.CardItem.Builder, myudfs.Common.CardItemOrBuilder>(
                  cards_,
                  ((bitField1_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }

      // repeated int64 cardGroup = 58;
      private java.util.List<java.lang.Long> cardGroup_ = java.util.Collections.emptyList();
      private void ensureCardGroupIsMutable() {
        if (!((bitField1_ & 0x00008000) == 0x00008000)) {
          cardGroup_ = new java.util.ArrayList<java.lang.Long>(cardGroup_);
          bitField1_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int64 cardGroup = 58;</code>
       *
       * <pre>
       *卡组
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCardGroupList() {
        return java.util.Collections.unmodifiableList(cardGroup_);
      }
      /**
       * <code>repeated int64 cardGroup = 58;</code>
       *
       * <pre>
       *卡组
       * </pre>
       */
      public int getCardGroupCount() {
        return cardGroup_.size();
      }
      /**
       * <code>repeated int64 cardGroup = 58;</code>
       *
       * <pre>
       *卡组
       * </pre>
       */
      public long getCardGroup(int index) {
        return cardGroup_.get(index);
      }
      /**
       * <code>repeated int64 cardGroup = 58;</code>
       *
       * <pre>
       *卡组
       * </pre>
       */
      public Builder setCardGroup(
          int index, long value) {
        ensureCardGroupIsMutable();
        cardGroup_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroup = 58;</code>
       *
       * <pre>
       *卡组
       * </pre>
       */
      public Builder addCardGroup(long value) {
        ensureCardGroupIsMutable();
        cardGroup_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroup = 58;</code>
       *
       * <pre>
       *卡组
       * </pre>
       */
      public Builder addAllCardGroup(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCardGroupIsMutable();
        super.addAll(values, cardGroup_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroup = 58;</code>
       *
       * <pre>
       *卡组
       * </pre>
       */
      public Builder clearCardGroup() {
        cardGroup_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated .PieceItem pieces = 59;
      private java.util.List<myudfs.Common.PieceItem> pieces_ =
        java.util.Collections.emptyList();
      private void ensurePiecesIsMutable() {
        if (!((bitField1_ & 0x00010000) == 0x00010000)) {
          pieces_ = new java.util.ArrayList<myudfs.Common.PieceItem>(pieces_);
          bitField1_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PieceItem, myudfs.Common.PieceItem.Builder, myudfs.Common.PieceItemOrBuilder> piecesBuilder_;

      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public java.util.List<myudfs.Common.PieceItem> getPiecesList() {
        if (piecesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pieces_);
        } else {
          return piecesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public int getPiecesCount() {
        if (piecesBuilder_ == null) {
          return pieces_.size();
        } else {
          return piecesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public myudfs.Common.PieceItem getPieces(int index) {
        if (piecesBuilder_ == null) {
          return pieces_.get(index);
        } else {
          return piecesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder setPieces(
          int index, myudfs.Common.PieceItem value) {
        if (piecesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiecesIsMutable();
          pieces_.set(index, value);
          onChanged();
        } else {
          piecesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder setPieces(
          int index, myudfs.Common.PieceItem.Builder builderForValue) {
        if (piecesBuilder_ == null) {
          ensurePiecesIsMutable();
          pieces_.set(index, builderForValue.build());
          onChanged();
        } else {
          piecesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder addPieces(myudfs.Common.PieceItem value) {
        if (piecesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiecesIsMutable();
          pieces_.add(value);
          onChanged();
        } else {
          piecesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder addPieces(
          int index, myudfs.Common.PieceItem value) {
        if (piecesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiecesIsMutable();
          pieces_.add(index, value);
          onChanged();
        } else {
          piecesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder addPieces(
          myudfs.Common.PieceItem.Builder builderForValue) {
        if (piecesBuilder_ == null) {
          ensurePiecesIsMutable();
          pieces_.add(builderForValue.build());
          onChanged();
        } else {
          piecesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder addPieces(
          int index, myudfs.Common.PieceItem.Builder builderForValue) {
        if (piecesBuilder_ == null) {
          ensurePiecesIsMutable();
          pieces_.add(index, builderForValue.build());
          onChanged();
        } else {
          piecesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder addAllPieces(
          java.lang.Iterable<? extends myudfs.Common.PieceItem> values) {
        if (piecesBuilder_ == null) {
          ensurePiecesIsMutable();
          super.addAll(values, pieces_);
          onChanged();
        } else {
          piecesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder clearPieces() {
        if (piecesBuilder_ == null) {
          pieces_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00010000);
          onChanged();
        } else {
          piecesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public Builder removePieces(int index) {
        if (piecesBuilder_ == null) {
          ensurePiecesIsMutable();
          pieces_.remove(index);
          onChanged();
        } else {
          piecesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public myudfs.Common.PieceItem.Builder getPiecesBuilder(
          int index) {
        return getPiecesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public myudfs.Common.PieceItemOrBuilder getPiecesOrBuilder(
          int index) {
        if (piecesBuilder_ == null) {
          return pieces_.get(index);  } else {
          return piecesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.PieceItemOrBuilder> 
           getPiecesOrBuilderList() {
        if (piecesBuilder_ != null) {
          return piecesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pieces_);
        }
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public myudfs.Common.PieceItem.Builder addPiecesBuilder() {
        return getPiecesFieldBuilder().addBuilder(
            myudfs.Common.PieceItem.getDefaultInstance());
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public myudfs.Common.PieceItem.Builder addPiecesBuilder(
          int index) {
        return getPiecesFieldBuilder().addBuilder(
            index, myudfs.Common.PieceItem.getDefaultInstance());
      }
      /**
       * <code>repeated .PieceItem pieces = 59;</code>
       *
       * <pre>
       *元神
       * </pre>
       */
      public java.util.List<myudfs.Common.PieceItem.Builder> 
           getPiecesBuilderList() {
        return getPiecesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PieceItem, myudfs.Common.PieceItem.Builder, myudfs.Common.PieceItemOrBuilder> 
          getPiecesFieldBuilder() {
        if (piecesBuilder_ == null) {
          piecesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.PieceItem, myudfs.Common.PieceItem.Builder, myudfs.Common.PieceItemOrBuilder>(
                  pieces_,
                  ((bitField1_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          pieces_ = null;
        }
        return piecesBuilder_;
      }

      // repeated .Items items = 60;
      private java.util.List<myudfs.Common.Items> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField1_ & 0x00020000) == 0x00020000)) {
          items_ = new java.util.ArrayList<myudfs.Common.Items>(items_);
          bitField1_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.Items, myudfs.Common.Items.Builder, myudfs.Common.ItemsOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public java.util.List<myudfs.Common.Items> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public myudfs.Common.Items getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder setItems(
          int index, myudfs.Common.Items value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder setItems(
          int index, myudfs.Common.Items.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder addItems(myudfs.Common.Items value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder addItems(
          int index, myudfs.Common.Items value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder addItems(
          myudfs.Common.Items.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder addItems(
          int index, myudfs.Common.Items.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends myudfs.Common.Items> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          super.addAll(values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00020000);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public myudfs.Common.Items.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public myudfs.Common.ItemsOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.ItemsOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public myudfs.Common.Items.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            myudfs.Common.Items.getDefaultInstance());
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public myudfs.Common.Items.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, myudfs.Common.Items.getDefaultInstance());
      }
      /**
       * <code>repeated .Items items = 60;</code>
       *
       * <pre>
       *物品
       * </pre>
       */
      public java.util.List<myudfs.Common.Items.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.Items, myudfs.Common.Items.Builder, myudfs.Common.ItemsOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.Items, myudfs.Common.Items.Builder, myudfs.Common.ItemsOrBuilder>(
                  items_,
                  ((bitField1_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // repeated .HuFaItem hufas = 61;
      private java.util.List<myudfs.Common.HuFaItem> hufas_ =
        java.util.Collections.emptyList();
      private void ensureHufasIsMutable() {
        if (!((bitField1_ & 0x00040000) == 0x00040000)) {
          hufas_ = new java.util.ArrayList<myudfs.Common.HuFaItem>(hufas_);
          bitField1_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.HuFaItem, myudfs.Common.HuFaItem.Builder, myudfs.Common.HuFaItemOrBuilder> hufasBuilder_;

      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public java.util.List<myudfs.Common.HuFaItem> getHufasList() {
        if (hufasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hufas_);
        } else {
          return hufasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public int getHufasCount() {
        if (hufasBuilder_ == null) {
          return hufas_.size();
        } else {
          return hufasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public myudfs.Common.HuFaItem getHufas(int index) {
        if (hufasBuilder_ == null) {
          return hufas_.get(index);
        } else {
          return hufasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder setHufas(
          int index, myudfs.Common.HuFaItem value) {
        if (hufasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHufasIsMutable();
          hufas_.set(index, value);
          onChanged();
        } else {
          hufasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder setHufas(
          int index, myudfs.Common.HuFaItem.Builder builderForValue) {
        if (hufasBuilder_ == null) {
          ensureHufasIsMutable();
          hufas_.set(index, builderForValue.build());
          onChanged();
        } else {
          hufasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder addHufas(myudfs.Common.HuFaItem value) {
        if (hufasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHufasIsMutable();
          hufas_.add(value);
          onChanged();
        } else {
          hufasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder addHufas(
          int index, myudfs.Common.HuFaItem value) {
        if (hufasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHufasIsMutable();
          hufas_.add(index, value);
          onChanged();
        } else {
          hufasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder addHufas(
          myudfs.Common.HuFaItem.Builder builderForValue) {
        if (hufasBuilder_ == null) {
          ensureHufasIsMutable();
          hufas_.add(builderForValue.build());
          onChanged();
        } else {
          hufasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder addHufas(
          int index, myudfs.Common.HuFaItem.Builder builderForValue) {
        if (hufasBuilder_ == null) {
          ensureHufasIsMutable();
          hufas_.add(index, builderForValue.build());
          onChanged();
        } else {
          hufasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder addAllHufas(
          java.lang.Iterable<? extends myudfs.Common.HuFaItem> values) {
        if (hufasBuilder_ == null) {
          ensureHufasIsMutable();
          super.addAll(values, hufas_);
          onChanged();
        } else {
          hufasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder clearHufas() {
        if (hufasBuilder_ == null) {
          hufas_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00040000);
          onChanged();
        } else {
          hufasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public Builder removeHufas(int index) {
        if (hufasBuilder_ == null) {
          ensureHufasIsMutable();
          hufas_.remove(index);
          onChanged();
        } else {
          hufasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public myudfs.Common.HuFaItem.Builder getHufasBuilder(
          int index) {
        return getHufasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public myudfs.Common.HuFaItemOrBuilder getHufasOrBuilder(
          int index) {
        if (hufasBuilder_ == null) {
          return hufas_.get(index);  } else {
          return hufasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.HuFaItemOrBuilder> 
           getHufasOrBuilderList() {
        if (hufasBuilder_ != null) {
          return hufasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hufas_);
        }
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public myudfs.Common.HuFaItem.Builder addHufasBuilder() {
        return getHufasFieldBuilder().addBuilder(
            myudfs.Common.HuFaItem.getDefaultInstance());
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public myudfs.Common.HuFaItem.Builder addHufasBuilder(
          int index) {
        return getHufasFieldBuilder().addBuilder(
            index, myudfs.Common.HuFaItem.getDefaultInstance());
      }
      /**
       * <code>repeated .HuFaItem hufas = 61;</code>
       *
       * <pre>
       *护法
       * </pre>
       */
      public java.util.List<myudfs.Common.HuFaItem.Builder> 
           getHufasBuilderList() {
        return getHufasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.HuFaItem, myudfs.Common.HuFaItem.Builder, myudfs.Common.HuFaItemOrBuilder> 
          getHufasFieldBuilder() {
        if (hufasBuilder_ == null) {
          hufasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.HuFaItem, myudfs.Common.HuFaItem.Builder, myudfs.Common.HuFaItemOrBuilder>(
                  hufas_,
                  ((bitField1_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          hufas_ = null;
        }
        return hufasBuilder_;
      }

      // repeated .TrainItem trains = 62;
      private java.util.List<myudfs.Common.TrainItem> trains_ =
        java.util.Collections.emptyList();
      private void ensureTrainsIsMutable() {
        if (!((bitField1_ & 0x00080000) == 0x00080000)) {
          trains_ = new java.util.ArrayList<myudfs.Common.TrainItem>(trains_);
          bitField1_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.TrainItem, myudfs.Common.TrainItem.Builder, myudfs.Common.TrainItemOrBuilder> trainsBuilder_;

      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public java.util.List<myudfs.Common.TrainItem> getTrainsList() {
        if (trainsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trains_);
        } else {
          return trainsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public int getTrainsCount() {
        if (trainsBuilder_ == null) {
          return trains_.size();
        } else {
          return trainsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public myudfs.Common.TrainItem getTrains(int index) {
        if (trainsBuilder_ == null) {
          return trains_.get(index);
        } else {
          return trainsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder setTrains(
          int index, myudfs.Common.TrainItem value) {
        if (trainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrainsIsMutable();
          trains_.set(index, value);
          onChanged();
        } else {
          trainsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder setTrains(
          int index, myudfs.Common.TrainItem.Builder builderForValue) {
        if (trainsBuilder_ == null) {
          ensureTrainsIsMutable();
          trains_.set(index, builderForValue.build());
          onChanged();
        } else {
          trainsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder addTrains(myudfs.Common.TrainItem value) {
        if (trainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrainsIsMutable();
          trains_.add(value);
          onChanged();
        } else {
          trainsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder addTrains(
          int index, myudfs.Common.TrainItem value) {
        if (trainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrainsIsMutable();
          trains_.add(index, value);
          onChanged();
        } else {
          trainsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder addTrains(
          myudfs.Common.TrainItem.Builder builderForValue) {
        if (trainsBuilder_ == null) {
          ensureTrainsIsMutable();
          trains_.add(builderForValue.build());
          onChanged();
        } else {
          trainsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder addTrains(
          int index, myudfs.Common.TrainItem.Builder builderForValue) {
        if (trainsBuilder_ == null) {
          ensureTrainsIsMutable();
          trains_.add(index, builderForValue.build());
          onChanged();
        } else {
          trainsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder addAllTrains(
          java.lang.Iterable<? extends myudfs.Common.TrainItem> values) {
        if (trainsBuilder_ == null) {
          ensureTrainsIsMutable();
          super.addAll(values, trains_);
          onChanged();
        } else {
          trainsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder clearTrains() {
        if (trainsBuilder_ == null) {
          trains_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00080000);
          onChanged();
        } else {
          trainsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public Builder removeTrains(int index) {
        if (trainsBuilder_ == null) {
          ensureTrainsIsMutable();
          trains_.remove(index);
          onChanged();
        } else {
          trainsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public myudfs.Common.TrainItem.Builder getTrainsBuilder(
          int index) {
        return getTrainsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public myudfs.Common.TrainItemOrBuilder getTrainsOrBuilder(
          int index) {
        if (trainsBuilder_ == null) {
          return trains_.get(index);  } else {
          return trainsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.TrainItemOrBuilder> 
           getTrainsOrBuilderList() {
        if (trainsBuilder_ != null) {
          return trainsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trains_);
        }
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public myudfs.Common.TrainItem.Builder addTrainsBuilder() {
        return getTrainsFieldBuilder().addBuilder(
            myudfs.Common.TrainItem.getDefaultInstance());
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public myudfs.Common.TrainItem.Builder addTrainsBuilder(
          int index) {
        return getTrainsFieldBuilder().addBuilder(
            index, myudfs.Common.TrainItem.getDefaultInstance());
      }
      /**
       * <code>repeated .TrainItem trains = 62;</code>
       *
       * <pre>
       *卡牌修炼属性
       * </pre>
       */
      public java.util.List<myudfs.Common.TrainItem.Builder> 
           getTrainsBuilderList() {
        return getTrainsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.TrainItem, myudfs.Common.TrainItem.Builder, myudfs.Common.TrainItemOrBuilder> 
          getTrainsFieldBuilder() {
        if (trainsBuilder_ == null) {
          trainsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.TrainItem, myudfs.Common.TrainItem.Builder, myudfs.Common.TrainItemOrBuilder>(
                  trains_,
                  ((bitField1_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          trains_ = null;
        }
        return trainsBuilder_;
      }

      // repeated .QuestItem quests = 64;
      private java.util.List<myudfs.Common.QuestItem> quests_ =
        java.util.Collections.emptyList();
      private void ensureQuestsIsMutable() {
        if (!((bitField1_ & 0x00100000) == 0x00100000)) {
          quests_ = new java.util.ArrayList<myudfs.Common.QuestItem>(quests_);
          bitField1_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.QuestItem, myudfs.Common.QuestItem.Builder, myudfs.Common.QuestItemOrBuilder> questsBuilder_;

      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public java.util.List<myudfs.Common.QuestItem> getQuestsList() {
        if (questsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(quests_);
        } else {
          return questsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public int getQuestsCount() {
        if (questsBuilder_ == null) {
          return quests_.size();
        } else {
          return questsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public myudfs.Common.QuestItem getQuests(int index) {
        if (questsBuilder_ == null) {
          return quests_.get(index);
        } else {
          return questsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder setQuests(
          int index, myudfs.Common.QuestItem value) {
        if (questsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuestsIsMutable();
          quests_.set(index, value);
          onChanged();
        } else {
          questsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder setQuests(
          int index, myudfs.Common.QuestItem.Builder builderForValue) {
        if (questsBuilder_ == null) {
          ensureQuestsIsMutable();
          quests_.set(index, builderForValue.build());
          onChanged();
        } else {
          questsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder addQuests(myudfs.Common.QuestItem value) {
        if (questsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuestsIsMutable();
          quests_.add(value);
          onChanged();
        } else {
          questsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder addQuests(
          int index, myudfs.Common.QuestItem value) {
        if (questsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuestsIsMutable();
          quests_.add(index, value);
          onChanged();
        } else {
          questsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder addQuests(
          myudfs.Common.QuestItem.Builder builderForValue) {
        if (questsBuilder_ == null) {
          ensureQuestsIsMutable();
          quests_.add(builderForValue.build());
          onChanged();
        } else {
          questsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder addQuests(
          int index, myudfs.Common.QuestItem.Builder builderForValue) {
        if (questsBuilder_ == null) {
          ensureQuestsIsMutable();
          quests_.add(index, builderForValue.build());
          onChanged();
        } else {
          questsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder addAllQuests(
          java.lang.Iterable<? extends myudfs.Common.QuestItem> values) {
        if (questsBuilder_ == null) {
          ensureQuestsIsMutable();
          super.addAll(values, quests_);
          onChanged();
        } else {
          questsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder clearQuests() {
        if (questsBuilder_ == null) {
          quests_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00100000);
          onChanged();
        } else {
          questsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public Builder removeQuests(int index) {
        if (questsBuilder_ == null) {
          ensureQuestsIsMutable();
          quests_.remove(index);
          onChanged();
        } else {
          questsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public myudfs.Common.QuestItem.Builder getQuestsBuilder(
          int index) {
        return getQuestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public myudfs.Common.QuestItemOrBuilder getQuestsOrBuilder(
          int index) {
        if (questsBuilder_ == null) {
          return quests_.get(index);  } else {
          return questsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.QuestItemOrBuilder> 
           getQuestsOrBuilderList() {
        if (questsBuilder_ != null) {
          return questsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(quests_);
        }
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public myudfs.Common.QuestItem.Builder addQuestsBuilder() {
        return getQuestsFieldBuilder().addBuilder(
            myudfs.Common.QuestItem.getDefaultInstance());
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public myudfs.Common.QuestItem.Builder addQuestsBuilder(
          int index) {
        return getQuestsFieldBuilder().addBuilder(
            index, myudfs.Common.QuestItem.getDefaultInstance());
      }
      /**
       * <code>repeated .QuestItem quests = 64;</code>
       *
       * <pre>
       *关卡
       * </pre>
       */
      public java.util.List<myudfs.Common.QuestItem.Builder> 
           getQuestsBuilderList() {
        return getQuestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.QuestItem, myudfs.Common.QuestItem.Builder, myudfs.Common.QuestItemOrBuilder> 
          getQuestsFieldBuilder() {
        if (questsBuilder_ == null) {
          questsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.QuestItem, myudfs.Common.QuestItem.Builder, myudfs.Common.QuestItemOrBuilder>(
                  quests_,
                  ((bitField1_ & 0x00100000) == 0x00100000),
                  getParentForChildren(),
                  isClean());
          quests_ = null;
        }
        return questsBuilder_;
      }

      // repeated int32 cardGroupFight = 65;
      private java.util.List<java.lang.Integer> cardGroupFight_ = java.util.Collections.emptyList();
      private void ensureCardGroupFightIsMutable() {
        if (!((bitField1_ & 0x00200000) == 0x00200000)) {
          cardGroupFight_ = new java.util.ArrayList<java.lang.Integer>(cardGroupFight_);
          bitField1_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated int32 cardGroupFight = 65;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardGroupFightList() {
        return java.util.Collections.unmodifiableList(cardGroupFight_);
      }
      /**
       * <code>repeated int32 cardGroupFight = 65;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getCardGroupFightCount() {
        return cardGroupFight_.size();
      }
      /**
       * <code>repeated int32 cardGroupFight = 65;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getCardGroupFight(int index) {
        return cardGroupFight_.get(index);
      }
      /**
       * <code>repeated int32 cardGroupFight = 65;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder setCardGroupFight(
          int index, int value) {
        ensureCardGroupFightIsMutable();
        cardGroupFight_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardGroupFight = 65;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addCardGroupFight(int value) {
        ensureCardGroupFightIsMutable();
        cardGroupFight_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardGroupFight = 65;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addAllCardGroupFight(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardGroupFightIsMutable();
        super.addAll(values, cardGroupFight_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardGroupFight = 65;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder clearCardGroupFight() {
        cardGroupFight_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00200000);
        onChanged();
        return this;
      }

      // repeated int32 magicWeaponGroup = 66;
      private java.util.List<java.lang.Integer> magicWeaponGroup_ = java.util.Collections.emptyList();
      private void ensureMagicWeaponGroupIsMutable() {
        if (!((bitField1_ & 0x00400000) == 0x00400000)) {
          magicWeaponGroup_ = new java.util.ArrayList<java.lang.Integer>(magicWeaponGroup_);
          bitField1_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated int32 magicWeaponGroup = 66;</code>
       *
       * <pre>
       *法宝位置
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMagicWeaponGroupList() {
        return java.util.Collections.unmodifiableList(magicWeaponGroup_);
      }
      /**
       * <code>repeated int32 magicWeaponGroup = 66;</code>
       *
       * <pre>
       *法宝位置
       * </pre>
       */
      public int getMagicWeaponGroupCount() {
        return magicWeaponGroup_.size();
      }
      /**
       * <code>repeated int32 magicWeaponGroup = 66;</code>
       *
       * <pre>
       *法宝位置
       * </pre>
       */
      public int getMagicWeaponGroup(int index) {
        return magicWeaponGroup_.get(index);
      }
      /**
       * <code>repeated int32 magicWeaponGroup = 66;</code>
       *
       * <pre>
       *法宝位置
       * </pre>
       */
      public Builder setMagicWeaponGroup(
          int index, int value) {
        ensureMagicWeaponGroupIsMutable();
        magicWeaponGroup_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 magicWeaponGroup = 66;</code>
       *
       * <pre>
       *法宝位置
       * </pre>
       */
      public Builder addMagicWeaponGroup(int value) {
        ensureMagicWeaponGroupIsMutable();
        magicWeaponGroup_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 magicWeaponGroup = 66;</code>
       *
       * <pre>
       *法宝位置
       * </pre>
       */
      public Builder addAllMagicWeaponGroup(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMagicWeaponGroupIsMutable();
        super.addAll(values, magicWeaponGroup_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 magicWeaponGroup = 66;</code>
       *
       * <pre>
       *法宝位置
       * </pre>
       */
      public Builder clearMagicWeaponGroup() {
        magicWeaponGroup_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00400000);
        onChanged();
        return this;
      }

      // optional uint64 rewardLastTime = 68;
      private long rewardLastTime_ ;
      /**
       * <code>optional uint64 rewardLastTime = 68;</code>
       *
       * <pre>
       * 领取结算奖励的剩余时间
       * </pre>
       */
      public boolean hasRewardLastTime() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint64 rewardLastTime = 68;</code>
       *
       * <pre>
       * 领取结算奖励的剩余时间
       * </pre>
       */
      public long getRewardLastTime() {
        return rewardLastTime_;
      }
      /**
       * <code>optional uint64 rewardLastTime = 68;</code>
       *
       * <pre>
       * 领取结算奖励的剩余时间
       * </pre>
       */
      public Builder setRewardLastTime(long value) {
        bitField1_ |= 0x00800000;
        rewardLastTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 rewardLastTime = 68;</code>
       *
       * <pre>
       * 领取结算奖励的剩余时间
       * </pre>
       */
      public Builder clearRewardLastTime() {
        bitField1_ = (bitField1_ & ~0x00800000);
        rewardLastTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 pvpWinReward = 69;
      private java.util.List<java.lang.Integer> pvpWinReward_ = java.util.Collections.emptyList();
      private void ensurePvpWinRewardIsMutable() {
        if (!((bitField1_ & 0x01000000) == 0x01000000)) {
          pvpWinReward_ = new java.util.ArrayList<java.lang.Integer>(pvpWinReward_);
          bitField1_ |= 0x01000000;
         }
      }
      /**
       * <code>repeated int32 pvpWinReward = 69;</code>
       *
       * <pre>
       * pvp连胜奖励 pvp连胜次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPvpWinRewardList() {
        return java.util.Collections.unmodifiableList(pvpWinReward_);
      }
      /**
       * <code>repeated int32 pvpWinReward = 69;</code>
       *
       * <pre>
       * pvp连胜奖励 pvp连胜次数
       * </pre>
       */
      public int getPvpWinRewardCount() {
        return pvpWinReward_.size();
      }
      /**
       * <code>repeated int32 pvpWinReward = 69;</code>
       *
       * <pre>
       * pvp连胜奖励 pvp连胜次数
       * </pre>
       */
      public int getPvpWinReward(int index) {
        return pvpWinReward_.get(index);
      }
      /**
       * <code>repeated int32 pvpWinReward = 69;</code>
       *
       * <pre>
       * pvp连胜奖励 pvp连胜次数
       * </pre>
       */
      public Builder setPvpWinReward(
          int index, int value) {
        ensurePvpWinRewardIsMutable();
        pvpWinReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pvpWinReward = 69;</code>
       *
       * <pre>
       * pvp连胜奖励 pvp连胜次数
       * </pre>
       */
      public Builder addPvpWinReward(int value) {
        ensurePvpWinRewardIsMutable();
        pvpWinReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pvpWinReward = 69;</code>
       *
       * <pre>
       * pvp连胜奖励 pvp连胜次数
       * </pre>
       */
      public Builder addAllPvpWinReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePvpWinRewardIsMutable();
        super.addAll(values, pvpWinReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pvpWinReward = 69;</code>
       *
       * <pre>
       * pvp连胜奖励 pvp连胜次数
       * </pre>
       */
      public Builder clearPvpWinReward() {
        pvpWinReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x01000000);
        onChanged();
        return this;
      }

      // repeated int32 loginReward = 70;
      private java.util.List<java.lang.Integer> loginReward_ = java.util.Collections.emptyList();
      private void ensureLoginRewardIsMutable() {
        if (!((bitField1_ & 0x02000000) == 0x02000000)) {
          loginReward_ = new java.util.ArrayList<java.lang.Integer>(loginReward_);
          bitField1_ |= 0x02000000;
         }
      }
      /**
       * <code>repeated int32 loginReward = 70;</code>
       *
       * <pre>
       * 连续登陆奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLoginRewardList() {
        return java.util.Collections.unmodifiableList(loginReward_);
      }
      /**
       * <code>repeated int32 loginReward = 70;</code>
       *
       * <pre>
       * 连续登陆奖励
       * </pre>
       */
      public int getLoginRewardCount() {
        return loginReward_.size();
      }
      /**
       * <code>repeated int32 loginReward = 70;</code>
       *
       * <pre>
       * 连续登陆奖励
       * </pre>
       */
      public int getLoginReward(int index) {
        return loginReward_.get(index);
      }
      /**
       * <code>repeated int32 loginReward = 70;</code>
       *
       * <pre>
       * 连续登陆奖励
       * </pre>
       */
      public Builder setLoginReward(
          int index, int value) {
        ensureLoginRewardIsMutable();
        loginReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 loginReward = 70;</code>
       *
       * <pre>
       * 连续登陆奖励
       * </pre>
       */
      public Builder addLoginReward(int value) {
        ensureLoginRewardIsMutable();
        loginReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 loginReward = 70;</code>
       *
       * <pre>
       * 连续登陆奖励
       * </pre>
       */
      public Builder addAllLoginReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLoginRewardIsMutable();
        super.addAll(values, loginReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 loginReward = 70;</code>
       *
       * <pre>
       * 连续登陆奖励
       * </pre>
       */
      public Builder clearLoginReward() {
        loginReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x02000000);
        onChanged();
        return this;
      }

      // repeated int32 pvpFightNumReward = 71;
      private java.util.List<java.lang.Integer> pvpFightNumReward_ = java.util.Collections.emptyList();
      private void ensurePvpFightNumRewardIsMutable() {
        if (!((bitField1_ & 0x04000000) == 0x04000000)) {
          pvpFightNumReward_ = new java.util.ArrayList<java.lang.Integer>(pvpFightNumReward_);
          bitField1_ |= 0x04000000;
         }
      }
      /**
       * <code>repeated int32 pvpFightNumReward = 71;</code>
       *
       * <pre>
       *战斗胜利次数奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPvpFightNumRewardList() {
        return java.util.Collections.unmodifiableList(pvpFightNumReward_);
      }
      /**
       * <code>repeated int32 pvpFightNumReward = 71;</code>
       *
       * <pre>
       *战斗胜利次数奖励
       * </pre>
       */
      public int getPvpFightNumRewardCount() {
        return pvpFightNumReward_.size();
      }
      /**
       * <code>repeated int32 pvpFightNumReward = 71;</code>
       *
       * <pre>
       *战斗胜利次数奖励
       * </pre>
       */
      public int getPvpFightNumReward(int index) {
        return pvpFightNumReward_.get(index);
      }
      /**
       * <code>repeated int32 pvpFightNumReward = 71;</code>
       *
       * <pre>
       *战斗胜利次数奖励
       * </pre>
       */
      public Builder setPvpFightNumReward(
          int index, int value) {
        ensurePvpFightNumRewardIsMutable();
        pvpFightNumReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pvpFightNumReward = 71;</code>
       *
       * <pre>
       *战斗胜利次数奖励
       * </pre>
       */
      public Builder addPvpFightNumReward(int value) {
        ensurePvpFightNumRewardIsMutable();
        pvpFightNumReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pvpFightNumReward = 71;</code>
       *
       * <pre>
       *战斗胜利次数奖励
       * </pre>
       */
      public Builder addAllPvpFightNumReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePvpFightNumRewardIsMutable();
        super.addAll(values, pvpFightNumReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pvpFightNumReward = 71;</code>
       *
       * <pre>
       *战斗胜利次数奖励
       * </pre>
       */
      public Builder clearPvpFightNumReward() {
        pvpFightNumReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x04000000);
        onChanged();
        return this;
      }

      // repeated int32 drawCardReward = 72;
      private java.util.List<java.lang.Integer> drawCardReward_ = java.util.Collections.emptyList();
      private void ensureDrawCardRewardIsMutable() {
        if (!((bitField1_ & 0x08000000) == 0x08000000)) {
          drawCardReward_ = new java.util.ArrayList<java.lang.Integer>(drawCardReward_);
          bitField1_ |= 0x08000000;
         }
      }
      /**
       * <code>repeated int32 drawCardReward = 72;</code>
       *
       * <pre>
       *领取抽卡次数奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDrawCardRewardList() {
        return java.util.Collections.unmodifiableList(drawCardReward_);
      }
      /**
       * <code>repeated int32 drawCardReward = 72;</code>
       *
       * <pre>
       *领取抽卡次数奖励
       * </pre>
       */
      public int getDrawCardRewardCount() {
        return drawCardReward_.size();
      }
      /**
       * <code>repeated int32 drawCardReward = 72;</code>
       *
       * <pre>
       *领取抽卡次数奖励
       * </pre>
       */
      public int getDrawCardReward(int index) {
        return drawCardReward_.get(index);
      }
      /**
       * <code>repeated int32 drawCardReward = 72;</code>
       *
       * <pre>
       *领取抽卡次数奖励
       * </pre>
       */
      public Builder setDrawCardReward(
          int index, int value) {
        ensureDrawCardRewardIsMutable();
        drawCardReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 drawCardReward = 72;</code>
       *
       * <pre>
       *领取抽卡次数奖励
       * </pre>
       */
      public Builder addDrawCardReward(int value) {
        ensureDrawCardRewardIsMutable();
        drawCardReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 drawCardReward = 72;</code>
       *
       * <pre>
       *领取抽卡次数奖励
       * </pre>
       */
      public Builder addAllDrawCardReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDrawCardRewardIsMutable();
        super.addAll(values, drawCardReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 drawCardReward = 72;</code>
       *
       * <pre>
       *领取抽卡次数奖励
       * </pre>
       */
      public Builder clearDrawCardReward() {
        drawCardReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x08000000);
        onChanged();
        return this;
      }

      // optional uint64 gainBuyStamina = 73;
      private long gainBuyStamina_ ;
      /**
       * <code>optional uint64 gainBuyStamina = 73;</code>
       *
       * <pre>
       *领取购买体力奖励的时间
       * </pre>
       */
      public boolean hasGainBuyStamina() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional uint64 gainBuyStamina = 73;</code>
       *
       * <pre>
       *领取购买体力奖励的时间
       * </pre>
       */
      public long getGainBuyStamina() {
        return gainBuyStamina_;
      }
      /**
       * <code>optional uint64 gainBuyStamina = 73;</code>
       *
       * <pre>
       *领取购买体力奖励的时间
       * </pre>
       */
      public Builder setGainBuyStamina(long value) {
        bitField1_ |= 0x10000000;
        gainBuyStamina_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gainBuyStamina = 73;</code>
       *
       * <pre>
       *领取购买体力奖励的时间
       * </pre>
       */
      public Builder clearGainBuyStamina() {
        bitField1_ = (bitField1_ & ~0x10000000);
        gainBuyStamina_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 gainBuySpiritReward = 74;
      private long gainBuySpiritReward_ ;
      /**
       * <code>optional uint64 gainBuySpiritReward = 74;</code>
       *
       * <pre>
       *领取购买精力奖励的时间
       * </pre>
       */
      public boolean hasGainBuySpiritReward() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint64 gainBuySpiritReward = 74;</code>
       *
       * <pre>
       *领取购买精力奖励的时间
       * </pre>
       */
      public long getGainBuySpiritReward() {
        return gainBuySpiritReward_;
      }
      /**
       * <code>optional uint64 gainBuySpiritReward = 74;</code>
       *
       * <pre>
       *领取购买精力奖励的时间
       * </pre>
       */
      public Builder setGainBuySpiritReward(long value) {
        bitField1_ |= 0x20000000;
        gainBuySpiritReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gainBuySpiritReward = 74;</code>
       *
       * <pre>
       *领取购买精力奖励的时间
       * </pre>
       */
      public Builder clearGainBuySpiritReward() {
        bitField1_ = (bitField1_ & ~0x20000000);
        gainBuySpiritReward_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 gainQiuYuanReward = 75;
      private java.util.List<java.lang.Integer> gainQiuYuanReward_ = java.util.Collections.emptyList();
      private void ensureGainQiuYuanRewardIsMutable() {
        if (!((bitField1_ & 0x40000000) == 0x40000000)) {
          gainQiuYuanReward_ = new java.util.ArrayList<java.lang.Integer>(gainQiuYuanReward_);
          bitField1_ |= 0x40000000;
         }
      }
      /**
       * <code>repeated int32 gainQiuYuanReward = 75;</code>
       *
       * <pre>
       *领取过的求缘奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGainQiuYuanRewardList() {
        return java.util.Collections.unmodifiableList(gainQiuYuanReward_);
      }
      /**
       * <code>repeated int32 gainQiuYuanReward = 75;</code>
       *
       * <pre>
       *领取过的求缘奖励
       * </pre>
       */
      public int getGainQiuYuanRewardCount() {
        return gainQiuYuanReward_.size();
      }
      /**
       * <code>repeated int32 gainQiuYuanReward = 75;</code>
       *
       * <pre>
       *领取过的求缘奖励
       * </pre>
       */
      public int getGainQiuYuanReward(int index) {
        return gainQiuYuanReward_.get(index);
      }
      /**
       * <code>repeated int32 gainQiuYuanReward = 75;</code>
       *
       * <pre>
       *领取过的求缘奖励
       * </pre>
       */
      public Builder setGainQiuYuanReward(
          int index, int value) {
        ensureGainQiuYuanRewardIsMutable();
        gainQiuYuanReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainQiuYuanReward = 75;</code>
       *
       * <pre>
       *领取过的求缘奖励
       * </pre>
       */
      public Builder addGainQiuYuanReward(int value) {
        ensureGainQiuYuanRewardIsMutable();
        gainQiuYuanReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainQiuYuanReward = 75;</code>
       *
       * <pre>
       *领取过的求缘奖励
       * </pre>
       */
      public Builder addAllGainQiuYuanReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGainQiuYuanRewardIsMutable();
        super.addAll(values, gainQiuYuanReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainQiuYuanReward = 75;</code>
       *
       * <pre>
       *领取过的求缘奖励
       * </pre>
       */
      public Builder clearGainQiuYuanReward() {
        gainQiuYuanReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x40000000);
        onChanged();
        return this;
      }

      // repeated int32 gainLvUpReward = 76;
      private java.util.List<java.lang.Integer> gainLvUpReward_ = java.util.Collections.emptyList();
      private void ensureGainLvUpRewardIsMutable() {
        if (!((bitField1_ & 0x80000000) == 0x80000000)) {
          gainLvUpReward_ = new java.util.ArrayList<java.lang.Integer>(gainLvUpReward_);
          bitField1_ |= 0x80000000;
         }
      }
      /**
       * <code>repeated int32 gainLvUpReward = 76;</code>
       *
       * <pre>
       * 领取过的升级奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGainLvUpRewardList() {
        return java.util.Collections.unmodifiableList(gainLvUpReward_);
      }
      /**
       * <code>repeated int32 gainLvUpReward = 76;</code>
       *
       * <pre>
       * 领取过的升级奖励
       * </pre>
       */
      public int getGainLvUpRewardCount() {
        return gainLvUpReward_.size();
      }
      /**
       * <code>repeated int32 gainLvUpReward = 76;</code>
       *
       * <pre>
       * 领取过的升级奖励
       * </pre>
       */
      public int getGainLvUpReward(int index) {
        return gainLvUpReward_.get(index);
      }
      /**
       * <code>repeated int32 gainLvUpReward = 76;</code>
       *
       * <pre>
       * 领取过的升级奖励
       * </pre>
       */
      public Builder setGainLvUpReward(
          int index, int value) {
        ensureGainLvUpRewardIsMutable();
        gainLvUpReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainLvUpReward = 76;</code>
       *
       * <pre>
       * 领取过的升级奖励
       * </pre>
       */
      public Builder addGainLvUpReward(int value) {
        ensureGainLvUpRewardIsMutable();
        gainLvUpReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainLvUpReward = 76;</code>
       *
       * <pre>
       * 领取过的升级奖励
       * </pre>
       */
      public Builder addAllGainLvUpReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGainLvUpRewardIsMutable();
        super.addAll(values, gainLvUpReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainLvUpReward = 76;</code>
       *
       * <pre>
       * 领取过的升级奖励
       * </pre>
       */
      public Builder clearGainLvUpReward() {
        gainLvUpReward_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x80000000);
        onChanged();
        return this;
      }

      // repeated int32 gainChapterReward = 77;
      private java.util.List<java.lang.Integer> gainChapterReward_ = java.util.Collections.emptyList();
      private void ensureGainChapterRewardIsMutable() {
        if (!((bitField2_ & 0x00000001) == 0x00000001)) {
          gainChapterReward_ = new java.util.ArrayList<java.lang.Integer>(gainChapterReward_);
          bitField2_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 gainChapterReward = 77;</code>
       *
       * <pre>
       *章节奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGainChapterRewardList() {
        return java.util.Collections.unmodifiableList(gainChapterReward_);
      }
      /**
       * <code>repeated int32 gainChapterReward = 77;</code>
       *
       * <pre>
       *章节奖励
       * </pre>
       */
      public int getGainChapterRewardCount() {
        return gainChapterReward_.size();
      }
      /**
       * <code>repeated int32 gainChapterReward = 77;</code>
       *
       * <pre>
       *章节奖励
       * </pre>
       */
      public int getGainChapterReward(int index) {
        return gainChapterReward_.get(index);
      }
      /**
       * <code>repeated int32 gainChapterReward = 77;</code>
       *
       * <pre>
       *章节奖励
       * </pre>
       */
      public Builder setGainChapterReward(
          int index, int value) {
        ensureGainChapterRewardIsMutable();
        gainChapterReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainChapterReward = 77;</code>
       *
       * <pre>
       *章节奖励
       * </pre>
       */
      public Builder addGainChapterReward(int value) {
        ensureGainChapterRewardIsMutable();
        gainChapterReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainChapterReward = 77;</code>
       *
       * <pre>
       *章节奖励
       * </pre>
       */
      public Builder addAllGainChapterReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGainChapterRewardIsMutable();
        super.addAll(values, gainChapterReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainChapterReward = 77;</code>
       *
       * <pre>
       *章节奖励
       * </pre>
       */
      public Builder clearGainChapterReward() {
        gainChapterReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 gainChapterStarReward = 79;
      private java.util.List<java.lang.Integer> gainChapterStarReward_ = java.util.Collections.emptyList();
      private void ensureGainChapterStarRewardIsMutable() {
        if (!((bitField2_ & 0x00000002) == 0x00000002)) {
          gainChapterStarReward_ = new java.util.ArrayList<java.lang.Integer>(gainChapterStarReward_);
          bitField2_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 gainChapterStarReward = 79;</code>
       *
       * <pre>
       *满星奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGainChapterStarRewardList() {
        return java.util.Collections.unmodifiableList(gainChapterStarReward_);
      }
      /**
       * <code>repeated int32 gainChapterStarReward = 79;</code>
       *
       * <pre>
       *满星奖励
       * </pre>
       */
      public int getGainChapterStarRewardCount() {
        return gainChapterStarReward_.size();
      }
      /**
       * <code>repeated int32 gainChapterStarReward = 79;</code>
       *
       * <pre>
       *满星奖励
       * </pre>
       */
      public int getGainChapterStarReward(int index) {
        return gainChapterStarReward_.get(index);
      }
      /**
       * <code>repeated int32 gainChapterStarReward = 79;</code>
       *
       * <pre>
       *满星奖励
       * </pre>
       */
      public Builder setGainChapterStarReward(
          int index, int value) {
        ensureGainChapterStarRewardIsMutable();
        gainChapterStarReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainChapterStarReward = 79;</code>
       *
       * <pre>
       *满星奖励
       * </pre>
       */
      public Builder addGainChapterStarReward(int value) {
        ensureGainChapterStarRewardIsMutable();
        gainChapterStarReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainChapterStarReward = 79;</code>
       *
       * <pre>
       *满星奖励
       * </pre>
       */
      public Builder addAllGainChapterStarReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGainChapterStarRewardIsMutable();
        super.addAll(values, gainChapterStarReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainChapterStarReward = 79;</code>
       *
       * <pre>
       *满星奖励
       * </pre>
       */
      public Builder clearGainChapterStarReward() {
        gainChapterStarReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 gainFriendNumReward = 80;
      private java.util.List<java.lang.Integer> gainFriendNumReward_ = java.util.Collections.emptyList();
      private void ensureGainFriendNumRewardIsMutable() {
        if (!((bitField2_ & 0x00000004) == 0x00000004)) {
          gainFriendNumReward_ = new java.util.ArrayList<java.lang.Integer>(gainFriendNumReward_);
          bitField2_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 gainFriendNumReward = 80;</code>
       *
       * <pre>
       *好友数量奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGainFriendNumRewardList() {
        return java.util.Collections.unmodifiableList(gainFriendNumReward_);
      }
      /**
       * <code>repeated int32 gainFriendNumReward = 80;</code>
       *
       * <pre>
       *好友数量奖励
       * </pre>
       */
      public int getGainFriendNumRewardCount() {
        return gainFriendNumReward_.size();
      }
      /**
       * <code>repeated int32 gainFriendNumReward = 80;</code>
       *
       * <pre>
       *好友数量奖励
       * </pre>
       */
      public int getGainFriendNumReward(int index) {
        return gainFriendNumReward_.get(index);
      }
      /**
       * <code>repeated int32 gainFriendNumReward = 80;</code>
       *
       * <pre>
       *好友数量奖励
       * </pre>
       */
      public Builder setGainFriendNumReward(
          int index, int value) {
        ensureGainFriendNumRewardIsMutable();
        gainFriendNumReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainFriendNumReward = 80;</code>
       *
       * <pre>
       *好友数量奖励
       * </pre>
       */
      public Builder addGainFriendNumReward(int value) {
        ensureGainFriendNumRewardIsMutable();
        gainFriendNumReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainFriendNumReward = 80;</code>
       *
       * <pre>
       *好友数量奖励
       * </pre>
       */
      public Builder addAllGainFriendNumReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGainFriendNumRewardIsMutable();
        super.addAll(values, gainFriendNumReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainFriendNumReward = 80;</code>
       *
       * <pre>
       *好友数量奖励
       * </pre>
       */
      public Builder clearGainFriendNumReward() {
        gainFriendNumReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 gainCardReward = 81;
      private java.util.List<java.lang.Integer> gainCardReward_ = java.util.Collections.emptyList();
      private void ensureGainCardRewardIsMutable() {
        if (!((bitField2_ & 0x00000008) == 0x00000008)) {
          gainCardReward_ = new java.util.ArrayList<java.lang.Integer>(gainCardReward_);
          bitField2_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 gainCardReward = 81;</code>
       *
       * <pre>
       *特殊卡牌奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGainCardRewardList() {
        return java.util.Collections.unmodifiableList(gainCardReward_);
      }
      /**
       * <code>repeated int32 gainCardReward = 81;</code>
       *
       * <pre>
       *特殊卡牌奖励
       * </pre>
       */
      public int getGainCardRewardCount() {
        return gainCardReward_.size();
      }
      /**
       * <code>repeated int32 gainCardReward = 81;</code>
       *
       * <pre>
       *特殊卡牌奖励
       * </pre>
       */
      public int getGainCardReward(int index) {
        return gainCardReward_.get(index);
      }
      /**
       * <code>repeated int32 gainCardReward = 81;</code>
       *
       * <pre>
       *特殊卡牌奖励
       * </pre>
       */
      public Builder setGainCardReward(
          int index, int value) {
        ensureGainCardRewardIsMutable();
        gainCardReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainCardReward = 81;</code>
       *
       * <pre>
       *特殊卡牌奖励
       * </pre>
       */
      public Builder addGainCardReward(int value) {
        ensureGainCardRewardIsMutable();
        gainCardReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainCardReward = 81;</code>
       *
       * <pre>
       *特殊卡牌奖励
       * </pre>
       */
      public Builder addAllGainCardReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGainCardRewardIsMutable();
        super.addAll(values, gainCardReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainCardReward = 81;</code>
       *
       * <pre>
       *特殊卡牌奖励
       * </pre>
       */
      public Builder clearGainCardReward() {
        gainCardReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 gainItemReward = 82;
      private java.util.List<java.lang.Integer> gainItemReward_ = java.util.Collections.emptyList();
      private void ensureGainItemRewardIsMutable() {
        if (!((bitField2_ & 0x00000010) == 0x00000010)) {
          gainItemReward_ = new java.util.ArrayList<java.lang.Integer>(gainItemReward_);
          bitField2_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 gainItemReward = 82;</code>
       *
       * <pre>
       *特殊装备奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGainItemRewardList() {
        return java.util.Collections.unmodifiableList(gainItemReward_);
      }
      /**
       * <code>repeated int32 gainItemReward = 82;</code>
       *
       * <pre>
       *特殊装备奖励
       * </pre>
       */
      public int getGainItemRewardCount() {
        return gainItemReward_.size();
      }
      /**
       * <code>repeated int32 gainItemReward = 82;</code>
       *
       * <pre>
       *特殊装备奖励
       * </pre>
       */
      public int getGainItemReward(int index) {
        return gainItemReward_.get(index);
      }
      /**
       * <code>repeated int32 gainItemReward = 82;</code>
       *
       * <pre>
       *特殊装备奖励
       * </pre>
       */
      public Builder setGainItemReward(
          int index, int value) {
        ensureGainItemRewardIsMutable();
        gainItemReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainItemReward = 82;</code>
       *
       * <pre>
       *特殊装备奖励
       * </pre>
       */
      public Builder addGainItemReward(int value) {
        ensureGainItemRewardIsMutable();
        gainItemReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainItemReward = 82;</code>
       *
       * <pre>
       *特殊装备奖励
       * </pre>
       */
      public Builder addAllGainItemReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGainItemRewardIsMutable();
        super.addAll(values, gainItemReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gainItemReward = 82;</code>
       *
       * <pre>
       *特殊装备奖励
       * </pre>
       */
      public Builder clearGainItemReward() {
        gainItemReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional uint64 gainEveryDayTili = 83;
      private long gainEveryDayTili_ ;
      /**
       * <code>optional uint64 gainEveryDayTili = 83;</code>
       *
       * <pre>
       *每天登陆领取体力
       * </pre>
       */
      public boolean hasGainEveryDayTili() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 gainEveryDayTili = 83;</code>
       *
       * <pre>
       *每天登陆领取体力
       * </pre>
       */
      public long getGainEveryDayTili() {
        return gainEveryDayTili_;
      }
      /**
       * <code>optional uint64 gainEveryDayTili = 83;</code>
       *
       * <pre>
       *每天登陆领取体力
       * </pre>
       */
      public Builder setGainEveryDayTili(long value) {
        bitField2_ |= 0x00000020;
        gainEveryDayTili_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gainEveryDayTili = 83;</code>
       *
       * <pre>
       *每天登陆领取体力
       * </pre>
       */
      public Builder clearGainEveryDayTili() {
        bitField2_ = (bitField2_ & ~0x00000020);
        gainEveryDayTili_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 gainEveryDayGold = 84;
      private long gainEveryDayGold_ ;
      /**
       * <code>optional uint64 gainEveryDayGold = 84;</code>
       *
       * <pre>
       *每天登陆领取元宝
       * </pre>
       */
      public boolean hasGainEveryDayGold() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 gainEveryDayGold = 84;</code>
       *
       * <pre>
       *每天登陆领取元宝
       * </pre>
       */
      public long getGainEveryDayGold() {
        return gainEveryDayGold_;
      }
      /**
       * <code>optional uint64 gainEveryDayGold = 84;</code>
       *
       * <pre>
       *每天登陆领取元宝
       * </pre>
       */
      public Builder setGainEveryDayGold(long value) {
        bitField2_ |= 0x00000040;
        gainEveryDayGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gainEveryDayGold = 84;</code>
       *
       * <pre>
       *每天登陆领取元宝
       * </pre>
       */
      public Builder clearGainEveryDayGold() {
        bitField2_ = (bitField2_ & ~0x00000040);
        gainEveryDayGold_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 receiveXianYuan = 85;
      private int receiveXianYuan_ ;
      /**
       * <code>optional int32 receiveXianYuan = 85;</code>
       *
       * <pre>
       *可领取的仙缘值
       * </pre>
       */
      public boolean hasReceiveXianYuan() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 receiveXianYuan = 85;</code>
       *
       * <pre>
       *可领取的仙缘值
       * </pre>
       */
      public int getReceiveXianYuan() {
        return receiveXianYuan_;
      }
      /**
       * <code>optional int32 receiveXianYuan = 85;</code>
       *
       * <pre>
       *可领取的仙缘值
       * </pre>
       */
      public Builder setReceiveXianYuan(int value) {
        bitField2_ |= 0x00000080;
        receiveXianYuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 receiveXianYuan = 85;</code>
       *
       * <pre>
       *可领取的仙缘值
       * </pre>
       */
      public Builder clearReceiveXianYuan() {
        bitField2_ = (bitField2_ & ~0x00000080);
        receiveXianYuan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 drawCardTimes = 87;
      private int drawCardTimes_ ;
      /**
       * <code>optional int32 drawCardTimes = 87;</code>
       *
       * <pre>
       *当天抽卡次数
       * </pre>
       */
      public boolean hasDrawCardTimes() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 drawCardTimes = 87;</code>
       *
       * <pre>
       *当天抽卡次数
       * </pre>
       */
      public int getDrawCardTimes() {
        return drawCardTimes_;
      }
      /**
       * <code>optional int32 drawCardTimes = 87;</code>
       *
       * <pre>
       *当天抽卡次数
       * </pre>
       */
      public Builder setDrawCardTimes(int value) {
        bitField2_ |= 0x00000100;
        drawCardTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 drawCardTimes = 87;</code>
       *
       * <pre>
       *当天抽卡次数
       * </pre>
       */
      public Builder clearDrawCardTimes() {
        bitField2_ = (bitField2_ & ~0x00000100);
        drawCardTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pvpFightWinNum = 88;
      private int pvpFightWinNum_ ;
      /**
       * <code>optional int32 pvpFightWinNum = 88;</code>
       *
       * <pre>
       *pvp战斗胜利次数
       * </pre>
       */
      public boolean hasPvpFightWinNum() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 pvpFightWinNum = 88;</code>
       *
       * <pre>
       *pvp战斗胜利次数
       * </pre>
       */
      public int getPvpFightWinNum() {
        return pvpFightWinNum_;
      }
      /**
       * <code>optional int32 pvpFightWinNum = 88;</code>
       *
       * <pre>
       *pvp战斗胜利次数
       * </pre>
       */
      public Builder setPvpFightWinNum(int value) {
        bitField2_ |= 0x00000200;
        pvpFightWinNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpFightWinNum = 88;</code>
       *
       * <pre>
       *pvp战斗胜利次数
       * </pre>
       */
      public Builder clearPvpFightWinNum() {
        bitField2_ = (bitField2_ & ~0x00000200);
        pvpFightWinNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 multiLoginDays = 89;
      private int multiLoginDays_ ;
      /**
       * <code>optional int32 multiLoginDays = 89;</code>
       *
       * <pre>
       *连续登陆天数
       * </pre>
       */
      public boolean hasMultiLoginDays() {
        return ((bitField2_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 multiLoginDays = 89;</code>
       *
       * <pre>
       *连续登陆天数
       * </pre>
       */
      public int getMultiLoginDays() {
        return multiLoginDays_;
      }
      /**
       * <code>optional int32 multiLoginDays = 89;</code>
       *
       * <pre>
       *连续登陆天数
       * </pre>
       */
      public Builder setMultiLoginDays(int value) {
        bitField2_ |= 0x00000400;
        multiLoginDays_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 multiLoginDays = 89;</code>
       *
       * <pre>
       *连续登陆天数
       * </pre>
       */
      public Builder clearMultiLoginDays() {
        bitField2_ = (bitField2_ & ~0x00000400);
        multiLoginDays_ = 0;
        onChanged();
        return this;
      }

      // optional int64 totalPayGold = 90;
      private long totalPayGold_ ;
      /**
       * <code>optional int64 totalPayGold = 90;</code>
       *
       * <pre>
       *总充值元宝 只多不少
       * </pre>
       */
      public boolean hasTotalPayGold() {
        return ((bitField2_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 totalPayGold = 90;</code>
       *
       * <pre>
       *总充值元宝 只多不少
       * </pre>
       */
      public long getTotalPayGold() {
        return totalPayGold_;
      }
      /**
       * <code>optional int64 totalPayGold = 90;</code>
       *
       * <pre>
       *总充值元宝 只多不少
       * </pre>
       */
      public Builder setTotalPayGold(long value) {
        bitField2_ |= 0x00000800;
        totalPayGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 totalPayGold = 90;</code>
       *
       * <pre>
       *总充值元宝 只多不少
       * </pre>
       */
      public Builder clearTotalPayGold() {
        bitField2_ = (bitField2_ & ~0x00000800);
        totalPayGold_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 amountPaymentReward = 91;
      private java.util.List<java.lang.Integer> amountPaymentReward_ = java.util.Collections.emptyList();
      private void ensureAmountPaymentRewardIsMutable() {
        if (!((bitField2_ & 0x00001000) == 0x00001000)) {
          amountPaymentReward_ = new java.util.ArrayList<java.lang.Integer>(amountPaymentReward_);
          bitField2_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 amountPaymentReward = 91;</code>
       *
       * <pre>
       * 领取过的充值奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAmountPaymentRewardList() {
        return java.util.Collections.unmodifiableList(amountPaymentReward_);
      }
      /**
       * <code>repeated int32 amountPaymentReward = 91;</code>
       *
       * <pre>
       * 领取过的充值奖励
       * </pre>
       */
      public int getAmountPaymentRewardCount() {
        return amountPaymentReward_.size();
      }
      /**
       * <code>repeated int32 amountPaymentReward = 91;</code>
       *
       * <pre>
       * 领取过的充值奖励
       * </pre>
       */
      public int getAmountPaymentReward(int index) {
        return amountPaymentReward_.get(index);
      }
      /**
       * <code>repeated int32 amountPaymentReward = 91;</code>
       *
       * <pre>
       * 领取过的充值奖励
       * </pre>
       */
      public Builder setAmountPaymentReward(
          int index, int value) {
        ensureAmountPaymentRewardIsMutable();
        amountPaymentReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 amountPaymentReward = 91;</code>
       *
       * <pre>
       * 领取过的充值奖励
       * </pre>
       */
      public Builder addAmountPaymentReward(int value) {
        ensureAmountPaymentRewardIsMutable();
        amountPaymentReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 amountPaymentReward = 91;</code>
       *
       * <pre>
       * 领取过的充值奖励
       * </pre>
       */
      public Builder addAllAmountPaymentReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAmountPaymentRewardIsMutable();
        super.addAll(values, amountPaymentReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 amountPaymentReward = 91;</code>
       *
       * <pre>
       * 领取过的充值奖励
       * </pre>
       */
      public Builder clearAmountPaymentReward() {
        amountPaymentReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated .MissionItem missionsDaily = 93;
      private java.util.List<myudfs.Common.MissionItem> missionsDaily_ =
        java.util.Collections.emptyList();
      private void ensureMissionsDailyIsMutable() {
        if (!((bitField2_ & 0x00002000) == 0x00002000)) {
          missionsDaily_ = new java.util.ArrayList<myudfs.Common.MissionItem>(missionsDaily_);
          bitField2_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MissionItem, myudfs.Common.MissionItem.Builder, myudfs.Common.MissionItemOrBuilder> missionsDailyBuilder_;

      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public java.util.List<myudfs.Common.MissionItem> getMissionsDailyList() {
        if (missionsDailyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(missionsDaily_);
        } else {
          return missionsDailyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public int getMissionsDailyCount() {
        if (missionsDailyBuilder_ == null) {
          return missionsDaily_.size();
        } else {
          return missionsDailyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public myudfs.Common.MissionItem getMissionsDaily(int index) {
        if (missionsDailyBuilder_ == null) {
          return missionsDaily_.get(index);
        } else {
          return missionsDailyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder setMissionsDaily(
          int index, myudfs.Common.MissionItem value) {
        if (missionsDailyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionsDailyIsMutable();
          missionsDaily_.set(index, value);
          onChanged();
        } else {
          missionsDailyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder setMissionsDaily(
          int index, myudfs.Common.MissionItem.Builder builderForValue) {
        if (missionsDailyBuilder_ == null) {
          ensureMissionsDailyIsMutable();
          missionsDaily_.set(index, builderForValue.build());
          onChanged();
        } else {
          missionsDailyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder addMissionsDaily(myudfs.Common.MissionItem value) {
        if (missionsDailyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionsDailyIsMutable();
          missionsDaily_.add(value);
          onChanged();
        } else {
          missionsDailyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder addMissionsDaily(
          int index, myudfs.Common.MissionItem value) {
        if (missionsDailyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionsDailyIsMutable();
          missionsDaily_.add(index, value);
          onChanged();
        } else {
          missionsDailyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder addMissionsDaily(
          myudfs.Common.MissionItem.Builder builderForValue) {
        if (missionsDailyBuilder_ == null) {
          ensureMissionsDailyIsMutable();
          missionsDaily_.add(builderForValue.build());
          onChanged();
        } else {
          missionsDailyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder addMissionsDaily(
          int index, myudfs.Common.MissionItem.Builder builderForValue) {
        if (missionsDailyBuilder_ == null) {
          ensureMissionsDailyIsMutable();
          missionsDaily_.add(index, builderForValue.build());
          onChanged();
        } else {
          missionsDailyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder addAllMissionsDaily(
          java.lang.Iterable<? extends myudfs.Common.MissionItem> values) {
        if (missionsDailyBuilder_ == null) {
          ensureMissionsDailyIsMutable();
          super.addAll(values, missionsDaily_);
          onChanged();
        } else {
          missionsDailyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder clearMissionsDaily() {
        if (missionsDailyBuilder_ == null) {
          missionsDaily_ = java.util.Collections.emptyList();
          bitField2_ = (bitField2_ & ~0x00002000);
          onChanged();
        } else {
          missionsDailyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public Builder removeMissionsDaily(int index) {
        if (missionsDailyBuilder_ == null) {
          ensureMissionsDailyIsMutable();
          missionsDaily_.remove(index);
          onChanged();
        } else {
          missionsDailyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public myudfs.Common.MissionItem.Builder getMissionsDailyBuilder(
          int index) {
        return getMissionsDailyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public myudfs.Common.MissionItemOrBuilder getMissionsDailyOrBuilder(
          int index) {
        if (missionsDailyBuilder_ == null) {
          return missionsDaily_.get(index);  } else {
          return missionsDailyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MissionItemOrBuilder> 
           getMissionsDailyOrBuilderList() {
        if (missionsDailyBuilder_ != null) {
          return missionsDailyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(missionsDaily_);
        }
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public myudfs.Common.MissionItem.Builder addMissionsDailyBuilder() {
        return getMissionsDailyFieldBuilder().addBuilder(
            myudfs.Common.MissionItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public myudfs.Common.MissionItem.Builder addMissionsDailyBuilder(
          int index) {
        return getMissionsDailyFieldBuilder().addBuilder(
            index, myudfs.Common.MissionItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionItem missionsDaily = 93;</code>
       *
       * <pre>
       * 日常任务
       * </pre>
       */
      public java.util.List<myudfs.Common.MissionItem.Builder> 
           getMissionsDailyBuilderList() {
        return getMissionsDailyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MissionItem, myudfs.Common.MissionItem.Builder, myudfs.Common.MissionItemOrBuilder> 
          getMissionsDailyFieldBuilder() {
        if (missionsDailyBuilder_ == null) {
          missionsDailyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MissionItem, myudfs.Common.MissionItem.Builder, myudfs.Common.MissionItemOrBuilder>(
                  missionsDaily_,
                  ((bitField2_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          missionsDaily_ = null;
        }
        return missionsDailyBuilder_;
      }

      // optional bool pvpNewFightFlag = 94;
      private boolean pvpNewFightFlag_ ;
      /**
       * <code>optional bool pvpNewFightFlag = 94;</code>
       *
       * <pre>
       * true:有新的pvp战报
       * </pre>
       */
      public boolean hasPvpNewFightFlag() {
        return ((bitField2_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool pvpNewFightFlag = 94;</code>
       *
       * <pre>
       * true:有新的pvp战报
       * </pre>
       */
      public boolean getPvpNewFightFlag() {
        return pvpNewFightFlag_;
      }
      /**
       * <code>optional bool pvpNewFightFlag = 94;</code>
       *
       * <pre>
       * true:有新的pvp战报
       * </pre>
       */
      public Builder setPvpNewFightFlag(boolean value) {
        bitField2_ |= 0x00004000;
        pvpNewFightFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pvpNewFightFlag = 94;</code>
       *
       * <pre>
       * true:有新的pvp战报
       * </pre>
       */
      public Builder clearPvpNewFightFlag() {
        bitField2_ = (bitField2_ & ~0x00004000);
        pvpNewFightFlag_ = false;
        onChanged();
        return this;
      }

      // optional int32 qiuyuan = 95;
      private int qiuyuan_ ;
      /**
       * <code>optional int32 qiuyuan = 95;</code>
       *
       * <pre>
       * 当天求缘次数
       * </pre>
       */
      public boolean hasQiuyuan() {
        return ((bitField2_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 qiuyuan = 95;</code>
       *
       * <pre>
       * 当天求缘次数
       * </pre>
       */
      public int getQiuyuan() {
        return qiuyuan_;
      }
      /**
       * <code>optional int32 qiuyuan = 95;</code>
       *
       * <pre>
       * 当天求缘次数
       * </pre>
       */
      public Builder setQiuyuan(int value) {
        bitField2_ |= 0x00008000;
        qiuyuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qiuyuan = 95;</code>
       *
       * <pre>
       * 当天求缘次数
       * </pre>
       */
      public Builder clearQiuyuan() {
        bitField2_ = (bitField2_ & ~0x00008000);
        qiuyuan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 qiuyuanGold = 96;
      private int qiuyuanGold_ ;
      /**
       * <code>optional int32 qiuyuanGold = 96;</code>
       *
       * <pre>
       * 当天购买求缘次数
       * </pre>
       */
      public boolean hasQiuyuanGold() {
        return ((bitField2_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 qiuyuanGold = 96;</code>
       *
       * <pre>
       * 当天购买求缘次数
       * </pre>
       */
      public int getQiuyuanGold() {
        return qiuyuanGold_;
      }
      /**
       * <code>optional int32 qiuyuanGold = 96;</code>
       *
       * <pre>
       * 当天购买求缘次数
       * </pre>
       */
      public Builder setQiuyuanGold(int value) {
        bitField2_ |= 0x00010000;
        qiuyuanGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qiuyuanGold = 96;</code>
       *
       * <pre>
       * 当天购买求缘次数
       * </pre>
       */
      public Builder clearQiuyuanGold() {
        bitField2_ = (bitField2_ & ~0x00010000);
        qiuyuanGold_ = 0;
        onChanged();
        return this;
      }

      // optional bool newMail = 97;
      private boolean newMail_ ;
      /**
       * <code>optional bool newMail = 97;</code>
       *
       * <pre>
       * 是否有新邮件
       * </pre>
       */
      public boolean hasNewMail() {
        return ((bitField2_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool newMail = 97;</code>
       *
       * <pre>
       * 是否有新邮件
       * </pre>
       */
      public boolean getNewMail() {
        return newMail_;
      }
      /**
       * <code>optional bool newMail = 97;</code>
       *
       * <pre>
       * 是否有新邮件
       * </pre>
       */
      public Builder setNewMail(boolean value) {
        bitField2_ |= 0x00020000;
        newMail_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool newMail = 97;</code>
       *
       * <pre>
       * 是否有新邮件
       * </pre>
       */
      public Builder clearNewMail() {
        bitField2_ = (bitField2_ & ~0x00020000);
        newMail_ = false;
        onChanged();
        return this;
      }

      // optional int32 pvpWinNum = 98;
      private int pvpWinNum_ ;
      /**
       * <code>optional int32 pvpWinNum = 98;</code>
       *
       * <pre>
       *每日pvp胜利次数
       * </pre>
       */
      public boolean hasPvpWinNum() {
        return ((bitField2_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 pvpWinNum = 98;</code>
       *
       * <pre>
       *每日pvp胜利次数
       * </pre>
       */
      public int getPvpWinNum() {
        return pvpWinNum_;
      }
      /**
       * <code>optional int32 pvpWinNum = 98;</code>
       *
       * <pre>
       *每日pvp胜利次数
       * </pre>
       */
      public Builder setPvpWinNum(int value) {
        bitField2_ |= 0x00040000;
        pvpWinNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpWinNum = 98;</code>
       *
       * <pre>
       *每日pvp胜利次数
       * </pre>
       */
      public Builder clearPvpWinNum() {
        bitField2_ = (bitField2_ & ~0x00040000);
        pvpWinNum_ = 0;
        onChanged();
        return this;
      }

      // optional bool firstPayReward = 99;
      private boolean firstPayReward_ ;
      /**
       * <code>optional bool firstPayReward = 99;</code>
       *
       * <pre>
       * false:未领取过首充奖励 true:已领取过首充奖励
       * </pre>
       */
      public boolean hasFirstPayReward() {
        return ((bitField2_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool firstPayReward = 99;</code>
       *
       * <pre>
       * false:未领取过首充奖励 true:已领取过首充奖励
       * </pre>
       */
      public boolean getFirstPayReward() {
        return firstPayReward_;
      }
      /**
       * <code>optional bool firstPayReward = 99;</code>
       *
       * <pre>
       * false:未领取过首充奖励 true:已领取过首充奖励
       * </pre>
       */
      public Builder setFirstPayReward(boolean value) {
        bitField2_ |= 0x00080000;
        firstPayReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool firstPayReward = 99;</code>
       *
       * <pre>
       * false:未领取过首充奖励 true:已领取过首充奖励
       * </pre>
       */
      public Builder clearFirstPayReward() {
        bitField2_ = (bitField2_ & ~0x00080000);
        firstPayReward_ = false;
        onChanged();
        return this;
      }

      // repeated int32 vipGifts = 100;
      private java.util.List<java.lang.Integer> vipGifts_ = java.util.Collections.emptyList();
      private void ensureVipGiftsIsMutable() {
        if (!((bitField2_ & 0x00100000) == 0x00100000)) {
          vipGifts_ = new java.util.ArrayList<java.lang.Integer>(vipGifts_);
          bitField2_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 vipGifts = 100;</code>
       *
       * <pre>
       *领取过的vip礼包
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getVipGiftsList() {
        return java.util.Collections.unmodifiableList(vipGifts_);
      }
      /**
       * <code>repeated int32 vipGifts = 100;</code>
       *
       * <pre>
       *领取过的vip礼包
       * </pre>
       */
      public int getVipGiftsCount() {
        return vipGifts_.size();
      }
      /**
       * <code>repeated int32 vipGifts = 100;</code>
       *
       * <pre>
       *领取过的vip礼包
       * </pre>
       */
      public int getVipGifts(int index) {
        return vipGifts_.get(index);
      }
      /**
       * <code>repeated int32 vipGifts = 100;</code>
       *
       * <pre>
       *领取过的vip礼包
       * </pre>
       */
      public Builder setVipGifts(
          int index, int value) {
        ensureVipGiftsIsMutable();
        vipGifts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vipGifts = 100;</code>
       *
       * <pre>
       *领取过的vip礼包
       * </pre>
       */
      public Builder addVipGifts(int value) {
        ensureVipGiftsIsMutable();
        vipGifts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vipGifts = 100;</code>
       *
       * <pre>
       *领取过的vip礼包
       * </pre>
       */
      public Builder addAllVipGifts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureVipGiftsIsMutable();
        super.addAll(values, vipGifts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vipGifts = 100;</code>
       *
       * <pre>
       *领取过的vip礼包
       * </pre>
       */
      public Builder clearVipGifts() {
        vipGifts_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x00100000);
        onChanged();
        return this;
      }

      // optional bool vipReward = 101;
      private boolean vipReward_ ;
      /**
       * <code>optional bool vipReward = 101;</code>
       *
       * <pre>
       * 今天是否领取了月卡奖励 ture：领取了
       * </pre>
       */
      public boolean hasVipReward() {
        return ((bitField2_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool vipReward = 101;</code>
       *
       * <pre>
       * 今天是否领取了月卡奖励 ture：领取了
       * </pre>
       */
      public boolean getVipReward() {
        return vipReward_;
      }
      /**
       * <code>optional bool vipReward = 101;</code>
       *
       * <pre>
       * 今天是否领取了月卡奖励 ture：领取了
       * </pre>
       */
      public Builder setVipReward(boolean value) {
        bitField2_ |= 0x00200000;
        vipReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool vipReward = 101;</code>
       *
       * <pre>
       * 今天是否领取了月卡奖励 ture：领取了
       * </pre>
       */
      public Builder clearVipReward() {
        bitField2_ = (bitField2_ & ~0x00200000);
        vipReward_ = false;
        onChanged();
        return this;
      }

      // optional int32 vipCard = 102;
      private int vipCard_ ;
      /**
       * <code>optional int32 vipCard = 102;</code>
       *
       * <pre>
       *月卡次数
       * </pre>
       */
      public boolean hasVipCard() {
        return ((bitField2_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 vipCard = 102;</code>
       *
       * <pre>
       *月卡次数
       * </pre>
       */
      public int getVipCard() {
        return vipCard_;
      }
      /**
       * <code>optional int32 vipCard = 102;</code>
       *
       * <pre>
       *月卡次数
       * </pre>
       */
      public Builder setVipCard(int value) {
        bitField2_ |= 0x00400000;
        vipCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipCard = 102;</code>
       *
       * <pre>
       *月卡次数
       * </pre>
       */
      public Builder clearVipCard() {
        bitField2_ = (bitField2_ & ~0x00400000);
        vipCard_ = 0;
        onChanged();
        return this;
      }

      // repeated .MapItem vipAllGift = 103;
      private java.util.List<myudfs.Common.MapItem> vipAllGift_ =
        java.util.Collections.emptyList();
      private void ensureVipAllGiftIsMutable() {
        if (!((bitField2_ & 0x00800000) == 0x00800000)) {
          vipAllGift_ = new java.util.ArrayList<myudfs.Common.MapItem>(vipAllGift_);
          bitField2_ |= 0x00800000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> vipAllGiftBuilder_;

      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public java.util.List<myudfs.Common.MapItem> getVipAllGiftList() {
        if (vipAllGiftBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vipAllGift_);
        } else {
          return vipAllGiftBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public int getVipAllGiftCount() {
        if (vipAllGiftBuilder_ == null) {
          return vipAllGift_.size();
        } else {
          return vipAllGiftBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public myudfs.Common.MapItem getVipAllGift(int index) {
        if (vipAllGiftBuilder_ == null) {
          return vipAllGift_.get(index);
        } else {
          return vipAllGiftBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder setVipAllGift(
          int index, myudfs.Common.MapItem value) {
        if (vipAllGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipAllGiftIsMutable();
          vipAllGift_.set(index, value);
          onChanged();
        } else {
          vipAllGiftBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder setVipAllGift(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (vipAllGiftBuilder_ == null) {
          ensureVipAllGiftIsMutable();
          vipAllGift_.set(index, builderForValue.build());
          onChanged();
        } else {
          vipAllGiftBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder addVipAllGift(myudfs.Common.MapItem value) {
        if (vipAllGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipAllGiftIsMutable();
          vipAllGift_.add(value);
          onChanged();
        } else {
          vipAllGiftBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder addVipAllGift(
          int index, myudfs.Common.MapItem value) {
        if (vipAllGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipAllGiftIsMutable();
          vipAllGift_.add(index, value);
          onChanged();
        } else {
          vipAllGiftBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder addVipAllGift(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (vipAllGiftBuilder_ == null) {
          ensureVipAllGiftIsMutable();
          vipAllGift_.add(builderForValue.build());
          onChanged();
        } else {
          vipAllGiftBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder addVipAllGift(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (vipAllGiftBuilder_ == null) {
          ensureVipAllGiftIsMutable();
          vipAllGift_.add(index, builderForValue.build());
          onChanged();
        } else {
          vipAllGiftBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder addAllVipAllGift(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (vipAllGiftBuilder_ == null) {
          ensureVipAllGiftIsMutable();
          super.addAll(values, vipAllGift_);
          onChanged();
        } else {
          vipAllGiftBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder clearVipAllGift() {
        if (vipAllGiftBuilder_ == null) {
          vipAllGift_ = java.util.Collections.emptyList();
          bitField2_ = (bitField2_ & ~0x00800000);
          onChanged();
        } else {
          vipAllGiftBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public Builder removeVipAllGift(int index) {
        if (vipAllGiftBuilder_ == null) {
          ensureVipAllGiftIsMutable();
          vipAllGift_.remove(index);
          onChanged();
        } else {
          vipAllGiftBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public myudfs.Common.MapItem.Builder getVipAllGiftBuilder(
          int index) {
        return getVipAllGiftFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public myudfs.Common.MapItemOrBuilder getVipAllGiftOrBuilder(
          int index) {
        if (vipAllGiftBuilder_ == null) {
          return vipAllGift_.get(index);  } else {
          return vipAllGiftBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getVipAllGiftOrBuilderList() {
        if (vipAllGiftBuilder_ != null) {
          return vipAllGiftBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vipAllGift_);
        }
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public myudfs.Common.MapItem.Builder addVipAllGiftBuilder() {
        return getVipAllGiftFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public myudfs.Common.MapItem.Builder addVipAllGiftBuilder(
          int index) {
        return getVipAllGiftFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem vipAllGift = 103;</code>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getVipAllGiftBuilderList() {
        return getVipAllGiftFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getVipAllGiftFieldBuilder() {
        if (vipAllGiftBuilder_ == null) {
          vipAllGiftBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  vipAllGift_,
                  ((bitField2_ & 0x00800000) == 0x00800000),
                  getParentForChildren(),
                  isClean());
          vipAllGift_ = null;
        }
        return vipAllGiftBuilder_;
      }

      // optional int32 guideIndex = 104;
      private int guideIndex_ ;
      /**
       * <code>optional int32 guideIndex = 104;</code>
       */
      public boolean hasGuideIndex() {
        return ((bitField2_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 guideIndex = 104;</code>
       */
      public int getGuideIndex() {
        return guideIndex_;
      }
      /**
       * <code>optional int32 guideIndex = 104;</code>
       */
      public Builder setGuideIndex(int value) {
        bitField2_ |= 0x01000000;
        guideIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 guideIndex = 104;</code>
       */
      public Builder clearGuideIndex() {
        bitField2_ = (bitField2_ & ~0x01000000);
        guideIndex_ = 0;
        onChanged();
        return this;
      }

      // optional bool isQianDao = 105;
      private boolean isQianDao_ ;
      /**
       * <code>optional bool isQianDao = 105;</code>
       *
       * <pre>
       * 今天是否签到
       * </pre>
       */
      public boolean hasIsQianDao() {
        return ((bitField2_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool isQianDao = 105;</code>
       *
       * <pre>
       * 今天是否签到
       * </pre>
       */
      public boolean getIsQianDao() {
        return isQianDao_;
      }
      /**
       * <code>optional bool isQianDao = 105;</code>
       *
       * <pre>
       * 今天是否签到
       * </pre>
       */
      public Builder setIsQianDao(boolean value) {
        bitField2_ |= 0x02000000;
        isQianDao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isQianDao = 105;</code>
       *
       * <pre>
       * 今天是否签到
       * </pre>
       */
      public Builder clearIsQianDao() {
        bitField2_ = (bitField2_ & ~0x02000000);
        isQianDao_ = false;
        onChanged();
        return this;
      }

      // optional .MapItem qianDao = 106;
      private myudfs.Common.MapItem qianDao_ = myudfs.Common.MapItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> qianDaoBuilder_;
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public boolean hasQianDao() {
        return ((bitField2_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public myudfs.Common.MapItem getQianDao() {
        if (qianDaoBuilder_ == null) {
          return qianDao_;
        } else {
          return qianDaoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public Builder setQianDao(myudfs.Common.MapItem value) {
        if (qianDaoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          qianDao_ = value;
          onChanged();
        } else {
          qianDaoBuilder_.setMessage(value);
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public Builder setQianDao(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (qianDaoBuilder_ == null) {
          qianDao_ = builderForValue.build();
          onChanged();
        } else {
          qianDaoBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public Builder mergeQianDao(myudfs.Common.MapItem value) {
        if (qianDaoBuilder_ == null) {
          if (((bitField2_ & 0x04000000) == 0x04000000) &&
              qianDao_ != myudfs.Common.MapItem.getDefaultInstance()) {
            qianDao_ =
              myudfs.Common.MapItem.newBuilder(qianDao_).mergeFrom(value).buildPartial();
          } else {
            qianDao_ = value;
          }
          onChanged();
        } else {
          qianDaoBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public Builder clearQianDao() {
        if (qianDaoBuilder_ == null) {
          qianDao_ = myudfs.Common.MapItem.getDefaultInstance();
          onChanged();
        } else {
          qianDaoBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getQianDaoBuilder() {
        bitField2_ |= 0x04000000;
        onChanged();
        return getQianDaoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getQianDaoOrBuilder() {
        if (qianDaoBuilder_ != null) {
          return qianDaoBuilder_.getMessageOrBuilder();
        } else {
          return qianDao_;
        }
      }
      /**
       * <code>optional .MapItem qianDao = 106;</code>
       *
       * <pre>
       *签到信息 key 是当前月 value是签到次数 最后一次的话领取奖励后就变成下个月
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getQianDaoFieldBuilder() {
        if (qianDaoBuilder_ == null) {
          qianDaoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  qianDao_,
                  getParentForChildren(),
                  isClean());
          qianDao_ = null;
        }
        return qianDaoBuilder_;
      }

      // optional int32 battleIndex = 107;
      private int battleIndex_ ;
      /**
       * <code>optional int32 battleIndex = 107;</code>
       *
       * <pre>
       * 前端用
       * </pre>
       */
      public boolean hasBattleIndex() {
        return ((bitField2_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 battleIndex = 107;</code>
       *
       * <pre>
       * 前端用
       * </pre>
       */
      public int getBattleIndex() {
        return battleIndex_;
      }
      /**
       * <code>optional int32 battleIndex = 107;</code>
       *
       * <pre>
       * 前端用
       * </pre>
       */
      public Builder setBattleIndex(int value) {
        bitField2_ |= 0x08000000;
        battleIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 battleIndex = 107;</code>
       *
       * <pre>
       * 前端用
       * </pre>
       */
      public Builder clearBattleIndex() {
        bitField2_ = (bitField2_ & ~0x08000000);
        battleIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 caishenCoinNum = 108;
      private int caishenCoinNum_ ;
      /**
       * <code>optional int32 caishenCoinNum = 108;</code>
       *
       * <pre>
       * 今天财神次数 0点清零
       * </pre>
       */
      public boolean hasCaishenCoinNum() {
        return ((bitField2_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 caishenCoinNum = 108;</code>
       *
       * <pre>
       * 今天财神次数 0点清零
       * </pre>
       */
      public int getCaishenCoinNum() {
        return caishenCoinNum_;
      }
      /**
       * <code>optional int32 caishenCoinNum = 108;</code>
       *
       * <pre>
       * 今天财神次数 0点清零
       * </pre>
       */
      public Builder setCaishenCoinNum(int value) {
        bitField2_ |= 0x10000000;
        caishenCoinNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 caishenCoinNum = 108;</code>
       *
       * <pre>
       * 今天财神次数 0点清零
       * </pre>
       */
      public Builder clearCaishenCoinNum() {
        bitField2_ = (bitField2_ & ~0x10000000);
        caishenCoinNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 triggerGuideIndex = 109;
      private java.util.List<java.lang.Integer> triggerGuideIndex_ = java.util.Collections.emptyList();
      private void ensureTriggerGuideIndexIsMutable() {
        if (!((bitField2_ & 0x20000000) == 0x20000000)) {
          triggerGuideIndex_ = new java.util.ArrayList<java.lang.Integer>(triggerGuideIndex_);
          bitField2_ |= 0x20000000;
         }
      }
      /**
       * <code>repeated int32 triggerGuideIndex = 109;</code>
       *
       * <pre>
       *触发式引导阶段标记
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTriggerGuideIndexList() {
        return java.util.Collections.unmodifiableList(triggerGuideIndex_);
      }
      /**
       * <code>repeated int32 triggerGuideIndex = 109;</code>
       *
       * <pre>
       *触发式引导阶段标记
       * </pre>
       */
      public int getTriggerGuideIndexCount() {
        return triggerGuideIndex_.size();
      }
      /**
       * <code>repeated int32 triggerGuideIndex = 109;</code>
       *
       * <pre>
       *触发式引导阶段标记
       * </pre>
       */
      public int getTriggerGuideIndex(int index) {
        return triggerGuideIndex_.get(index);
      }
      /**
       * <code>repeated int32 triggerGuideIndex = 109;</code>
       *
       * <pre>
       *触发式引导阶段标记
       * </pre>
       */
      public Builder setTriggerGuideIndex(
          int index, int value) {
        ensureTriggerGuideIndexIsMutable();
        triggerGuideIndex_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 triggerGuideIndex = 109;</code>
       *
       * <pre>
       *触发式引导阶段标记
       * </pre>
       */
      public Builder addTriggerGuideIndex(int value) {
        ensureTriggerGuideIndexIsMutable();
        triggerGuideIndex_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 triggerGuideIndex = 109;</code>
       *
       * <pre>
       *触发式引导阶段标记
       * </pre>
       */
      public Builder addAllTriggerGuideIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTriggerGuideIndexIsMutable();
        super.addAll(values, triggerGuideIndex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 triggerGuideIndex = 109;</code>
       *
       * <pre>
       *触发式引导阶段标记
       * </pre>
       */
      public Builder clearTriggerGuideIndex() {
        triggerGuideIndex_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x20000000);
        onChanged();
        return this;
      }

      // repeated int32 chapterEasyReward = 110;
      private java.util.List<java.lang.Integer> chapterEasyReward_ = java.util.Collections.emptyList();
      private void ensureChapterEasyRewardIsMutable() {
        if (!((bitField2_ & 0x40000000) == 0x40000000)) {
          chapterEasyReward_ = new java.util.ArrayList<java.lang.Integer>(chapterEasyReward_);
          bitField2_ |= 0x40000000;
         }
      }
      /**
       * <code>repeated int32 chapterEasyReward = 110;</code>
       */
      public java.util.List<java.lang.Integer>
          getChapterEasyRewardList() {
        return java.util.Collections.unmodifiableList(chapterEasyReward_);
      }
      /**
       * <code>repeated int32 chapterEasyReward = 110;</code>
       */
      public int getChapterEasyRewardCount() {
        return chapterEasyReward_.size();
      }
      /**
       * <code>repeated int32 chapterEasyReward = 110;</code>
       */
      public int getChapterEasyReward(int index) {
        return chapterEasyReward_.get(index);
      }
      /**
       * <code>repeated int32 chapterEasyReward = 110;</code>
       */
      public Builder setChapterEasyReward(
          int index, int value) {
        ensureChapterEasyRewardIsMutable();
        chapterEasyReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterEasyReward = 110;</code>
       */
      public Builder addChapterEasyReward(int value) {
        ensureChapterEasyRewardIsMutable();
        chapterEasyReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterEasyReward = 110;</code>
       */
      public Builder addAllChapterEasyReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChapterEasyRewardIsMutable();
        super.addAll(values, chapterEasyReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterEasyReward = 110;</code>
       */
      public Builder clearChapterEasyReward() {
        chapterEasyReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x40000000);
        onChanged();
        return this;
      }

      // repeated int32 chapterNormalReward = 111;
      private java.util.List<java.lang.Integer> chapterNormalReward_ = java.util.Collections.emptyList();
      private void ensureChapterNormalRewardIsMutable() {
        if (!((bitField2_ & 0x80000000) == 0x80000000)) {
          chapterNormalReward_ = new java.util.ArrayList<java.lang.Integer>(chapterNormalReward_);
          bitField2_ |= 0x80000000;
         }
      }
      /**
       * <code>repeated int32 chapterNormalReward = 111;</code>
       */
      public java.util.List<java.lang.Integer>
          getChapterNormalRewardList() {
        return java.util.Collections.unmodifiableList(chapterNormalReward_);
      }
      /**
       * <code>repeated int32 chapterNormalReward = 111;</code>
       */
      public int getChapterNormalRewardCount() {
        return chapterNormalReward_.size();
      }
      /**
       * <code>repeated int32 chapterNormalReward = 111;</code>
       */
      public int getChapterNormalReward(int index) {
        return chapterNormalReward_.get(index);
      }
      /**
       * <code>repeated int32 chapterNormalReward = 111;</code>
       */
      public Builder setChapterNormalReward(
          int index, int value) {
        ensureChapterNormalRewardIsMutable();
        chapterNormalReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterNormalReward = 111;</code>
       */
      public Builder addChapterNormalReward(int value) {
        ensureChapterNormalRewardIsMutable();
        chapterNormalReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterNormalReward = 111;</code>
       */
      public Builder addAllChapterNormalReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChapterNormalRewardIsMutable();
        super.addAll(values, chapterNormalReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterNormalReward = 111;</code>
       */
      public Builder clearChapterNormalReward() {
        chapterNormalReward_ = java.util.Collections.emptyList();
        bitField2_ = (bitField2_ & ~0x80000000);
        onChanged();
        return this;
      }

      // repeated int32 chapterHardReward = 112;
      private java.util.List<java.lang.Integer> chapterHardReward_ = java.util.Collections.emptyList();
      private void ensureChapterHardRewardIsMutable() {
        if (!((bitField3_ & 0x00000001) == 0x00000001)) {
          chapterHardReward_ = new java.util.ArrayList<java.lang.Integer>(chapterHardReward_);
          bitField3_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 chapterHardReward = 112;</code>
       */
      public java.util.List<java.lang.Integer>
          getChapterHardRewardList() {
        return java.util.Collections.unmodifiableList(chapterHardReward_);
      }
      /**
       * <code>repeated int32 chapterHardReward = 112;</code>
       */
      public int getChapterHardRewardCount() {
        return chapterHardReward_.size();
      }
      /**
       * <code>repeated int32 chapterHardReward = 112;</code>
       */
      public int getChapterHardReward(int index) {
        return chapterHardReward_.get(index);
      }
      /**
       * <code>repeated int32 chapterHardReward = 112;</code>
       */
      public Builder setChapterHardReward(
          int index, int value) {
        ensureChapterHardRewardIsMutable();
        chapterHardReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterHardReward = 112;</code>
       */
      public Builder addChapterHardReward(int value) {
        ensureChapterHardRewardIsMutable();
        chapterHardReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterHardReward = 112;</code>
       */
      public Builder addAllChapterHardReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChapterHardRewardIsMutable();
        super.addAll(values, chapterHardReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chapterHardReward = 112;</code>
       */
      public Builder clearChapterHardReward() {
        chapterHardReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 activityEasyReward = 113;
      private java.util.List<java.lang.Integer> activityEasyReward_ = java.util.Collections.emptyList();
      private void ensureActivityEasyRewardIsMutable() {
        if (!((bitField3_ & 0x00000002) == 0x00000002)) {
          activityEasyReward_ = new java.util.ArrayList<java.lang.Integer>(activityEasyReward_);
          bitField3_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 activityEasyReward = 113;</code>
       */
      public java.util.List<java.lang.Integer>
          getActivityEasyRewardList() {
        return java.util.Collections.unmodifiableList(activityEasyReward_);
      }
      /**
       * <code>repeated int32 activityEasyReward = 113;</code>
       */
      public int getActivityEasyRewardCount() {
        return activityEasyReward_.size();
      }
      /**
       * <code>repeated int32 activityEasyReward = 113;</code>
       */
      public int getActivityEasyReward(int index) {
        return activityEasyReward_.get(index);
      }
      /**
       * <code>repeated int32 activityEasyReward = 113;</code>
       */
      public Builder setActivityEasyReward(
          int index, int value) {
        ensureActivityEasyRewardIsMutable();
        activityEasyReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 activityEasyReward = 113;</code>
       */
      public Builder addActivityEasyReward(int value) {
        ensureActivityEasyRewardIsMutable();
        activityEasyReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 activityEasyReward = 113;</code>
       */
      public Builder addAllActivityEasyReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActivityEasyRewardIsMutable();
        super.addAll(values, activityEasyReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 activityEasyReward = 113;</code>
       */
      public Builder clearActivityEasyReward() {
        activityEasyReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 cardEffectNum = 114;
      private int cardEffectNum_ ;
      /**
       * <code>optional int32 cardEffectNum = 114;</code>
       *
       * <pre>
       * 新增卡组位播放特效次数
       * </pre>
       */
      public boolean hasCardEffectNum() {
        return ((bitField3_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cardEffectNum = 114;</code>
       *
       * <pre>
       * 新增卡组位播放特效次数
       * </pre>
       */
      public int getCardEffectNum() {
        return cardEffectNum_;
      }
      /**
       * <code>optional int32 cardEffectNum = 114;</code>
       *
       * <pre>
       * 新增卡组位播放特效次数
       * </pre>
       */
      public Builder setCardEffectNum(int value) {
        bitField3_ |= 0x00000004;
        cardEffectNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardEffectNum = 114;</code>
       *
       * <pre>
       * 新增卡组位播放特效次数
       * </pre>
       */
      public Builder clearCardEffectNum() {
        bitField3_ = (bitField3_ & ~0x00000004);
        cardEffectNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 baoXiangReward = 115;
      private java.util.List<java.lang.Integer> baoXiangReward_ = java.util.Collections.emptyList();
      private void ensureBaoXiangRewardIsMutable() {
        if (!((bitField3_ & 0x00000008) == 0x00000008)) {
          baoXiangReward_ = new java.util.ArrayList<java.lang.Integer>(baoXiangReward_);
          bitField3_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 baoXiangReward = 115;</code>
       *
       * <pre>
       * 领取过的宝箱奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBaoXiangRewardList() {
        return java.util.Collections.unmodifiableList(baoXiangReward_);
      }
      /**
       * <code>repeated int32 baoXiangReward = 115;</code>
       *
       * <pre>
       * 领取过的宝箱奖励
       * </pre>
       */
      public int getBaoXiangRewardCount() {
        return baoXiangReward_.size();
      }
      /**
       * <code>repeated int32 baoXiangReward = 115;</code>
       *
       * <pre>
       * 领取过的宝箱奖励
       * </pre>
       */
      public int getBaoXiangReward(int index) {
        return baoXiangReward_.get(index);
      }
      /**
       * <code>repeated int32 baoXiangReward = 115;</code>
       *
       * <pre>
       * 领取过的宝箱奖励
       * </pre>
       */
      public Builder setBaoXiangReward(
          int index, int value) {
        ensureBaoXiangRewardIsMutable();
        baoXiangReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 baoXiangReward = 115;</code>
       *
       * <pre>
       * 领取过的宝箱奖励
       * </pre>
       */
      public Builder addBaoXiangReward(int value) {
        ensureBaoXiangRewardIsMutable();
        baoXiangReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 baoXiangReward = 115;</code>
       *
       * <pre>
       * 领取过的宝箱奖励
       * </pre>
       */
      public Builder addAllBaoXiangReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBaoXiangRewardIsMutable();
        super.addAll(values, baoXiangReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 baoXiangReward = 115;</code>
       *
       * <pre>
       * 领取过的宝箱奖励
       * </pre>
       */
      public Builder clearBaoXiangReward() {
        baoXiangReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 newFriendInvite = 116;
      private int newFriendInvite_ ;
      /**
       * <code>optional int32 newFriendInvite = 116;</code>
       *
       * <pre>
       * 是否有新的好友申请
       * </pre>
       */
      public boolean hasNewFriendInvite() {
        return ((bitField3_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 newFriendInvite = 116;</code>
       *
       * <pre>
       * 是否有新的好友申请
       * </pre>
       */
      public int getNewFriendInvite() {
        return newFriendInvite_;
      }
      /**
       * <code>optional int32 newFriendInvite = 116;</code>
       *
       * <pre>
       * 是否有新的好友申请
       * </pre>
       */
      public Builder setNewFriendInvite(int value) {
        bitField3_ |= 0x00000010;
        newFriendInvite_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 newFriendInvite = 116;</code>
       *
       * <pre>
       * 是否有新的好友申请
       * </pre>
       */
      public Builder clearNewFriendInvite() {
        bitField3_ = (bitField3_ & ~0x00000010);
        newFriendInvite_ = 0;
        onChanged();
        return this;
      }

      // optional int64 yunyouRefreshTime = 117;
      private long yunyouRefreshTime_ ;
      /**
       * <code>optional int64 yunyouRefreshTime = 117;</code>
       *
       * <pre>
       * 上次云游仙人刷新时间
       * </pre>
       */
      public boolean hasYunyouRefreshTime() {
        return ((bitField3_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 yunyouRefreshTime = 117;</code>
       *
       * <pre>
       * 上次云游仙人刷新时间
       * </pre>
       */
      public long getYunyouRefreshTime() {
        return yunyouRefreshTime_;
      }
      /**
       * <code>optional int64 yunyouRefreshTime = 117;</code>
       *
       * <pre>
       * 上次云游仙人刷新时间
       * </pre>
       */
      public Builder setYunyouRefreshTime(long value) {
        bitField3_ |= 0x00000020;
        yunyouRefreshTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 yunyouRefreshTime = 117;</code>
       *
       * <pre>
       * 上次云游仙人刷新时间
       * </pre>
       */
      public Builder clearYunyouRefreshTime() {
        bitField3_ = (bitField3_ & ~0x00000020);
        yunyouRefreshTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 yunyouItems = 118;
      private java.util.List<java.lang.Integer> yunyouItems_ = java.util.Collections.emptyList();
      private void ensureYunyouItemsIsMutable() {
        if (!((bitField3_ & 0x00000040) == 0x00000040)) {
          yunyouItems_ = new java.util.ArrayList<java.lang.Integer>(yunyouItems_);
          bitField3_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 yunyouItems = 118;</code>
       *
       * <pre>
       * 购买过的云游道具
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getYunyouItemsList() {
        return java.util.Collections.unmodifiableList(yunyouItems_);
      }
      /**
       * <code>repeated int32 yunyouItems = 118;</code>
       *
       * <pre>
       * 购买过的云游道具
       * </pre>
       */
      public int getYunyouItemsCount() {
        return yunyouItems_.size();
      }
      /**
       * <code>repeated int32 yunyouItems = 118;</code>
       *
       * <pre>
       * 购买过的云游道具
       * </pre>
       */
      public int getYunyouItems(int index) {
        return yunyouItems_.get(index);
      }
      /**
       * <code>repeated int32 yunyouItems = 118;</code>
       *
       * <pre>
       * 购买过的云游道具
       * </pre>
       */
      public Builder setYunyouItems(
          int index, int value) {
        ensureYunyouItemsIsMutable();
        yunyouItems_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 yunyouItems = 118;</code>
       *
       * <pre>
       * 购买过的云游道具
       * </pre>
       */
      public Builder addYunyouItems(int value) {
        ensureYunyouItemsIsMutable();
        yunyouItems_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 yunyouItems = 118;</code>
       *
       * <pre>
       * 购买过的云游道具
       * </pre>
       */
      public Builder addAllYunyouItems(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureYunyouItemsIsMutable();
        super.addAll(values, yunyouItems_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 yunyouItems = 118;</code>
       *
       * <pre>
       * 购买过的云游道具
       * </pre>
       */
      public Builder clearYunyouItems() {
        yunyouItems_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 lvReward = 119;
      private int lvReward_ ;
      /**
       * <code>optional int32 lvReward = 119;</code>
       *
       * <pre>
       * 上次等级抽奖
       * </pre>
       */
      public boolean hasLvReward() {
        return ((bitField3_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 lvReward = 119;</code>
       *
       * <pre>
       * 上次等级抽奖
       * </pre>
       */
      public int getLvReward() {
        return lvReward_;
      }
      /**
       * <code>optional int32 lvReward = 119;</code>
       *
       * <pre>
       * 上次等级抽奖
       * </pre>
       */
      public Builder setLvReward(int value) {
        bitField3_ |= 0x00000080;
        lvReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lvReward = 119;</code>
       *
       * <pre>
       * 上次等级抽奖
       * </pre>
       */
      public Builder clearLvReward() {
        bitField3_ = (bitField3_ & ~0x00000080);
        lvReward_ = 0;
        onChanged();
        return this;
      }

      // optional int64 qiuBaoDate = 120;
      private long qiuBaoDate_ ;
      /**
       * <code>optional int64 qiuBaoDate = 120;</code>
       */
      public boolean hasQiuBaoDate() {
        return ((bitField3_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 qiuBaoDate = 120;</code>
       */
      public long getQiuBaoDate() {
        return qiuBaoDate_;
      }
      /**
       * <code>optional int64 qiuBaoDate = 120;</code>
       */
      public Builder setQiuBaoDate(long value) {
        bitField3_ |= 0x00000100;
        qiuBaoDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 qiuBaoDate = 120;</code>
       */
      public Builder clearQiuBaoDate() {
        bitField3_ = (bitField3_ & ~0x00000100);
        qiuBaoDate_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 qiuBaoTimes = 121;
      private int qiuBaoTimes_ ;
      /**
       * <code>optional int32 qiuBaoTimes = 121;</code>
       */
      public boolean hasQiuBaoTimes() {
        return ((bitField3_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 qiuBaoTimes = 121;</code>
       */
      public int getQiuBaoTimes() {
        return qiuBaoTimes_;
      }
      /**
       * <code>optional int32 qiuBaoTimes = 121;</code>
       */
      public Builder setQiuBaoTimes(int value) {
        bitField3_ |= 0x00000200;
        qiuBaoTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qiuBaoTimes = 121;</code>
       */
      public Builder clearQiuBaoTimes() {
        bitField3_ = (bitField3_ & ~0x00000200);
        qiuBaoTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated .MapItem itemTask = 122;
      private java.util.List<myudfs.Common.MapItem> itemTask_ =
        java.util.Collections.emptyList();
      private void ensureItemTaskIsMutable() {
        if (!((bitField3_ & 0x00000400) == 0x00000400)) {
          itemTask_ = new java.util.ArrayList<myudfs.Common.MapItem>(itemTask_);
          bitField3_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> itemTaskBuilder_;

      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public java.util.List<myudfs.Common.MapItem> getItemTaskList() {
        if (itemTaskBuilder_ == null) {
          return java.util.Collections.unmodifiableList(itemTask_);
        } else {
          return itemTaskBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public int getItemTaskCount() {
        if (itemTaskBuilder_ == null) {
          return itemTask_.size();
        } else {
          return itemTaskBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public myudfs.Common.MapItem getItemTask(int index) {
        if (itemTaskBuilder_ == null) {
          return itemTask_.get(index);
        } else {
          return itemTaskBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder setItemTask(
          int index, myudfs.Common.MapItem value) {
        if (itemTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemTaskIsMutable();
          itemTask_.set(index, value);
          onChanged();
        } else {
          itemTaskBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder setItemTask(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (itemTaskBuilder_ == null) {
          ensureItemTaskIsMutable();
          itemTask_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemTaskBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder addItemTask(myudfs.Common.MapItem value) {
        if (itemTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemTaskIsMutable();
          itemTask_.add(value);
          onChanged();
        } else {
          itemTaskBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder addItemTask(
          int index, myudfs.Common.MapItem value) {
        if (itemTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemTaskIsMutable();
          itemTask_.add(index, value);
          onChanged();
        } else {
          itemTaskBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder addItemTask(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (itemTaskBuilder_ == null) {
          ensureItemTaskIsMutable();
          itemTask_.add(builderForValue.build());
          onChanged();
        } else {
          itemTaskBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder addItemTask(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (itemTaskBuilder_ == null) {
          ensureItemTaskIsMutable();
          itemTask_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemTaskBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder addAllItemTask(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (itemTaskBuilder_ == null) {
          ensureItemTaskIsMutable();
          super.addAll(values, itemTask_);
          onChanged();
        } else {
          itemTaskBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder clearItemTask() {
        if (itemTaskBuilder_ == null) {
          itemTask_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00000400);
          onChanged();
        } else {
          itemTaskBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public Builder removeItemTask(int index) {
        if (itemTaskBuilder_ == null) {
          ensureItemTaskIsMutable();
          itemTask_.remove(index);
          onChanged();
        } else {
          itemTaskBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public myudfs.Common.MapItem.Builder getItemTaskBuilder(
          int index) {
        return getItemTaskFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public myudfs.Common.MapItemOrBuilder getItemTaskOrBuilder(
          int index) {
        if (itemTaskBuilder_ == null) {
          return itemTask_.get(index);  } else {
          return itemTaskBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getItemTaskOrBuilderList() {
        if (itemTaskBuilder_ != null) {
          return itemTaskBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(itemTask_);
        }
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public myudfs.Common.MapItem.Builder addItemTaskBuilder() {
        return getItemTaskFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public myudfs.Common.MapItem.Builder addItemTaskBuilder(
          int index) {
        return getItemTaskFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem itemTask = 122;</code>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getItemTaskBuilderList() {
        return getItemTaskFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getItemTaskFieldBuilder() {
        if (itemTaskBuilder_ == null) {
          itemTaskBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  itemTask_,
                  ((bitField3_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          itemTask_ = null;
        }
        return itemTaskBuilder_;
      }

      // repeated .MapItem cardTask = 123;
      private java.util.List<myudfs.Common.MapItem> cardTask_ =
        java.util.Collections.emptyList();
      private void ensureCardTaskIsMutable() {
        if (!((bitField3_ & 0x00000800) == 0x00000800)) {
          cardTask_ = new java.util.ArrayList<myudfs.Common.MapItem>(cardTask_);
          bitField3_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> cardTaskBuilder_;

      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public java.util.List<myudfs.Common.MapItem> getCardTaskList() {
        if (cardTaskBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardTask_);
        } else {
          return cardTaskBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public int getCardTaskCount() {
        if (cardTaskBuilder_ == null) {
          return cardTask_.size();
        } else {
          return cardTaskBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public myudfs.Common.MapItem getCardTask(int index) {
        if (cardTaskBuilder_ == null) {
          return cardTask_.get(index);
        } else {
          return cardTaskBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder setCardTask(
          int index, myudfs.Common.MapItem value) {
        if (cardTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTaskIsMutable();
          cardTask_.set(index, value);
          onChanged();
        } else {
          cardTaskBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder setCardTask(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (cardTaskBuilder_ == null) {
          ensureCardTaskIsMutable();
          cardTask_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardTaskBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder addCardTask(myudfs.Common.MapItem value) {
        if (cardTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTaskIsMutable();
          cardTask_.add(value);
          onChanged();
        } else {
          cardTaskBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder addCardTask(
          int index, myudfs.Common.MapItem value) {
        if (cardTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTaskIsMutable();
          cardTask_.add(index, value);
          onChanged();
        } else {
          cardTaskBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder addCardTask(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (cardTaskBuilder_ == null) {
          ensureCardTaskIsMutable();
          cardTask_.add(builderForValue.build());
          onChanged();
        } else {
          cardTaskBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder addCardTask(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (cardTaskBuilder_ == null) {
          ensureCardTaskIsMutable();
          cardTask_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardTaskBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder addAllCardTask(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (cardTaskBuilder_ == null) {
          ensureCardTaskIsMutable();
          super.addAll(values, cardTask_);
          onChanged();
        } else {
          cardTaskBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder clearCardTask() {
        if (cardTaskBuilder_ == null) {
          cardTask_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00000800);
          onChanged();
        } else {
          cardTaskBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public Builder removeCardTask(int index) {
        if (cardTaskBuilder_ == null) {
          ensureCardTaskIsMutable();
          cardTask_.remove(index);
          onChanged();
        } else {
          cardTaskBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public myudfs.Common.MapItem.Builder getCardTaskBuilder(
          int index) {
        return getCardTaskFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public myudfs.Common.MapItemOrBuilder getCardTaskOrBuilder(
          int index) {
        if (cardTaskBuilder_ == null) {
          return cardTask_.get(index);  } else {
          return cardTaskBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getCardTaskOrBuilderList() {
        if (cardTaskBuilder_ != null) {
          return cardTaskBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardTask_);
        }
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public myudfs.Common.MapItem.Builder addCardTaskBuilder() {
        return getCardTaskFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public myudfs.Common.MapItem.Builder addCardTaskBuilder(
          int index) {
        return getCardTaskFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem cardTask = 123;</code>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getCardTaskBuilderList() {
        return getCardTaskFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getCardTaskFieldBuilder() {
        if (cardTaskBuilder_ == null) {
          cardTaskBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  cardTask_,
                  ((bitField3_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          cardTask_ = null;
        }
        return cardTaskBuilder_;
      }

      // repeated int32 collectCardReward = 124;
      private java.util.List<java.lang.Integer> collectCardReward_ = java.util.Collections.emptyList();
      private void ensureCollectCardRewardIsMutable() {
        if (!((bitField3_ & 0x00001000) == 0x00001000)) {
          collectCardReward_ = new java.util.ArrayList<java.lang.Integer>(collectCardReward_);
          bitField3_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 collectCardReward = 124;</code>
       */
      public java.util.List<java.lang.Integer>
          getCollectCardRewardList() {
        return java.util.Collections.unmodifiableList(collectCardReward_);
      }
      /**
       * <code>repeated int32 collectCardReward = 124;</code>
       */
      public int getCollectCardRewardCount() {
        return collectCardReward_.size();
      }
      /**
       * <code>repeated int32 collectCardReward = 124;</code>
       */
      public int getCollectCardReward(int index) {
        return collectCardReward_.get(index);
      }
      /**
       * <code>repeated int32 collectCardReward = 124;</code>
       */
      public Builder setCollectCardReward(
          int index, int value) {
        ensureCollectCardRewardIsMutable();
        collectCardReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 collectCardReward = 124;</code>
       */
      public Builder addCollectCardReward(int value) {
        ensureCollectCardRewardIsMutable();
        collectCardReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 collectCardReward = 124;</code>
       */
      public Builder addAllCollectCardReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCollectCardRewardIsMutable();
        super.addAll(values, collectCardReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 collectCardReward = 124;</code>
       */
      public Builder clearCollectCardReward() {
        collectCardReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 cardReward = 125;
      private java.util.List<java.lang.Integer> cardReward_ = java.util.Collections.emptyList();
      private void ensureCardRewardIsMutable() {
        if (!((bitField3_ & 0x00002000) == 0x00002000)) {
          cardReward_ = new java.util.ArrayList<java.lang.Integer>(cardReward_);
          bitField3_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 cardReward = 125;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardRewardList() {
        return java.util.Collections.unmodifiableList(cardReward_);
      }
      /**
       * <code>repeated int32 cardReward = 125;</code>
       */
      public int getCardRewardCount() {
        return cardReward_.size();
      }
      /**
       * <code>repeated int32 cardReward = 125;</code>
       */
      public int getCardReward(int index) {
        return cardReward_.get(index);
      }
      /**
       * <code>repeated int32 cardReward = 125;</code>
       */
      public Builder setCardReward(
          int index, int value) {
        ensureCardRewardIsMutable();
        cardReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardReward = 125;</code>
       */
      public Builder addCardReward(int value) {
        ensureCardRewardIsMutable();
        cardReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardReward = 125;</code>
       */
      public Builder addAllCardReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardRewardIsMutable();
        super.addAll(values, cardReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardReward = 125;</code>
       */
      public Builder clearCardReward() {
        cardReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 itemReward = 126;
      private java.util.List<java.lang.Integer> itemReward_ = java.util.Collections.emptyList();
      private void ensureItemRewardIsMutable() {
        if (!((bitField3_ & 0x00004000) == 0x00004000)) {
          itemReward_ = new java.util.ArrayList<java.lang.Integer>(itemReward_);
          bitField3_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 itemReward = 126;</code>
       */
      public java.util.List<java.lang.Integer>
          getItemRewardList() {
        return java.util.Collections.unmodifiableList(itemReward_);
      }
      /**
       * <code>repeated int32 itemReward = 126;</code>
       */
      public int getItemRewardCount() {
        return itemReward_.size();
      }
      /**
       * <code>repeated int32 itemReward = 126;</code>
       */
      public int getItemReward(int index) {
        return itemReward_.get(index);
      }
      /**
       * <code>repeated int32 itemReward = 126;</code>
       */
      public Builder setItemReward(
          int index, int value) {
        ensureItemRewardIsMutable();
        itemReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemReward = 126;</code>
       */
      public Builder addItemReward(int value) {
        ensureItemRewardIsMutable();
        itemReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemReward = 126;</code>
       */
      public Builder addAllItemReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemRewardIsMutable();
        super.addAll(values, itemReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemReward = 126;</code>
       */
      public Builder clearItemReward() {
        itemReward_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated .MapItem vipNums = 127;
      private java.util.List<myudfs.Common.MapItem> vipNums_ =
        java.util.Collections.emptyList();
      private void ensureVipNumsIsMutable() {
        if (!((bitField3_ & 0x00008000) == 0x00008000)) {
          vipNums_ = new java.util.ArrayList<myudfs.Common.MapItem>(vipNums_);
          bitField3_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> vipNumsBuilder_;

      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getVipNumsList() {
        if (vipNumsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vipNums_);
        } else {
          return vipNumsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public int getVipNumsCount() {
        if (vipNumsBuilder_ == null) {
          return vipNums_.size();
        } else {
          return vipNumsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public myudfs.Common.MapItem getVipNums(int index) {
        if (vipNumsBuilder_ == null) {
          return vipNums_.get(index);
        } else {
          return vipNumsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder setVipNums(
          int index, myudfs.Common.MapItem value) {
        if (vipNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipNumsIsMutable();
          vipNums_.set(index, value);
          onChanged();
        } else {
          vipNumsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder setVipNums(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (vipNumsBuilder_ == null) {
          ensureVipNumsIsMutable();
          vipNums_.set(index, builderForValue.build());
          onChanged();
        } else {
          vipNumsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder addVipNums(myudfs.Common.MapItem value) {
        if (vipNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipNumsIsMutable();
          vipNums_.add(value);
          onChanged();
        } else {
          vipNumsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder addVipNums(
          int index, myudfs.Common.MapItem value) {
        if (vipNumsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipNumsIsMutable();
          vipNums_.add(index, value);
          onChanged();
        } else {
          vipNumsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder addVipNums(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (vipNumsBuilder_ == null) {
          ensureVipNumsIsMutable();
          vipNums_.add(builderForValue.build());
          onChanged();
        } else {
          vipNumsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder addVipNums(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (vipNumsBuilder_ == null) {
          ensureVipNumsIsMutable();
          vipNums_.add(index, builderForValue.build());
          onChanged();
        } else {
          vipNumsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder addAllVipNums(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (vipNumsBuilder_ == null) {
          ensureVipNumsIsMutable();
          super.addAll(values, vipNums_);
          onChanged();
        } else {
          vipNumsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder clearVipNums() {
        if (vipNumsBuilder_ == null) {
          vipNums_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00008000);
          onChanged();
        } else {
          vipNumsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public Builder removeVipNums(int index) {
        if (vipNumsBuilder_ == null) {
          ensureVipNumsIsMutable();
          vipNums_.remove(index);
          onChanged();
        } else {
          vipNumsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getVipNumsBuilder(
          int index) {
        return getVipNumsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getVipNumsOrBuilder(
          int index) {
        if (vipNumsBuilder_ == null) {
          return vipNums_.get(index);  } else {
          return vipNumsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getVipNumsOrBuilderList() {
        if (vipNumsBuilder_ != null) {
          return vipNumsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vipNums_);
        }
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addVipNumsBuilder() {
        return getVipNumsFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addVipNumsBuilder(
          int index) {
        return getVipNumsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem vipNums = 127;</code>
       *
       * <pre>
       *vip 人数
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getVipNumsBuilderList() {
        return getVipNumsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getVipNumsFieldBuilder() {
        if (vipNumsBuilder_ == null) {
          vipNumsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  vipNums_,
                  ((bitField3_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          vipNums_ = null;
        }
        return vipNumsBuilder_;
      }

      // repeated int32 firstPayExtraIds = 128;
      private java.util.List<java.lang.Integer> firstPayExtraIds_ = java.util.Collections.emptyList();
      private void ensureFirstPayExtraIdsIsMutable() {
        if (!((bitField3_ & 0x00010000) == 0x00010000)) {
          firstPayExtraIds_ = new java.util.ArrayList<java.lang.Integer>(firstPayExtraIds_);
          bitField3_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 firstPayExtraIds = 128;</code>
       *
       * <pre>
       * 已获得首充额外奖励的支付id列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFirstPayExtraIdsList() {
        return java.util.Collections.unmodifiableList(firstPayExtraIds_);
      }
      /**
       * <code>repeated int32 firstPayExtraIds = 128;</code>
       *
       * <pre>
       * 已获得首充额外奖励的支付id列表
       * </pre>
       */
      public int getFirstPayExtraIdsCount() {
        return firstPayExtraIds_.size();
      }
      /**
       * <code>repeated int32 firstPayExtraIds = 128;</code>
       *
       * <pre>
       * 已获得首充额外奖励的支付id列表
       * </pre>
       */
      public int getFirstPayExtraIds(int index) {
        return firstPayExtraIds_.get(index);
      }
      /**
       * <code>repeated int32 firstPayExtraIds = 128;</code>
       *
       * <pre>
       * 已获得首充额外奖励的支付id列表
       * </pre>
       */
      public Builder setFirstPayExtraIds(
          int index, int value) {
        ensureFirstPayExtraIdsIsMutable();
        firstPayExtraIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstPayExtraIds = 128;</code>
       *
       * <pre>
       * 已获得首充额外奖励的支付id列表
       * </pre>
       */
      public Builder addFirstPayExtraIds(int value) {
        ensureFirstPayExtraIdsIsMutable();
        firstPayExtraIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstPayExtraIds = 128;</code>
       *
       * <pre>
       * 已获得首充额外奖励的支付id列表
       * </pre>
       */
      public Builder addAllFirstPayExtraIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFirstPayExtraIdsIsMutable();
        super.addAll(values, firstPayExtraIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstPayExtraIds = 128;</code>
       *
       * <pre>
       * 已获得首充额外奖励的支付id列表
       * </pre>
       */
      public Builder clearFirstPayExtraIds() {
        firstPayExtraIds_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00010000);
        onChanged();
        return this;
      }

      // optional int32 assetBundle_State = 129;
      private int assetBundleState_ ;
      /**
       * <code>optional int32 assetBundle_State = 129;</code>
       *
       * <pre>
       * 记录资源下载状态
       * </pre>
       */
      public boolean hasAssetBundleState() {
        return ((bitField3_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 assetBundle_State = 129;</code>
       *
       * <pre>
       * 记录资源下载状态
       * </pre>
       */
      public int getAssetBundleState() {
        return assetBundleState_;
      }
      /**
       * <code>optional int32 assetBundle_State = 129;</code>
       *
       * <pre>
       * 记录资源下载状态
       * </pre>
       */
      public Builder setAssetBundleState(int value) {
        bitField3_ |= 0x00020000;
        assetBundleState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 assetBundle_State = 129;</code>
       *
       * <pre>
       * 记录资源下载状态
       * </pre>
       */
      public Builder clearAssetBundleState() {
        bitField3_ = (bitField3_ & ~0x00020000);
        assetBundleState_ = 0;
        onChanged();
        return this;
      }

      // optional int64 userId = 130;
      private long userId_ ;
      /**
       * <code>optional int64 userId = 130;</code>
       *
       * <pre>
       * 帐号id
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField3_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 userId = 130;</code>
       *
       * <pre>
       * 帐号id
       * </pre>
       */
      public long getUserId() {
        return userId_;
      }
      /**
       * <code>optional int64 userId = 130;</code>
       *
       * <pre>
       * 帐号id
       * </pre>
       */
      public Builder setUserId(long value) {
        bitField3_ |= 0x00040000;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userId = 130;</code>
       *
       * <pre>
       * 帐号id
       * </pre>
       */
      public Builder clearUserId() {
        bitField3_ = (bitField3_ & ~0x00040000);
        userId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 serverId = 131;
      private int serverId_ ;
      /**
       * <code>optional int32 serverId = 131;</code>
       *
       * <pre>
       * 服务器id
       * </pre>
       */
      public boolean hasServerId() {
        return ((bitField3_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 serverId = 131;</code>
       *
       * <pre>
       * 服务器id
       * </pre>
       */
      public int getServerId() {
        return serverId_;
      }
      /**
       * <code>optional int32 serverId = 131;</code>
       *
       * <pre>
       * 服务器id
       * </pre>
       */
      public Builder setServerId(int value) {
        bitField3_ |= 0x00080000;
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 serverId = 131;</code>
       *
       * <pre>
       * 服务器id
       * </pre>
       */
      public Builder clearServerId() {
        bitField3_ = (bitField3_ & ~0x00080000);
        serverId_ = 0;
        onChanged();
        return this;
      }

      // optional string username = 132;
      private java.lang.Object username_ = "";
      /**
       * <code>optional string username = 132;</code>
       *
       * <pre>
       * 用户名
       * </pre>
       */
      public boolean hasUsername() {
        return ((bitField3_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional string username = 132;</code>
       *
       * <pre>
       * 用户名
       * </pre>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string username = 132;</code>
       *
       * <pre>
       * 用户名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string username = 132;</code>
       *
       * <pre>
       * 用户名
       * </pre>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField3_ |= 0x00100000;
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 132;</code>
       *
       * <pre>
       * 用户名
       * </pre>
       */
      public Builder clearUsername() {
        bitField3_ = (bitField3_ & ~0x00100000);
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 132;</code>
       *
       * <pre>
       * 用户名
       * </pre>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField3_ |= 0x00100000;
        username_ = value;
        onChanged();
        return this;
      }

      // repeated .PvpExchangeItem pvpExchangeItems = 133;
      private java.util.List<myudfs.Common.PvpExchangeItem> pvpExchangeItems_ =
        java.util.Collections.emptyList();
      private void ensurePvpExchangeItemsIsMutable() {
        if (!((bitField3_ & 0x00200000) == 0x00200000)) {
          pvpExchangeItems_ = new java.util.ArrayList<myudfs.Common.PvpExchangeItem>(pvpExchangeItems_);
          bitField3_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PvpExchangeItem, myudfs.Common.PvpExchangeItem.Builder, myudfs.Common.PvpExchangeItemOrBuilder> pvpExchangeItemsBuilder_;

      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public java.util.List<myudfs.Common.PvpExchangeItem> getPvpExchangeItemsList() {
        if (pvpExchangeItemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pvpExchangeItems_);
        } else {
          return pvpExchangeItemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public int getPvpExchangeItemsCount() {
        if (pvpExchangeItemsBuilder_ == null) {
          return pvpExchangeItems_.size();
        } else {
          return pvpExchangeItemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public myudfs.Common.PvpExchangeItem getPvpExchangeItems(int index) {
        if (pvpExchangeItemsBuilder_ == null) {
          return pvpExchangeItems_.get(index);
        } else {
          return pvpExchangeItemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder setPvpExchangeItems(
          int index, myudfs.Common.PvpExchangeItem value) {
        if (pvpExchangeItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpExchangeItemsIsMutable();
          pvpExchangeItems_.set(index, value);
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder setPvpExchangeItems(
          int index, myudfs.Common.PvpExchangeItem.Builder builderForValue) {
        if (pvpExchangeItemsBuilder_ == null) {
          ensurePvpExchangeItemsIsMutable();
          pvpExchangeItems_.set(index, builderForValue.build());
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder addPvpExchangeItems(myudfs.Common.PvpExchangeItem value) {
        if (pvpExchangeItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpExchangeItemsIsMutable();
          pvpExchangeItems_.add(value);
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder addPvpExchangeItems(
          int index, myudfs.Common.PvpExchangeItem value) {
        if (pvpExchangeItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpExchangeItemsIsMutable();
          pvpExchangeItems_.add(index, value);
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder addPvpExchangeItems(
          myudfs.Common.PvpExchangeItem.Builder builderForValue) {
        if (pvpExchangeItemsBuilder_ == null) {
          ensurePvpExchangeItemsIsMutable();
          pvpExchangeItems_.add(builderForValue.build());
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder addPvpExchangeItems(
          int index, myudfs.Common.PvpExchangeItem.Builder builderForValue) {
        if (pvpExchangeItemsBuilder_ == null) {
          ensurePvpExchangeItemsIsMutable();
          pvpExchangeItems_.add(index, builderForValue.build());
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder addAllPvpExchangeItems(
          java.lang.Iterable<? extends myudfs.Common.PvpExchangeItem> values) {
        if (pvpExchangeItemsBuilder_ == null) {
          ensurePvpExchangeItemsIsMutable();
          super.addAll(values, pvpExchangeItems_);
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder clearPvpExchangeItems() {
        if (pvpExchangeItemsBuilder_ == null) {
          pvpExchangeItems_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x00200000);
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public Builder removePvpExchangeItems(int index) {
        if (pvpExchangeItemsBuilder_ == null) {
          ensurePvpExchangeItemsIsMutable();
          pvpExchangeItems_.remove(index);
          onChanged();
        } else {
          pvpExchangeItemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public myudfs.Common.PvpExchangeItem.Builder getPvpExchangeItemsBuilder(
          int index) {
        return getPvpExchangeItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public myudfs.Common.PvpExchangeItemOrBuilder getPvpExchangeItemsOrBuilder(
          int index) {
        if (pvpExchangeItemsBuilder_ == null) {
          return pvpExchangeItems_.get(index);  } else {
          return pvpExchangeItemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.PvpExchangeItemOrBuilder> 
           getPvpExchangeItemsOrBuilderList() {
        if (pvpExchangeItemsBuilder_ != null) {
          return pvpExchangeItemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pvpExchangeItems_);
        }
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public myudfs.Common.PvpExchangeItem.Builder addPvpExchangeItemsBuilder() {
        return getPvpExchangeItemsFieldBuilder().addBuilder(
            myudfs.Common.PvpExchangeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public myudfs.Common.PvpExchangeItem.Builder addPvpExchangeItemsBuilder(
          int index) {
        return getPvpExchangeItemsFieldBuilder().addBuilder(
            index, myudfs.Common.PvpExchangeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .PvpExchangeItem pvpExchangeItems = 133;</code>
       *
       * <pre>
       * pvp声望兑换物品
       * </pre>
       */
      public java.util.List<myudfs.Common.PvpExchangeItem.Builder> 
           getPvpExchangeItemsBuilderList() {
        return getPvpExchangeItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PvpExchangeItem, myudfs.Common.PvpExchangeItem.Builder, myudfs.Common.PvpExchangeItemOrBuilder> 
          getPvpExchangeItemsFieldBuilder() {
        if (pvpExchangeItemsBuilder_ == null) {
          pvpExchangeItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.PvpExchangeItem, myudfs.Common.PvpExchangeItem.Builder, myudfs.Common.PvpExchangeItemOrBuilder>(
                  pvpExchangeItems_,
                  ((bitField3_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          pvpExchangeItems_ = null;
        }
        return pvpExchangeItemsBuilder_;
      }

      // optional int32 hunyu = 134;
      private int hunyu_ ;
      /**
       * <code>optional int32 hunyu = 134;</code>
       *
       * <pre>
       * 魂玉
       * </pre>
       */
      public boolean hasHunyu() {
        return ((bitField3_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 hunyu = 134;</code>
       *
       * <pre>
       * 魂玉
       * </pre>
       */
      public int getHunyu() {
        return hunyu_;
      }
      /**
       * <code>optional int32 hunyu = 134;</code>
       *
       * <pre>
       * 魂玉
       * </pre>
       */
      public Builder setHunyu(int value) {
        bitField3_ |= 0x00400000;
        hunyu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hunyu = 134;</code>
       *
       * <pre>
       * 魂玉
       * </pre>
       */
      public Builder clearHunyu() {
        bitField3_ = (bitField3_ & ~0x00400000);
        hunyu_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 firstDrawIds = 135;
      private java.util.List<java.lang.Integer> firstDrawIds_ = java.util.Collections.emptyList();
      private void ensureFirstDrawIdsIsMutable() {
        if (!((bitField3_ & 0x00800000) == 0x00800000)) {
          firstDrawIds_ = new java.util.ArrayList<java.lang.Integer>(firstDrawIds_);
          bitField3_ |= 0x00800000;
         }
      }
      /**
       * <code>repeated int32 firstDrawIds = 135;</code>
       *
       * <pre>
       * 首抽卡包id列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFirstDrawIdsList() {
        return java.util.Collections.unmodifiableList(firstDrawIds_);
      }
      /**
       * <code>repeated int32 firstDrawIds = 135;</code>
       *
       * <pre>
       * 首抽卡包id列表
       * </pre>
       */
      public int getFirstDrawIdsCount() {
        return firstDrawIds_.size();
      }
      /**
       * <code>repeated int32 firstDrawIds = 135;</code>
       *
       * <pre>
       * 首抽卡包id列表
       * </pre>
       */
      public int getFirstDrawIds(int index) {
        return firstDrawIds_.get(index);
      }
      /**
       * <code>repeated int32 firstDrawIds = 135;</code>
       *
       * <pre>
       * 首抽卡包id列表
       * </pre>
       */
      public Builder setFirstDrawIds(
          int index, int value) {
        ensureFirstDrawIdsIsMutable();
        firstDrawIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstDrawIds = 135;</code>
       *
       * <pre>
       * 首抽卡包id列表
       * </pre>
       */
      public Builder addFirstDrawIds(int value) {
        ensureFirstDrawIdsIsMutable();
        firstDrawIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstDrawIds = 135;</code>
       *
       * <pre>
       * 首抽卡包id列表
       * </pre>
       */
      public Builder addAllFirstDrawIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFirstDrawIdsIsMutable();
        super.addAll(values, firstDrawIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstDrawIds = 135;</code>
       *
       * <pre>
       * 首抽卡包id列表
       * </pre>
       */
      public Builder clearFirstDrawIds() {
        firstDrawIds_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x00800000);
        onChanged();
        return this;
      }

      // optional uint64 openDate = 136;
      private long openDate_ ;
      /**
       * <code>optional uint64 openDate = 136;</code>
       *
       * <pre>
       *服务器开服时间
       * </pre>
       */
      public boolean hasOpenDate() {
        return ((bitField3_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint64 openDate = 136;</code>
       *
       * <pre>
       *服务器开服时间
       * </pre>
       */
      public long getOpenDate() {
        return openDate_;
      }
      /**
       * <code>optional uint64 openDate = 136;</code>
       *
       * <pre>
       *服务器开服时间
       * </pre>
       */
      public Builder setOpenDate(long value) {
        bitField3_ |= 0x01000000;
        openDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 openDate = 136;</code>
       *
       * <pre>
       *服务器开服时间
       * </pre>
       */
      public Builder clearOpenDate() {
        bitField3_ = (bitField3_ & ~0x01000000);
        openDate_ = 0L;
        onChanged();
        return this;
      }

      // repeated .MapItem todyTastePantaos = 137;
      private java.util.List<myudfs.Common.MapItem> todyTastePantaos_ =
        java.util.Collections.emptyList();
      private void ensureTodyTastePantaosIsMutable() {
        if (!((bitField3_ & 0x02000000) == 0x02000000)) {
          todyTastePantaos_ = new java.util.ArrayList<myudfs.Common.MapItem>(todyTastePantaos_);
          bitField3_ |= 0x02000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> todyTastePantaosBuilder_;

      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getTodyTastePantaosList() {
        if (todyTastePantaosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(todyTastePantaos_);
        } else {
          return todyTastePantaosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public int getTodyTastePantaosCount() {
        if (todyTastePantaosBuilder_ == null) {
          return todyTastePantaos_.size();
        } else {
          return todyTastePantaosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public myudfs.Common.MapItem getTodyTastePantaos(int index) {
        if (todyTastePantaosBuilder_ == null) {
          return todyTastePantaos_.get(index);
        } else {
          return todyTastePantaosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder setTodyTastePantaos(
          int index, myudfs.Common.MapItem value) {
        if (todyTastePantaosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodyTastePantaosIsMutable();
          todyTastePantaos_.set(index, value);
          onChanged();
        } else {
          todyTastePantaosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder setTodyTastePantaos(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (todyTastePantaosBuilder_ == null) {
          ensureTodyTastePantaosIsMutable();
          todyTastePantaos_.set(index, builderForValue.build());
          onChanged();
        } else {
          todyTastePantaosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder addTodyTastePantaos(myudfs.Common.MapItem value) {
        if (todyTastePantaosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodyTastePantaosIsMutable();
          todyTastePantaos_.add(value);
          onChanged();
        } else {
          todyTastePantaosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder addTodyTastePantaos(
          int index, myudfs.Common.MapItem value) {
        if (todyTastePantaosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTodyTastePantaosIsMutable();
          todyTastePantaos_.add(index, value);
          onChanged();
        } else {
          todyTastePantaosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder addTodyTastePantaos(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (todyTastePantaosBuilder_ == null) {
          ensureTodyTastePantaosIsMutable();
          todyTastePantaos_.add(builderForValue.build());
          onChanged();
        } else {
          todyTastePantaosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder addTodyTastePantaos(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (todyTastePantaosBuilder_ == null) {
          ensureTodyTastePantaosIsMutable();
          todyTastePantaos_.add(index, builderForValue.build());
          onChanged();
        } else {
          todyTastePantaosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder addAllTodyTastePantaos(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (todyTastePantaosBuilder_ == null) {
          ensureTodyTastePantaosIsMutable();
          super.addAll(values, todyTastePantaos_);
          onChanged();
        } else {
          todyTastePantaosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder clearTodyTastePantaos() {
        if (todyTastePantaosBuilder_ == null) {
          todyTastePantaos_ = java.util.Collections.emptyList();
          bitField3_ = (bitField3_ & ~0x02000000);
          onChanged();
        } else {
          todyTastePantaosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public Builder removeTodyTastePantaos(int index) {
        if (todyTastePantaosBuilder_ == null) {
          ensureTodyTastePantaosIsMutable();
          todyTastePantaos_.remove(index);
          onChanged();
        } else {
          todyTastePantaosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getTodyTastePantaosBuilder(
          int index) {
        return getTodyTastePantaosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getTodyTastePantaosOrBuilder(
          int index) {
        if (todyTastePantaosBuilder_ == null) {
          return todyTastePantaos_.get(index);  } else {
          return todyTastePantaosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getTodyTastePantaosOrBuilderList() {
        if (todyTastePantaosBuilder_ != null) {
          return todyTastePantaosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(todyTastePantaos_);
        }
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addTodyTastePantaosBuilder() {
        return getTodyTastePantaosFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addTodyTastePantaosBuilder(
          int index) {
        return getTodyTastePantaosFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem todyTastePantaos = 137;</code>
       *
       * <pre>
       * 当天指定时间是否品尝了蟠桃
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getTodyTastePantaosBuilderList() {
        return getTodyTastePantaosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getTodyTastePantaosFieldBuilder() {
        if (todyTastePantaosBuilder_ == null) {
          todyTastePantaosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  todyTastePantaos_,
                  ((bitField3_ & 0x02000000) == 0x02000000),
                  getParentForChildren(),
                  isClean());
          todyTastePantaos_ = null;
        }
        return todyTastePantaosBuilder_;
      }

      // optional int32 battleScore = 138;
      private int battleScore_ ;
      /**
       * <code>optional int32 battleScore = 138;</code>
       *
       * <pre>
       * 总战力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField3_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 battleScore = 138;</code>
       *
       * <pre>
       * 总战力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>optional int32 battleScore = 138;</code>
       *
       * <pre>
       * 总战力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField3_ |= 0x04000000;
        battleScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 battleScore = 138;</code>
       *
       * <pre>
       * 总战力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField3_ = (bitField3_ & ~0x04000000);
        battleScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lingLi = 139;
      private int lingLi_ ;
      /**
       * <code>optional int32 lingLi = 139;</code>
       *
       * <pre>
       * 灵力
       * </pre>
       */
      public boolean hasLingLi() {
        return ((bitField3_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 lingLi = 139;</code>
       *
       * <pre>
       * 灵力
       * </pre>
       */
      public int getLingLi() {
        return lingLi_;
      }
      /**
       * <code>optional int32 lingLi = 139;</code>
       *
       * <pre>
       * 灵力
       * </pre>
       */
      public Builder setLingLi(int value) {
        bitField3_ |= 0x08000000;
        lingLi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lingLi = 139;</code>
       *
       * <pre>
       * 灵力
       * </pre>
       */
      public Builder clearLingLi() {
        bitField3_ = (bitField3_ & ~0x08000000);
        lingLi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 buyLingli = 140;
      private int buyLingli_ ;
      /**
       * <code>optional int32 buyLingli = 140;</code>
       */
      public boolean hasBuyLingli() {
        return ((bitField3_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 buyLingli = 140;</code>
       */
      public int getBuyLingli() {
        return buyLingli_;
      }
      /**
       * <code>optional int32 buyLingli = 140;</code>
       */
      public Builder setBuyLingli(int value) {
        bitField3_ |= 0x10000000;
        buyLingli_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buyLingli = 140;</code>
       */
      public Builder clearBuyLingli() {
        bitField3_ = (bitField3_ & ~0x10000000);
        buyLingli_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 lingLiDate = 141;
      private long lingLiDate_ ;
      /**
       * <code>optional uint64 lingLiDate = 141;</code>
       */
      public boolean hasLingLiDate() {
        return ((bitField3_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint64 lingLiDate = 141;</code>
       */
      public long getLingLiDate() {
        return lingLiDate_;
      }
      /**
       * <code>optional uint64 lingLiDate = 141;</code>
       */
      public Builder setLingLiDate(long value) {
        bitField3_ |= 0x20000000;
        lingLiDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 lingLiDate = 141;</code>
       */
      public Builder clearLingLiDate() {
        bitField3_ = (bitField3_ & ~0x20000000);
        lingLiDate_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 shenMoDuiHuan = 151;
      private java.util.List<java.lang.Integer> shenMoDuiHuan_ = java.util.Collections.emptyList();
      private void ensureShenMoDuiHuanIsMutable() {
        if (!((bitField3_ & 0x40000000) == 0x40000000)) {
          shenMoDuiHuan_ = new java.util.ArrayList<java.lang.Integer>(shenMoDuiHuan_);
          bitField3_ |= 0x40000000;
         }
      }
      /**
       * <code>repeated int32 shenMoDuiHuan = 151;</code>
       *
       * <pre>
       * 神魔兑换道具
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getShenMoDuiHuanList() {
        return java.util.Collections.unmodifiableList(shenMoDuiHuan_);
      }
      /**
       * <code>repeated int32 shenMoDuiHuan = 151;</code>
       *
       * <pre>
       * 神魔兑换道具
       * </pre>
       */
      public int getShenMoDuiHuanCount() {
        return shenMoDuiHuan_.size();
      }
      /**
       * <code>repeated int32 shenMoDuiHuan = 151;</code>
       *
       * <pre>
       * 神魔兑换道具
       * </pre>
       */
      public int getShenMoDuiHuan(int index) {
        return shenMoDuiHuan_.get(index);
      }
      /**
       * <code>repeated int32 shenMoDuiHuan = 151;</code>
       *
       * <pre>
       * 神魔兑换道具
       * </pre>
       */
      public Builder setShenMoDuiHuan(
          int index, int value) {
        ensureShenMoDuiHuanIsMutable();
        shenMoDuiHuan_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shenMoDuiHuan = 151;</code>
       *
       * <pre>
       * 神魔兑换道具
       * </pre>
       */
      public Builder addShenMoDuiHuan(int value) {
        ensureShenMoDuiHuanIsMutable();
        shenMoDuiHuan_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shenMoDuiHuan = 151;</code>
       *
       * <pre>
       * 神魔兑换道具
       * </pre>
       */
      public Builder addAllShenMoDuiHuan(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShenMoDuiHuanIsMutable();
        super.addAll(values, shenMoDuiHuan_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shenMoDuiHuan = 151;</code>
       *
       * <pre>
       * 神魔兑换道具
       * </pre>
       */
      public Builder clearShenMoDuiHuan() {
        shenMoDuiHuan_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x40000000);
        onChanged();
        return this;
      }

      // repeated int32 buyShenMoItem = 152;
      private java.util.List<java.lang.Integer> buyShenMoItem_ = java.util.Collections.emptyList();
      private void ensureBuyShenMoItemIsMutable() {
        if (!((bitField3_ & 0x80000000) == 0x80000000)) {
          buyShenMoItem_ = new java.util.ArrayList<java.lang.Integer>(buyShenMoItem_);
          bitField3_ |= 0x80000000;
         }
      }
      /**
       * <code>repeated int32 buyShenMoItem = 152;</code>
       *
       * <pre>
       * 购买的神魔兑换道具
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBuyShenMoItemList() {
        return java.util.Collections.unmodifiableList(buyShenMoItem_);
      }
      /**
       * <code>repeated int32 buyShenMoItem = 152;</code>
       *
       * <pre>
       * 购买的神魔兑换道具
       * </pre>
       */
      public int getBuyShenMoItemCount() {
        return buyShenMoItem_.size();
      }
      /**
       * <code>repeated int32 buyShenMoItem = 152;</code>
       *
       * <pre>
       * 购买的神魔兑换道具
       * </pre>
       */
      public int getBuyShenMoItem(int index) {
        return buyShenMoItem_.get(index);
      }
      /**
       * <code>repeated int32 buyShenMoItem = 152;</code>
       *
       * <pre>
       * 购买的神魔兑换道具
       * </pre>
       */
      public Builder setBuyShenMoItem(
          int index, int value) {
        ensureBuyShenMoItemIsMutable();
        buyShenMoItem_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buyShenMoItem = 152;</code>
       *
       * <pre>
       * 购买的神魔兑换道具
       * </pre>
       */
      public Builder addBuyShenMoItem(int value) {
        ensureBuyShenMoItemIsMutable();
        buyShenMoItem_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buyShenMoItem = 152;</code>
       *
       * <pre>
       * 购买的神魔兑换道具
       * </pre>
       */
      public Builder addAllBuyShenMoItem(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBuyShenMoItemIsMutable();
        super.addAll(values, buyShenMoItem_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buyShenMoItem = 152;</code>
       *
       * <pre>
       * 购买的神魔兑换道具
       * </pre>
       */
      public Builder clearBuyShenMoItem() {
        buyShenMoItem_ = java.util.Collections.emptyList();
        bitField3_ = (bitField3_ & ~0x80000000);
        onChanged();
        return this;
      }

      // optional int32 xiuWei = 153;
      private int xiuWei_ ;
      /**
       * <code>optional int32 xiuWei = 153;</code>
       */
      public boolean hasXiuWei() {
        return ((bitField4_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 xiuWei = 153;</code>
       */
      public int getXiuWei() {
        return xiuWei_;
      }
      /**
       * <code>optional int32 xiuWei = 153;</code>
       */
      public Builder setXiuWei(int value) {
        bitField4_ |= 0x00000001;
        xiuWei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiuWei = 153;</code>
       */
      public Builder clearXiuWei() {
        bitField4_ = (bitField4_ & ~0x00000001);
        xiuWei_ = 0;
        onChanged();
        return this;
      }

      // optional bool hasPvpReward = 154;
      private boolean hasPvpReward_ ;
      /**
       * <code>optional bool hasPvpReward = 154;</code>
       *
       * <pre>
       *true:有新pvp奖励
       * </pre>
       */
      public boolean hasHasPvpReward() {
        return ((bitField4_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool hasPvpReward = 154;</code>
       *
       * <pre>
       *true:有新pvp奖励
       * </pre>
       */
      public boolean getHasPvpReward() {
        return hasPvpReward_;
      }
      /**
       * <code>optional bool hasPvpReward = 154;</code>
       *
       * <pre>
       *true:有新pvp奖励
       * </pre>
       */
      public Builder setHasPvpReward(boolean value) {
        bitField4_ |= 0x00000002;
        hasPvpReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasPvpReward = 154;</code>
       *
       * <pre>
       *true:有新pvp奖励
       * </pre>
       */
      public Builder clearHasPvpReward() {
        bitField4_ = (bitField4_ & ~0x00000002);
        hasPvpReward_ = false;
        onChanged();
        return this;
      }

      // optional int64 gongDe = 155;
      private long gongDe_ ;
      /**
       * <code>optional int64 gongDe = 155;</code>
       *
       * <pre>
       * 功德
       * </pre>
       */
      public boolean hasGongDe() {
        return ((bitField4_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 gongDe = 155;</code>
       *
       * <pre>
       * 功德
       * </pre>
       */
      public long getGongDe() {
        return gongDe_;
      }
      /**
       * <code>optional int64 gongDe = 155;</code>
       *
       * <pre>
       * 功德
       * </pre>
       */
      public Builder setGongDe(long value) {
        bitField4_ |= 0x00000004;
        gongDe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gongDe = 155;</code>
       *
       * <pre>
       * 功德
       * </pre>
       */
      public Builder clearGongDe() {
        bitField4_ = (bitField4_ & ~0x00000004);
        gongDe_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 gongDeReward = 156;
      private java.util.List<java.lang.Integer> gongDeReward_ = java.util.Collections.emptyList();
      private void ensureGongDeRewardIsMutable() {
        if (!((bitField4_ & 0x00000008) == 0x00000008)) {
          gongDeReward_ = new java.util.ArrayList<java.lang.Integer>(gongDeReward_);
          bitField4_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 gongDeReward = 156;</code>
       *
       * <pre>
       * 领取过的功德达标奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGongDeRewardList() {
        return java.util.Collections.unmodifiableList(gongDeReward_);
      }
      /**
       * <code>repeated int32 gongDeReward = 156;</code>
       *
       * <pre>
       * 领取过的功德达标奖励
       * </pre>
       */
      public int getGongDeRewardCount() {
        return gongDeReward_.size();
      }
      /**
       * <code>repeated int32 gongDeReward = 156;</code>
       *
       * <pre>
       * 领取过的功德达标奖励
       * </pre>
       */
      public int getGongDeReward(int index) {
        return gongDeReward_.get(index);
      }
      /**
       * <code>repeated int32 gongDeReward = 156;</code>
       *
       * <pre>
       * 领取过的功德达标奖励
       * </pre>
       */
      public Builder setGongDeReward(
          int index, int value) {
        ensureGongDeRewardIsMutable();
        gongDeReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gongDeReward = 156;</code>
       *
       * <pre>
       * 领取过的功德达标奖励
       * </pre>
       */
      public Builder addGongDeReward(int value) {
        ensureGongDeRewardIsMutable();
        gongDeReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gongDeReward = 156;</code>
       *
       * <pre>
       * 领取过的功德达标奖励
       * </pre>
       */
      public Builder addAllGongDeReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGongDeRewardIsMutable();
        super.addAll(values, gongDeReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gongDeReward = 156;</code>
       *
       * <pre>
       * 领取过的功德达标奖励
       * </pre>
       */
      public Builder clearGongDeReward() {
        gongDeReward_ = java.util.Collections.emptyList();
        bitField4_ = (bitField4_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 rankRise = 157;
      private int rankRise_ ;
      /**
       * <code>optional int32 rankRise = 157;</code>
       *
       * <pre>
       *1下降 2上升  0不变
       * </pre>
       */
      public boolean hasRankRise() {
        return ((bitField4_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rankRise = 157;</code>
       *
       * <pre>
       *1下降 2上升  0不变
       * </pre>
       */
      public int getRankRise() {
        return rankRise_;
      }
      /**
       * <code>optional int32 rankRise = 157;</code>
       *
       * <pre>
       *1下降 2上升  0不变
       * </pre>
       */
      public Builder setRankRise(int value) {
        bitField4_ |= 0x00000010;
        rankRise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rankRise = 157;</code>
       *
       * <pre>
       *1下降 2上升  0不变
       * </pre>
       */
      public Builder clearRankRise() {
        bitField4_ = (bitField4_ & ~0x00000010);
        rankRise_ = 0;
        onChanged();
        return this;
      }

      // optional int64 rank = 158;
      private long rank_ ;
      /**
       * <code>optional int64 rank = 158;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public boolean hasRank() {
        return ((bitField4_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 rank = 158;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public long getRank() {
        return rank_;
      }
      /**
       * <code>optional int64 rank = 158;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public Builder setRank(long value) {
        bitField4_ |= 0x00000020;
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rank = 158;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public Builder clearRank() {
        bitField4_ = (bitField4_ & ~0x00000020);
        rank_ = 0L;
        onChanged();
        return this;
      }

      // repeated .MapItem drawCard = 159;
      private java.util.List<myudfs.Common.MapItem> drawCard_ =
        java.util.Collections.emptyList();
      private void ensureDrawCardIsMutable() {
        if (!((bitField4_ & 0x00000040) == 0x00000040)) {
          drawCard_ = new java.util.ArrayList<myudfs.Common.MapItem>(drawCard_);
          bitField4_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> drawCardBuilder_;

      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getDrawCardList() {
        if (drawCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drawCard_);
        } else {
          return drawCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public int getDrawCardCount() {
        if (drawCardBuilder_ == null) {
          return drawCard_.size();
        } else {
          return drawCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem getDrawCard(int index) {
        if (drawCardBuilder_ == null) {
          return drawCard_.get(index);
        } else {
          return drawCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder setDrawCard(
          int index, myudfs.Common.MapItem value) {
        if (drawCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardIsMutable();
          drawCard_.set(index, value);
          onChanged();
        } else {
          drawCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder setDrawCard(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (drawCardBuilder_ == null) {
          ensureDrawCardIsMutable();
          drawCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          drawCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCard(myudfs.Common.MapItem value) {
        if (drawCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardIsMutable();
          drawCard_.add(value);
          onChanged();
        } else {
          drawCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCard(
          int index, myudfs.Common.MapItem value) {
        if (drawCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardIsMutable();
          drawCard_.add(index, value);
          onChanged();
        } else {
          drawCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCard(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (drawCardBuilder_ == null) {
          ensureDrawCardIsMutable();
          drawCard_.add(builderForValue.build());
          onChanged();
        } else {
          drawCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCard(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (drawCardBuilder_ == null) {
          ensureDrawCardIsMutable();
          drawCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          drawCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addAllDrawCard(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (drawCardBuilder_ == null) {
          ensureDrawCardIsMutable();
          super.addAll(values, drawCard_);
          onChanged();
        } else {
          drawCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder clearDrawCard() {
        if (drawCardBuilder_ == null) {
          drawCard_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00000040);
          onChanged();
        } else {
          drawCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder removeDrawCard(int index) {
        if (drawCardBuilder_ == null) {
          ensureDrawCardIsMutable();
          drawCard_.remove(index);
          onChanged();
        } else {
          drawCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getDrawCardBuilder(
          int index) {
        return getDrawCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getDrawCardOrBuilder(
          int index) {
        if (drawCardBuilder_ == null) {
          return drawCard_.get(index);  } else {
          return drawCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getDrawCardOrBuilderList() {
        if (drawCardBuilder_ != null) {
          return drawCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drawCard_);
        }
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addDrawCardBuilder() {
        return getDrawCardFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addDrawCardBuilder(
          int index) {
        return getDrawCardFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem drawCard = 159;</code>
       *
       * <pre>
       * key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getDrawCardBuilderList() {
        return getDrawCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getDrawCardFieldBuilder() {
        if (drawCardBuilder_ == null) {
          drawCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  drawCard_,
                  ((bitField4_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          drawCard_ = null;
        }
        return drawCardBuilder_;
      }

      // optional bool hufaOpen = 160;
      private boolean hufaOpen_ ;
      /**
       * <code>optional bool hufaOpen = 160;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasHufaOpen() {
        return ((bitField4_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool hufaOpen = 160;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean getHufaOpen() {
        return hufaOpen_;
      }
      /**
       * <code>optional bool hufaOpen = 160;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setHufaOpen(boolean value) {
        bitField4_ |= 0x00000080;
        hufaOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hufaOpen = 160;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearHufaOpen() {
        bitField4_ = (bitField4_ & ~0x00000080);
        hufaOpen_ = false;
        onChanged();
        return this;
      }

      // optional int32 caishenSilverNum = 161;
      private int caishenSilverNum_ ;
      /**
       * <code>optional int32 caishenSilverNum = 161;</code>
       *
       * <pre>
       *财神银两
       * </pre>
       */
      public boolean hasCaishenSilverNum() {
        return ((bitField4_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 caishenSilverNum = 161;</code>
       *
       * <pre>
       *财神银两
       * </pre>
       */
      public int getCaishenSilverNum() {
        return caishenSilverNum_;
      }
      /**
       * <code>optional int32 caishenSilverNum = 161;</code>
       *
       * <pre>
       *财神银两
       * </pre>
       */
      public Builder setCaishenSilverNum(int value) {
        bitField4_ |= 0x00000100;
        caishenSilverNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 caishenSilverNum = 161;</code>
       *
       * <pre>
       *财神银两
       * </pre>
       */
      public Builder clearCaishenSilverNum() {
        bitField4_ = (bitField4_ & ~0x00000100);
        caishenSilverNum_ = 0;
        onChanged();
        return this;
      }

      // optional bool drawCardReward2 = 162;
      private boolean drawCardReward2_ ;
      /**
       * <code>optional bool drawCardReward2 = 162;</code>
       *
       * <pre>
       *每日抽卡奖励 0点清零
       * </pre>
       */
      public boolean hasDrawCardReward2() {
        return ((bitField4_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool drawCardReward2 = 162;</code>
       *
       * <pre>
       *每日抽卡奖励 0点清零
       * </pre>
       */
      public boolean getDrawCardReward2() {
        return drawCardReward2_;
      }
      /**
       * <code>optional bool drawCardReward2 = 162;</code>
       *
       * <pre>
       *每日抽卡奖励 0点清零
       * </pre>
       */
      public Builder setDrawCardReward2(boolean value) {
        bitField4_ |= 0x00000200;
        drawCardReward2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool drawCardReward2 = 162;</code>
       *
       * <pre>
       *每日抽卡奖励 0点清零
       * </pre>
       */
      public Builder clearDrawCardReward2() {
        bitField4_ = (bitField4_ & ~0x00000200);
        drawCardReward2_ = false;
        onChanged();
        return this;
      }

      // repeated string playerPrefs = 163;
      private com.google.protobuf.LazyStringList playerPrefs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePlayerPrefsIsMutable() {
        if (!((bitField4_ & 0x00000400) == 0x00000400)) {
          playerPrefs_ = new com.google.protobuf.LazyStringArrayList(playerPrefs_);
          bitField4_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public java.util.List<java.lang.String>
          getPlayerPrefsList() {
        return java.util.Collections.unmodifiableList(playerPrefs_);
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public int getPlayerPrefsCount() {
        return playerPrefs_.size();
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public java.lang.String getPlayerPrefs(int index) {
        return playerPrefs_.get(index);
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerPrefsBytes(int index) {
        return playerPrefs_.getByteString(index);
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public Builder setPlayerPrefs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayerPrefsIsMutable();
        playerPrefs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public Builder addPlayerPrefs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayerPrefsIsMutable();
        playerPrefs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public Builder addAllPlayerPrefs(
          java.lang.Iterable<java.lang.String> values) {
        ensurePlayerPrefsIsMutable();
        super.addAll(values, playerPrefs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public Builder clearPlayerPrefs() {
        playerPrefs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField4_ = (bitField4_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerPrefs = 163;</code>
       */
      public Builder addPlayerPrefsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayerPrefsIsMutable();
        playerPrefs_.add(value);
        onChanged();
        return this;
      }

      // repeated .DaliyMissionItem missionMap = 164;
      private java.util.List<myudfs.Common.DaliyMissionItem> missionMap_ =
        java.util.Collections.emptyList();
      private void ensureMissionMapIsMutable() {
        if (!((bitField4_ & 0x00000800) == 0x00000800)) {
          missionMap_ = new java.util.ArrayList<myudfs.Common.DaliyMissionItem>(missionMap_);
          bitField4_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.DaliyMissionItem, myudfs.Common.DaliyMissionItem.Builder, myudfs.Common.DaliyMissionItemOrBuilder> missionMapBuilder_;

      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public java.util.List<myudfs.Common.DaliyMissionItem> getMissionMapList() {
        if (missionMapBuilder_ == null) {
          return java.util.Collections.unmodifiableList(missionMap_);
        } else {
          return missionMapBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public int getMissionMapCount() {
        if (missionMapBuilder_ == null) {
          return missionMap_.size();
        } else {
          return missionMapBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public myudfs.Common.DaliyMissionItem getMissionMap(int index) {
        if (missionMapBuilder_ == null) {
          return missionMap_.get(index);
        } else {
          return missionMapBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder setMissionMap(
          int index, myudfs.Common.DaliyMissionItem value) {
        if (missionMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionMapIsMutable();
          missionMap_.set(index, value);
          onChanged();
        } else {
          missionMapBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder setMissionMap(
          int index, myudfs.Common.DaliyMissionItem.Builder builderForValue) {
        if (missionMapBuilder_ == null) {
          ensureMissionMapIsMutable();
          missionMap_.set(index, builderForValue.build());
          onChanged();
        } else {
          missionMapBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder addMissionMap(myudfs.Common.DaliyMissionItem value) {
        if (missionMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionMapIsMutable();
          missionMap_.add(value);
          onChanged();
        } else {
          missionMapBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder addMissionMap(
          int index, myudfs.Common.DaliyMissionItem value) {
        if (missionMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionMapIsMutable();
          missionMap_.add(index, value);
          onChanged();
        } else {
          missionMapBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder addMissionMap(
          myudfs.Common.DaliyMissionItem.Builder builderForValue) {
        if (missionMapBuilder_ == null) {
          ensureMissionMapIsMutable();
          missionMap_.add(builderForValue.build());
          onChanged();
        } else {
          missionMapBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder addMissionMap(
          int index, myudfs.Common.DaliyMissionItem.Builder builderForValue) {
        if (missionMapBuilder_ == null) {
          ensureMissionMapIsMutable();
          missionMap_.add(index, builderForValue.build());
          onChanged();
        } else {
          missionMapBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder addAllMissionMap(
          java.lang.Iterable<? extends myudfs.Common.DaliyMissionItem> values) {
        if (missionMapBuilder_ == null) {
          ensureMissionMapIsMutable();
          super.addAll(values, missionMap_);
          onChanged();
        } else {
          missionMapBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder clearMissionMap() {
        if (missionMapBuilder_ == null) {
          missionMap_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00000800);
          onChanged();
        } else {
          missionMapBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public Builder removeMissionMap(int index) {
        if (missionMapBuilder_ == null) {
          ensureMissionMapIsMutable();
          missionMap_.remove(index);
          onChanged();
        } else {
          missionMapBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public myudfs.Common.DaliyMissionItem.Builder getMissionMapBuilder(
          int index) {
        return getMissionMapFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public myudfs.Common.DaliyMissionItemOrBuilder getMissionMapOrBuilder(
          int index) {
        if (missionMapBuilder_ == null) {
          return missionMap_.get(index);  } else {
          return missionMapBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public java.util.List<? extends myudfs.Common.DaliyMissionItemOrBuilder> 
           getMissionMapOrBuilderList() {
        if (missionMapBuilder_ != null) {
          return missionMapBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(missionMap_);
        }
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public myudfs.Common.DaliyMissionItem.Builder addMissionMapBuilder() {
        return getMissionMapFieldBuilder().addBuilder(
            myudfs.Common.DaliyMissionItem.getDefaultInstance());
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public myudfs.Common.DaliyMissionItem.Builder addMissionMapBuilder(
          int index) {
        return getMissionMapFieldBuilder().addBuilder(
            index, myudfs.Common.DaliyMissionItem.getDefaultInstance());
      }
      /**
       * <code>repeated .DaliyMissionItem missionMap = 164;</code>
       */
      public java.util.List<myudfs.Common.DaliyMissionItem.Builder> 
           getMissionMapBuilderList() {
        return getMissionMapFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.DaliyMissionItem, myudfs.Common.DaliyMissionItem.Builder, myudfs.Common.DaliyMissionItemOrBuilder> 
          getMissionMapFieldBuilder() {
        if (missionMapBuilder_ == null) {
          missionMapBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.DaliyMissionItem, myudfs.Common.DaliyMissionItem.Builder, myudfs.Common.DaliyMissionItemOrBuilder>(
                  missionMap_,
                  ((bitField4_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          missionMap_ = null;
        }
        return missionMapBuilder_;
      }

      // optional int32 missionNum = 165;
      private int missionNum_ ;
      /**
       * <code>optional int32 missionNum = 165;</code>
       *
       * <pre>
       * 完成每日任务的个数
       * </pre>
       */
      public boolean hasMissionNum() {
        return ((bitField4_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 missionNum = 165;</code>
       *
       * <pre>
       * 完成每日任务的个数
       * </pre>
       */
      public int getMissionNum() {
        return missionNum_;
      }
      /**
       * <code>optional int32 missionNum = 165;</code>
       *
       * <pre>
       * 完成每日任务的个数
       * </pre>
       */
      public Builder setMissionNum(int value) {
        bitField4_ |= 0x00001000;
        missionNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 missionNum = 165;</code>
       *
       * <pre>
       * 完成每日任务的个数
       * </pre>
       */
      public Builder clearMissionNum() {
        bitField4_ = (bitField4_ & ~0x00001000);
        missionNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 yunyouNum = 166;
      private int yunyouNum_ ;
      /**
       * <code>optional int32 yunyouNum = 166;</code>
       *
       * <pre>
       * 云游兑换数量
       * </pre>
       */
      public boolean hasYunyouNum() {
        return ((bitField4_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 yunyouNum = 166;</code>
       *
       * <pre>
       * 云游兑换数量
       * </pre>
       */
      public int getYunyouNum() {
        return yunyouNum_;
      }
      /**
       * <code>optional int32 yunyouNum = 166;</code>
       *
       * <pre>
       * 云游兑换数量
       * </pre>
       */
      public Builder setYunyouNum(int value) {
        bitField4_ |= 0x00002000;
        yunyouNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yunyouNum = 166;</code>
       *
       * <pre>
       * 云游兑换数量
       * </pre>
       */
      public Builder clearYunyouNum() {
        bitField4_ = (bitField4_ & ~0x00002000);
        yunyouNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pvpExchangeNum = 167;
      private int pvpExchangeNum_ ;
      /**
       * <code>optional int32 pvpExchangeNum = 167;</code>
       *
       * <pre>
       * pvp兑换数量
       * </pre>
       */
      public boolean hasPvpExchangeNum() {
        return ((bitField4_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 pvpExchangeNum = 167;</code>
       *
       * <pre>
       * pvp兑换数量
       * </pre>
       */
      public int getPvpExchangeNum() {
        return pvpExchangeNum_;
      }
      /**
       * <code>optional int32 pvpExchangeNum = 167;</code>
       *
       * <pre>
       * pvp兑换数量
       * </pre>
       */
      public Builder setPvpExchangeNum(int value) {
        bitField4_ |= 0x00004000;
        pvpExchangeNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpExchangeNum = 167;</code>
       *
       * <pre>
       * pvp兑换数量
       * </pre>
       */
      public Builder clearPvpExchangeNum() {
        bitField4_ = (bitField4_ & ~0x00004000);
        pvpExchangeNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 friendNum = 168;
      private int friendNum_ ;
      /**
       * <code>optional int32 friendNum = 168;</code>
       */
      public boolean hasFriendNum() {
        return ((bitField4_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 friendNum = 168;</code>
       */
      public int getFriendNum() {
        return friendNum_;
      }
      /**
       * <code>optional int32 friendNum = 168;</code>
       */
      public Builder setFriendNum(int value) {
        bitField4_ |= 0x00008000;
        friendNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 friendNum = 168;</code>
       */
      public Builder clearFriendNum() {
        bitField4_ = (bitField4_ & ~0x00008000);
        friendNum_ = 0;
        onChanged();
        return this;
      }

      // optional bool clearShenMoItem = 171;
      private boolean clearShenMoItem_ ;
      /**
       * <code>optional bool clearShenMoItem = 171;</code>
       *
       * <pre>
       * 清空神魔兑换 true清空
       * </pre>
       */
      public boolean hasClearShenMoItem() {
        return ((bitField4_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool clearShenMoItem = 171;</code>
       *
       * <pre>
       * 清空神魔兑换 true清空
       * </pre>
       */
      public boolean getClearShenMoItem() {
        return clearShenMoItem_;
      }
      /**
       * <code>optional bool clearShenMoItem = 171;</code>
       *
       * <pre>
       * 清空神魔兑换 true清空
       * </pre>
       */
      public Builder setClearShenMoItem(boolean value) {
        bitField4_ |= 0x00010000;
        clearShenMoItem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool clearShenMoItem = 171;</code>
       *
       * <pre>
       * 清空神魔兑换 true清空
       * </pre>
       */
      public Builder clearClearShenMoItem() {
        bitField4_ = (bitField4_ & ~0x00010000);
        clearShenMoItem_ = false;
        onChanged();
        return this;
      }

      // optional bool refreshHour24 = 172;
      private boolean refreshHour24_ ;
      /**
       * <code>optional bool refreshHour24 = 172;</code>
       *
       * <pre>
       * 0点清空数据 true：清空
       * </pre>
       */
      public boolean hasRefreshHour24() {
        return ((bitField4_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool refreshHour24 = 172;</code>
       *
       * <pre>
       * 0点清空数据 true：清空
       * </pre>
       */
      public boolean getRefreshHour24() {
        return refreshHour24_;
      }
      /**
       * <code>optional bool refreshHour24 = 172;</code>
       *
       * <pre>
       * 0点清空数据 true：清空
       * </pre>
       */
      public Builder setRefreshHour24(boolean value) {
        bitField4_ |= 0x00020000;
        refreshHour24_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool refreshHour24 = 172;</code>
       *
       * <pre>
       * 0点清空数据 true：清空
       * </pre>
       */
      public Builder clearRefreshHour24() {
        bitField4_ = (bitField4_ & ~0x00020000);
        refreshHour24_ = false;
        onChanged();
        return this;
      }

      // optional bool pay = 173;
      private boolean pay_ ;
      /**
       * <code>optional bool pay = 173;</code>
       *
       * <pre>
       *true:充值消息
       * </pre>
       */
      public boolean hasPay() {
        return ((bitField4_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool pay = 173;</code>
       *
       * <pre>
       *true:充值消息
       * </pre>
       */
      public boolean getPay() {
        return pay_;
      }
      /**
       * <code>optional bool pay = 173;</code>
       *
       * <pre>
       *true:充值消息
       * </pre>
       */
      public Builder setPay(boolean value) {
        bitField4_ |= 0x00040000;
        pay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pay = 173;</code>
       *
       * <pre>
       *true:充值消息
       * </pre>
       */
      public Builder clearPay() {
        bitField4_ = (bitField4_ & ~0x00040000);
        pay_ = false;
        onChanged();
        return this;
      }

      // optional bool isShutUp = 174;
      private boolean isShutUp_ ;
      /**
       * <code>optional bool isShutUp = 174;</code>
       */
      public boolean hasIsShutUp() {
        return ((bitField4_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool isShutUp = 174;</code>
       */
      public boolean getIsShutUp() {
        return isShutUp_;
      }
      /**
       * <code>optional bool isShutUp = 174;</code>
       */
      public Builder setIsShutUp(boolean value) {
        bitField4_ |= 0x00080000;
        isShutUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isShutUp = 174;</code>
       */
      public Builder clearIsShutUp() {
        bitField4_ = (bitField4_ & ~0x00080000);
        isShutUp_ = false;
        onChanged();
        return this;
      }

      // optional uint64 shutUpDate = 175;
      private long shutUpDate_ ;
      /**
       * <code>optional uint64 shutUpDate = 175;</code>
       */
      public boolean hasShutUpDate() {
        return ((bitField4_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint64 shutUpDate = 175;</code>
       */
      public long getShutUpDate() {
        return shutUpDate_;
      }
      /**
       * <code>optional uint64 shutUpDate = 175;</code>
       */
      public Builder setShutUpDate(long value) {
        bitField4_ |= 0x00100000;
        shutUpDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 shutUpDate = 175;</code>
       */
      public Builder clearShutUpDate() {
        bitField4_ = (bitField4_ & ~0x00100000);
        shutUpDate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 shutUpEnd = 176;
      private long shutUpEnd_ ;
      /**
       * <code>optional uint64 shutUpEnd = 176;</code>
       */
      public boolean hasShutUpEnd() {
        return ((bitField4_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint64 shutUpEnd = 176;</code>
       */
      public long getShutUpEnd() {
        return shutUpEnd_;
      }
      /**
       * <code>optional uint64 shutUpEnd = 176;</code>
       */
      public Builder setShutUpEnd(long value) {
        bitField4_ |= 0x00200000;
        shutUpEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 shutUpEnd = 176;</code>
       */
      public Builder clearShutUpEnd() {
        bitField4_ = (bitField4_ & ~0x00200000);
        shutUpEnd_ = 0L;
        onChanged();
        return this;
      }

      // repeated .ActivityItem activityItem = 177;
      private java.util.List<myudfs.Common.ActivityItem> activityItem_ =
        java.util.Collections.emptyList();
      private void ensureActivityItemIsMutable() {
        if (!((bitField4_ & 0x00400000) == 0x00400000)) {
          activityItem_ = new java.util.ArrayList<myudfs.Common.ActivityItem>(activityItem_);
          bitField4_ |= 0x00400000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityItem, myudfs.Common.ActivityItem.Builder, myudfs.Common.ActivityItemOrBuilder> activityItemBuilder_;

      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public java.util.List<myudfs.Common.ActivityItem> getActivityItemList() {
        if (activityItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(activityItem_);
        } else {
          return activityItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public int getActivityItemCount() {
        if (activityItemBuilder_ == null) {
          return activityItem_.size();
        } else {
          return activityItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public myudfs.Common.ActivityItem getActivityItem(int index) {
        if (activityItemBuilder_ == null) {
          return activityItem_.get(index);
        } else {
          return activityItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder setActivityItem(
          int index, myudfs.Common.ActivityItem value) {
        if (activityItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityItemIsMutable();
          activityItem_.set(index, value);
          onChanged();
        } else {
          activityItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder setActivityItem(
          int index, myudfs.Common.ActivityItem.Builder builderForValue) {
        if (activityItemBuilder_ == null) {
          ensureActivityItemIsMutable();
          activityItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          activityItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder addActivityItem(myudfs.Common.ActivityItem value) {
        if (activityItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityItemIsMutable();
          activityItem_.add(value);
          onChanged();
        } else {
          activityItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder addActivityItem(
          int index, myudfs.Common.ActivityItem value) {
        if (activityItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityItemIsMutable();
          activityItem_.add(index, value);
          onChanged();
        } else {
          activityItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder addActivityItem(
          myudfs.Common.ActivityItem.Builder builderForValue) {
        if (activityItemBuilder_ == null) {
          ensureActivityItemIsMutable();
          activityItem_.add(builderForValue.build());
          onChanged();
        } else {
          activityItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder addActivityItem(
          int index, myudfs.Common.ActivityItem.Builder builderForValue) {
        if (activityItemBuilder_ == null) {
          ensureActivityItemIsMutable();
          activityItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          activityItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder addAllActivityItem(
          java.lang.Iterable<? extends myudfs.Common.ActivityItem> values) {
        if (activityItemBuilder_ == null) {
          ensureActivityItemIsMutable();
          super.addAll(values, activityItem_);
          onChanged();
        } else {
          activityItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder clearActivityItem() {
        if (activityItemBuilder_ == null) {
          activityItem_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00400000);
          onChanged();
        } else {
          activityItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public Builder removeActivityItem(int index) {
        if (activityItemBuilder_ == null) {
          ensureActivityItemIsMutable();
          activityItem_.remove(index);
          onChanged();
        } else {
          activityItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public myudfs.Common.ActivityItem.Builder getActivityItemBuilder(
          int index) {
        return getActivityItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public myudfs.Common.ActivityItemOrBuilder getActivityItemOrBuilder(
          int index) {
        if (activityItemBuilder_ == null) {
          return activityItem_.get(index);  } else {
          return activityItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public java.util.List<? extends myudfs.Common.ActivityItemOrBuilder> 
           getActivityItemOrBuilderList() {
        if (activityItemBuilder_ != null) {
          return activityItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(activityItem_);
        }
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public myudfs.Common.ActivityItem.Builder addActivityItemBuilder() {
        return getActivityItemFieldBuilder().addBuilder(
            myudfs.Common.ActivityItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public myudfs.Common.ActivityItem.Builder addActivityItemBuilder(
          int index) {
        return getActivityItemFieldBuilder().addBuilder(
            index, myudfs.Common.ActivityItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityItem activityItem = 177;</code>
       */
      public java.util.List<myudfs.Common.ActivityItem.Builder> 
           getActivityItemBuilderList() {
        return getActivityItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityItem, myudfs.Common.ActivityItem.Builder, myudfs.Common.ActivityItemOrBuilder> 
          getActivityItemFieldBuilder() {
        if (activityItemBuilder_ == null) {
          activityItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.ActivityItem, myudfs.Common.ActivityItem.Builder, myudfs.Common.ActivityItemOrBuilder>(
                  activityItem_,
                  ((bitField4_ & 0x00400000) == 0x00400000),
                  getParentForChildren(),
                  isClean());
          activityItem_ = null;
        }
        return activityItemBuilder_;
      }

      // repeated .PayReward payReward = 178;
      private java.util.List<myudfs.Common.PayReward> payReward_ =
        java.util.Collections.emptyList();
      private void ensurePayRewardIsMutable() {
        if (!((bitField4_ & 0x00800000) == 0x00800000)) {
          payReward_ = new java.util.ArrayList<myudfs.Common.PayReward>(payReward_);
          bitField4_ |= 0x00800000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PayReward, myudfs.Common.PayReward.Builder, myudfs.Common.PayRewardOrBuilder> payRewardBuilder_;

      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public java.util.List<myudfs.Common.PayReward> getPayRewardList() {
        if (payRewardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(payReward_);
        } else {
          return payRewardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public int getPayRewardCount() {
        if (payRewardBuilder_ == null) {
          return payReward_.size();
        } else {
          return payRewardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public myudfs.Common.PayReward getPayReward(int index) {
        if (payRewardBuilder_ == null) {
          return payReward_.get(index);
        } else {
          return payRewardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder setPayReward(
          int index, myudfs.Common.PayReward value) {
        if (payRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePayRewardIsMutable();
          payReward_.set(index, value);
          onChanged();
        } else {
          payRewardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder setPayReward(
          int index, myudfs.Common.PayReward.Builder builderForValue) {
        if (payRewardBuilder_ == null) {
          ensurePayRewardIsMutable();
          payReward_.set(index, builderForValue.build());
          onChanged();
        } else {
          payRewardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder addPayReward(myudfs.Common.PayReward value) {
        if (payRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePayRewardIsMutable();
          payReward_.add(value);
          onChanged();
        } else {
          payRewardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder addPayReward(
          int index, myudfs.Common.PayReward value) {
        if (payRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePayRewardIsMutable();
          payReward_.add(index, value);
          onChanged();
        } else {
          payRewardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder addPayReward(
          myudfs.Common.PayReward.Builder builderForValue) {
        if (payRewardBuilder_ == null) {
          ensurePayRewardIsMutable();
          payReward_.add(builderForValue.build());
          onChanged();
        } else {
          payRewardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder addPayReward(
          int index, myudfs.Common.PayReward.Builder builderForValue) {
        if (payRewardBuilder_ == null) {
          ensurePayRewardIsMutable();
          payReward_.add(index, builderForValue.build());
          onChanged();
        } else {
          payRewardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder addAllPayReward(
          java.lang.Iterable<? extends myudfs.Common.PayReward> values) {
        if (payRewardBuilder_ == null) {
          ensurePayRewardIsMutable();
          super.addAll(values, payReward_);
          onChanged();
        } else {
          payRewardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder clearPayReward() {
        if (payRewardBuilder_ == null) {
          payReward_ = java.util.Collections.emptyList();
          bitField4_ = (bitField4_ & ~0x00800000);
          onChanged();
        } else {
          payRewardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public Builder removePayReward(int index) {
        if (payRewardBuilder_ == null) {
          ensurePayRewardIsMutable();
          payReward_.remove(index);
          onChanged();
        } else {
          payRewardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public myudfs.Common.PayReward.Builder getPayRewardBuilder(
          int index) {
        return getPayRewardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public myudfs.Common.PayRewardOrBuilder getPayRewardOrBuilder(
          int index) {
        if (payRewardBuilder_ == null) {
          return payReward_.get(index);  } else {
          return payRewardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public java.util.List<? extends myudfs.Common.PayRewardOrBuilder> 
           getPayRewardOrBuilderList() {
        if (payRewardBuilder_ != null) {
          return payRewardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(payReward_);
        }
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public myudfs.Common.PayReward.Builder addPayRewardBuilder() {
        return getPayRewardFieldBuilder().addBuilder(
            myudfs.Common.PayReward.getDefaultInstance());
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public myudfs.Common.PayReward.Builder addPayRewardBuilder(
          int index) {
        return getPayRewardFieldBuilder().addBuilder(
            index, myudfs.Common.PayReward.getDefaultInstance());
      }
      /**
       * <code>repeated .PayReward payReward = 178;</code>
       */
      public java.util.List<myudfs.Common.PayReward.Builder> 
           getPayRewardBuilderList() {
        return getPayRewardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PayReward, myudfs.Common.PayReward.Builder, myudfs.Common.PayRewardOrBuilder> 
          getPayRewardFieldBuilder() {
        if (payRewardBuilder_ == null) {
          payRewardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.PayReward, myudfs.Common.PayReward.Builder, myudfs.Common.PayRewardOrBuilder>(
                  payReward_,
                  ((bitField4_ & 0x00800000) == 0x00800000),
                  getParentForChildren(),
                  isClean());
          payReward_ = null;
        }
        return payRewardBuilder_;
      }

      // optional int32 yunYouTime = 179;
      private int yunYouTime_ ;
      /**
       * <code>optional int32 yunYouTime = 179;</code>
       *
       * <pre>
       *云游刷新次数
       * </pre>
       */
      public boolean hasYunYouTime() {
        return ((bitField4_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 yunYouTime = 179;</code>
       *
       * <pre>
       *云游刷新次数
       * </pre>
       */
      public int getYunYouTime() {
        return yunYouTime_;
      }
      /**
       * <code>optional int32 yunYouTime = 179;</code>
       *
       * <pre>
       *云游刷新次数
       * </pre>
       */
      public Builder setYunYouTime(int value) {
        bitField4_ |= 0x01000000;
        yunYouTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yunYouTime = 179;</code>
       *
       * <pre>
       *云游刷新次数
       * </pre>
       */
      public Builder clearYunYouTime() {
        bitField4_ = (bitField4_ & ~0x01000000);
        yunYouTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pvpChangeTime = 180;
      private int pvpChangeTime_ ;
      /**
       * <code>optional int32 pvpChangeTime = 180;</code>
       *
       * <pre>
       *决战兑换商店刷新次数
       * </pre>
       */
      public boolean hasPvpChangeTime() {
        return ((bitField4_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 pvpChangeTime = 180;</code>
       *
       * <pre>
       *决战兑换商店刷新次数
       * </pre>
       */
      public int getPvpChangeTime() {
        return pvpChangeTime_;
      }
      /**
       * <code>optional int32 pvpChangeTime = 180;</code>
       *
       * <pre>
       *决战兑换商店刷新次数
       * </pre>
       */
      public Builder setPvpChangeTime(int value) {
        bitField4_ |= 0x02000000;
        pvpChangeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpChangeTime = 180;</code>
       *
       * <pre>
       *决战兑换商店刷新次数
       * </pre>
       */
      public Builder clearPvpChangeTime() {
        bitField4_ = (bitField4_ & ~0x02000000);
        pvpChangeTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shenMoChangeTime = 181;
      private int shenMoChangeTime_ ;
      /**
       * <code>optional int32 shenMoChangeTime = 181;</code>
       *
       * <pre>
       *神魔兑换商店次数
       * </pre>
       */
      public boolean hasShenMoChangeTime() {
        return ((bitField4_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 shenMoChangeTime = 181;</code>
       *
       * <pre>
       *神魔兑换商店次数
       * </pre>
       */
      public int getShenMoChangeTime() {
        return shenMoChangeTime_;
      }
      /**
       * <code>optional int32 shenMoChangeTime = 181;</code>
       *
       * <pre>
       *神魔兑换商店次数
       * </pre>
       */
      public Builder setShenMoChangeTime(int value) {
        bitField4_ |= 0x04000000;
        shenMoChangeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shenMoChangeTime = 181;</code>
       *
       * <pre>
       *神魔兑换商店次数
       * </pre>
       */
      public Builder clearShenMoChangeTime() {
        bitField4_ = (bitField4_ & ~0x04000000);
        shenMoChangeTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shenMoNum = 182;
      private int shenMoNum_ ;
      /**
       * <code>optional int32 shenMoNum = 182;</code>
       *
       * <pre>
       * 挑战神魔次数
       * </pre>
       */
      public boolean hasShenMoNum() {
        return ((bitField4_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 shenMoNum = 182;</code>
       *
       * <pre>
       * 挑战神魔次数
       * </pre>
       */
      public int getShenMoNum() {
        return shenMoNum_;
      }
      /**
       * <code>optional int32 shenMoNum = 182;</code>
       *
       * <pre>
       * 挑战神魔次数
       * </pre>
       */
      public Builder setShenMoNum(int value) {
        bitField4_ |= 0x08000000;
        shenMoNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shenMoNum = 182;</code>
       *
       * <pre>
       * 挑战神魔次数
       * </pre>
       */
      public Builder clearShenMoNum() {
        bitField4_ = (bitField4_ & ~0x08000000);
        shenMoNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 itemLvUpNum = 183;
      private int itemLvUpNum_ ;
      /**
       * <code>optional int32 itemLvUpNum = 183;</code>
       *
       * <pre>
       * 装备强化次数
       * </pre>
       */
      public boolean hasItemLvUpNum() {
        return ((bitField4_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 itemLvUpNum = 183;</code>
       *
       * <pre>
       * 装备强化次数
       * </pre>
       */
      public int getItemLvUpNum() {
        return itemLvUpNum_;
      }
      /**
       * <code>optional int32 itemLvUpNum = 183;</code>
       *
       * <pre>
       * 装备强化次数
       * </pre>
       */
      public Builder setItemLvUpNum(int value) {
        bitField4_ |= 0x10000000;
        itemLvUpNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 itemLvUpNum = 183;</code>
       *
       * <pre>
       * 装备强化次数
       * </pre>
       */
      public Builder clearItemLvUpNum() {
        bitField4_ = (bitField4_ & ~0x10000000);
        itemLvUpNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cardLvUpNum = 184;
      private int cardLvUpNum_ ;
      /**
       * <code>optional int32 cardLvUpNum = 184;</code>
       *
       * <pre>
       * 卡牌强化次数
       * </pre>
       */
      public boolean hasCardLvUpNum() {
        return ((bitField4_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 cardLvUpNum = 184;</code>
       *
       * <pre>
       * 卡牌强化次数
       * </pre>
       */
      public int getCardLvUpNum() {
        return cardLvUpNum_;
      }
      /**
       * <code>optional int32 cardLvUpNum = 184;</code>
       *
       * <pre>
       * 卡牌强化次数
       * </pre>
       */
      public Builder setCardLvUpNum(int value) {
        bitField4_ |= 0x20000000;
        cardLvUpNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardLvUpNum = 184;</code>
       *
       * <pre>
       * 卡牌强化次数
       * </pre>
       */
      public Builder clearCardLvUpNum() {
        bitField4_ = (bitField4_ & ~0x20000000);
        cardLvUpNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shenTongNum = 185;
      private int shenTongNum_ ;
      /**
       * <code>optional int32 shenTongNum = 185;</code>
       *
       * <pre>
       * 提升申通次数
       * </pre>
       */
      public boolean hasShenTongNum() {
        return ((bitField4_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 shenTongNum = 185;</code>
       *
       * <pre>
       * 提升申通次数
       * </pre>
       */
      public int getShenTongNum() {
        return shenTongNum_;
      }
      /**
       * <code>optional int32 shenTongNum = 185;</code>
       *
       * <pre>
       * 提升申通次数
       * </pre>
       */
      public Builder setShenTongNum(int value) {
        bitField4_ |= 0x40000000;
        shenTongNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shenTongNum = 185;</code>
       *
       * <pre>
       * 提升申通次数
       * </pre>
       */
      public Builder clearShenTongNum() {
        bitField4_ = (bitField4_ & ~0x40000000);
        shenTongNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 skillNum = 186;
      private int skillNum_ ;
      /**
       * <code>optional int32 skillNum = 186;</code>
       *
       * <pre>
       * 绝技升级次数
       * </pre>
       */
      public boolean hasSkillNum() {
        return ((bitField4_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 skillNum = 186;</code>
       *
       * <pre>
       * 绝技升级次数
       * </pre>
       */
      public int getSkillNum() {
        return skillNum_;
      }
      /**
       * <code>optional int32 skillNum = 186;</code>
       *
       * <pre>
       * 绝技升级次数
       * </pre>
       */
      public Builder setSkillNum(int value) {
        bitField4_ |= 0x80000000;
        skillNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 skillNum = 186;</code>
       *
       * <pre>
       * 绝技升级次数
       * </pre>
       */
      public Builder clearSkillNum() {
        bitField4_ = (bitField4_ & ~0x80000000);
        skillNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huFaNum = 187;
      private int huFaNum_ ;
      /**
       * <code>optional int32 huFaNum = 187;</code>
       *
       * <pre>
       * 护法洗练次数
       * </pre>
       */
      public boolean hasHuFaNum() {
        return ((bitField5_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 huFaNum = 187;</code>
       *
       * <pre>
       * 护法洗练次数
       * </pre>
       */
      public int getHuFaNum() {
        return huFaNum_;
      }
      /**
       * <code>optional int32 huFaNum = 187;</code>
       *
       * <pre>
       * 护法洗练次数
       * </pre>
       */
      public Builder setHuFaNum(int value) {
        bitField5_ |= 0x00000001;
        huFaNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huFaNum = 187;</code>
       *
       * <pre>
       * 护法洗练次数
       * </pre>
       */
      public Builder clearHuFaNum() {
        bitField5_ = (bitField5_ & ~0x00000001);
        huFaNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xiuLianNum = 188;
      private int xiuLianNum_ ;
      /**
       * <code>optional int32 xiuLianNum = 188;</code>
       *
       * <pre>
       * 卡牌修炼次数
       * </pre>
       */
      public boolean hasXiuLianNum() {
        return ((bitField5_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 xiuLianNum = 188;</code>
       *
       * <pre>
       * 卡牌修炼次数
       * </pre>
       */
      public int getXiuLianNum() {
        return xiuLianNum_;
      }
      /**
       * <code>optional int32 xiuLianNum = 188;</code>
       *
       * <pre>
       * 卡牌修炼次数
       * </pre>
       */
      public Builder setXiuLianNum(int value) {
        bitField5_ |= 0x00000002;
        xiuLianNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiuLianNum = 188;</code>
       *
       * <pre>
       * 卡牌修炼次数
       * </pre>
       */
      public Builder clearXiuLianNum() {
        bitField5_ = (bitField5_ & ~0x00000002);
        xiuLianNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 changeName = 189;
      private int changeName_ ;
      /**
       * <code>optional int32 changeName = 189;</code>
       *
       * <pre>
       * 修改名字的次数
       * </pre>
       */
      public boolean hasChangeName() {
        return ((bitField5_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 changeName = 189;</code>
       *
       * <pre>
       * 修改名字的次数
       * </pre>
       */
      public int getChangeName() {
        return changeName_;
      }
      /**
       * <code>optional int32 changeName = 189;</code>
       *
       * <pre>
       * 修改名字的次数
       * </pre>
       */
      public Builder setChangeName(int value) {
        bitField5_ |= 0x00000004;
        changeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 changeName = 189;</code>
       *
       * <pre>
       * 修改名字的次数
       * </pre>
       */
      public Builder clearChangeName() {
        bitField5_ = (bitField5_ & ~0x00000004);
        changeName_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 chengjiuReward = 190;
      private java.util.List<java.lang.Integer> chengjiuReward_ = java.util.Collections.emptyList();
      private void ensureChengjiuRewardIsMutable() {
        if (!((bitField5_ & 0x00000008) == 0x00000008)) {
          chengjiuReward_ = new java.util.ArrayList<java.lang.Integer>(chengjiuReward_);
          bitField5_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 chengjiuReward = 190;</code>
       *
       * <pre>
       *领取过的pvp成就奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getChengjiuRewardList() {
        return java.util.Collections.unmodifiableList(chengjiuReward_);
      }
      /**
       * <code>repeated int32 chengjiuReward = 190;</code>
       *
       * <pre>
       *领取过的pvp成就奖励
       * </pre>
       */
      public int getChengjiuRewardCount() {
        return chengjiuReward_.size();
      }
      /**
       * <code>repeated int32 chengjiuReward = 190;</code>
       *
       * <pre>
       *领取过的pvp成就奖励
       * </pre>
       */
      public int getChengjiuReward(int index) {
        return chengjiuReward_.get(index);
      }
      /**
       * <code>repeated int32 chengjiuReward = 190;</code>
       *
       * <pre>
       *领取过的pvp成就奖励
       * </pre>
       */
      public Builder setChengjiuReward(
          int index, int value) {
        ensureChengjiuRewardIsMutable();
        chengjiuReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chengjiuReward = 190;</code>
       *
       * <pre>
       *领取过的pvp成就奖励
       * </pre>
       */
      public Builder addChengjiuReward(int value) {
        ensureChengjiuRewardIsMutable();
        chengjiuReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chengjiuReward = 190;</code>
       *
       * <pre>
       *领取过的pvp成就奖励
       * </pre>
       */
      public Builder addAllChengjiuReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChengjiuRewardIsMutable();
        super.addAll(values, chengjiuReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chengjiuReward = 190;</code>
       *
       * <pre>
       *领取过的pvp成就奖励
       * </pre>
       */
      public Builder clearChengjiuReward() {
        chengjiuReward_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 fenXiangRewardTimes = 191;
      private int fenXiangRewardTimes_ ;
      /**
       * <code>optional int32 fenXiangRewardTimes = 191;</code>
       *
       * <pre>
       *微信本日分享次数
       * </pre>
       */
      public boolean hasFenXiangRewardTimes() {
        return ((bitField5_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 fenXiangRewardTimes = 191;</code>
       *
       * <pre>
       *微信本日分享次数
       * </pre>
       */
      public int getFenXiangRewardTimes() {
        return fenXiangRewardTimes_;
      }
      /**
       * <code>optional int32 fenXiangRewardTimes = 191;</code>
       *
       * <pre>
       *微信本日分享次数
       * </pre>
       */
      public Builder setFenXiangRewardTimes(int value) {
        bitField5_ |= 0x00000010;
        fenXiangRewardTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fenXiangRewardTimes = 191;</code>
       *
       * <pre>
       *微信本日分享次数
       * </pre>
       */
      public Builder clearFenXiangRewardTimes() {
        bitField5_ = (bitField5_ & ~0x00000010);
        fenXiangRewardTimes_ = 0;
        onChanged();
        return this;
      }

      // optional bool weiXinFirstShare = 192;
      private boolean weiXinFirstShare_ ;
      /**
       * <code>optional bool weiXinFirstShare = 192;</code>
       *
       * <pre>
       * true:微信首次分享奖励已经领取
       * </pre>
       */
      public boolean hasWeiXinFirstShare() {
        return ((bitField5_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool weiXinFirstShare = 192;</code>
       *
       * <pre>
       * true:微信首次分享奖励已经领取
       * </pre>
       */
      public boolean getWeiXinFirstShare() {
        return weiXinFirstShare_;
      }
      /**
       * <code>optional bool weiXinFirstShare = 192;</code>
       *
       * <pre>
       * true:微信首次分享奖励已经领取
       * </pre>
       */
      public Builder setWeiXinFirstShare(boolean value) {
        bitField5_ |= 0x00000020;
        weiXinFirstShare_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool weiXinFirstShare = 192;</code>
       *
       * <pre>
       * true:微信首次分享奖励已经领取
       * </pre>
       */
      public Builder clearWeiXinFirstShare() {
        bitField5_ = (bitField5_ & ~0x00000020);
        weiXinFirstShare_ = false;
        onChanged();
        return this;
      }

      // optional bool weiXinOpen = 193;
      private boolean weiXinOpen_ ;
      /**
       * <code>optional bool weiXinOpen = 193;</code>
       *
       * <pre>
       * true:微信分享活动开启
       * </pre>
       */
      public boolean hasWeiXinOpen() {
        return ((bitField5_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool weiXinOpen = 193;</code>
       *
       * <pre>
       * true:微信分享活动开启
       * </pre>
       */
      public boolean getWeiXinOpen() {
        return weiXinOpen_;
      }
      /**
       * <code>optional bool weiXinOpen = 193;</code>
       *
       * <pre>
       * true:微信分享活动开启
       * </pre>
       */
      public Builder setWeiXinOpen(boolean value) {
        bitField5_ |= 0x00000040;
        weiXinOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool weiXinOpen = 193;</code>
       *
       * <pre>
       * true:微信分享活动开启
       * </pre>
       */
      public Builder clearWeiXinOpen() {
        bitField5_ = (bitField5_ & ~0x00000040);
        weiXinOpen_ = false;
        onChanged();
        return this;
      }

      // optional bool xilianOpen = 194;
      private boolean xilianOpen_ ;
      /**
       * <code>optional bool xilianOpen = 194;</code>
       *
       * <pre>
       *洗练是否开启
       * </pre>
       */
      public boolean hasXilianOpen() {
        return ((bitField5_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool xilianOpen = 194;</code>
       *
       * <pre>
       *洗练是否开启
       * </pre>
       */
      public boolean getXilianOpen() {
        return xilianOpen_;
      }
      /**
       * <code>optional bool xilianOpen = 194;</code>
       *
       * <pre>
       *洗练是否开启
       * </pre>
       */
      public Builder setXilianOpen(boolean value) {
        bitField5_ |= 0x00000080;
        xilianOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool xilianOpen = 194;</code>
       *
       * <pre>
       *洗练是否开启
       * </pre>
       */
      public Builder clearXilianOpen() {
        bitField5_ = (bitField5_ & ~0x00000080);
        xilianOpen_ = false;
        onChanged();
        return this;
      }

      // optional int32 pvpWinMax = 195;
      private int pvpWinMax_ ;
      /**
       * <code>optional int32 pvpWinMax = 195;</code>
       *
       * <pre>
       * 连胜次数，奖励用
       * </pre>
       */
      public boolean hasPvpWinMax() {
        return ((bitField5_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 pvpWinMax = 195;</code>
       *
       * <pre>
       * 连胜次数，奖励用
       * </pre>
       */
      public int getPvpWinMax() {
        return pvpWinMax_;
      }
      /**
       * <code>optional int32 pvpWinMax = 195;</code>
       *
       * <pre>
       * 连胜次数，奖励用
       * </pre>
       */
      public Builder setPvpWinMax(int value) {
        bitField5_ |= 0x00000100;
        pvpWinMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpWinMax = 195;</code>
       *
       * <pre>
       * 连胜次数，奖励用
       * </pre>
       */
      public Builder clearPvpWinMax() {
        bitField5_ = (bitField5_ & ~0x00000100);
        pvpWinMax_ = 0;
        onChanged();
        return this;
      }

      // optional string inviteCode = 196;
      private java.lang.Object inviteCode_ = "";
      /**
       * <code>optional string inviteCode = 196;</code>
       *
       * <pre>
       *个人邀请码
       * </pre>
       */
      public boolean hasInviteCode() {
        return ((bitField5_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string inviteCode = 196;</code>
       *
       * <pre>
       *个人邀请码
       * </pre>
       */
      public java.lang.String getInviteCode() {
        java.lang.Object ref = inviteCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          inviteCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string inviteCode = 196;</code>
       *
       * <pre>
       *个人邀请码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInviteCodeBytes() {
        java.lang.Object ref = inviteCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inviteCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string inviteCode = 196;</code>
       *
       * <pre>
       *个人邀请码
       * </pre>
       */
      public Builder setInviteCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField5_ |= 0x00000200;
        inviteCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string inviteCode = 196;</code>
       *
       * <pre>
       *个人邀请码
       * </pre>
       */
      public Builder clearInviteCode() {
        bitField5_ = (bitField5_ & ~0x00000200);
        inviteCode_ = getDefaultInstance().getInviteCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string inviteCode = 196;</code>
       *
       * <pre>
       *个人邀请码
       * </pre>
       */
      public Builder setInviteCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField5_ |= 0x00000200;
        inviteCode_ = value;
        onChanged();
        return this;
      }

      // optional int32 inviteNum = 197;
      private int inviteNum_ ;
      /**
       * <code>optional int32 inviteNum = 197;</code>
       *
       * <pre>
       * 邀请人数
       * </pre>
       */
      public boolean hasInviteNum() {
        return ((bitField5_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 inviteNum = 197;</code>
       *
       * <pre>
       * 邀请人数
       * </pre>
       */
      public int getInviteNum() {
        return inviteNum_;
      }
      /**
       * <code>optional int32 inviteNum = 197;</code>
       *
       * <pre>
       * 邀请人数
       * </pre>
       */
      public Builder setInviteNum(int value) {
        bitField5_ |= 0x00000400;
        inviteNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inviteNum = 197;</code>
       *
       * <pre>
       * 邀请人数
       * </pre>
       */
      public Builder clearInviteNum() {
        bitField5_ = (bitField5_ & ~0x00000400);
        inviteNum_ = 0;
        onChanged();
        return this;
      }

      // optional int64 inviterId = 198;
      private long inviterId_ ;
      /**
       * <code>optional int64 inviterId = 198;</code>
       *
       * <pre>
       * 自己的邀请人id
       * </pre>
       */
      public boolean hasInviterId() {
        return ((bitField5_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 inviterId = 198;</code>
       *
       * <pre>
       * 自己的邀请人id
       * </pre>
       */
      public long getInviterId() {
        return inviterId_;
      }
      /**
       * <code>optional int64 inviterId = 198;</code>
       *
       * <pre>
       * 自己的邀请人id
       * </pre>
       */
      public Builder setInviterId(long value) {
        bitField5_ |= 0x00000800;
        inviterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 inviterId = 198;</code>
       *
       * <pre>
       * 自己的邀请人id
       * </pre>
       */
      public Builder clearInviterId() {
        bitField5_ = (bitField5_ & ~0x00000800);
        inviterId_ = 0L;
        onChanged();
        return this;
      }

      // optional bool clearFirstPayExtraIds = 199;
      private boolean clearFirstPayExtraIds_ ;
      /**
       * <code>optional bool clearFirstPayExtraIds = 199;</code>
       *
       * <pre>
       * true:清空客户端的FirstPayExtraIds列表
       * </pre>
       */
      public boolean hasClearFirstPayExtraIds() {
        return ((bitField5_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool clearFirstPayExtraIds = 199;</code>
       *
       * <pre>
       * true:清空客户端的FirstPayExtraIds列表
       * </pre>
       */
      public boolean getClearFirstPayExtraIds() {
        return clearFirstPayExtraIds_;
      }
      /**
       * <code>optional bool clearFirstPayExtraIds = 199;</code>
       *
       * <pre>
       * true:清空客户端的FirstPayExtraIds列表
       * </pre>
       */
      public Builder setClearFirstPayExtraIds(boolean value) {
        bitField5_ |= 0x00001000;
        clearFirstPayExtraIds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool clearFirstPayExtraIds = 199;</code>
       *
       * <pre>
       * true:清空客户端的FirstPayExtraIds列表
       * </pre>
       */
      public Builder clearClearFirstPayExtraIds() {
        bitField5_ = (bitField5_ & ~0x00001000);
        clearFirstPayExtraIds_ = false;
        onChanged();
        return this;
      }

      // optional .MapItem3 loginActivity = 200;
      private myudfs.Common.MapItem3 loginActivity_ = myudfs.Common.MapItem3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.MapItem3, myudfs.Common.MapItem3.Builder, myudfs.Common.MapItem3OrBuilder> loginActivityBuilder_;
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public boolean hasLoginActivity() {
        return ((bitField5_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public myudfs.Common.MapItem3 getLoginActivity() {
        if (loginActivityBuilder_ == null) {
          return loginActivity_;
        } else {
          return loginActivityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public Builder setLoginActivity(myudfs.Common.MapItem3 value) {
        if (loginActivityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loginActivity_ = value;
          onChanged();
        } else {
          loginActivityBuilder_.setMessage(value);
        }
        bitField5_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public Builder setLoginActivity(
          myudfs.Common.MapItem3.Builder builderForValue) {
        if (loginActivityBuilder_ == null) {
          loginActivity_ = builderForValue.build();
          onChanged();
        } else {
          loginActivityBuilder_.setMessage(builderForValue.build());
        }
        bitField5_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public Builder mergeLoginActivity(myudfs.Common.MapItem3 value) {
        if (loginActivityBuilder_ == null) {
          if (((bitField5_ & 0x00002000) == 0x00002000) &&
              loginActivity_ != myudfs.Common.MapItem3.getDefaultInstance()) {
            loginActivity_ =
              myudfs.Common.MapItem3.newBuilder(loginActivity_).mergeFrom(value).buildPartial();
          } else {
            loginActivity_ = value;
          }
          onChanged();
        } else {
          loginActivityBuilder_.mergeFrom(value);
        }
        bitField5_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public Builder clearLoginActivity() {
        if (loginActivityBuilder_ == null) {
          loginActivity_ = myudfs.Common.MapItem3.getDefaultInstance();
          onChanged();
        } else {
          loginActivityBuilder_.clear();
        }
        bitField5_ = (bitField5_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public myudfs.Common.MapItem3.Builder getLoginActivityBuilder() {
        bitField5_ |= 0x00002000;
        onChanged();
        return getLoginActivityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      public myudfs.Common.MapItem3OrBuilder getLoginActivityOrBuilder() {
        if (loginActivityBuilder_ != null) {
          return loginActivityBuilder_.getMessageOrBuilder();
        } else {
          return loginActivity_;
        }
      }
      /**
       * <code>optional .MapItem3 loginActivity = 200;</code>
       *
       * <pre>
       *登陆领奖活动
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.MapItem3, myudfs.Common.MapItem3.Builder, myudfs.Common.MapItem3OrBuilder> 
          getLoginActivityFieldBuilder() {
        if (loginActivityBuilder_ == null) {
          loginActivityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.MapItem3, myudfs.Common.MapItem3.Builder, myudfs.Common.MapItem3OrBuilder>(
                  loginActivity_,
                  getParentForChildren(),
                  isClean());
          loginActivity_ = null;
        }
        return loginActivityBuilder_;
      }

      // optional int32 choukaQuan = 201;
      private int choukaQuan_ ;
      /**
       * <code>optional int32 choukaQuan = 201;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public boolean hasChoukaQuan() {
        return ((bitField5_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 choukaQuan = 201;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public int getChoukaQuan() {
        return choukaQuan_;
      }
      /**
       * <code>optional int32 choukaQuan = 201;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public Builder setChoukaQuan(int value) {
        bitField5_ |= 0x00004000;
        choukaQuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 choukaQuan = 201;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public Builder clearChoukaQuan() {
        bitField5_ = (bitField5_ & ~0x00004000);
        choukaQuan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shenJiangScore = 206;
      private int shenJiangScore_ ;
      /**
       * <code>optional int32 shenJiangScore = 206;</code>
       *
       * <pre>
       *神将活动积分
       * </pre>
       */
      public boolean hasShenJiangScore() {
        return ((bitField5_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 shenJiangScore = 206;</code>
       *
       * <pre>
       *神将活动积分
       * </pre>
       */
      public int getShenJiangScore() {
        return shenJiangScore_;
      }
      /**
       * <code>optional int32 shenJiangScore = 206;</code>
       *
       * <pre>
       *神将活动积分
       * </pre>
       */
      public Builder setShenJiangScore(int value) {
        bitField5_ |= 0x00008000;
        shenJiangScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shenJiangScore = 206;</code>
       *
       * <pre>
       *神将活动积分
       * </pre>
       */
      public Builder clearShenJiangScore() {
        bitField5_ = (bitField5_ & ~0x00008000);
        shenJiangScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shenJiangTotalScore = 207;
      private int shenJiangTotalScore_ ;
      /**
       * <code>optional int32 shenJiangTotalScore = 207;</code>
       *
       * <pre>
       * 神将活动总积分
       * </pre>
       */
      public boolean hasShenJiangTotalScore() {
        return ((bitField5_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 shenJiangTotalScore = 207;</code>
       *
       * <pre>
       * 神将活动总积分
       * </pre>
       */
      public int getShenJiangTotalScore() {
        return shenJiangTotalScore_;
      }
      /**
       * <code>optional int32 shenJiangTotalScore = 207;</code>
       *
       * <pre>
       * 神将活动总积分
       * </pre>
       */
      public Builder setShenJiangTotalScore(int value) {
        bitField5_ |= 0x00010000;
        shenJiangTotalScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shenJiangTotalScore = 207;</code>
       *
       * <pre>
       * 神将活动总积分
       * </pre>
       */
      public Builder clearShenJiangTotalScore() {
        bitField5_ = (bitField5_ & ~0x00010000);
        shenJiangTotalScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shenJiangRank = 208;
      private int shenJiangRank_ ;
      /**
       * <code>optional int32 shenJiangRank = 208;</code>
       *
       * <pre>
       * 神将活动排名
       * </pre>
       */
      public boolean hasShenJiangRank() {
        return ((bitField5_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 shenJiangRank = 208;</code>
       *
       * <pre>
       * 神将活动排名
       * </pre>
       */
      public int getShenJiangRank() {
        return shenJiangRank_;
      }
      /**
       * <code>optional int32 shenJiangRank = 208;</code>
       *
       * <pre>
       * 神将活动排名
       * </pre>
       */
      public Builder setShenJiangRank(int value) {
        bitField5_ |= 0x00020000;
        shenJiangRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shenJiangRank = 208;</code>
       *
       * <pre>
       * 神将活动排名
       * </pre>
       */
      public Builder clearShenJiangRank() {
        bitField5_ = (bitField5_ & ~0x00020000);
        shenJiangRank_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 inviteNumReward = 209;
      private java.util.List<java.lang.Integer> inviteNumReward_ = java.util.Collections.emptyList();
      private void ensureInviteNumRewardIsMutable() {
        if (!((bitField5_ & 0x00040000) == 0x00040000)) {
          inviteNumReward_ = new java.util.ArrayList<java.lang.Integer>(inviteNumReward_);
          bitField5_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 inviteNumReward = 209;</code>
       *
       * <pre>
       * 已经领过的邀请人奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getInviteNumRewardList() {
        return java.util.Collections.unmodifiableList(inviteNumReward_);
      }
      /**
       * <code>repeated int32 inviteNumReward = 209;</code>
       *
       * <pre>
       * 已经领过的邀请人奖励
       * </pre>
       */
      public int getInviteNumRewardCount() {
        return inviteNumReward_.size();
      }
      /**
       * <code>repeated int32 inviteNumReward = 209;</code>
       *
       * <pre>
       * 已经领过的邀请人奖励
       * </pre>
       */
      public int getInviteNumReward(int index) {
        return inviteNumReward_.get(index);
      }
      /**
       * <code>repeated int32 inviteNumReward = 209;</code>
       *
       * <pre>
       * 已经领过的邀请人奖励
       * </pre>
       */
      public Builder setInviteNumReward(
          int index, int value) {
        ensureInviteNumRewardIsMutable();
        inviteNumReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 inviteNumReward = 209;</code>
       *
       * <pre>
       * 已经领过的邀请人奖励
       * </pre>
       */
      public Builder addInviteNumReward(int value) {
        ensureInviteNumRewardIsMutable();
        inviteNumReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 inviteNumReward = 209;</code>
       *
       * <pre>
       * 已经领过的邀请人奖励
       * </pre>
       */
      public Builder addAllInviteNumReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInviteNumRewardIsMutable();
        super.addAll(values, inviteNumReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 inviteNumReward = 209;</code>
       *
       * <pre>
       * 已经领过的邀请人奖励
       * </pre>
       */
      public Builder clearInviteNumReward() {
        inviteNumReward_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated string yuanshenBox = 210;
      private com.google.protobuf.LazyStringList yuanshenBox_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureYuanshenBoxIsMutable() {
        if (!((bitField5_ & 0x00080000) == 0x00080000)) {
          yuanshenBox_ = new com.google.protobuf.LazyStringArrayList(yuanshenBox_);
          bitField5_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public java.util.List<java.lang.String>
          getYuanshenBoxList() {
        return java.util.Collections.unmodifiableList(yuanshenBox_);
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public int getYuanshenBoxCount() {
        return yuanshenBox_.size();
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public java.lang.String getYuanshenBox(int index) {
        return yuanshenBox_.get(index);
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public com.google.protobuf.ByteString
          getYuanshenBoxBytes(int index) {
        return yuanshenBox_.getByteString(index);
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public Builder setYuanshenBox(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureYuanshenBoxIsMutable();
        yuanshenBox_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public Builder addYuanshenBox(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureYuanshenBoxIsMutable();
        yuanshenBox_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public Builder addAllYuanshenBox(
          java.lang.Iterable<java.lang.String> values) {
        ensureYuanshenBoxIsMutable();
        super.addAll(values, yuanshenBox_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public Builder clearYuanshenBox() {
        yuanshenBox_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField5_ = (bitField5_ & ~0x00080000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string yuanshenBox = 210;</code>
       *
       * <pre>
       *魂匣推荐元神
       * </pre>
       */
      public Builder addYuanshenBoxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureYuanshenBoxIsMutable();
        yuanshenBox_.add(value);
        onChanged();
        return this;
      }

      // repeated .MapItem boxs = 211;
      private java.util.List<myudfs.Common.MapItem> boxs_ =
        java.util.Collections.emptyList();
      private void ensureBoxsIsMutable() {
        if (!((bitField5_ & 0x00100000) == 0x00100000)) {
          boxs_ = new java.util.ArrayList<myudfs.Common.MapItem>(boxs_);
          bitField5_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> boxsBuilder_;

      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getBoxsList() {
        if (boxsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boxs_);
        } else {
          return boxsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public int getBoxsCount() {
        if (boxsBuilder_ == null) {
          return boxs_.size();
        } else {
          return boxsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public myudfs.Common.MapItem getBoxs(int index) {
        if (boxsBuilder_ == null) {
          return boxs_.get(index);
        } else {
          return boxsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder setBoxs(
          int index, myudfs.Common.MapItem value) {
        if (boxsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxsIsMutable();
          boxs_.set(index, value);
          onChanged();
        } else {
          boxsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder setBoxs(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (boxsBuilder_ == null) {
          ensureBoxsIsMutable();
          boxs_.set(index, builderForValue.build());
          onChanged();
        } else {
          boxsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder addBoxs(myudfs.Common.MapItem value) {
        if (boxsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxsIsMutable();
          boxs_.add(value);
          onChanged();
        } else {
          boxsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder addBoxs(
          int index, myudfs.Common.MapItem value) {
        if (boxsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxsIsMutable();
          boxs_.add(index, value);
          onChanged();
        } else {
          boxsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder addBoxs(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (boxsBuilder_ == null) {
          ensureBoxsIsMutable();
          boxs_.add(builderForValue.build());
          onChanged();
        } else {
          boxsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder addBoxs(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (boxsBuilder_ == null) {
          ensureBoxsIsMutable();
          boxs_.add(index, builderForValue.build());
          onChanged();
        } else {
          boxsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder addAllBoxs(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (boxsBuilder_ == null) {
          ensureBoxsIsMutable();
          super.addAll(values, boxs_);
          onChanged();
        } else {
          boxsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder clearBoxs() {
        if (boxsBuilder_ == null) {
          boxs_ = java.util.Collections.emptyList();
          bitField5_ = (bitField5_ & ~0x00100000);
          onChanged();
        } else {
          boxsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public Builder removeBoxs(int index) {
        if (boxsBuilder_ == null) {
          ensureBoxsIsMutable();
          boxs_.remove(index);
          onChanged();
        } else {
          boxsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getBoxsBuilder(
          int index) {
        return getBoxsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getBoxsOrBuilder(
          int index) {
        if (boxsBuilder_ == null) {
          return boxs_.get(index);  } else {
          return boxsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getBoxsOrBuilderList() {
        if (boxsBuilder_ != null) {
          return boxsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boxs_);
        }
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addBoxsBuilder() {
        return getBoxsFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addBoxsBuilder(
          int index) {
        return getBoxsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem boxs = 211;</code>
       *
       * <pre>
       * 宝箱 key：宝箱id value：数量
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getBoxsBuilderList() {
        return getBoxsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getBoxsFieldBuilder() {
        if (boxsBuilder_ == null) {
          boxsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  boxs_,
                  ((bitField5_ & 0x00100000) == 0x00100000),
                  getParentForChildren(),
                  isClean());
          boxs_ = null;
        }
        return boxsBuilder_;
      }

      // repeated .MapItem buyBox = 212;
      private java.util.List<myudfs.Common.MapItem> buyBox_ =
        java.util.Collections.emptyList();
      private void ensureBuyBoxIsMutable() {
        if (!((bitField5_ & 0x00200000) == 0x00200000)) {
          buyBox_ = new java.util.ArrayList<myudfs.Common.MapItem>(buyBox_);
          bitField5_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> buyBoxBuilder_;

      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getBuyBoxList() {
        if (buyBoxBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buyBox_);
        } else {
          return buyBoxBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public int getBuyBoxCount() {
        if (buyBoxBuilder_ == null) {
          return buyBox_.size();
        } else {
          return buyBoxBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public myudfs.Common.MapItem getBuyBox(int index) {
        if (buyBoxBuilder_ == null) {
          return buyBox_.get(index);
        } else {
          return buyBoxBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder setBuyBox(
          int index, myudfs.Common.MapItem value) {
        if (buyBoxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuyBoxIsMutable();
          buyBox_.set(index, value);
          onChanged();
        } else {
          buyBoxBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder setBuyBox(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (buyBoxBuilder_ == null) {
          ensureBuyBoxIsMutable();
          buyBox_.set(index, builderForValue.build());
          onChanged();
        } else {
          buyBoxBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder addBuyBox(myudfs.Common.MapItem value) {
        if (buyBoxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuyBoxIsMutable();
          buyBox_.add(value);
          onChanged();
        } else {
          buyBoxBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder addBuyBox(
          int index, myudfs.Common.MapItem value) {
        if (buyBoxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuyBoxIsMutable();
          buyBox_.add(index, value);
          onChanged();
        } else {
          buyBoxBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder addBuyBox(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (buyBoxBuilder_ == null) {
          ensureBuyBoxIsMutable();
          buyBox_.add(builderForValue.build());
          onChanged();
        } else {
          buyBoxBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder addBuyBox(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (buyBoxBuilder_ == null) {
          ensureBuyBoxIsMutable();
          buyBox_.add(index, builderForValue.build());
          onChanged();
        } else {
          buyBoxBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder addAllBuyBox(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (buyBoxBuilder_ == null) {
          ensureBuyBoxIsMutable();
          super.addAll(values, buyBox_);
          onChanged();
        } else {
          buyBoxBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder clearBuyBox() {
        if (buyBoxBuilder_ == null) {
          buyBox_ = java.util.Collections.emptyList();
          bitField5_ = (bitField5_ & ~0x00200000);
          onChanged();
        } else {
          buyBoxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public Builder removeBuyBox(int index) {
        if (buyBoxBuilder_ == null) {
          ensureBuyBoxIsMutable();
          buyBox_.remove(index);
          onChanged();
        } else {
          buyBoxBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getBuyBoxBuilder(
          int index) {
        return getBuyBoxFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getBuyBoxOrBuilder(
          int index) {
        if (buyBoxBuilder_ == null) {
          return buyBox_.get(index);  } else {
          return buyBoxBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getBuyBoxOrBuilderList() {
        if (buyBoxBuilder_ != null) {
          return buyBoxBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buyBox_);
        }
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addBuyBoxBuilder() {
        return getBuyBoxFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addBuyBoxBuilder(
          int index) {
        return getBuyBoxFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem buyBox = 212;</code>
       *
       * <pre>
       * 购买宝箱的次数，0点清零
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getBuyBoxBuilderList() {
        return getBuyBoxFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getBuyBoxFieldBuilder() {
        if (buyBoxBuilder_ == null) {
          buyBoxBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  buyBox_,
                  ((bitField5_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          buyBox_ = null;
        }
        return buyBoxBuilder_;
      }

      // optional int32 zhuanpan = 213;
      private int zhuanpan_ ;
      /**
       * <code>optional int32 zhuanpan = 213;</code>
       *
       * <pre>
       *每天转盘次数
       * </pre>
       */
      public boolean hasZhuanpan() {
        return ((bitField5_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 zhuanpan = 213;</code>
       *
       * <pre>
       *每天转盘次数
       * </pre>
       */
      public int getZhuanpan() {
        return zhuanpan_;
      }
      /**
       * <code>optional int32 zhuanpan = 213;</code>
       *
       * <pre>
       *每天转盘次数
       * </pre>
       */
      public Builder setZhuanpan(int value) {
        bitField5_ |= 0x00400000;
        zhuanpan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhuanpan = 213;</code>
       *
       * <pre>
       *每天转盘次数
       * </pre>
       */
      public Builder clearZhuanpan() {
        bitField5_ = (bitField5_ & ~0x00400000);
        zhuanpan_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 sevenReward = 214;
      private java.util.List<java.lang.Integer> sevenReward_ = java.util.Collections.emptyList();
      private void ensureSevenRewardIsMutable() {
        if (!((bitField5_ & 0x00800000) == 0x00800000)) {
          sevenReward_ = new java.util.ArrayList<java.lang.Integer>(sevenReward_);
          bitField5_ |= 0x00800000;
         }
      }
      /**
       * <code>repeated int32 sevenReward = 214;</code>
       *
       * <pre>
       * 领取过的7天奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSevenRewardList() {
        return java.util.Collections.unmodifiableList(sevenReward_);
      }
      /**
       * <code>repeated int32 sevenReward = 214;</code>
       *
       * <pre>
       * 领取过的7天奖励
       * </pre>
       */
      public int getSevenRewardCount() {
        return sevenReward_.size();
      }
      /**
       * <code>repeated int32 sevenReward = 214;</code>
       *
       * <pre>
       * 领取过的7天奖励
       * </pre>
       */
      public int getSevenReward(int index) {
        return sevenReward_.get(index);
      }
      /**
       * <code>repeated int32 sevenReward = 214;</code>
       *
       * <pre>
       * 领取过的7天奖励
       * </pre>
       */
      public Builder setSevenReward(
          int index, int value) {
        ensureSevenRewardIsMutable();
        sevenReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sevenReward = 214;</code>
       *
       * <pre>
       * 领取过的7天奖励
       * </pre>
       */
      public Builder addSevenReward(int value) {
        ensureSevenRewardIsMutable();
        sevenReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sevenReward = 214;</code>
       *
       * <pre>
       * 领取过的7天奖励
       * </pre>
       */
      public Builder addAllSevenReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSevenRewardIsMutable();
        super.addAll(values, sevenReward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sevenReward = 214;</code>
       *
       * <pre>
       * 领取过的7天奖励
       * </pre>
       */
      public Builder clearSevenReward() {
        sevenReward_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x00800000);
        onChanged();
        return this;
      }

      // repeated int32 playerNum = 215;
      private java.util.List<java.lang.Integer> playerNum_ = java.util.Collections.emptyList();
      private void ensurePlayerNumIsMutable() {
        if (!((bitField5_ & 0x01000000) == 0x01000000)) {
          playerNum_ = new java.util.ArrayList<java.lang.Integer>(playerNum_);
          bitField5_ |= 0x01000000;
         }
      }
      /**
       * <code>repeated int32 playerNum = 215;</code>
       *
       * <pre>
       * 邀请码需要达到的人数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerNumList() {
        return java.util.Collections.unmodifiableList(playerNum_);
      }
      /**
       * <code>repeated int32 playerNum = 215;</code>
       *
       * <pre>
       * 邀请码需要达到的人数
       * </pre>
       */
      public int getPlayerNumCount() {
        return playerNum_.size();
      }
      /**
       * <code>repeated int32 playerNum = 215;</code>
       *
       * <pre>
       * 邀请码需要达到的人数
       * </pre>
       */
      public int getPlayerNum(int index) {
        return playerNum_.get(index);
      }
      /**
       * <code>repeated int32 playerNum = 215;</code>
       *
       * <pre>
       * 邀请码需要达到的人数
       * </pre>
       */
      public Builder setPlayerNum(
          int index, int value) {
        ensurePlayerNumIsMutable();
        playerNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playerNum = 215;</code>
       *
       * <pre>
       * 邀请码需要达到的人数
       * </pre>
       */
      public Builder addPlayerNum(int value) {
        ensurePlayerNumIsMutable();
        playerNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playerNum = 215;</code>
       *
       * <pre>
       * 邀请码需要达到的人数
       * </pre>
       */
      public Builder addAllPlayerNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerNumIsMutable();
        super.addAll(values, playerNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playerNum = 215;</code>
       *
       * <pre>
       * 邀请码需要达到的人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        playerNum_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x01000000);
        onChanged();
        return this;
      }

      // repeated int32 rewardId = 216;
      private java.util.List<java.lang.Integer> rewardId_ = java.util.Collections.emptyList();
      private void ensureRewardIdIsMutable() {
        if (!((bitField5_ & 0x02000000) == 0x02000000)) {
          rewardId_ = new java.util.ArrayList<java.lang.Integer>(rewardId_);
          bitField5_ |= 0x02000000;
         }
      }
      /**
       * <code>repeated int32 rewardId = 216;</code>
       *
       * <pre>
       * 邀请码奖励id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRewardIdList() {
        return java.util.Collections.unmodifiableList(rewardId_);
      }
      /**
       * <code>repeated int32 rewardId = 216;</code>
       *
       * <pre>
       * 邀请码奖励id
       * </pre>
       */
      public int getRewardIdCount() {
        return rewardId_.size();
      }
      /**
       * <code>repeated int32 rewardId = 216;</code>
       *
       * <pre>
       * 邀请码奖励id
       * </pre>
       */
      public int getRewardId(int index) {
        return rewardId_.get(index);
      }
      /**
       * <code>repeated int32 rewardId = 216;</code>
       *
       * <pre>
       * 邀请码奖励id
       * </pre>
       */
      public Builder setRewardId(
          int index, int value) {
        ensureRewardIdIsMutable();
        rewardId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rewardId = 216;</code>
       *
       * <pre>
       * 邀请码奖励id
       * </pre>
       */
      public Builder addRewardId(int value) {
        ensureRewardIdIsMutable();
        rewardId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rewardId = 216;</code>
       *
       * <pre>
       * 邀请码奖励id
       * </pre>
       */
      public Builder addAllRewardId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRewardIdIsMutable();
        super.addAll(values, rewardId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rewardId = 216;</code>
       *
       * <pre>
       * 邀请码奖励id
       * </pre>
       */
      public Builder clearRewardId() {
        rewardId_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x02000000);
        onChanged();
        return this;
      }

      // optional bool inviteReward = 217;
      private boolean inviteReward_ ;
      /**
       * <code>optional bool inviteReward = 217;</code>
       *
       * <pre>
       * true:已经领取过填写邀请人奖励
       * </pre>
       */
      public boolean hasInviteReward() {
        return ((bitField5_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool inviteReward = 217;</code>
       *
       * <pre>
       * true:已经领取过填写邀请人奖励
       * </pre>
       */
      public boolean getInviteReward() {
        return inviteReward_;
      }
      /**
       * <code>optional bool inviteReward = 217;</code>
       *
       * <pre>
       * true:已经领取过填写邀请人奖励
       * </pre>
       */
      public Builder setInviteReward(boolean value) {
        bitField5_ |= 0x04000000;
        inviteReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool inviteReward = 217;</code>
       *
       * <pre>
       * true:已经领取过填写邀请人奖励
       * </pre>
       */
      public Builder clearInviteReward() {
        bitField5_ = (bitField5_ & ~0x04000000);
        inviteReward_ = false;
        onChanged();
        return this;
      }

      // optional int64 lingHun = 218;
      private long lingHun_ ;
      /**
       * <code>optional int64 lingHun = 218;</code>
       *
       * <pre>
       * 六道中的货币：灵魂
       * </pre>
       */
      public boolean hasLingHun() {
        return ((bitField5_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 lingHun = 218;</code>
       *
       * <pre>
       * 六道中的货币：灵魂
       * </pre>
       */
      public long getLingHun() {
        return lingHun_;
      }
      /**
       * <code>optional int64 lingHun = 218;</code>
       *
       * <pre>
       * 六道中的货币：灵魂
       * </pre>
       */
      public Builder setLingHun(long value) {
        bitField5_ |= 0x08000000;
        lingHun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lingHun = 218;</code>
       *
       * <pre>
       * 六道中的货币：灵魂
       * </pre>
       */
      public Builder clearLingHun() {
        bitField5_ = (bitField5_ & ~0x08000000);
        lingHun_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 liuDaoDuiHuanIds = 219;
      private java.util.List<java.lang.Integer> liuDaoDuiHuanIds_ = java.util.Collections.emptyList();
      private void ensureLiuDaoDuiHuanIdsIsMutable() {
        if (!((bitField5_ & 0x10000000) == 0x10000000)) {
          liuDaoDuiHuanIds_ = new java.util.ArrayList<java.lang.Integer>(liuDaoDuiHuanIds_);
          bitField5_ |= 0x10000000;
         }
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
       *
       * <pre>
       * 六道中的兑换物品
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLiuDaoDuiHuanIdsList() {
        return java.util.Collections.unmodifiableList(liuDaoDuiHuanIds_);
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
       *
       * <pre>
       * 六道中的兑换物品
       * </pre>
       */
      public int getLiuDaoDuiHuanIdsCount() {
        return liuDaoDuiHuanIds_.size();
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
       *
       * <pre>
       * 六道中的兑换物品
       * </pre>
       */
      public int getLiuDaoDuiHuanIds(int index) {
        return liuDaoDuiHuanIds_.get(index);
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
       *
       * <pre>
       * 六道中的兑换物品
       * </pre>
       */
      public Builder setLiuDaoDuiHuanIds(
          int index, int value) {
        ensureLiuDaoDuiHuanIdsIsMutable();
        liuDaoDuiHuanIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
       *
       * <pre>
       * 六道中的兑换物品
       * </pre>
       */
      public Builder addLiuDaoDuiHuanIds(int value) {
        ensureLiuDaoDuiHuanIdsIsMutable();
        liuDaoDuiHuanIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
       *
       * <pre>
       * 六道中的兑换物品
       * </pre>
       */
      public Builder addAllLiuDaoDuiHuanIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLiuDaoDuiHuanIdsIsMutable();
        super.addAll(values, liuDaoDuiHuanIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIds = 219;</code>
       *
       * <pre>
       * 六道中的兑换物品
       * </pre>
       */
      public Builder clearLiuDaoDuiHuanIds() {
        liuDaoDuiHuanIds_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x10000000);
        onChanged();
        return this;
      }

      // repeated int32 liuDaoDuiHuanIdsBuyed = 220;
      private java.util.List<java.lang.Integer> liuDaoDuiHuanIdsBuyed_ = java.util.Collections.emptyList();
      private void ensureLiuDaoDuiHuanIdsBuyedIsMutable() {
        if (!((bitField5_ & 0x20000000) == 0x20000000)) {
          liuDaoDuiHuanIdsBuyed_ = new java.util.ArrayList<java.lang.Integer>(liuDaoDuiHuanIdsBuyed_);
          bitField5_ |= 0x20000000;
         }
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
       *
       * <pre>
       * true:已经购买的六道兑换物品
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLiuDaoDuiHuanIdsBuyedList() {
        return java.util.Collections.unmodifiableList(liuDaoDuiHuanIdsBuyed_);
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
       *
       * <pre>
       * true:已经购买的六道兑换物品
       * </pre>
       */
      public int getLiuDaoDuiHuanIdsBuyedCount() {
        return liuDaoDuiHuanIdsBuyed_.size();
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
       *
       * <pre>
       * true:已经购买的六道兑换物品
       * </pre>
       */
      public int getLiuDaoDuiHuanIdsBuyed(int index) {
        return liuDaoDuiHuanIdsBuyed_.get(index);
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
       *
       * <pre>
       * true:已经购买的六道兑换物品
       * </pre>
       */
      public Builder setLiuDaoDuiHuanIdsBuyed(
          int index, int value) {
        ensureLiuDaoDuiHuanIdsBuyedIsMutable();
        liuDaoDuiHuanIdsBuyed_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
       *
       * <pre>
       * true:已经购买的六道兑换物品
       * </pre>
       */
      public Builder addLiuDaoDuiHuanIdsBuyed(int value) {
        ensureLiuDaoDuiHuanIdsBuyedIsMutable();
        liuDaoDuiHuanIdsBuyed_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
       *
       * <pre>
       * true:已经购买的六道兑换物品
       * </pre>
       */
      public Builder addAllLiuDaoDuiHuanIdsBuyed(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLiuDaoDuiHuanIdsBuyedIsMutable();
        super.addAll(values, liuDaoDuiHuanIdsBuyed_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 liuDaoDuiHuanIdsBuyed = 220;</code>
       *
       * <pre>
       * true:已经购买的六道兑换物品
       * </pre>
       */
      public Builder clearLiuDaoDuiHuanIdsBuyed() {
        liuDaoDuiHuanIdsBuyed_ = java.util.Collections.emptyList();
        bitField5_ = (bitField5_ & ~0x20000000);
        onChanged();
        return this;
      }

      // optional int32 liuDaoChangeTime = 221;
      private int liuDaoChangeTime_ ;
      /**
       * <code>optional int32 liuDaoChangeTime = 221;</code>
       *
       * <pre>
       * 六道兑换　当天已刷新次数
       * </pre>
       */
      public boolean hasLiuDaoChangeTime() {
        return ((bitField5_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 liuDaoChangeTime = 221;</code>
       *
       * <pre>
       * 六道兑换　当天已刷新次数
       * </pre>
       */
      public int getLiuDaoChangeTime() {
        return liuDaoChangeTime_;
      }
      /**
       * <code>optional int32 liuDaoChangeTime = 221;</code>
       *
       * <pre>
       * 六道兑换　当天已刷新次数
       * </pre>
       */
      public Builder setLiuDaoChangeTime(int value) {
        bitField5_ |= 0x40000000;
        liuDaoChangeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liuDaoChangeTime = 221;</code>
       *
       * <pre>
       * 六道兑换　当天已刷新次数
       * </pre>
       */
      public Builder clearLiuDaoChangeTime() {
        bitField5_ = (bitField5_ & ~0x40000000);
        liuDaoChangeTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 liuDaoBaoXiangOpenNum = 222;
      private int liuDaoBaoXiangOpenNum_ ;
      /**
       * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
       *
       * <pre>
       * 六道宝箱已开次数
       * </pre>
       */
      public boolean hasLiuDaoBaoXiangOpenNum() {
        return ((bitField5_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
       *
       * <pre>
       * 六道宝箱已开次数
       * </pre>
       */
      public int getLiuDaoBaoXiangOpenNum() {
        return liuDaoBaoXiangOpenNum_;
      }
      /**
       * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
       *
       * <pre>
       * 六道宝箱已开次数
       * </pre>
       */
      public Builder setLiuDaoBaoXiangOpenNum(int value) {
        bitField5_ |= 0x80000000;
        liuDaoBaoXiangOpenNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liuDaoBaoXiangOpenNum = 222;</code>
       *
       * <pre>
       * 六道宝箱已开次数
       * </pre>
       */
      public Builder clearLiuDaoBaoXiangOpenNum() {
        bitField5_ = (bitField5_ & ~0x80000000);
        liuDaoBaoXiangOpenNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vipCardAllLift = 226;
      private int vipCardAllLift_ ;
      /**
       * <code>optional int32 vipCardAllLift = 226;</code>
       *
       * <pre>
       *1:为终身月卡用户
       * </pre>
       */
      public boolean hasVipCardAllLift() {
        return ((bitField6_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 vipCardAllLift = 226;</code>
       *
       * <pre>
       *1:为终身月卡用户
       * </pre>
       */
      public int getVipCardAllLift() {
        return vipCardAllLift_;
      }
      /**
       * <code>optional int32 vipCardAllLift = 226;</code>
       *
       * <pre>
       *1:为终身月卡用户
       * </pre>
       */
      public Builder setVipCardAllLift(int value) {
        bitField6_ |= 0x00000001;
        vipCardAllLift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipCardAllLift = 226;</code>
       *
       * <pre>
       *1:为终身月卡用户
       * </pre>
       */
      public Builder clearVipCardAllLift() {
        bitField6_ = (bitField6_ & ~0x00000001);
        vipCardAllLift_ = 0;
        onChanged();
        return this;
      }

      // optional bool vipAllLifeReward = 227;
      private boolean vipAllLifeReward_ ;
      /**
       * <code>optional bool vipAllLifeReward = 227;</code>
       *
       * <pre>
       * true:本日终身月卡奖励已经领取
       * </pre>
       */
      public boolean hasVipAllLifeReward() {
        return ((bitField6_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool vipAllLifeReward = 227;</code>
       *
       * <pre>
       * true:本日终身月卡奖励已经领取
       * </pre>
       */
      public boolean getVipAllLifeReward() {
        return vipAllLifeReward_;
      }
      /**
       * <code>optional bool vipAllLifeReward = 227;</code>
       *
       * <pre>
       * true:本日终身月卡奖励已经领取
       * </pre>
       */
      public Builder setVipAllLifeReward(boolean value) {
        bitField6_ |= 0x00000002;
        vipAllLifeReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool vipAllLifeReward = 227;</code>
       *
       * <pre>
       * true:本日终身月卡奖励已经领取
       * </pre>
       */
      public Builder clearVipAllLifeReward() {
        bitField6_ = (bitField6_ & ~0x00000002);
        vipAllLifeReward_ = false;
        onChanged();
        return this;
      }

      // repeated int64 cardGroupLiuDao = 228;
      private java.util.List<java.lang.Long> cardGroupLiuDao_ = java.util.Collections.emptyList();
      private void ensureCardGroupLiuDaoIsMutable() {
        if (!((bitField6_ & 0x00000004) == 0x00000004)) {
          cardGroupLiuDao_ = new java.util.ArrayList<java.lang.Long>(cardGroupLiuDao_);
          bitField6_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 cardGroupLiuDao = 228;</code>
       *
       * <pre>
       *六道卡组(卡牌的id,  card.id)
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCardGroupLiuDaoList() {
        return java.util.Collections.unmodifiableList(cardGroupLiuDao_);
      }
      /**
       * <code>repeated int64 cardGroupLiuDao = 228;</code>
       *
       * <pre>
       *六道卡组(卡牌的id,  card.id)
       * </pre>
       */
      public int getCardGroupLiuDaoCount() {
        return cardGroupLiuDao_.size();
      }
      /**
       * <code>repeated int64 cardGroupLiuDao = 228;</code>
       *
       * <pre>
       *六道卡组(卡牌的id,  card.id)
       * </pre>
       */
      public long getCardGroupLiuDao(int index) {
        return cardGroupLiuDao_.get(index);
      }
      /**
       * <code>repeated int64 cardGroupLiuDao = 228;</code>
       *
       * <pre>
       *六道卡组(卡牌的id,  card.id)
       * </pre>
       */
      public Builder setCardGroupLiuDao(
          int index, long value) {
        ensureCardGroupLiuDaoIsMutable();
        cardGroupLiuDao_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroupLiuDao = 228;</code>
       *
       * <pre>
       *六道卡组(卡牌的id,  card.id)
       * </pre>
       */
      public Builder addCardGroupLiuDao(long value) {
        ensureCardGroupLiuDaoIsMutable();
        cardGroupLiuDao_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroupLiuDao = 228;</code>
       *
       * <pre>
       *六道卡组(卡牌的id,  card.id)
       * </pre>
       */
      public Builder addAllCardGroupLiuDao(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCardGroupLiuDaoIsMutable();
        super.addAll(values, cardGroupLiuDao_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cardGroupLiuDao = 228;</code>
       *
       * <pre>
       *六道卡组(卡牌的id,  card.id)
       * </pre>
       */
      public Builder clearCardGroupLiuDao() {
        cardGroupLiuDao_ = java.util.Collections.emptyList();
        bitField6_ = (bitField6_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 cardGroupFightLiuDao = 229;
      private java.util.List<java.lang.Integer> cardGroupFightLiuDao_ = java.util.Collections.emptyList();
      private void ensureCardGroupFightLiuDaoIsMutable() {
        if (!((bitField6_ & 0x00000008) == 0x00000008)) {
          cardGroupFightLiuDao_ = new java.util.ArrayList<java.lang.Integer>(cardGroupFightLiuDao_);
          bitField6_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
       *
       * <pre>
       *六道战前卡组与自己的卡组对应关系
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardGroupFightLiuDaoList() {
        return java.util.Collections.unmodifiableList(cardGroupFightLiuDao_);
      }
      /**
       * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
       *
       * <pre>
       *六道战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getCardGroupFightLiuDaoCount() {
        return cardGroupFightLiuDao_.size();
      }
      /**
       * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
       *
       * <pre>
       *六道战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getCardGroupFightLiuDao(int index) {
        return cardGroupFightLiuDao_.get(index);
      }
      /**
       * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
       *
       * <pre>
       *六道战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder setCardGroupFightLiuDao(
          int index, int value) {
        ensureCardGroupFightLiuDaoIsMutable();
        cardGroupFightLiuDao_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
       *
       * <pre>
       *六道战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addCardGroupFightLiuDao(int value) {
        ensureCardGroupFightLiuDaoIsMutable();
        cardGroupFightLiuDao_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
       *
       * <pre>
       *六道战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addAllCardGroupFightLiuDao(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardGroupFightLiuDaoIsMutable();
        super.addAll(values, cardGroupFightLiuDao_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardGroupFightLiuDao = 229;</code>
       *
       * <pre>
       *六道战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder clearCardGroupFightLiuDao() {
        cardGroupFightLiuDao_ = java.util.Collections.emptyList();
        bitField6_ = (bitField6_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .MapItem drawCardFree = 230;
      private java.util.List<myudfs.Common.MapItem> drawCardFree_ =
        java.util.Collections.emptyList();
      private void ensureDrawCardFreeIsMutable() {
        if (!((bitField6_ & 0x00000010) == 0x00000010)) {
          drawCardFree_ = new java.util.ArrayList<myudfs.Common.MapItem>(drawCardFree_);
          bitField6_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> drawCardFreeBuilder_;

      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getDrawCardFreeList() {
        if (drawCardFreeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drawCardFree_);
        } else {
          return drawCardFreeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public int getDrawCardFreeCount() {
        if (drawCardFreeBuilder_ == null) {
          return drawCardFree_.size();
        } else {
          return drawCardFreeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem getDrawCardFree(int index) {
        if (drawCardFreeBuilder_ == null) {
          return drawCardFree_.get(index);
        } else {
          return drawCardFreeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder setDrawCardFree(
          int index, myudfs.Common.MapItem value) {
        if (drawCardFreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardFreeIsMutable();
          drawCardFree_.set(index, value);
          onChanged();
        } else {
          drawCardFreeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder setDrawCardFree(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (drawCardFreeBuilder_ == null) {
          ensureDrawCardFreeIsMutable();
          drawCardFree_.set(index, builderForValue.build());
          onChanged();
        } else {
          drawCardFreeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCardFree(myudfs.Common.MapItem value) {
        if (drawCardFreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardFreeIsMutable();
          drawCardFree_.add(value);
          onChanged();
        } else {
          drawCardFreeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCardFree(
          int index, myudfs.Common.MapItem value) {
        if (drawCardFreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawCardFreeIsMutable();
          drawCardFree_.add(index, value);
          onChanged();
        } else {
          drawCardFreeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCardFree(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (drawCardFreeBuilder_ == null) {
          ensureDrawCardFreeIsMutable();
          drawCardFree_.add(builderForValue.build());
          onChanged();
        } else {
          drawCardFreeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addDrawCardFree(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (drawCardFreeBuilder_ == null) {
          ensureDrawCardFreeIsMutable();
          drawCardFree_.add(index, builderForValue.build());
          onChanged();
        } else {
          drawCardFreeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder addAllDrawCardFree(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (drawCardFreeBuilder_ == null) {
          ensureDrawCardFreeIsMutable();
          super.addAll(values, drawCardFree_);
          onChanged();
        } else {
          drawCardFreeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder clearDrawCardFree() {
        if (drawCardFreeBuilder_ == null) {
          drawCardFree_ = java.util.Collections.emptyList();
          bitField6_ = (bitField6_ & ~0x00000010);
          onChanged();
        } else {
          drawCardFreeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public Builder removeDrawCardFree(int index) {
        if (drawCardFreeBuilder_ == null) {
          ensureDrawCardFreeIsMutable();
          drawCardFree_.remove(index);
          onChanged();
        } else {
          drawCardFreeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getDrawCardFreeBuilder(
          int index) {
        return getDrawCardFreeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getDrawCardFreeOrBuilder(
          int index) {
        if (drawCardFreeBuilder_ == null) {
          return drawCardFree_.get(index);  } else {
          return drawCardFreeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getDrawCardFreeOrBuilderList() {
        if (drawCardFreeBuilder_ != null) {
          return drawCardFreeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drawCardFree_);
        }
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addDrawCardFreeBuilder() {
        return getDrawCardFreeFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addDrawCardFreeBuilder(
          int index) {
        return getDrawCardFreeFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem drawCardFree = 230;</code>
       *
       * <pre>
       * 免费抽卡的次数　key:抽卡id 1-2  抽卡次数 1-5
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getDrawCardFreeBuilderList() {
        return getDrawCardFreeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getDrawCardFreeFieldBuilder() {
        if (drawCardFreeBuilder_ == null) {
          drawCardFreeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  drawCardFree_,
                  ((bitField6_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          drawCardFree_ = null;
        }
        return drawCardFreeBuilder_;
      }

      // optional int32 liudaoEnterHeroLimit = 231;
      private int liudaoEnterHeroLimit_ ;
      /**
       * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
       *
       * <pre>
       * 六道允许进入的最多卡牌数量
       * </pre>
       */
      public boolean hasLiudaoEnterHeroLimit() {
        return ((bitField6_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
       *
       * <pre>
       * 六道允许进入的最多卡牌数量
       * </pre>
       */
      public int getLiudaoEnterHeroLimit() {
        return liudaoEnterHeroLimit_;
      }
      /**
       * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
       *
       * <pre>
       * 六道允许进入的最多卡牌数量
       * </pre>
       */
      public Builder setLiudaoEnterHeroLimit(int value) {
        bitField6_ |= 0x00000020;
        liudaoEnterHeroLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liudaoEnterHeroLimit = 231;</code>
       *
       * <pre>
       * 六道允许进入的最多卡牌数量
       * </pre>
       */
      public Builder clearLiudaoEnterHeroLimit() {
        bitField6_ = (bitField6_ & ~0x00000020);
        liudaoEnterHeroLimit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 todayQuestNum = 232;
      private int todayQuestNum_ ;
      /**
       * <code>optional int32 todayQuestNum = 232;</code>
       *
       * <pre>
       * 每天任意西行次数0点清零
       * </pre>
       */
      public boolean hasTodayQuestNum() {
        return ((bitField6_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 todayQuestNum = 232;</code>
       *
       * <pre>
       * 每天任意西行次数0点清零
       * </pre>
       */
      public int getTodayQuestNum() {
        return todayQuestNum_;
      }
      /**
       * <code>optional int32 todayQuestNum = 232;</code>
       *
       * <pre>
       * 每天任意西行次数0点清零
       * </pre>
       */
      public Builder setTodayQuestNum(int value) {
        bitField6_ |= 0x00000040;
        todayQuestNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 todayQuestNum = 232;</code>
       *
       * <pre>
       * 每天任意西行次数0点清零
       * </pre>
       */
      public Builder clearTodayQuestNum() {
        bitField6_ = (bitField6_ & ~0x00000040);
        todayQuestNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cardId = 233;
      private int cardId_ ;
      /**
       * <code>optional int32 cardId = 233;</code>
       *
       * <pre>
       * 队长卡配置id
       * </pre>
       */
      public boolean hasCardId() {
        return ((bitField6_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 cardId = 233;</code>
       *
       * <pre>
       * 队长卡配置id
       * </pre>
       */
      public int getCardId() {
        return cardId_;
      }
      /**
       * <code>optional int32 cardId = 233;</code>
       *
       * <pre>
       * 队长卡配置id
       * </pre>
       */
      public Builder setCardId(int value) {
        bitField6_ |= 0x00000080;
        cardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardId = 233;</code>
       *
       * <pre>
       * 队长卡配置id
       * </pre>
       */
      public Builder clearCardId() {
        bitField6_ = (bitField6_ & ~0x00000080);
        cardId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 enterLiuDaoTimes = 234;
      private int enterLiuDaoTimes_ ;
      /**
       * <code>optional int32 enterLiuDaoTimes = 234;</code>
       *
       * <pre>
       *每天六道派遣的次数
       * </pre>
       */
      public boolean hasEnterLiuDaoTimes() {
        return ((bitField6_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 enterLiuDaoTimes = 234;</code>
       *
       * <pre>
       *每天六道派遣的次数
       * </pre>
       */
      public int getEnterLiuDaoTimes() {
        return enterLiuDaoTimes_;
      }
      /**
       * <code>optional int32 enterLiuDaoTimes = 234;</code>
       *
       * <pre>
       *每天六道派遣的次数
       * </pre>
       */
      public Builder setEnterLiuDaoTimes(int value) {
        bitField6_ |= 0x00000100;
        enterLiuDaoTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 enterLiuDaoTimes = 234;</code>
       *
       * <pre>
       *每天六道派遣的次数
       * </pre>
       */
      public Builder clearEnterLiuDaoTimes() {
        bitField6_ = (bitField6_ & ~0x00000100);
        enterLiuDaoTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xunshan = 235;
      private int xunshan_ ;
      /**
       * <code>optional int32 xunshan = 235;</code>
       *
       * <pre>
       * 巡山次数
       * </pre>
       */
      public boolean hasXunshan() {
        return ((bitField6_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 xunshan = 235;</code>
       *
       * <pre>
       * 巡山次数
       * </pre>
       */
      public int getXunshan() {
        return xunshan_;
      }
      /**
       * <code>optional int32 xunshan = 235;</code>
       *
       * <pre>
       * 巡山次数
       * </pre>
       */
      public Builder setXunshan(int value) {
        bitField6_ |= 0x00000200;
        xunshan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xunshan = 235;</code>
       *
       * <pre>
       * 巡山次数
       * </pre>
       */
      public Builder clearXunshan() {
        bitField6_ = (bitField6_ & ~0x00000200);
        xunshan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dailyLeftTimes = 236;
      private int dailyLeftTimes_ ;
      /**
       * <code>optional int32 dailyLeftTimes = 236;</code>
       *
       * <pre>
       * 人参果每日赠送次数的剩余次数
       * </pre>
       */
      public boolean hasDailyLeftTimes() {
        return ((bitField6_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 dailyLeftTimes = 236;</code>
       *
       * <pre>
       * 人参果每日赠送次数的剩余次数
       * </pre>
       */
      public int getDailyLeftTimes() {
        return dailyLeftTimes_;
      }
      /**
       * <code>optional int32 dailyLeftTimes = 236;</code>
       *
       * <pre>
       * 人参果每日赠送次数的剩余次数
       * </pre>
       */
      public Builder setDailyLeftTimes(int value) {
        bitField6_ |= 0x00000400;
        dailyLeftTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dailyLeftTimes = 236;</code>
       *
       * <pre>
       * 人参果每日赠送次数的剩余次数
       * </pre>
       */
      public Builder clearDailyLeftTimes() {
        bitField6_ = (bitField6_ & ~0x00000400);
        dailyLeftTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dailyBuyTimes = 257;
      private int dailyBuyTimes_ ;
      /**
       * <code>optional int32 dailyBuyTimes = 257;</code>
       *
       * <pre>
       * 人生果每日vip购买次数
       * </pre>
       */
      public boolean hasDailyBuyTimes() {
        return ((bitField6_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 dailyBuyTimes = 257;</code>
       *
       * <pre>
       * 人生果每日vip购买次数
       * </pre>
       */
      public int getDailyBuyTimes() {
        return dailyBuyTimes_;
      }
      /**
       * <code>optional int32 dailyBuyTimes = 257;</code>
       *
       * <pre>
       * 人生果每日vip购买次数
       * </pre>
       */
      public Builder setDailyBuyTimes(int value) {
        bitField6_ |= 0x00000800;
        dailyBuyTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dailyBuyTimes = 257;</code>
       *
       * <pre>
       * 人生果每日vip购买次数
       * </pre>
       */
      public Builder clearDailyBuyTimes() {
        bitField6_ = (bitField6_ & ~0x00000800);
        dailyBuyTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int64 nextCDTime = 258;
      private long nextCDTime_ ;
      /**
       * <code>optional int64 nextCDTime = 258;</code>
       *
       * <pre>
       * 人参果下次进行人参果活动的冷却时间
       * </pre>
       */
      public boolean hasNextCDTime() {
        return ((bitField6_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 nextCDTime = 258;</code>
       *
       * <pre>
       * 人参果下次进行人参果活动的冷却时间
       * </pre>
       */
      public long getNextCDTime() {
        return nextCDTime_;
      }
      /**
       * <code>optional int64 nextCDTime = 258;</code>
       *
       * <pre>
       * 人参果下次进行人参果活动的冷却时间
       * </pre>
       */
      public Builder setNextCDTime(long value) {
        bitField6_ |= 0x00001000;
        nextCDTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 nextCDTime = 258;</code>
       *
       * <pre>
       * 人参果下次进行人参果活动的冷却时间
       * </pre>
       */
      public Builder clearNextCDTime() {
        bitField6_ = (bitField6_ & ~0x00001000);
        nextCDTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 shouHuId = 259;
      private int shouHuId_ ;
      /**
       * <code>optional int32 shouHuId = 259;</code>
       *
       * <pre>
       * 人参果活动开始时的守护id
       * </pre>
       */
      public boolean hasShouHuId() {
        return ((bitField6_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 shouHuId = 259;</code>
       *
       * <pre>
       * 人参果活动开始时的守护id
       * </pre>
       */
      public int getShouHuId() {
        return shouHuId_;
      }
      /**
       * <code>optional int32 shouHuId = 259;</code>
       *
       * <pre>
       * 人参果活动开始时的守护id
       * </pre>
       */
      public Builder setShouHuId(int value) {
        bitField6_ |= 0x00002000;
        shouHuId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shouHuId = 259;</code>
       *
       * <pre>
       * 人参果活动开始时的守护id
       * </pre>
       */
      public Builder clearShouHuId() {
        bitField6_ = (bitField6_ & ~0x00002000);
        shouHuId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cancelCDTimes = 260;
      private int cancelCDTimes_ ;
      /**
       * <code>optional int32 cancelCDTimes = 260;</code>
       *
       * <pre>
       * 人参果每日取消cd次数
       * </pre>
       */
      public boolean hasCancelCDTimes() {
        return ((bitField6_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 cancelCDTimes = 260;</code>
       *
       * <pre>
       * 人参果每日取消cd次数
       * </pre>
       */
      public int getCancelCDTimes() {
        return cancelCDTimes_;
      }
      /**
       * <code>optional int32 cancelCDTimes = 260;</code>
       *
       * <pre>
       * 人参果每日取消cd次数
       * </pre>
       */
      public Builder setCancelCDTimes(int value) {
        bitField6_ |= 0x00004000;
        cancelCDTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cancelCDTimes = 260;</code>
       *
       * <pre>
       * 人参果每日取消cd次数
       * </pre>
       */
      public Builder clearCancelCDTimes() {
        bitField6_ = (bitField6_ & ~0x00004000);
        cancelCDTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 xunshanStr = 261;
      private java.util.List<java.lang.Integer> xunshanStr_ = java.util.Collections.emptyList();
      private void ensureXunshanStrIsMutable() {
        if (!((bitField6_ & 0x00008000) == 0x00008000)) {
          xunshanStr_ = new java.util.ArrayList<java.lang.Integer>(xunshanStr_);
          bitField6_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 xunshanStr = 261;</code>
       *
       * <pre>
       * 巡山对话id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getXunshanStrList() {
        return java.util.Collections.unmodifiableList(xunshanStr_);
      }
      /**
       * <code>repeated int32 xunshanStr = 261;</code>
       *
       * <pre>
       * 巡山对话id
       * </pre>
       */
      public int getXunshanStrCount() {
        return xunshanStr_.size();
      }
      /**
       * <code>repeated int32 xunshanStr = 261;</code>
       *
       * <pre>
       * 巡山对话id
       * </pre>
       */
      public int getXunshanStr(int index) {
        return xunshanStr_.get(index);
      }
      /**
       * <code>repeated int32 xunshanStr = 261;</code>
       *
       * <pre>
       * 巡山对话id
       * </pre>
       */
      public Builder setXunshanStr(
          int index, int value) {
        ensureXunshanStrIsMutable();
        xunshanStr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xunshanStr = 261;</code>
       *
       * <pre>
       * 巡山对话id
       * </pre>
       */
      public Builder addXunshanStr(int value) {
        ensureXunshanStrIsMutable();
        xunshanStr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xunshanStr = 261;</code>
       *
       * <pre>
       * 巡山对话id
       * </pre>
       */
      public Builder addAllXunshanStr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXunshanStrIsMutable();
        super.addAll(values, xunshanStr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xunshanStr = 261;</code>
       *
       * <pre>
       * 巡山对话id
       * </pre>
       */
      public Builder clearXunshanStr() {
        xunshanStr_ = java.util.Collections.emptyList();
        bitField6_ = (bitField6_ & ~0x00008000);
        onChanged();
        return this;
      }

      // optional .PlayerGangItem gangInfo = 262;
      private myudfs.Common.PlayerGangItem gangInfo_ = myudfs.Common.PlayerGangItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerGangItem, myudfs.Common.PlayerGangItem.Builder, myudfs.Common.PlayerGangItemOrBuilder> gangInfoBuilder_;
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public boolean hasGangInfo() {
        return ((bitField6_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public myudfs.Common.PlayerGangItem getGangInfo() {
        if (gangInfoBuilder_ == null) {
          return gangInfo_;
        } else {
          return gangInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public Builder setGangInfo(myudfs.Common.PlayerGangItem value) {
        if (gangInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gangInfo_ = value;
          onChanged();
        } else {
          gangInfoBuilder_.setMessage(value);
        }
        bitField6_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public Builder setGangInfo(
          myudfs.Common.PlayerGangItem.Builder builderForValue) {
        if (gangInfoBuilder_ == null) {
          gangInfo_ = builderForValue.build();
          onChanged();
        } else {
          gangInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField6_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public Builder mergeGangInfo(myudfs.Common.PlayerGangItem value) {
        if (gangInfoBuilder_ == null) {
          if (((bitField6_ & 0x00010000) == 0x00010000) &&
              gangInfo_ != myudfs.Common.PlayerGangItem.getDefaultInstance()) {
            gangInfo_ =
              myudfs.Common.PlayerGangItem.newBuilder(gangInfo_).mergeFrom(value).buildPartial();
          } else {
            gangInfo_ = value;
          }
          onChanged();
        } else {
          gangInfoBuilder_.mergeFrom(value);
        }
        bitField6_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public Builder clearGangInfo() {
        if (gangInfoBuilder_ == null) {
          gangInfo_ = myudfs.Common.PlayerGangItem.getDefaultInstance();
          onChanged();
        } else {
          gangInfoBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public myudfs.Common.PlayerGangItem.Builder getGangInfoBuilder() {
        bitField6_ |= 0x00010000;
        onChanged();
        return getGangInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      public myudfs.Common.PlayerGangItemOrBuilder getGangInfoOrBuilder() {
        if (gangInfoBuilder_ != null) {
          return gangInfoBuilder_.getMessageOrBuilder();
        } else {
          return gangInfo_;
        }
      }
      /**
       * <code>optional .PlayerGangItem gangInfo = 262;</code>
       *
       * <pre>
       * 玩家帮派信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerGangItem, myudfs.Common.PlayerGangItem.Builder, myudfs.Common.PlayerGangItemOrBuilder> 
          getGangInfoFieldBuilder() {
        if (gangInfoBuilder_ == null) {
          gangInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerGangItem, myudfs.Common.PlayerGangItem.Builder, myudfs.Common.PlayerGangItemOrBuilder>(
                  gangInfo_,
                  getParentForChildren(),
                  isClean());
          gangInfo_ = null;
        }
        return gangInfoBuilder_;
      }

      // optional bool hasDFBet = 263;
      private boolean hasDFBet_ ;
      /**
       * <code>optional bool hasDFBet = 263;</code>
       *
       * <pre>
       * 斗法是否已押注
       * </pre>
       */
      public boolean hasHasDFBet() {
        return ((bitField6_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool hasDFBet = 263;</code>
       *
       * <pre>
       * 斗法是否已押注
       * </pre>
       */
      public boolean getHasDFBet() {
        return hasDFBet_;
      }
      /**
       * <code>optional bool hasDFBet = 263;</code>
       *
       * <pre>
       * 斗法是否已押注
       * </pre>
       */
      public Builder setHasDFBet(boolean value) {
        bitField6_ |= 0x00020000;
        hasDFBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasDFBet = 263;</code>
       *
       * <pre>
       * 斗法是否已押注
       * </pre>
       */
      public Builder clearHasDFBet() {
        bitField6_ = (bitField6_ & ~0x00020000);
        hasDFBet_ = false;
        onChanged();
        return this;
      }

      // repeated .MapItem gangExchange = 264;
      private java.util.List<myudfs.Common.MapItem> gangExchange_ =
        java.util.Collections.emptyList();
      private void ensureGangExchangeIsMutable() {
        if (!((bitField6_ & 0x00040000) == 0x00040000)) {
          gangExchange_ = new java.util.ArrayList<myudfs.Common.MapItem>(gangExchange_);
          bitField6_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> gangExchangeBuilder_;

      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getGangExchangeList() {
        if (gangExchangeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gangExchange_);
        } else {
          return gangExchangeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public int getGangExchangeCount() {
        if (gangExchangeBuilder_ == null) {
          return gangExchange_.size();
        } else {
          return gangExchangeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public myudfs.Common.MapItem getGangExchange(int index) {
        if (gangExchangeBuilder_ == null) {
          return gangExchange_.get(index);
        } else {
          return gangExchangeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder setGangExchange(
          int index, myudfs.Common.MapItem value) {
        if (gangExchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGangExchangeIsMutable();
          gangExchange_.set(index, value);
          onChanged();
        } else {
          gangExchangeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder setGangExchange(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (gangExchangeBuilder_ == null) {
          ensureGangExchangeIsMutable();
          gangExchange_.set(index, builderForValue.build());
          onChanged();
        } else {
          gangExchangeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder addGangExchange(myudfs.Common.MapItem value) {
        if (gangExchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGangExchangeIsMutable();
          gangExchange_.add(value);
          onChanged();
        } else {
          gangExchangeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder addGangExchange(
          int index, myudfs.Common.MapItem value) {
        if (gangExchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGangExchangeIsMutable();
          gangExchange_.add(index, value);
          onChanged();
        } else {
          gangExchangeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder addGangExchange(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (gangExchangeBuilder_ == null) {
          ensureGangExchangeIsMutable();
          gangExchange_.add(builderForValue.build());
          onChanged();
        } else {
          gangExchangeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder addGangExchange(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (gangExchangeBuilder_ == null) {
          ensureGangExchangeIsMutable();
          gangExchange_.add(index, builderForValue.build());
          onChanged();
        } else {
          gangExchangeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder addAllGangExchange(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (gangExchangeBuilder_ == null) {
          ensureGangExchangeIsMutable();
          super.addAll(values, gangExchange_);
          onChanged();
        } else {
          gangExchangeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder clearGangExchange() {
        if (gangExchangeBuilder_ == null) {
          gangExchange_ = java.util.Collections.emptyList();
          bitField6_ = (bitField6_ & ~0x00040000);
          onChanged();
        } else {
          gangExchangeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public Builder removeGangExchange(int index) {
        if (gangExchangeBuilder_ == null) {
          ensureGangExchangeIsMutable();
          gangExchange_.remove(index);
          onChanged();
        } else {
          gangExchangeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getGangExchangeBuilder(
          int index) {
        return getGangExchangeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getGangExchangeOrBuilder(
          int index) {
        if (gangExchangeBuilder_ == null) {
          return gangExchange_.get(index);  } else {
          return gangExchangeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getGangExchangeOrBuilderList() {
        if (gangExchangeBuilder_ != null) {
          return gangExchangeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gangExchange_);
        }
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addGangExchangeBuilder() {
        return getGangExchangeFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addGangExchangeBuilder(
          int index) {
        return getGangExchangeFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem gangExchange = 264;</code>
       *
       * <pre>
       * 帮派兑换信息 key:兑换id value:兑换可剩余次数,次数为0则表示已售罄
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getGangExchangeBuilderList() {
        return getGangExchangeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getGangExchangeFieldBuilder() {
        if (gangExchangeBuilder_ == null) {
          gangExchangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  gangExchange_,
                  ((bitField6_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          gangExchange_ = null;
        }
        return gangExchangeBuilder_;
      }

      // optional int32 gangRefreshExchangeTimes = 265;
      private int gangRefreshExchangeTimes_ ;
      /**
       * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
       *
       * <pre>
       * 帮派兑换刷新次数
       * </pre>
       */
      public boolean hasGangRefreshExchangeTimes() {
        return ((bitField6_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
       *
       * <pre>
       * 帮派兑换刷新次数
       * </pre>
       */
      public int getGangRefreshExchangeTimes() {
        return gangRefreshExchangeTimes_;
      }
      /**
       * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
       *
       * <pre>
       * 帮派兑换刷新次数
       * </pre>
       */
      public Builder setGangRefreshExchangeTimes(int value) {
        bitField6_ |= 0x00080000;
        gangRefreshExchangeTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gangRefreshExchangeTimes = 265;</code>
       *
       * <pre>
       * 帮派兑换刷新次数
       * </pre>
       */
      public Builder clearGangRefreshExchangeTimes() {
        bitField6_ = (bitField6_ & ~0x00080000);
        gangRefreshExchangeTimes_ = 0;
        onChanged();
        return this;
      }

      // optional .DFTeamItem dfTeamInfo = 266;
      private myudfs.Common.DFTeamItem dfTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> dfTeamInfoBuilder_;
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public boolean hasDfTeamInfo() {
        return ((bitField6_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem getDfTeamInfo() {
        if (dfTeamInfoBuilder_ == null) {
          return dfTeamInfo_;
        } else {
          return dfTeamInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public Builder setDfTeamInfo(myudfs.Common.DFTeamItem value) {
        if (dfTeamInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dfTeamInfo_ = value;
          onChanged();
        } else {
          dfTeamInfoBuilder_.setMessage(value);
        }
        bitField6_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public Builder setDfTeamInfo(
          myudfs.Common.DFTeamItem.Builder builderForValue) {
        if (dfTeamInfoBuilder_ == null) {
          dfTeamInfo_ = builderForValue.build();
          onChanged();
        } else {
          dfTeamInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField6_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public Builder mergeDfTeamInfo(myudfs.Common.DFTeamItem value) {
        if (dfTeamInfoBuilder_ == null) {
          if (((bitField6_ & 0x00100000) == 0x00100000) &&
              dfTeamInfo_ != myudfs.Common.DFTeamItem.getDefaultInstance()) {
            dfTeamInfo_ =
              myudfs.Common.DFTeamItem.newBuilder(dfTeamInfo_).mergeFrom(value).buildPartial();
          } else {
            dfTeamInfo_ = value;
          }
          onChanged();
        } else {
          dfTeamInfoBuilder_.mergeFrom(value);
        }
        bitField6_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public Builder clearDfTeamInfo() {
        if (dfTeamInfoBuilder_ == null) {
          dfTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
          onChanged();
        } else {
          dfTeamInfoBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem.Builder getDfTeamInfoBuilder() {
        bitField6_ |= 0x00100000;
        onChanged();
        return getDfTeamInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItemOrBuilder getDfTeamInfoOrBuilder() {
        if (dfTeamInfoBuilder_ != null) {
          return dfTeamInfoBuilder_.getMessageOrBuilder();
        } else {
          return dfTeamInfo_;
        }
      }
      /**
       * <code>optional .DFTeamItem dfTeamInfo = 266;</code>
       *
       * <pre>
       * 斗法队伍信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> 
          getDfTeamInfoFieldBuilder() {
        if (dfTeamInfoBuilder_ == null) {
          dfTeamInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder>(
                  dfTeamInfo_,
                  getParentForChildren(),
                  isClean());
          dfTeamInfo_ = null;
        }
        return dfTeamInfoBuilder_;
      }

      // optional int32 vipDailyGiftBuyCount = 267;
      private int vipDailyGiftBuyCount_ ;
      /**
       * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
       *
       * <pre>
       * 每日vip礼包的当日购买次数
       * </pre>
       */
      public boolean hasVipDailyGiftBuyCount() {
        return ((bitField6_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
       *
       * <pre>
       * 每日vip礼包的当日购买次数
       * </pre>
       */
      public int getVipDailyGiftBuyCount() {
        return vipDailyGiftBuyCount_;
      }
      /**
       * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
       *
       * <pre>
       * 每日vip礼包的当日购买次数
       * </pre>
       */
      public Builder setVipDailyGiftBuyCount(int value) {
        bitField6_ |= 0x00200000;
        vipDailyGiftBuyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipDailyGiftBuyCount = 267;</code>
       *
       * <pre>
       * 每日vip礼包的当日购买次数
       * </pre>
       */
      public Builder clearVipDailyGiftBuyCount() {
        bitField6_ = (bitField6_ & ~0x00200000);
        vipDailyGiftBuyCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trialsDFTimes = 268;
      private int trialsDFTimes_ ;
      /**
       * <code>optional int32 trialsDFTimes = 268;</code>
       *
       * <pre>
       * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
       * </pre>
       */
      public boolean hasTrialsDFTimes() {
        return ((bitField6_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 trialsDFTimes = 268;</code>
       *
       * <pre>
       * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
       * </pre>
       */
      public int getTrialsDFTimes() {
        return trialsDFTimes_;
      }
      /**
       * <code>optional int32 trialsDFTimes = 268;</code>
       *
       * <pre>
       * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
       * </pre>
       */
      public Builder setTrialsDFTimes(int value) {
        bitField6_ |= 0x00400000;
        trialsDFTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trialsDFTimes = 268;</code>
       *
       * <pre>
       * 斗法玩家选拔赛可斗法次数，次数不为0则斗法图标高亮
       * </pre>
       */
      public Builder clearTrialsDFTimes() {
        bitField6_ = (bitField6_ & ~0x00400000);
        trialsDFTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int64 dfBetId = 269;
      private long dfBetId_ ;
      /**
       * <code>optional int64 dfBetId = 269;</code>
       *
       * <pre>
       * 押注的玩家id
       * </pre>
       */
      public boolean hasDfBetId() {
        return ((bitField6_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 dfBetId = 269;</code>
       *
       * <pre>
       * 押注的玩家id
       * </pre>
       */
      public long getDfBetId() {
        return dfBetId_;
      }
      /**
       * <code>optional int64 dfBetId = 269;</code>
       *
       * <pre>
       * 押注的玩家id
       * </pre>
       */
      public Builder setDfBetId(long value) {
        bitField6_ |= 0x00800000;
        dfBetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 dfBetId = 269;</code>
       *
       * <pre>
       * 押注的玩家id
       * </pre>
       */
      public Builder clearDfBetId() {
        bitField6_ = (bitField6_ & ~0x00800000);
        dfBetId_ = 0L;
        onChanged();
        return this;
      }

      // optional .Xunxian xunxian = 270;
      private myudfs.Common.Xunxian xunxian_ = myudfs.Common.Xunxian.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.Xunxian, myudfs.Common.Xunxian.Builder, myudfs.Common.XunxianOrBuilder> xunxianBuilder_;
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public boolean hasXunxian() {
        return ((bitField6_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public myudfs.Common.Xunxian getXunxian() {
        if (xunxianBuilder_ == null) {
          return xunxian_;
        } else {
          return xunxianBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public Builder setXunxian(myudfs.Common.Xunxian value) {
        if (xunxianBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          xunxian_ = value;
          onChanged();
        } else {
          xunxianBuilder_.setMessage(value);
        }
        bitField6_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public Builder setXunxian(
          myudfs.Common.Xunxian.Builder builderForValue) {
        if (xunxianBuilder_ == null) {
          xunxian_ = builderForValue.build();
          onChanged();
        } else {
          xunxianBuilder_.setMessage(builderForValue.build());
        }
        bitField6_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public Builder mergeXunxian(myudfs.Common.Xunxian value) {
        if (xunxianBuilder_ == null) {
          if (((bitField6_ & 0x01000000) == 0x01000000) &&
              xunxian_ != myudfs.Common.Xunxian.getDefaultInstance()) {
            xunxian_ =
              myudfs.Common.Xunxian.newBuilder(xunxian_).mergeFrom(value).buildPartial();
          } else {
            xunxian_ = value;
          }
          onChanged();
        } else {
          xunxianBuilder_.mergeFrom(value);
        }
        bitField6_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public Builder clearXunxian() {
        if (xunxianBuilder_ == null) {
          xunxian_ = myudfs.Common.Xunxian.getDefaultInstance();
          onChanged();
        } else {
          xunxianBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public myudfs.Common.Xunxian.Builder getXunxianBuilder() {
        bitField6_ |= 0x01000000;
        onChanged();
        return getXunxianFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      public myudfs.Common.XunxianOrBuilder getXunxianOrBuilder() {
        if (xunxianBuilder_ != null) {
          return xunxianBuilder_.getMessageOrBuilder();
        } else {
          return xunxian_;
        }
      }
      /**
       * <code>optional .Xunxian xunxian = 270;</code>
       *
       * <pre>
       * 寻仙捉妖的相关信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.Xunxian, myudfs.Common.Xunxian.Builder, myudfs.Common.XunxianOrBuilder> 
          getXunxianFieldBuilder() {
        if (xunxianBuilder_ == null) {
          xunxianBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.Xunxian, myudfs.Common.Xunxian.Builder, myudfs.Common.XunxianOrBuilder>(
                  xunxian_,
                  getParentForChildren(),
                  isClean());
          xunxian_ = null;
        }
        return xunxianBuilder_;
      }

      // optional int32 auctionType = 271;
      private int auctionType_ ;
      /**
       * <code>optional int32 auctionType = 271;</code>
       *
       * <pre>
       * 拍卖行限制类型 0:无限制 1:有限制
       * </pre>
       */
      public boolean hasAuctionType() {
        return ((bitField6_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 auctionType = 271;</code>
       *
       * <pre>
       * 拍卖行限制类型 0:无限制 1:有限制
       * </pre>
       */
      public int getAuctionType() {
        return auctionType_;
      }
      /**
       * <code>optional int32 auctionType = 271;</code>
       *
       * <pre>
       * 拍卖行限制类型 0:无限制 1:有限制
       * </pre>
       */
      public Builder setAuctionType(int value) {
        bitField6_ |= 0x02000000;
        auctionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 auctionType = 271;</code>
       *
       * <pre>
       * 拍卖行限制类型 0:无限制 1:有限制
       * </pre>
       */
      public Builder clearAuctionType() {
        bitField6_ = (bitField6_ & ~0x02000000);
        auctionType_ = 0;
        onChanged();
        return this;
      }

      // optional .SecurityCodeItem securityCodeItem = 272;
      private myudfs.Common.SecurityCodeItem securityCodeItem_ = myudfs.Common.SecurityCodeItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.SecurityCodeItem, myudfs.Common.SecurityCodeItem.Builder, myudfs.Common.SecurityCodeItemOrBuilder> securityCodeItemBuilder_;
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public boolean hasSecurityCodeItem() {
        return ((bitField6_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public myudfs.Common.SecurityCodeItem getSecurityCodeItem() {
        if (securityCodeItemBuilder_ == null) {
          return securityCodeItem_;
        } else {
          return securityCodeItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public Builder setSecurityCodeItem(myudfs.Common.SecurityCodeItem value) {
        if (securityCodeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          securityCodeItem_ = value;
          onChanged();
        } else {
          securityCodeItemBuilder_.setMessage(value);
        }
        bitField6_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public Builder setSecurityCodeItem(
          myudfs.Common.SecurityCodeItem.Builder builderForValue) {
        if (securityCodeItemBuilder_ == null) {
          securityCodeItem_ = builderForValue.build();
          onChanged();
        } else {
          securityCodeItemBuilder_.setMessage(builderForValue.build());
        }
        bitField6_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public Builder mergeSecurityCodeItem(myudfs.Common.SecurityCodeItem value) {
        if (securityCodeItemBuilder_ == null) {
          if (((bitField6_ & 0x04000000) == 0x04000000) &&
              securityCodeItem_ != myudfs.Common.SecurityCodeItem.getDefaultInstance()) {
            securityCodeItem_ =
              myudfs.Common.SecurityCodeItem.newBuilder(securityCodeItem_).mergeFrom(value).buildPartial();
          } else {
            securityCodeItem_ = value;
          }
          onChanged();
        } else {
          securityCodeItemBuilder_.mergeFrom(value);
        }
        bitField6_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public Builder clearSecurityCodeItem() {
        if (securityCodeItemBuilder_ == null) {
          securityCodeItem_ = myudfs.Common.SecurityCodeItem.getDefaultInstance();
          onChanged();
        } else {
          securityCodeItemBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public myudfs.Common.SecurityCodeItem.Builder getSecurityCodeItemBuilder() {
        bitField6_ |= 0x04000000;
        onChanged();
        return getSecurityCodeItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      public myudfs.Common.SecurityCodeItemOrBuilder getSecurityCodeItemOrBuilder() {
        if (securityCodeItemBuilder_ != null) {
          return securityCodeItemBuilder_.getMessageOrBuilder();
        } else {
          return securityCodeItem_;
        }
      }
      /**
       * <code>optional .SecurityCodeItem securityCodeItem = 272;</code>
       *
       * <pre>
       * 安全码信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.SecurityCodeItem, myudfs.Common.SecurityCodeItem.Builder, myudfs.Common.SecurityCodeItemOrBuilder> 
          getSecurityCodeItemFieldBuilder() {
        if (securityCodeItemBuilder_ == null) {
          securityCodeItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.SecurityCodeItem, myudfs.Common.SecurityCodeItem.Builder, myudfs.Common.SecurityCodeItemOrBuilder>(
                  securityCodeItem_,
                  getParentForChildren(),
                  isClean());
          securityCodeItem_ = null;
        }
        return securityCodeItemBuilder_;
      }

      // optional bool login1100 = 273;
      private boolean login1100_ ;
      /**
       * <code>optional bool login1100 = 273;</code>
       *
       * <pre>
       * true:第一次登陆成功后获得的playerItem 1100
       * </pre>
       */
      public boolean hasLogin1100() {
        return ((bitField6_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool login1100 = 273;</code>
       *
       * <pre>
       * true:第一次登陆成功后获得的playerItem 1100
       * </pre>
       */
      public boolean getLogin1100() {
        return login1100_;
      }
      /**
       * <code>optional bool login1100 = 273;</code>
       *
       * <pre>
       * true:第一次登陆成功后获得的playerItem 1100
       * </pre>
       */
      public Builder setLogin1100(boolean value) {
        bitField6_ |= 0x08000000;
        login1100_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool login1100 = 273;</code>
       *
       * <pre>
       * true:第一次登陆成功后获得的playerItem 1100
       * </pre>
       */
      public Builder clearLogin1100() {
        bitField6_ = (bitField6_ & ~0x08000000);
        login1100_ = false;
        onChanged();
        return this;
      }

      // optional bool isShowDFInMainUI = 274;
      private boolean isShowDFInMainUI_ ;
      /**
       * <code>optional bool isShowDFInMainUI = 274;</code>
       *
       * <pre>
       * 是否在主ui显示斗法
       * </pre>
       */
      public boolean hasIsShowDFInMainUI() {
        return ((bitField6_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool isShowDFInMainUI = 274;</code>
       *
       * <pre>
       * 是否在主ui显示斗法
       * </pre>
       */
      public boolean getIsShowDFInMainUI() {
        return isShowDFInMainUI_;
      }
      /**
       * <code>optional bool isShowDFInMainUI = 274;</code>
       *
       * <pre>
       * 是否在主ui显示斗法
       * </pre>
       */
      public Builder setIsShowDFInMainUI(boolean value) {
        bitField6_ |= 0x10000000;
        isShowDFInMainUI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isShowDFInMainUI = 274;</code>
       *
       * <pre>
       * 是否在主ui显示斗法
       * </pre>
       */
      public Builder clearIsShowDFInMainUI() {
        bitField6_ = (bitField6_ & ~0x10000000);
        isShowDFInMainUI_ = false;
        onChanged();
        return this;
      }

      // optional bool isVipUpByPlayerLv = 275;
      private boolean isVipUpByPlayerLv_ ;
      /**
       * <code>optional bool isVipUpByPlayerLv = 275;</code>
       *
       * <pre>
       * 是否当角色的等级到达指定等级时
       * </pre>
       */
      public boolean hasIsVipUpByPlayerLv() {
        return ((bitField6_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool isVipUpByPlayerLv = 275;</code>
       *
       * <pre>
       * 是否当角色的等级到达指定等级时
       * </pre>
       */
      public boolean getIsVipUpByPlayerLv() {
        return isVipUpByPlayerLv_;
      }
      /**
       * <code>optional bool isVipUpByPlayerLv = 275;</code>
       *
       * <pre>
       * 是否当角色的等级到达指定等级时
       * </pre>
       */
      public Builder setIsVipUpByPlayerLv(boolean value) {
        bitField6_ |= 0x20000000;
        isVipUpByPlayerLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isVipUpByPlayerLv = 275;</code>
       *
       * <pre>
       * 是否当角色的等级到达指定等级时
       * </pre>
       */
      public Builder clearIsVipUpByPlayerLv() {
        bitField6_ = (bitField6_ & ~0x20000000);
        isVipUpByPlayerLv_ = false;
        onChanged();
        return this;
      }

      // optional .HongbaoActivityMessage hongbaoActivitys = 276;
      private myudfs.Common.HongbaoActivityMessage hongbaoActivitys_ = myudfs.Common.HongbaoActivityMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.HongbaoActivityMessage, myudfs.Common.HongbaoActivityMessage.Builder, myudfs.Common.HongbaoActivityMessageOrBuilder> hongbaoActivitysBuilder_;
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public boolean hasHongbaoActivitys() {
        return ((bitField6_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public myudfs.Common.HongbaoActivityMessage getHongbaoActivitys() {
        if (hongbaoActivitysBuilder_ == null) {
          return hongbaoActivitys_;
        } else {
          return hongbaoActivitysBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public Builder setHongbaoActivitys(myudfs.Common.HongbaoActivityMessage value) {
        if (hongbaoActivitysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hongbaoActivitys_ = value;
          onChanged();
        } else {
          hongbaoActivitysBuilder_.setMessage(value);
        }
        bitField6_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public Builder setHongbaoActivitys(
          myudfs.Common.HongbaoActivityMessage.Builder builderForValue) {
        if (hongbaoActivitysBuilder_ == null) {
          hongbaoActivitys_ = builderForValue.build();
          onChanged();
        } else {
          hongbaoActivitysBuilder_.setMessage(builderForValue.build());
        }
        bitField6_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public Builder mergeHongbaoActivitys(myudfs.Common.HongbaoActivityMessage value) {
        if (hongbaoActivitysBuilder_ == null) {
          if (((bitField6_ & 0x40000000) == 0x40000000) &&
              hongbaoActivitys_ != myudfs.Common.HongbaoActivityMessage.getDefaultInstance()) {
            hongbaoActivitys_ =
              myudfs.Common.HongbaoActivityMessage.newBuilder(hongbaoActivitys_).mergeFrom(value).buildPartial();
          } else {
            hongbaoActivitys_ = value;
          }
          onChanged();
        } else {
          hongbaoActivitysBuilder_.mergeFrom(value);
        }
        bitField6_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public Builder clearHongbaoActivitys() {
        if (hongbaoActivitysBuilder_ == null) {
          hongbaoActivitys_ = myudfs.Common.HongbaoActivityMessage.getDefaultInstance();
          onChanged();
        } else {
          hongbaoActivitysBuilder_.clear();
        }
        bitField6_ = (bitField6_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public myudfs.Common.HongbaoActivityMessage.Builder getHongbaoActivitysBuilder() {
        bitField6_ |= 0x40000000;
        onChanged();
        return getHongbaoActivitysFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      public myudfs.Common.HongbaoActivityMessageOrBuilder getHongbaoActivitysOrBuilder() {
        if (hongbaoActivitysBuilder_ != null) {
          return hongbaoActivitysBuilder_.getMessageOrBuilder();
        } else {
          return hongbaoActivitys_;
        }
      }
      /**
       * <code>optional .HongbaoActivityMessage hongbaoActivitys = 276;</code>
       *
       * <pre>
       * 红包活动数据
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.HongbaoActivityMessage, myudfs.Common.HongbaoActivityMessage.Builder, myudfs.Common.HongbaoActivityMessageOrBuilder> 
          getHongbaoActivitysFieldBuilder() {
        if (hongbaoActivitysBuilder_ == null) {
          hongbaoActivitysBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.HongbaoActivityMessage, myudfs.Common.HongbaoActivityMessage.Builder, myudfs.Common.HongbaoActivityMessageOrBuilder>(
                  hongbaoActivitys_,
                  getParentForChildren(),
                  isClean());
          hongbaoActivitys_ = null;
        }
        return hongbaoActivitysBuilder_;
      }

      // optional bool isOpenedBoxEveryDay = 277;
      private boolean isOpenedBoxEveryDay_ ;
      /**
       * <code>optional bool isOpenedBoxEveryDay = 277;</code>
       *
       * <pre>
       * 龙宫宝箱每天是不是打开了龙宫宝箱
       * </pre>
       */
      public boolean hasIsOpenedBoxEveryDay() {
        return ((bitField6_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional bool isOpenedBoxEveryDay = 277;</code>
       *
       * <pre>
       * 龙宫宝箱每天是不是打开了龙宫宝箱
       * </pre>
       */
      public boolean getIsOpenedBoxEveryDay() {
        return isOpenedBoxEveryDay_;
      }
      /**
       * <code>optional bool isOpenedBoxEveryDay = 277;</code>
       *
       * <pre>
       * 龙宫宝箱每天是不是打开了龙宫宝箱
       * </pre>
       */
      public Builder setIsOpenedBoxEveryDay(boolean value) {
        bitField6_ |= 0x80000000;
        isOpenedBoxEveryDay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isOpenedBoxEveryDay = 277;</code>
       *
       * <pre>
       * 龙宫宝箱每天是不是打开了龙宫宝箱
       * </pre>
       */
      public Builder clearIsOpenedBoxEveryDay() {
        bitField6_ = (bitField6_ & ~0x80000000);
        isOpenedBoxEveryDay_ = false;
        onChanged();
        return this;
      }

      // optional bool admobSwitch = 278;
      private boolean admobSwitch_ ;
      /**
       * <code>optional bool admobSwitch = 278;</code>
       *
       * <pre>
       * 客户端广告判断
       * </pre>
       */
      public boolean hasAdmobSwitch() {
        return ((bitField7_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool admobSwitch = 278;</code>
       *
       * <pre>
       * 客户端广告判断
       * </pre>
       */
      public boolean getAdmobSwitch() {
        return admobSwitch_;
      }
      /**
       * <code>optional bool admobSwitch = 278;</code>
       *
       * <pre>
       * 客户端广告判断
       * </pre>
       */
      public Builder setAdmobSwitch(boolean value) {
        bitField7_ |= 0x00000001;
        admobSwitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool admobSwitch = 278;</code>
       *
       * <pre>
       * 客户端广告判断
       * </pre>
       */
      public Builder clearAdmobSwitch() {
        bitField7_ = (bitField7_ & ~0x00000001);
        admobSwitch_ = false;
        onChanged();
        return this;
      }

      // optional .ArenaTeamItem arenaTeamInfo = 280;
      private myudfs.Common.ArenaTeamItem arenaTeamInfo_ = myudfs.Common.ArenaTeamItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.ArenaTeamItem, myudfs.Common.ArenaTeamItem.Builder, myudfs.Common.ArenaTeamItemOrBuilder> arenaTeamInfoBuilder_;
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public boolean hasArenaTeamInfo() {
        return ((bitField7_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public myudfs.Common.ArenaTeamItem getArenaTeamInfo() {
        if (arenaTeamInfoBuilder_ == null) {
          return arenaTeamInfo_;
        } else {
          return arenaTeamInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public Builder setArenaTeamInfo(myudfs.Common.ArenaTeamItem value) {
        if (arenaTeamInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          arenaTeamInfo_ = value;
          onChanged();
        } else {
          arenaTeamInfoBuilder_.setMessage(value);
        }
        bitField7_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public Builder setArenaTeamInfo(
          myudfs.Common.ArenaTeamItem.Builder builderForValue) {
        if (arenaTeamInfoBuilder_ == null) {
          arenaTeamInfo_ = builderForValue.build();
          onChanged();
        } else {
          arenaTeamInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public Builder mergeArenaTeamInfo(myudfs.Common.ArenaTeamItem value) {
        if (arenaTeamInfoBuilder_ == null) {
          if (((bitField7_ & 0x00000002) == 0x00000002) &&
              arenaTeamInfo_ != myudfs.Common.ArenaTeamItem.getDefaultInstance()) {
            arenaTeamInfo_ =
              myudfs.Common.ArenaTeamItem.newBuilder(arenaTeamInfo_).mergeFrom(value).buildPartial();
          } else {
            arenaTeamInfo_ = value;
          }
          onChanged();
        } else {
          arenaTeamInfoBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public Builder clearArenaTeamInfo() {
        if (arenaTeamInfoBuilder_ == null) {
          arenaTeamInfo_ = myudfs.Common.ArenaTeamItem.getDefaultInstance();
          onChanged();
        } else {
          arenaTeamInfoBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public myudfs.Common.ArenaTeamItem.Builder getArenaTeamInfoBuilder() {
        bitField7_ |= 0x00000002;
        onChanged();
        return getArenaTeamInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      public myudfs.Common.ArenaTeamItemOrBuilder getArenaTeamInfoOrBuilder() {
        if (arenaTeamInfoBuilder_ != null) {
          return arenaTeamInfoBuilder_.getMessageOrBuilder();
        } else {
          return arenaTeamInfo_;
        }
      }
      /**
       * <code>optional .ArenaTeamItem arenaTeamInfo = 280;</code>
       *
       * <pre>
       * optional int32 baoKuTime=279;// 当前剩余次数
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.ArenaTeamItem, myudfs.Common.ArenaTeamItem.Builder, myudfs.Common.ArenaTeamItemOrBuilder> 
          getArenaTeamInfoFieldBuilder() {
        if (arenaTeamInfoBuilder_ == null) {
          arenaTeamInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.ArenaTeamItem, myudfs.Common.ArenaTeamItem.Builder, myudfs.Common.ArenaTeamItemOrBuilder>(
                  arenaTeamInfo_,
                  getParentForChildren(),
                  isClean());
          arenaTeamInfo_ = null;
        }
        return arenaTeamInfoBuilder_;
      }

      // optional int32 sectionGuideIndex = 281;
      private int sectionGuideIndex_ ;
      /**
       * <code>optional int32 sectionGuideIndex = 281;</code>
       */
      public boolean hasSectionGuideIndex() {
        return ((bitField7_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 sectionGuideIndex = 281;</code>
       */
      public int getSectionGuideIndex() {
        return sectionGuideIndex_;
      }
      /**
       * <code>optional int32 sectionGuideIndex = 281;</code>
       */
      public Builder setSectionGuideIndex(int value) {
        bitField7_ |= 0x00000004;
        sectionGuideIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sectionGuideIndex = 281;</code>
       */
      public Builder clearSectionGuideIndex() {
        bitField7_ = (bitField7_ & ~0x00000004);
        sectionGuideIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jiaoYiBuy = 282;
      private int jiaoYiBuy_ ;
      /**
       * <code>optional int32 jiaoYiBuy = 282;</code>
       *
       * <pre>
       * 每日任务交易所购买
       * </pre>
       */
      public boolean hasJiaoYiBuy() {
        return ((bitField7_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 jiaoYiBuy = 282;</code>
       *
       * <pre>
       * 每日任务交易所购买
       * </pre>
       */
      public int getJiaoYiBuy() {
        return jiaoYiBuy_;
      }
      /**
       * <code>optional int32 jiaoYiBuy = 282;</code>
       *
       * <pre>
       * 每日任务交易所购买
       * </pre>
       */
      public Builder setJiaoYiBuy(int value) {
        bitField7_ |= 0x00000008;
        jiaoYiBuy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiaoYiBuy = 282;</code>
       *
       * <pre>
       * 每日任务交易所购买
       * </pre>
       */
      public Builder clearJiaoYiBuy() {
        bitField7_ = (bitField7_ & ~0x00000008);
        jiaoYiBuy_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jiaoYiSale = 283;
      private int jiaoYiSale_ ;
      /**
       * <code>optional int32 jiaoYiSale = 283;</code>
       *
       * <pre>
       * 每日任务交易所出售
       * </pre>
       */
      public boolean hasJiaoYiSale() {
        return ((bitField7_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 jiaoYiSale = 283;</code>
       *
       * <pre>
       * 每日任务交易所出售
       * </pre>
       */
      public int getJiaoYiSale() {
        return jiaoYiSale_;
      }
      /**
       * <code>optional int32 jiaoYiSale = 283;</code>
       *
       * <pre>
       * 每日任务交易所出售
       * </pre>
       */
      public Builder setJiaoYiSale(int value) {
        bitField7_ |= 0x00000010;
        jiaoYiSale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiaoYiSale = 283;</code>
       *
       * <pre>
       * 每日任务交易所出售
       * </pre>
       */
      public Builder clearJiaoYiSale() {
        bitField7_ = (bitField7_ & ~0x00000010);
        jiaoYiSale_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dailyLongGongBox = 284;
      private int dailyLongGongBox_ ;
      /**
       * <code>optional int32 dailyLongGongBox = 284;</code>
       *
       * <pre>
       * 每日任务开启龙宫宝箱
       * </pre>
       */
      public boolean hasDailyLongGongBox() {
        return ((bitField7_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 dailyLongGongBox = 284;</code>
       *
       * <pre>
       * 每日任务开启龙宫宝箱
       * </pre>
       */
      public int getDailyLongGongBox() {
        return dailyLongGongBox_;
      }
      /**
       * <code>optional int32 dailyLongGongBox = 284;</code>
       *
       * <pre>
       * 每日任务开启龙宫宝箱
       * </pre>
       */
      public Builder setDailyLongGongBox(int value) {
        bitField7_ |= 0x00000020;
        dailyLongGongBox_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dailyLongGongBox = 284;</code>
       *
       * <pre>
       * 每日任务开启龙宫宝箱
       * </pre>
       */
      public Builder clearDailyLongGongBox() {
        bitField7_ = (bitField7_ & ~0x00000020);
        dailyLongGongBox_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dailyLiuDao = 285;
      private int dailyLiuDao_ ;
      /**
       * <code>optional int32 dailyLiuDao = 285;</code>
       *
       * <pre>
       * 每日任务参与轮回塔
       * </pre>
       */
      public boolean hasDailyLiuDao() {
        return ((bitField7_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 dailyLiuDao = 285;</code>
       *
       * <pre>
       * 每日任务参与轮回塔
       * </pre>
       */
      public int getDailyLiuDao() {
        return dailyLiuDao_;
      }
      /**
       * <code>optional int32 dailyLiuDao = 285;</code>
       *
       * <pre>
       * 每日任务参与轮回塔
       * </pre>
       */
      public Builder setDailyLiuDao(int value) {
        bitField7_ |= 0x00000040;
        dailyLiuDao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dailyLiuDao = 285;</code>
       *
       * <pre>
       * 每日任务参与轮回塔
       * </pre>
       */
      public Builder clearDailyLiuDao() {
        bitField7_ = (bitField7_ & ~0x00000040);
        dailyLiuDao_ = 0;
        onChanged();
        return this;
      }

      // optional .PlayerEscortItem escortItem = 286;
      private myudfs.Common.PlayerEscortItem escortItem_ = myudfs.Common.PlayerEscortItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerEscortItem, myudfs.Common.PlayerEscortItem.Builder, myudfs.Common.PlayerEscortItemOrBuilder> escortItemBuilder_;
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public boolean hasEscortItem() {
        return ((bitField7_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public myudfs.Common.PlayerEscortItem getEscortItem() {
        if (escortItemBuilder_ == null) {
          return escortItem_;
        } else {
          return escortItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public Builder setEscortItem(myudfs.Common.PlayerEscortItem value) {
        if (escortItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          escortItem_ = value;
          onChanged();
        } else {
          escortItemBuilder_.setMessage(value);
        }
        bitField7_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public Builder setEscortItem(
          myudfs.Common.PlayerEscortItem.Builder builderForValue) {
        if (escortItemBuilder_ == null) {
          escortItem_ = builderForValue.build();
          onChanged();
        } else {
          escortItemBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public Builder mergeEscortItem(myudfs.Common.PlayerEscortItem value) {
        if (escortItemBuilder_ == null) {
          if (((bitField7_ & 0x00000080) == 0x00000080) &&
              escortItem_ != myudfs.Common.PlayerEscortItem.getDefaultInstance()) {
            escortItem_ =
              myudfs.Common.PlayerEscortItem.newBuilder(escortItem_).mergeFrom(value).buildPartial();
          } else {
            escortItem_ = value;
          }
          onChanged();
        } else {
          escortItemBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public Builder clearEscortItem() {
        if (escortItemBuilder_ == null) {
          escortItem_ = myudfs.Common.PlayerEscortItem.getDefaultInstance();
          onChanged();
        } else {
          escortItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public myudfs.Common.PlayerEscortItem.Builder getEscortItemBuilder() {
        bitField7_ |= 0x00000080;
        onChanged();
        return getEscortItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      public myudfs.Common.PlayerEscortItemOrBuilder getEscortItemOrBuilder() {
        if (escortItemBuilder_ != null) {
          return escortItemBuilder_.getMessageOrBuilder();
        } else {
          return escortItem_;
        }
      }
      /**
       * <code>optional .PlayerEscortItem escortItem = 286;</code>
       *
       * <pre>
       * 押镖信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerEscortItem, myudfs.Common.PlayerEscortItem.Builder, myudfs.Common.PlayerEscortItemOrBuilder> 
          getEscortItemFieldBuilder() {
        if (escortItemBuilder_ == null) {
          escortItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerEscortItem, myudfs.Common.PlayerEscortItem.Builder, myudfs.Common.PlayerEscortItemOrBuilder>(
                  escortItem_,
                  getParentForChildren(),
                  isClean());
          escortItem_ = null;
        }
        return escortItemBuilder_;
      }

      // optional .DFTeamItem escortTeamInfo = 287;
      private myudfs.Common.DFTeamItem escortTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> escortTeamInfoBuilder_;
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public boolean hasEscortTeamInfo() {
        return ((bitField7_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public myudfs.Common.DFTeamItem getEscortTeamInfo() {
        if (escortTeamInfoBuilder_ == null) {
          return escortTeamInfo_;
        } else {
          return escortTeamInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public Builder setEscortTeamInfo(myudfs.Common.DFTeamItem value) {
        if (escortTeamInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          escortTeamInfo_ = value;
          onChanged();
        } else {
          escortTeamInfoBuilder_.setMessage(value);
        }
        bitField7_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public Builder setEscortTeamInfo(
          myudfs.Common.DFTeamItem.Builder builderForValue) {
        if (escortTeamInfoBuilder_ == null) {
          escortTeamInfo_ = builderForValue.build();
          onChanged();
        } else {
          escortTeamInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public Builder mergeEscortTeamInfo(myudfs.Common.DFTeamItem value) {
        if (escortTeamInfoBuilder_ == null) {
          if (((bitField7_ & 0x00000100) == 0x00000100) &&
              escortTeamInfo_ != myudfs.Common.DFTeamItem.getDefaultInstance()) {
            escortTeamInfo_ =
              myudfs.Common.DFTeamItem.newBuilder(escortTeamInfo_).mergeFrom(value).buildPartial();
          } else {
            escortTeamInfo_ = value;
          }
          onChanged();
        } else {
          escortTeamInfoBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public Builder clearEscortTeamInfo() {
        if (escortTeamInfoBuilder_ == null) {
          escortTeamInfo_ = myudfs.Common.DFTeamItem.getDefaultInstance();
          onChanged();
        } else {
          escortTeamInfoBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public myudfs.Common.DFTeamItem.Builder getEscortTeamInfoBuilder() {
        bitField7_ |= 0x00000100;
        onChanged();
        return getEscortTeamInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      public myudfs.Common.DFTeamItemOrBuilder getEscortTeamInfoOrBuilder() {
        if (escortTeamInfoBuilder_ != null) {
          return escortTeamInfoBuilder_.getMessageOrBuilder();
        } else {
          return escortTeamInfo_;
        }
      }
      /**
       * <code>optional .DFTeamItem escortTeamInfo = 287;</code>
       *
       * <pre>
       * 押镖队伍信息,和队伍信息返回一致
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> 
          getEscortTeamInfoFieldBuilder() {
        if (escortTeamInfoBuilder_ == null) {
          escortTeamInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder>(
                  escortTeamInfo_,
                  getParentForChildren(),
                  isClean());
          escortTeamInfo_ = null;
        }
        return escortTeamInfoBuilder_;
      }

      // optional int32 position = 288;
      private int position_ ;
      /**
       * <code>optional int32 position = 288;</code>
       *
       * <pre>
       * 帮派位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField7_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 position = 288;</code>
       *
       * <pre>
       * 帮派位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional int32 position = 288;</code>
       *
       * <pre>
       * 帮派位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField7_ |= 0x00000200;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 position = 288;</code>
       *
       * <pre>
       * 帮派位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField7_ = (bitField7_ & ~0x00000200);
        position_ = 0;
        onChanged();
        return this;
      }

      // optional .DFTeamItem shenMoTeamItem = 289;
      private myudfs.Common.DFTeamItem shenMoTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> shenMoTeamItemBuilder_;
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public boolean hasShenMoTeamItem() {
        return ((bitField7_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem getShenMoTeamItem() {
        if (shenMoTeamItemBuilder_ == null) {
          return shenMoTeamItem_;
        } else {
          return shenMoTeamItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public Builder setShenMoTeamItem(myudfs.Common.DFTeamItem value) {
        if (shenMoTeamItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shenMoTeamItem_ = value;
          onChanged();
        } else {
          shenMoTeamItemBuilder_.setMessage(value);
        }
        bitField7_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public Builder setShenMoTeamItem(
          myudfs.Common.DFTeamItem.Builder builderForValue) {
        if (shenMoTeamItemBuilder_ == null) {
          shenMoTeamItem_ = builderForValue.build();
          onChanged();
        } else {
          shenMoTeamItemBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public Builder mergeShenMoTeamItem(myudfs.Common.DFTeamItem value) {
        if (shenMoTeamItemBuilder_ == null) {
          if (((bitField7_ & 0x00000400) == 0x00000400) &&
              shenMoTeamItem_ != myudfs.Common.DFTeamItem.getDefaultInstance()) {
            shenMoTeamItem_ =
              myudfs.Common.DFTeamItem.newBuilder(shenMoTeamItem_).mergeFrom(value).buildPartial();
          } else {
            shenMoTeamItem_ = value;
          }
          onChanged();
        } else {
          shenMoTeamItemBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public Builder clearShenMoTeamItem() {
        if (shenMoTeamItemBuilder_ == null) {
          shenMoTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
          onChanged();
        } else {
          shenMoTeamItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem.Builder getShenMoTeamItemBuilder() {
        bitField7_ |= 0x00000400;
        onChanged();
        return getShenMoTeamItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItemOrBuilder getShenMoTeamItemOrBuilder() {
        if (shenMoTeamItemBuilder_ != null) {
          return shenMoTeamItemBuilder_.getMessageOrBuilder();
        } else {
          return shenMoTeamItem_;
        }
      }
      /**
       * <code>optional .DFTeamItem shenMoTeamItem = 289;</code>
       *
       * <pre>
       * 神魔队伍信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> 
          getShenMoTeamItemFieldBuilder() {
        if (shenMoTeamItemBuilder_ == null) {
          shenMoTeamItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder>(
                  shenMoTeamItem_,
                  getParentForChildren(),
                  isClean());
          shenMoTeamItem_ = null;
        }
        return shenMoTeamItemBuilder_;
      }

      // optional .DFTeamItem pvpTeamItem = 290;
      private myudfs.Common.DFTeamItem pvpTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> pvpTeamItemBuilder_;
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public boolean hasPvpTeamItem() {
        return ((bitField7_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem getPvpTeamItem() {
        if (pvpTeamItemBuilder_ == null) {
          return pvpTeamItem_;
        } else {
          return pvpTeamItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public Builder setPvpTeamItem(myudfs.Common.DFTeamItem value) {
        if (pvpTeamItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pvpTeamItem_ = value;
          onChanged();
        } else {
          pvpTeamItemBuilder_.setMessage(value);
        }
        bitField7_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public Builder setPvpTeamItem(
          myudfs.Common.DFTeamItem.Builder builderForValue) {
        if (pvpTeamItemBuilder_ == null) {
          pvpTeamItem_ = builderForValue.build();
          onChanged();
        } else {
          pvpTeamItemBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public Builder mergePvpTeamItem(myudfs.Common.DFTeamItem value) {
        if (pvpTeamItemBuilder_ == null) {
          if (((bitField7_ & 0x00000800) == 0x00000800) &&
              pvpTeamItem_ != myudfs.Common.DFTeamItem.getDefaultInstance()) {
            pvpTeamItem_ =
              myudfs.Common.DFTeamItem.newBuilder(pvpTeamItem_).mergeFrom(value).buildPartial();
          } else {
            pvpTeamItem_ = value;
          }
          onChanged();
        } else {
          pvpTeamItemBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public Builder clearPvpTeamItem() {
        if (pvpTeamItemBuilder_ == null) {
          pvpTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
          onChanged();
        } else {
          pvpTeamItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem.Builder getPvpTeamItemBuilder() {
        bitField7_ |= 0x00000800;
        onChanged();
        return getPvpTeamItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItemOrBuilder getPvpTeamItemOrBuilder() {
        if (pvpTeamItemBuilder_ != null) {
          return pvpTeamItemBuilder_.getMessageOrBuilder();
        } else {
          return pvpTeamItem_;
        }
      }
      /**
       * <code>optional .DFTeamItem pvpTeamItem = 290;</code>
       *
       * <pre>
       * pvp队伍信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> 
          getPvpTeamItemFieldBuilder() {
        if (pvpTeamItemBuilder_ == null) {
          pvpTeamItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder>(
                  pvpTeamItem_,
                  getParentForChildren(),
                  isClean());
          pvpTeamItem_ = null;
        }
        return pvpTeamItemBuilder_;
      }

      // optional .DFTeamItem fbTeamItem = 291;
      private myudfs.Common.DFTeamItem fbTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> fbTeamItemBuilder_;
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public boolean hasFbTeamItem() {
        return ((bitField7_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem getFbTeamItem() {
        if (fbTeamItemBuilder_ == null) {
          return fbTeamItem_;
        } else {
          return fbTeamItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public Builder setFbTeamItem(myudfs.Common.DFTeamItem value) {
        if (fbTeamItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fbTeamItem_ = value;
          onChanged();
        } else {
          fbTeamItemBuilder_.setMessage(value);
        }
        bitField7_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public Builder setFbTeamItem(
          myudfs.Common.DFTeamItem.Builder builderForValue) {
        if (fbTeamItemBuilder_ == null) {
          fbTeamItem_ = builderForValue.build();
          onChanged();
        } else {
          fbTeamItemBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public Builder mergeFbTeamItem(myudfs.Common.DFTeamItem value) {
        if (fbTeamItemBuilder_ == null) {
          if (((bitField7_ & 0x00001000) == 0x00001000) &&
              fbTeamItem_ != myudfs.Common.DFTeamItem.getDefaultInstance()) {
            fbTeamItem_ =
              myudfs.Common.DFTeamItem.newBuilder(fbTeamItem_).mergeFrom(value).buildPartial();
          } else {
            fbTeamItem_ = value;
          }
          onChanged();
        } else {
          fbTeamItemBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public Builder clearFbTeamItem() {
        if (fbTeamItemBuilder_ == null) {
          fbTeamItem_ = myudfs.Common.DFTeamItem.getDefaultInstance();
          onChanged();
        } else {
          fbTeamItemBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItem.Builder getFbTeamItemBuilder() {
        bitField7_ |= 0x00001000;
        onChanged();
        return getFbTeamItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      public myudfs.Common.DFTeamItemOrBuilder getFbTeamItemOrBuilder() {
        if (fbTeamItemBuilder_ != null) {
          return fbTeamItemBuilder_.getMessageOrBuilder();
        } else {
          return fbTeamItem_;
        }
      }
      /**
       * <code>optional .DFTeamItem fbTeamItem = 291;</code>
       *
       * <pre>
       * 资源副本队伍信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> 
          getFbTeamItemFieldBuilder() {
        if (fbTeamItemBuilder_ == null) {
          fbTeamItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder>(
                  fbTeamItem_,
                  getParentForChildren(),
                  isClean());
          fbTeamItem_ = null;
        }
        return fbTeamItemBuilder_;
      }

      // optional int32 gangModifyNameTimes = 292;
      private int gangModifyNameTimes_ ;
      /**
       * <code>optional int32 gangModifyNameTimes = 292;</code>
       *
       * <pre>
       * 帮派改名次数
       * </pre>
       */
      public boolean hasGangModifyNameTimes() {
        return ((bitField7_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 gangModifyNameTimes = 292;</code>
       *
       * <pre>
       * 帮派改名次数
       * </pre>
       */
      public int getGangModifyNameTimes() {
        return gangModifyNameTimes_;
      }
      /**
       * <code>optional int32 gangModifyNameTimes = 292;</code>
       *
       * <pre>
       * 帮派改名次数
       * </pre>
       */
      public Builder setGangModifyNameTimes(int value) {
        bitField7_ |= 0x00002000;
        gangModifyNameTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gangModifyNameTimes = 292;</code>
       *
       * <pre>
       * 帮派改名次数
       * </pre>
       */
      public Builder clearGangModifyNameTimes() {
        bitField7_ = (bitField7_ & ~0x00002000);
        gangModifyNameTimes_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 startTime_MultiExp = 293;
      private long startTimeMultiExp_ ;
      /**
       * <code>optional uint64 startTime_MultiExp = 293;</code>
       *
       * <pre>
       * 双倍经验开始时间
       * </pre>
       */
      public boolean hasStartTimeMultiExp() {
        return ((bitField7_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint64 startTime_MultiExp = 293;</code>
       *
       * <pre>
       * 双倍经验开始时间
       * </pre>
       */
      public long getStartTimeMultiExp() {
        return startTimeMultiExp_;
      }
      /**
       * <code>optional uint64 startTime_MultiExp = 293;</code>
       *
       * <pre>
       * 双倍经验开始时间
       * </pre>
       */
      public Builder setStartTimeMultiExp(long value) {
        bitField7_ |= 0x00004000;
        startTimeMultiExp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 startTime_MultiExp = 293;</code>
       *
       * <pre>
       * 双倍经验开始时间
       * </pre>
       */
      public Builder clearStartTimeMultiExp() {
        bitField7_ = (bitField7_ & ~0x00004000);
        startTimeMultiExp_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 endTime_MultiExp = 294;
      private long endTimeMultiExp_ ;
      /**
       * <code>optional uint64 endTime_MultiExp = 294;</code>
       *
       * <pre>
       * 双倍经验结束时间
       * </pre>
       */
      public boolean hasEndTimeMultiExp() {
        return ((bitField7_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint64 endTime_MultiExp = 294;</code>
       *
       * <pre>
       * 双倍经验结束时间
       * </pre>
       */
      public long getEndTimeMultiExp() {
        return endTimeMultiExp_;
      }
      /**
       * <code>optional uint64 endTime_MultiExp = 294;</code>
       *
       * <pre>
       * 双倍经验结束时间
       * </pre>
       */
      public Builder setEndTimeMultiExp(long value) {
        bitField7_ |= 0x00008000;
        endTimeMultiExp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 endTime_MultiExp = 294;</code>
       *
       * <pre>
       * 双倍经验结束时间
       * </pre>
       */
      public Builder clearEndTimeMultiExp() {
        bitField7_ = (bitField7_ & ~0x00008000);
        endTimeMultiExp_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rate = 295;
      private int rate_ ;
      /**
       * <code>optional int32 rate = 295;</code>
       *
       * <pre>
       *经验倍率
       * </pre>
       */
      public boolean hasRate() {
        return ((bitField7_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 rate = 295;</code>
       *
       * <pre>
       *经验倍率
       * </pre>
       */
      public int getRate() {
        return rate_;
      }
      /**
       * <code>optional int32 rate = 295;</code>
       *
       * <pre>
       *经验倍率
       * </pre>
       */
      public Builder setRate(int value) {
        bitField7_ |= 0x00010000;
        rate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rate = 295;</code>
       *
       * <pre>
       *经验倍率
       * </pre>
       */
      public Builder clearRate() {
        bitField7_ = (bitField7_ & ~0x00010000);
        rate_ = 0;
        onChanged();
        return this;
      }

      // optional int64 nextTime = 296;
      private long nextTime_ ;
      /**
       * <code>optional int64 nextTime = 296;</code>
       *
       * <pre>
       * 下次六道扫荡时间
       * </pre>
       */
      public boolean hasNextTime() {
        return ((bitField7_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 nextTime = 296;</code>
       *
       * <pre>
       * 下次六道扫荡时间
       * </pre>
       */
      public long getNextTime() {
        return nextTime_;
      }
      /**
       * <code>optional int64 nextTime = 296;</code>
       *
       * <pre>
       * 下次六道扫荡时间
       * </pre>
       */
      public Builder setNextTime(long value) {
        bitField7_ |= 0x00020000;
        nextTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 nextTime = 296;</code>
       *
       * <pre>
       * 下次六道扫荡时间
       * </pre>
       */
      public Builder clearNextTime() {
        bitField7_ = (bitField7_ & ~0x00020000);
        nextTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 liuDaoEnemyStartIndex = 297;
      private int liuDaoEnemyStartIndex_ ;
      /**
       * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
       *
       * <pre>
       * 六道扫荡开始关卡索引
       * </pre>
       */
      public boolean hasLiuDaoEnemyStartIndex() {
        return ((bitField7_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
       *
       * <pre>
       * 六道扫荡开始关卡索引
       * </pre>
       */
      public int getLiuDaoEnemyStartIndex() {
        return liuDaoEnemyStartIndex_;
      }
      /**
       * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
       *
       * <pre>
       * 六道扫荡开始关卡索引
       * </pre>
       */
      public Builder setLiuDaoEnemyStartIndex(int value) {
        bitField7_ |= 0x00040000;
        liuDaoEnemyStartIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liuDaoEnemyStartIndex = 297;</code>
       *
       * <pre>
       * 六道扫荡开始关卡索引
       * </pre>
       */
      public Builder clearLiuDaoEnemyStartIndex() {
        bitField7_ = (bitField7_ & ~0x00040000);
        liuDaoEnemyStartIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 liuDaoEnemyEndIndex = 298;
      private int liuDaoEnemyEndIndex_ ;
      /**
       * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
       *
       * <pre>
       * 六道扫荡结束关卡索引
       * </pre>
       */
      public boolean hasLiuDaoEnemyEndIndex() {
        return ((bitField7_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
       *
       * <pre>
       * 六道扫荡结束关卡索引
       * </pre>
       */
      public int getLiuDaoEnemyEndIndex() {
        return liuDaoEnemyEndIndex_;
      }
      /**
       * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
       *
       * <pre>
       * 六道扫荡结束关卡索引
       * </pre>
       */
      public Builder setLiuDaoEnemyEndIndex(int value) {
        bitField7_ |= 0x00080000;
        liuDaoEnemyEndIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liuDaoEnemyEndIndex = 298;</code>
       *
       * <pre>
       * 六道扫荡结束关卡索引
       * </pre>
       */
      public Builder clearLiuDaoEnemyEndIndex() {
        bitField7_ = (bitField7_ & ~0x00080000);
        liuDaoEnemyEndIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 rewardIds = 299;
      private java.util.List<java.lang.Integer> rewardIds_ = java.util.Collections.emptyList();
      private void ensureRewardIdsIsMutable() {
        if (!((bitField7_ & 0x00100000) == 0x00100000)) {
          rewardIds_ = new java.util.ArrayList<java.lang.Integer>(rewardIds_);
          bitField7_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 rewardIds = 299;</code>
       *
       * <pre>
       * 当前扫荡奖励
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRewardIdsList() {
        return java.util.Collections.unmodifiableList(rewardIds_);
      }
      /**
       * <code>repeated int32 rewardIds = 299;</code>
       *
       * <pre>
       * 当前扫荡奖励
       * </pre>
       */
      public int getRewardIdsCount() {
        return rewardIds_.size();
      }
      /**
       * <code>repeated int32 rewardIds = 299;</code>
       *
       * <pre>
       * 当前扫荡奖励
       * </pre>
       */
      public int getRewardIds(int index) {
        return rewardIds_.get(index);
      }
      /**
       * <code>repeated int32 rewardIds = 299;</code>
       *
       * <pre>
       * 当前扫荡奖励
       * </pre>
       */
      public Builder setRewardIds(
          int index, int value) {
        ensureRewardIdsIsMutable();
        rewardIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rewardIds = 299;</code>
       *
       * <pre>
       * 当前扫荡奖励
       * </pre>
       */
      public Builder addRewardIds(int value) {
        ensureRewardIdsIsMutable();
        rewardIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rewardIds = 299;</code>
       *
       * <pre>
       * 当前扫荡奖励
       * </pre>
       */
      public Builder addAllRewardIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRewardIdsIsMutable();
        super.addAll(values, rewardIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rewardIds = 299;</code>
       *
       * <pre>
       * 当前扫荡奖励
       * </pre>
       */
      public Builder clearRewardIds() {
        rewardIds_ = java.util.Collections.emptyList();
        bitField7_ = (bitField7_ & ~0x00100000);
        onChanged();
        return this;
      }

      // optional int32 liuDaoSweepHaveReward = 300;
      private int liuDaoSweepHaveReward_ ;
      /**
       * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
       *
       * <pre>
       * 六道扫荡可否领奖, 1有奖, 2没奖
       * </pre>
       */
      public boolean hasLiuDaoSweepHaveReward() {
        return ((bitField7_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
       *
       * <pre>
       * 六道扫荡可否领奖, 1有奖, 2没奖
       * </pre>
       */
      public int getLiuDaoSweepHaveReward() {
        return liuDaoSweepHaveReward_;
      }
      /**
       * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
       *
       * <pre>
       * 六道扫荡可否领奖, 1有奖, 2没奖
       * </pre>
       */
      public Builder setLiuDaoSweepHaveReward(int value) {
        bitField7_ |= 0x00200000;
        liuDaoSweepHaveReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liuDaoSweepHaveReward = 300;</code>
       *
       * <pre>
       * 六道扫荡可否领奖, 1有奖, 2没奖
       * </pre>
       */
      public Builder clearLiuDaoSweepHaveReward() {
        bitField7_ = (bitField7_ & ~0x00200000);
        liuDaoSweepHaveReward_ = 0;
        onChanged();
        return this;
      }

      // repeated .PayReward exchangeItemReward = 301;
      private java.util.List<myudfs.Common.PayReward> exchangeItemReward_ =
        java.util.Collections.emptyList();
      private void ensureExchangeItemRewardIsMutable() {
        if (!((bitField7_ & 0x00400000) == 0x00400000)) {
          exchangeItemReward_ = new java.util.ArrayList<myudfs.Common.PayReward>(exchangeItemReward_);
          bitField7_ |= 0x00400000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PayReward, myudfs.Common.PayReward.Builder, myudfs.Common.PayRewardOrBuilder> exchangeItemRewardBuilder_;

      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public java.util.List<myudfs.Common.PayReward> getExchangeItemRewardList() {
        if (exchangeItemRewardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(exchangeItemReward_);
        } else {
          return exchangeItemRewardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public int getExchangeItemRewardCount() {
        if (exchangeItemRewardBuilder_ == null) {
          return exchangeItemReward_.size();
        } else {
          return exchangeItemRewardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public myudfs.Common.PayReward getExchangeItemReward(int index) {
        if (exchangeItemRewardBuilder_ == null) {
          return exchangeItemReward_.get(index);
        } else {
          return exchangeItemRewardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder setExchangeItemReward(
          int index, myudfs.Common.PayReward value) {
        if (exchangeItemRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangeItemRewardIsMutable();
          exchangeItemReward_.set(index, value);
          onChanged();
        } else {
          exchangeItemRewardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder setExchangeItemReward(
          int index, myudfs.Common.PayReward.Builder builderForValue) {
        if (exchangeItemRewardBuilder_ == null) {
          ensureExchangeItemRewardIsMutable();
          exchangeItemReward_.set(index, builderForValue.build());
          onChanged();
        } else {
          exchangeItemRewardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder addExchangeItemReward(myudfs.Common.PayReward value) {
        if (exchangeItemRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangeItemRewardIsMutable();
          exchangeItemReward_.add(value);
          onChanged();
        } else {
          exchangeItemRewardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder addExchangeItemReward(
          int index, myudfs.Common.PayReward value) {
        if (exchangeItemRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangeItemRewardIsMutable();
          exchangeItemReward_.add(index, value);
          onChanged();
        } else {
          exchangeItemRewardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder addExchangeItemReward(
          myudfs.Common.PayReward.Builder builderForValue) {
        if (exchangeItemRewardBuilder_ == null) {
          ensureExchangeItemRewardIsMutable();
          exchangeItemReward_.add(builderForValue.build());
          onChanged();
        } else {
          exchangeItemRewardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder addExchangeItemReward(
          int index, myudfs.Common.PayReward.Builder builderForValue) {
        if (exchangeItemRewardBuilder_ == null) {
          ensureExchangeItemRewardIsMutable();
          exchangeItemReward_.add(index, builderForValue.build());
          onChanged();
        } else {
          exchangeItemRewardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder addAllExchangeItemReward(
          java.lang.Iterable<? extends myudfs.Common.PayReward> values) {
        if (exchangeItemRewardBuilder_ == null) {
          ensureExchangeItemRewardIsMutable();
          super.addAll(values, exchangeItemReward_);
          onChanged();
        } else {
          exchangeItemRewardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder clearExchangeItemReward() {
        if (exchangeItemRewardBuilder_ == null) {
          exchangeItemReward_ = java.util.Collections.emptyList();
          bitField7_ = (bitField7_ & ~0x00400000);
          onChanged();
        } else {
          exchangeItemRewardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public Builder removeExchangeItemReward(int index) {
        if (exchangeItemRewardBuilder_ == null) {
          ensureExchangeItemRewardIsMutable();
          exchangeItemReward_.remove(index);
          onChanged();
        } else {
          exchangeItemRewardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public myudfs.Common.PayReward.Builder getExchangeItemRewardBuilder(
          int index) {
        return getExchangeItemRewardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public myudfs.Common.PayRewardOrBuilder getExchangeItemRewardOrBuilder(
          int index) {
        if (exchangeItemRewardBuilder_ == null) {
          return exchangeItemReward_.get(index);  } else {
          return exchangeItemRewardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public java.util.List<? extends myudfs.Common.PayRewardOrBuilder> 
           getExchangeItemRewardOrBuilderList() {
        if (exchangeItemRewardBuilder_ != null) {
          return exchangeItemRewardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(exchangeItemReward_);
        }
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public myudfs.Common.PayReward.Builder addExchangeItemRewardBuilder() {
        return getExchangeItemRewardFieldBuilder().addBuilder(
            myudfs.Common.PayReward.getDefaultInstance());
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public myudfs.Common.PayReward.Builder addExchangeItemRewardBuilder(
          int index) {
        return getExchangeItemRewardFieldBuilder().addBuilder(
            index, myudfs.Common.PayReward.getDefaultInstance());
      }
      /**
       * <code>repeated .PayReward exchangeItemReward = 301;</code>
       */
      public java.util.List<myudfs.Common.PayReward.Builder> 
           getExchangeItemRewardBuilderList() {
        return getExchangeItemRewardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PayReward, myudfs.Common.PayReward.Builder, myudfs.Common.PayRewardOrBuilder> 
          getExchangeItemRewardFieldBuilder() {
        if (exchangeItemRewardBuilder_ == null) {
          exchangeItemRewardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.PayReward, myudfs.Common.PayReward.Builder, myudfs.Common.PayRewardOrBuilder>(
                  exchangeItemReward_,
                  ((bitField7_ & 0x00400000) == 0x00400000),
                  getParentForChildren(),
                  isClean());
          exchangeItemReward_ = null;
        }
        return exchangeItemRewardBuilder_;
      }

      // optional int32 templeDayRemainSeekTimes = 302;
      private int templeDayRemainSeekTimes_ ;
      /**
       * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
       *
       * <pre>
       * 神殿每日剩余探寻次数
       * </pre>
       */
      public boolean hasTempleDayRemainSeekTimes() {
        return ((bitField7_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
       *
       * <pre>
       * 神殿每日剩余探寻次数
       * </pre>
       */
      public int getTempleDayRemainSeekTimes() {
        return templeDayRemainSeekTimes_;
      }
      /**
       * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
       *
       * <pre>
       * 神殿每日剩余探寻次数
       * </pre>
       */
      public Builder setTempleDayRemainSeekTimes(int value) {
        bitField7_ |= 0x00800000;
        templeDayRemainSeekTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 templeDayRemainSeekTimes = 302;</code>
       *
       * <pre>
       * 神殿每日剩余探寻次数
       * </pre>
       */
      public Builder clearTempleDayRemainSeekTimes() {
        bitField7_ = (bitField7_ & ~0x00800000);
        templeDayRemainSeekTimes_ = 0;
        onChanged();
        return this;
      }

      // optional .DFTeamItem templeTeam = 303;
      private myudfs.Common.DFTeamItem templeTeam_ = myudfs.Common.DFTeamItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> templeTeamBuilder_;
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public boolean hasTempleTeam() {
        return ((bitField7_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public myudfs.Common.DFTeamItem getTempleTeam() {
        if (templeTeamBuilder_ == null) {
          return templeTeam_;
        } else {
          return templeTeamBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public Builder setTempleTeam(myudfs.Common.DFTeamItem value) {
        if (templeTeamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          templeTeam_ = value;
          onChanged();
        } else {
          templeTeamBuilder_.setMessage(value);
        }
        bitField7_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public Builder setTempleTeam(
          myudfs.Common.DFTeamItem.Builder builderForValue) {
        if (templeTeamBuilder_ == null) {
          templeTeam_ = builderForValue.build();
          onChanged();
        } else {
          templeTeamBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public Builder mergeTempleTeam(myudfs.Common.DFTeamItem value) {
        if (templeTeamBuilder_ == null) {
          if (((bitField7_ & 0x01000000) == 0x01000000) &&
              templeTeam_ != myudfs.Common.DFTeamItem.getDefaultInstance()) {
            templeTeam_ =
              myudfs.Common.DFTeamItem.newBuilder(templeTeam_).mergeFrom(value).buildPartial();
          } else {
            templeTeam_ = value;
          }
          onChanged();
        } else {
          templeTeamBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public Builder clearTempleTeam() {
        if (templeTeamBuilder_ == null) {
          templeTeam_ = myudfs.Common.DFTeamItem.getDefaultInstance();
          onChanged();
        } else {
          templeTeamBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public myudfs.Common.DFTeamItem.Builder getTempleTeamBuilder() {
        bitField7_ |= 0x01000000;
        onChanged();
        return getTempleTeamFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      public myudfs.Common.DFTeamItemOrBuilder getTempleTeamOrBuilder() {
        if (templeTeamBuilder_ != null) {
          return templeTeamBuilder_.getMessageOrBuilder();
        } else {
          return templeTeam_;
        }
      }
      /**
       * <code>optional .DFTeamItem templeTeam = 303;</code>
       *
       * <pre>
       * 神殿队伍_无护法
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder> 
          getTempleTeamFieldBuilder() {
        if (templeTeamBuilder_ == null) {
          templeTeamBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.DFTeamItem, myudfs.Common.DFTeamItem.Builder, myudfs.Common.DFTeamItemOrBuilder>(
                  templeTeam_,
                  getParentForChildren(),
                  isClean());
          templeTeam_ = null;
        }
        return templeTeamBuilder_;
      }

      // repeated .DoubleReward doubleReward = 304;
      private java.util.List<myudfs.Common.DoubleReward> doubleReward_ =
        java.util.Collections.emptyList();
      private void ensureDoubleRewardIsMutable() {
        if (!((bitField7_ & 0x02000000) == 0x02000000)) {
          doubleReward_ = new java.util.ArrayList<myudfs.Common.DoubleReward>(doubleReward_);
          bitField7_ |= 0x02000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.DoubleReward, myudfs.Common.DoubleReward.Builder, myudfs.Common.DoubleRewardOrBuilder> doubleRewardBuilder_;

      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public java.util.List<myudfs.Common.DoubleReward> getDoubleRewardList() {
        if (doubleRewardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(doubleReward_);
        } else {
          return doubleRewardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public int getDoubleRewardCount() {
        if (doubleRewardBuilder_ == null) {
          return doubleReward_.size();
        } else {
          return doubleRewardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public myudfs.Common.DoubleReward getDoubleReward(int index) {
        if (doubleRewardBuilder_ == null) {
          return doubleReward_.get(index);
        } else {
          return doubleRewardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder setDoubleReward(
          int index, myudfs.Common.DoubleReward value) {
        if (doubleRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoubleRewardIsMutable();
          doubleReward_.set(index, value);
          onChanged();
        } else {
          doubleRewardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder setDoubleReward(
          int index, myudfs.Common.DoubleReward.Builder builderForValue) {
        if (doubleRewardBuilder_ == null) {
          ensureDoubleRewardIsMutable();
          doubleReward_.set(index, builderForValue.build());
          onChanged();
        } else {
          doubleRewardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder addDoubleReward(myudfs.Common.DoubleReward value) {
        if (doubleRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoubleRewardIsMutable();
          doubleReward_.add(value);
          onChanged();
        } else {
          doubleRewardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder addDoubleReward(
          int index, myudfs.Common.DoubleReward value) {
        if (doubleRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoubleRewardIsMutable();
          doubleReward_.add(index, value);
          onChanged();
        } else {
          doubleRewardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder addDoubleReward(
          myudfs.Common.DoubleReward.Builder builderForValue) {
        if (doubleRewardBuilder_ == null) {
          ensureDoubleRewardIsMutable();
          doubleReward_.add(builderForValue.build());
          onChanged();
        } else {
          doubleRewardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder addDoubleReward(
          int index, myudfs.Common.DoubleReward.Builder builderForValue) {
        if (doubleRewardBuilder_ == null) {
          ensureDoubleRewardIsMutable();
          doubleReward_.add(index, builderForValue.build());
          onChanged();
        } else {
          doubleRewardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder addAllDoubleReward(
          java.lang.Iterable<? extends myudfs.Common.DoubleReward> values) {
        if (doubleRewardBuilder_ == null) {
          ensureDoubleRewardIsMutable();
          super.addAll(values, doubleReward_);
          onChanged();
        } else {
          doubleRewardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder clearDoubleReward() {
        if (doubleRewardBuilder_ == null) {
          doubleReward_ = java.util.Collections.emptyList();
          bitField7_ = (bitField7_ & ~0x02000000);
          onChanged();
        } else {
          doubleRewardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public Builder removeDoubleReward(int index) {
        if (doubleRewardBuilder_ == null) {
          ensureDoubleRewardIsMutable();
          doubleReward_.remove(index);
          onChanged();
        } else {
          doubleRewardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public myudfs.Common.DoubleReward.Builder getDoubleRewardBuilder(
          int index) {
        return getDoubleRewardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public myudfs.Common.DoubleRewardOrBuilder getDoubleRewardOrBuilder(
          int index) {
        if (doubleRewardBuilder_ == null) {
          return doubleReward_.get(index);  } else {
          return doubleRewardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.DoubleRewardOrBuilder> 
           getDoubleRewardOrBuilderList() {
        if (doubleRewardBuilder_ != null) {
          return doubleRewardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(doubleReward_);
        }
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public myudfs.Common.DoubleReward.Builder addDoubleRewardBuilder() {
        return getDoubleRewardFieldBuilder().addBuilder(
            myudfs.Common.DoubleReward.getDefaultInstance());
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public myudfs.Common.DoubleReward.Builder addDoubleRewardBuilder(
          int index) {
        return getDoubleRewardFieldBuilder().addBuilder(
            index, myudfs.Common.DoubleReward.getDefaultInstance());
      }
      /**
       * <code>repeated .DoubleReward doubleReward = 304;</code>
       *
       * <pre>
       *各种翻倍活动
       * </pre>
       */
      public java.util.List<myudfs.Common.DoubleReward.Builder> 
           getDoubleRewardBuilderList() {
        return getDoubleRewardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.DoubleReward, myudfs.Common.DoubleReward.Builder, myudfs.Common.DoubleRewardOrBuilder> 
          getDoubleRewardFieldBuilder() {
        if (doubleRewardBuilder_ == null) {
          doubleRewardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.DoubleReward, myudfs.Common.DoubleReward.Builder, myudfs.Common.DoubleRewardOrBuilder>(
                  doubleReward_,
                  ((bitField7_ & 0x02000000) == 0x02000000),
                  getParentForChildren(),
                  isClean());
          doubleReward_ = null;
        }
        return doubleRewardBuilder_;
      }

      // optional .YunyingActivity shenmoRankActivityReward = 305;
      private myudfs.Common.YunyingActivity shenmoRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder> shenmoRankActivityRewardBuilder_;
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public boolean hasShenmoRankActivityReward() {
        return ((bitField7_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public myudfs.Common.YunyingActivity getShenmoRankActivityReward() {
        if (shenmoRankActivityRewardBuilder_ == null) {
          return shenmoRankActivityReward_;
        } else {
          return shenmoRankActivityRewardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public Builder setShenmoRankActivityReward(myudfs.Common.YunyingActivity value) {
        if (shenmoRankActivityRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shenmoRankActivityReward_ = value;
          onChanged();
        } else {
          shenmoRankActivityRewardBuilder_.setMessage(value);
        }
        bitField7_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public Builder setShenmoRankActivityReward(
          myudfs.Common.YunyingActivity.Builder builderForValue) {
        if (shenmoRankActivityRewardBuilder_ == null) {
          shenmoRankActivityReward_ = builderForValue.build();
          onChanged();
        } else {
          shenmoRankActivityRewardBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public Builder mergeShenmoRankActivityReward(myudfs.Common.YunyingActivity value) {
        if (shenmoRankActivityRewardBuilder_ == null) {
          if (((bitField7_ & 0x04000000) == 0x04000000) &&
              shenmoRankActivityReward_ != myudfs.Common.YunyingActivity.getDefaultInstance()) {
            shenmoRankActivityReward_ =
              myudfs.Common.YunyingActivity.newBuilder(shenmoRankActivityReward_).mergeFrom(value).buildPartial();
          } else {
            shenmoRankActivityReward_ = value;
          }
          onChanged();
        } else {
          shenmoRankActivityRewardBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public Builder clearShenmoRankActivityReward() {
        if (shenmoRankActivityRewardBuilder_ == null) {
          shenmoRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
          onChanged();
        } else {
          shenmoRankActivityRewardBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public myudfs.Common.YunyingActivity.Builder getShenmoRankActivityRewardBuilder() {
        bitField7_ |= 0x04000000;
        onChanged();
        return getShenmoRankActivityRewardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      public myudfs.Common.YunyingActivityOrBuilder getShenmoRankActivityRewardOrBuilder() {
        if (shenmoRankActivityRewardBuilder_ != null) {
          return shenmoRankActivityRewardBuilder_.getMessageOrBuilder();
        } else {
          return shenmoRankActivityReward_;
        }
      }
      /**
       * <code>optional .YunyingActivity shenmoRankActivityReward = 305;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder> 
          getShenmoRankActivityRewardFieldBuilder() {
        if (shenmoRankActivityRewardBuilder_ == null) {
          shenmoRankActivityRewardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder>(
                  shenmoRankActivityReward_,
                  getParentForChildren(),
                  isClean());
          shenmoRankActivityReward_ = null;
        }
        return shenmoRankActivityRewardBuilder_;
      }

      // optional .YunyingActivity arenaRankActivityReward = 306;
      private myudfs.Common.YunyingActivity arenaRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder> arenaRankActivityRewardBuilder_;
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public boolean hasArenaRankActivityReward() {
        return ((bitField7_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public myudfs.Common.YunyingActivity getArenaRankActivityReward() {
        if (arenaRankActivityRewardBuilder_ == null) {
          return arenaRankActivityReward_;
        } else {
          return arenaRankActivityRewardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public Builder setArenaRankActivityReward(myudfs.Common.YunyingActivity value) {
        if (arenaRankActivityRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          arenaRankActivityReward_ = value;
          onChanged();
        } else {
          arenaRankActivityRewardBuilder_.setMessage(value);
        }
        bitField7_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public Builder setArenaRankActivityReward(
          myudfs.Common.YunyingActivity.Builder builderForValue) {
        if (arenaRankActivityRewardBuilder_ == null) {
          arenaRankActivityReward_ = builderForValue.build();
          onChanged();
        } else {
          arenaRankActivityRewardBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public Builder mergeArenaRankActivityReward(myudfs.Common.YunyingActivity value) {
        if (arenaRankActivityRewardBuilder_ == null) {
          if (((bitField7_ & 0x08000000) == 0x08000000) &&
              arenaRankActivityReward_ != myudfs.Common.YunyingActivity.getDefaultInstance()) {
            arenaRankActivityReward_ =
              myudfs.Common.YunyingActivity.newBuilder(arenaRankActivityReward_).mergeFrom(value).buildPartial();
          } else {
            arenaRankActivityReward_ = value;
          }
          onChanged();
        } else {
          arenaRankActivityRewardBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public Builder clearArenaRankActivityReward() {
        if (arenaRankActivityRewardBuilder_ == null) {
          arenaRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
          onChanged();
        } else {
          arenaRankActivityRewardBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x08000000);
        return this;
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public myudfs.Common.YunyingActivity.Builder getArenaRankActivityRewardBuilder() {
        bitField7_ |= 0x08000000;
        onChanged();
        return getArenaRankActivityRewardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      public myudfs.Common.YunyingActivityOrBuilder getArenaRankActivityRewardOrBuilder() {
        if (arenaRankActivityRewardBuilder_ != null) {
          return arenaRankActivityRewardBuilder_.getMessageOrBuilder();
        } else {
          return arenaRankActivityReward_;
        }
      }
      /**
       * <code>optional .YunyingActivity arenaRankActivityReward = 306;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder> 
          getArenaRankActivityRewardFieldBuilder() {
        if (arenaRankActivityRewardBuilder_ == null) {
          arenaRankActivityRewardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder>(
                  arenaRankActivityReward_,
                  getParentForChildren(),
                  isClean());
          arenaRankActivityReward_ = null;
        }
        return arenaRankActivityRewardBuilder_;
      }

      // optional .YunyingActivity openBoxRankActivityReward = 307;
      private myudfs.Common.YunyingActivity openBoxRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder> openBoxRankActivityRewardBuilder_;
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public boolean hasOpenBoxRankActivityReward() {
        return ((bitField7_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public myudfs.Common.YunyingActivity getOpenBoxRankActivityReward() {
        if (openBoxRankActivityRewardBuilder_ == null) {
          return openBoxRankActivityReward_;
        } else {
          return openBoxRankActivityRewardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public Builder setOpenBoxRankActivityReward(myudfs.Common.YunyingActivity value) {
        if (openBoxRankActivityRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          openBoxRankActivityReward_ = value;
          onChanged();
        } else {
          openBoxRankActivityRewardBuilder_.setMessage(value);
        }
        bitField7_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public Builder setOpenBoxRankActivityReward(
          myudfs.Common.YunyingActivity.Builder builderForValue) {
        if (openBoxRankActivityRewardBuilder_ == null) {
          openBoxRankActivityReward_ = builderForValue.build();
          onChanged();
        } else {
          openBoxRankActivityRewardBuilder_.setMessage(builderForValue.build());
        }
        bitField7_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public Builder mergeOpenBoxRankActivityReward(myudfs.Common.YunyingActivity value) {
        if (openBoxRankActivityRewardBuilder_ == null) {
          if (((bitField7_ & 0x10000000) == 0x10000000) &&
              openBoxRankActivityReward_ != myudfs.Common.YunyingActivity.getDefaultInstance()) {
            openBoxRankActivityReward_ =
              myudfs.Common.YunyingActivity.newBuilder(openBoxRankActivityReward_).mergeFrom(value).buildPartial();
          } else {
            openBoxRankActivityReward_ = value;
          }
          onChanged();
        } else {
          openBoxRankActivityRewardBuilder_.mergeFrom(value);
        }
        bitField7_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public Builder clearOpenBoxRankActivityReward() {
        if (openBoxRankActivityRewardBuilder_ == null) {
          openBoxRankActivityReward_ = myudfs.Common.YunyingActivity.getDefaultInstance();
          onChanged();
        } else {
          openBoxRankActivityRewardBuilder_.clear();
        }
        bitField7_ = (bitField7_ & ~0x10000000);
        return this;
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public myudfs.Common.YunyingActivity.Builder getOpenBoxRankActivityRewardBuilder() {
        bitField7_ |= 0x10000000;
        onChanged();
        return getOpenBoxRankActivityRewardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      public myudfs.Common.YunyingActivityOrBuilder getOpenBoxRankActivityRewardOrBuilder() {
        if (openBoxRankActivityRewardBuilder_ != null) {
          return openBoxRankActivityRewardBuilder_.getMessageOrBuilder();
        } else {
          return openBoxRankActivityReward_;
        }
      }
      /**
       * <code>optional .YunyingActivity openBoxRankActivityReward = 307;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder> 
          getOpenBoxRankActivityRewardFieldBuilder() {
        if (openBoxRankActivityRewardBuilder_ == null) {
          openBoxRankActivityRewardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.YunyingActivity, myudfs.Common.YunyingActivity.Builder, myudfs.Common.YunyingActivityOrBuilder>(
                  openBoxRankActivityReward_,
                  getParentForChildren(),
                  isClean());
          openBoxRankActivityReward_ = null;
        }
        return openBoxRankActivityRewardBuilder_;
      }

      // repeated int64 templeCultivateCards = 308;
      private java.util.List<java.lang.Long> templeCultivateCards_ = java.util.Collections.emptyList();
      private void ensureTempleCultivateCardsIsMutable() {
        if (!((bitField7_ & 0x20000000) == 0x20000000)) {
          templeCultivateCards_ = new java.util.ArrayList<java.lang.Long>(templeCultivateCards_);
          bitField7_ |= 0x20000000;
         }
      }
      /**
       * <code>repeated int64 templeCultivateCards = 308;</code>
       *
       * <pre>
       * 神殿已上阵修炼的卡牌列表
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getTempleCultivateCardsList() {
        return java.util.Collections.unmodifiableList(templeCultivateCards_);
      }
      /**
       * <code>repeated int64 templeCultivateCards = 308;</code>
       *
       * <pre>
       * 神殿已上阵修炼的卡牌列表
       * </pre>
       */
      public int getTempleCultivateCardsCount() {
        return templeCultivateCards_.size();
      }
      /**
       * <code>repeated int64 templeCultivateCards = 308;</code>
       *
       * <pre>
       * 神殿已上阵修炼的卡牌列表
       * </pre>
       */
      public long getTempleCultivateCards(int index) {
        return templeCultivateCards_.get(index);
      }
      /**
       * <code>repeated int64 templeCultivateCards = 308;</code>
       *
       * <pre>
       * 神殿已上阵修炼的卡牌列表
       * </pre>
       */
      public Builder setTempleCultivateCards(
          int index, long value) {
        ensureTempleCultivateCardsIsMutable();
        templeCultivateCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 templeCultivateCards = 308;</code>
       *
       * <pre>
       * 神殿已上阵修炼的卡牌列表
       * </pre>
       */
      public Builder addTempleCultivateCards(long value) {
        ensureTempleCultivateCardsIsMutable();
        templeCultivateCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 templeCultivateCards = 308;</code>
       *
       * <pre>
       * 神殿已上阵修炼的卡牌列表
       * </pre>
       */
      public Builder addAllTempleCultivateCards(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTempleCultivateCardsIsMutable();
        super.addAll(values, templeCultivateCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 templeCultivateCards = 308;</code>
       *
       * <pre>
       * 神殿已上阵修炼的卡牌列表
       * </pre>
       */
      public Builder clearTempleCultivateCards() {
        templeCultivateCards_ = java.util.Collections.emptyList();
        bitField7_ = (bitField7_ & ~0x20000000);
        onChanged();
        return this;
      }

      // optional int32 jingYanDanCostGold = 309;
      private int jingYanDanCostGold_ ;
      /**
       * <code>optional int32 jingYanDanCostGold = 309;</code>
       *
       * <pre>
       *转生使用元宝次数
       * </pre>
       */
      public boolean hasJingYanDanCostGold() {
        return ((bitField7_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 jingYanDanCostGold = 309;</code>
       *
       * <pre>
       *转生使用元宝次数
       * </pre>
       */
      public int getJingYanDanCostGold() {
        return jingYanDanCostGold_;
      }
      /**
       * <code>optional int32 jingYanDanCostGold = 309;</code>
       *
       * <pre>
       *转生使用元宝次数
       * </pre>
       */
      public Builder setJingYanDanCostGold(int value) {
        bitField7_ |= 0x40000000;
        jingYanDanCostGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jingYanDanCostGold = 309;</code>
       *
       * <pre>
       *转生使用元宝次数
       * </pre>
       */
      public Builder clearJingYanDanCostGold() {
        bitField7_ = (bitField7_ & ~0x40000000);
        jingYanDanCostGold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cardExpDeclineNum = 310;
      private int cardExpDeclineNum_ ;
      /**
       * <code>optional int32 cardExpDeclineNum = 310;</code>
       */
      public boolean hasCardExpDeclineNum() {
        return ((bitField7_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 cardExpDeclineNum = 310;</code>
       */
      public int getCardExpDeclineNum() {
        return cardExpDeclineNum_;
      }
      /**
       * <code>optional int32 cardExpDeclineNum = 310;</code>
       */
      public Builder setCardExpDeclineNum(int value) {
        bitField7_ |= 0x80000000;
        cardExpDeclineNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardExpDeclineNum = 310;</code>
       */
      public Builder clearCardExpDeclineNum() {
        bitField7_ = (bitField7_ & ~0x80000000);
        cardExpDeclineNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rankValue = 311;
      private int rankValue_ ;
      /**
       * <code>optional int32 rankValue = 311;</code>
       *
       * <pre>
       * 排行活动数值
       * </pre>
       */
      public boolean hasRankValue() {
        return ((bitField8_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rankValue = 311;</code>
       *
       * <pre>
       * 排行活动数值
       * </pre>
       */
      public int getRankValue() {
        return rankValue_;
      }
      /**
       * <code>optional int32 rankValue = 311;</code>
       *
       * <pre>
       * 排行活动数值
       * </pre>
       */
      public Builder setRankValue(int value) {
        bitField8_ |= 0x00000001;
        rankValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rankValue = 311;</code>
       *
       * <pre>
       * 排行活动数值
       * </pre>
       */
      public Builder clearRankValue() {
        bitField8_ = (bitField8_ & ~0x00000001);
        rankValue_ = 0;
        onChanged();
        return this;
      }

      // optional bool hasTempleEvent = 312;
      private boolean hasTempleEvent_ ;
      /**
       * <code>optional bool hasTempleEvent = 312;</code>
       *
       * <pre>
       * 是否有神殿事件
       * </pre>
       */
      public boolean hasHasTempleEvent() {
        return ((bitField8_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool hasTempleEvent = 312;</code>
       *
       * <pre>
       * 是否有神殿事件
       * </pre>
       */
      public boolean getHasTempleEvent() {
        return hasTempleEvent_;
      }
      /**
       * <code>optional bool hasTempleEvent = 312;</code>
       *
       * <pre>
       * 是否有神殿事件
       * </pre>
       */
      public Builder setHasTempleEvent(boolean value) {
        bitField8_ |= 0x00000002;
        hasTempleEvent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasTempleEvent = 312;</code>
       *
       * <pre>
       * 是否有神殿事件
       * </pre>
       */
      public Builder clearHasTempleEvent() {
        bitField8_ = (bitField8_ & ~0x00000002);
        hasTempleEvent_ = false;
        onChanged();
        return this;
      }

      // optional int32 redPacketId = 313;
      private int redPacketId_ ;
      /**
       * <code>optional int32 redPacketId = 313;</code>
       *
       * <pre>
       *春节活动红包id
       * </pre>
       */
      public boolean hasRedPacketId() {
        return ((bitField8_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 redPacketId = 313;</code>
       *
       * <pre>
       *春节活动红包id
       * </pre>
       */
      public int getRedPacketId() {
        return redPacketId_;
      }
      /**
       * <code>optional int32 redPacketId = 313;</code>
       *
       * <pre>
       *春节活动红包id
       * </pre>
       */
      public Builder setRedPacketId(int value) {
        bitField8_ |= 0x00000004;
        redPacketId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 redPacketId = 313;</code>
       *
       * <pre>
       *春节活动红包id
       * </pre>
       */
      public Builder clearRedPacketId() {
        bitField8_ = (bitField8_ & ~0x00000004);
        redPacketId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 redPacketNum = 314;
      private int redPacketNum_ ;
      /**
       * <code>optional int32 redPacketNum = 314;</code>
       *
       * <pre>
       * 春节活动红包数目
       * </pre>
       */
      public boolean hasRedPacketNum() {
        return ((bitField8_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 redPacketNum = 314;</code>
       *
       * <pre>
       * 春节活动红包数目
       * </pre>
       */
      public int getRedPacketNum() {
        return redPacketNum_;
      }
      /**
       * <code>optional int32 redPacketNum = 314;</code>
       *
       * <pre>
       * 春节活动红包数目
       * </pre>
       */
      public Builder setRedPacketNum(int value) {
        bitField8_ |= 0x00000008;
        redPacketNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 redPacketNum = 314;</code>
       *
       * <pre>
       * 春节活动红包数目
       * </pre>
       */
      public Builder clearRedPacketNum() {
        bitField8_ = (bitField8_ & ~0x00000008);
        redPacketNum_ = 0;
        onChanged();
        return this;
      }

      // optional .CustomPushItemMessage customPushItemMessage = 315;
      private myudfs.Common.CustomPushItemMessage customPushItemMessage_ = myudfs.Common.CustomPushItemMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.CustomPushItemMessage, myudfs.Common.CustomPushItemMessage.Builder, myudfs.Common.CustomPushItemMessageOrBuilder> customPushItemMessageBuilder_;
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public boolean hasCustomPushItemMessage() {
        return ((bitField8_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public myudfs.Common.CustomPushItemMessage getCustomPushItemMessage() {
        if (customPushItemMessageBuilder_ == null) {
          return customPushItemMessage_;
        } else {
          return customPushItemMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public Builder setCustomPushItemMessage(myudfs.Common.CustomPushItemMessage value) {
        if (customPushItemMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          customPushItemMessage_ = value;
          onChanged();
        } else {
          customPushItemMessageBuilder_.setMessage(value);
        }
        bitField8_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public Builder setCustomPushItemMessage(
          myudfs.Common.CustomPushItemMessage.Builder builderForValue) {
        if (customPushItemMessageBuilder_ == null) {
          customPushItemMessage_ = builderForValue.build();
          onChanged();
        } else {
          customPushItemMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField8_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public Builder mergeCustomPushItemMessage(myudfs.Common.CustomPushItemMessage value) {
        if (customPushItemMessageBuilder_ == null) {
          if (((bitField8_ & 0x00000010) == 0x00000010) &&
              customPushItemMessage_ != myudfs.Common.CustomPushItemMessage.getDefaultInstance()) {
            customPushItemMessage_ =
              myudfs.Common.CustomPushItemMessage.newBuilder(customPushItemMessage_).mergeFrom(value).buildPartial();
          } else {
            customPushItemMessage_ = value;
          }
          onChanged();
        } else {
          customPushItemMessageBuilder_.mergeFrom(value);
        }
        bitField8_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public Builder clearCustomPushItemMessage() {
        if (customPushItemMessageBuilder_ == null) {
          customPushItemMessage_ = myudfs.Common.CustomPushItemMessage.getDefaultInstance();
          onChanged();
        } else {
          customPushItemMessageBuilder_.clear();
        }
        bitField8_ = (bitField8_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public myudfs.Common.CustomPushItemMessage.Builder getCustomPushItemMessageBuilder() {
        bitField8_ |= 0x00000010;
        onChanged();
        return getCustomPushItemMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      public myudfs.Common.CustomPushItemMessageOrBuilder getCustomPushItemMessageOrBuilder() {
        if (customPushItemMessageBuilder_ != null) {
          return customPushItemMessageBuilder_.getMessageOrBuilder();
        } else {
          return customPushItemMessage_;
        }
      }
      /**
       * <code>optional .CustomPushItemMessage customPushItemMessage = 315;</code>
       *
       * <pre>
       * 个性化推送
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.CustomPushItemMessage, myudfs.Common.CustomPushItemMessage.Builder, myudfs.Common.CustomPushItemMessageOrBuilder> 
          getCustomPushItemMessageFieldBuilder() {
        if (customPushItemMessageBuilder_ == null) {
          customPushItemMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.CustomPushItemMessage, myudfs.Common.CustomPushItemMessage.Builder, myudfs.Common.CustomPushItemMessageOrBuilder>(
                  customPushItemMessage_,
                  getParentForChildren(),
                  isClean());
          customPushItemMessage_ = null;
        }
        return customPushItemMessageBuilder_;
      }

      // optional int32 zhuanPanNums = 316;
      private int zhuanPanNums_ ;
      /**
       * <code>optional int32 zhuanPanNums = 316;</code>
       *
       * <pre>
       * 本次活动周期已经转的次数
       * </pre>
       */
      public boolean hasZhuanPanNums() {
        return ((bitField8_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 zhuanPanNums = 316;</code>
       *
       * <pre>
       * 本次活动周期已经转的次数
       * </pre>
       */
      public int getZhuanPanNums() {
        return zhuanPanNums_;
      }
      /**
       * <code>optional int32 zhuanPanNums = 316;</code>
       *
       * <pre>
       * 本次活动周期已经转的次数
       * </pre>
       */
      public Builder setZhuanPanNums(int value) {
        bitField8_ |= 0x00000020;
        zhuanPanNums_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhuanPanNums = 316;</code>
       *
       * <pre>
       * 本次活动周期已经转的次数
       * </pre>
       */
      public Builder clearZhuanPanNums() {
        bitField8_ = (bitField8_ & ~0x00000020);
        zhuanPanNums_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 zhuanPanOpenIds = 317;
      private java.util.List<java.lang.Integer> zhuanPanOpenIds_ = java.util.Collections.emptyList();
      private void ensureZhuanPanOpenIdsIsMutable() {
        if (!((bitField8_ & 0x00000040) == 0x00000040)) {
          zhuanPanOpenIds_ = new java.util.ArrayList<java.lang.Integer>(zhuanPanOpenIds_);
          bitField8_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 zhuanPanOpenIds = 317;</code>
       *
       * <pre>
       *已经开过的箱子
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getZhuanPanOpenIdsList() {
        return java.util.Collections.unmodifiableList(zhuanPanOpenIds_);
      }
      /**
       * <code>repeated int32 zhuanPanOpenIds = 317;</code>
       *
       * <pre>
       *已经开过的箱子
       * </pre>
       */
      public int getZhuanPanOpenIdsCount() {
        return zhuanPanOpenIds_.size();
      }
      /**
       * <code>repeated int32 zhuanPanOpenIds = 317;</code>
       *
       * <pre>
       *已经开过的箱子
       * </pre>
       */
      public int getZhuanPanOpenIds(int index) {
        return zhuanPanOpenIds_.get(index);
      }
      /**
       * <code>repeated int32 zhuanPanOpenIds = 317;</code>
       *
       * <pre>
       *已经开过的箱子
       * </pre>
       */
      public Builder setZhuanPanOpenIds(
          int index, int value) {
        ensureZhuanPanOpenIdsIsMutable();
        zhuanPanOpenIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhuanPanOpenIds = 317;</code>
       *
       * <pre>
       *已经开过的箱子
       * </pre>
       */
      public Builder addZhuanPanOpenIds(int value) {
        ensureZhuanPanOpenIdsIsMutable();
        zhuanPanOpenIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhuanPanOpenIds = 317;</code>
       *
       * <pre>
       *已经开过的箱子
       * </pre>
       */
      public Builder addAllZhuanPanOpenIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureZhuanPanOpenIdsIsMutable();
        super.addAll(values, zhuanPanOpenIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhuanPanOpenIds = 317;</code>
       *
       * <pre>
       *已经开过的箱子
       * </pre>
       */
      public Builder clearZhuanPanOpenIds() {
        zhuanPanOpenIds_ = java.util.Collections.emptyList();
        bitField8_ = (bitField8_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerItem)
    }

    static {
      defaultInstance = new PlayerItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerItem)
  }

  public interface DoubleRewardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 startDate = 1;
    /**
     * <code>optional uint64 startDate = 1;</code>
     */
    boolean hasStartDate();
    /**
     * <code>optional uint64 startDate = 1;</code>
     */
    long getStartDate();

    // optional uint64 endDate = 2;
    /**
     * <code>optional uint64 endDate = 2;</code>
     */
    boolean hasEndDate();
    /**
     * <code>optional uint64 endDate = 2;</code>
     */
    long getEndDate();

    // optional int32 rate = 3;
    /**
     * <code>optional int32 rate = 3;</code>
     */
    boolean hasRate();
    /**
     * <code>optional int32 rate = 3;</code>
     */
    int getRate();

    // repeated int32 type = 4;
    /**
     * <code>repeated int32 type = 4;</code>
     *
     * <pre>
     * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
     * </pre>
     */
    java.util.List<java.lang.Integer> getTypeList();
    /**
     * <code>repeated int32 type = 4;</code>
     *
     * <pre>
     * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
     * </pre>
     */
    int getTypeCount();
    /**
     * <code>repeated int32 type = 4;</code>
     *
     * <pre>
     * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
     * </pre>
     */
    int getType(int index);

    // optional string title = 5;
    /**
     * <code>optional string title = 5;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 5;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 5;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional string content = 6;
    /**
     * <code>optional string content = 6;</code>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 6;</code>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 6;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();
  }
  /**
   * Protobuf type {@code DoubleReward}
   */
  public static final class DoubleReward extends
      com.google.protobuf.GeneratedMessage
      implements DoubleRewardOrBuilder {
    // Use DoubleReward.newBuilder() to construct.
    private DoubleReward(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DoubleReward(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DoubleReward defaultInstance;
    public static DoubleReward getDefaultInstance() {
      return defaultInstance;
    }

    public DoubleReward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DoubleReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startDate_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endDate_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rate_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                type_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              type_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                type_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                type_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              title_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              content_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          type_ = java.util.Collections.unmodifiableList(type_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_DoubleReward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_DoubleReward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.DoubleReward.class, myudfs.Common.DoubleReward.Builder.class);
    }

    public static com.google.protobuf.Parser<DoubleReward> PARSER =
        new com.google.protobuf.AbstractParser<DoubleReward>() {
      public DoubleReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DoubleReward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DoubleReward> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 startDate = 1;
    public static final int STARTDATE_FIELD_NUMBER = 1;
    private long startDate_;
    /**
     * <code>optional uint64 startDate = 1;</code>
     */
    public boolean hasStartDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 startDate = 1;</code>
     */
    public long getStartDate() {
      return startDate_;
    }

    // optional uint64 endDate = 2;
    public static final int ENDDATE_FIELD_NUMBER = 2;
    private long endDate_;
    /**
     * <code>optional uint64 endDate = 2;</code>
     */
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 endDate = 2;</code>
     */
    public long getEndDate() {
      return endDate_;
    }

    // optional int32 rate = 3;
    public static final int RATE_FIELD_NUMBER = 3;
    private int rate_;
    /**
     * <code>optional int32 rate = 3;</code>
     */
    public boolean hasRate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 rate = 3;</code>
     */
    public int getRate() {
      return rate_;
    }

    // repeated int32 type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> type_;
    /**
     * <code>repeated int32 type = 4;</code>
     *
     * <pre>
     * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTypeList() {
      return type_;
    }
    /**
     * <code>repeated int32 type = 4;</code>
     *
     * <pre>
     * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
     * </pre>
     */
    public int getTypeCount() {
      return type_.size();
    }
    /**
     * <code>repeated int32 type = 4;</code>
     *
     * <pre>
     * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
     * </pre>
     */
    public int getType(int index) {
      return type_.get(index);
    }

    // optional string title = 5;
    public static final int TITLE_FIELD_NUMBER = 5;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 5;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string title = 5;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string content = 6;
    public static final int CONTENT_FIELD_NUMBER = 6;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 6;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string content = 6;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 6;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      startDate_ = 0L;
      endDate_ = 0L;
      rate_ = 0;
      type_ = java.util.Collections.emptyList();
      title_ = "";
      content_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, startDate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, endDate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rate_);
      }
      for (int i = 0; i < type_.size(); i++) {
        output.writeInt32(4, type_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getTitleBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getContentBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, startDate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, endDate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < type_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(type_.get(i));
        }
        size += dataSize;
        size += 1 * getTypeList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getTitleBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getContentBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.DoubleReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DoubleReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DoubleReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DoubleReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DoubleReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DoubleReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DoubleReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.DoubleReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DoubleReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DoubleReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.DoubleReward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DoubleReward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.DoubleRewardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_DoubleReward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_DoubleReward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.DoubleReward.class, myudfs.Common.DoubleReward.Builder.class);
      }

      // Construct using myudfs.Common.DoubleReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        rate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_DoubleReward_descriptor;
      }

      public myudfs.Common.DoubleReward getDefaultInstanceForType() {
        return myudfs.Common.DoubleReward.getDefaultInstance();
      }

      public myudfs.Common.DoubleReward build() {
        myudfs.Common.DoubleReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.DoubleReward buildPartial() {
        myudfs.Common.DoubleReward result = new myudfs.Common.DoubleReward(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startDate_ = startDate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endDate_ = endDate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rate_ = rate_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          type_ = java.util.Collections.unmodifiableList(type_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.DoubleReward) {
          return mergeFrom((myudfs.Common.DoubleReward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.DoubleReward other) {
        if (other == myudfs.Common.DoubleReward.getDefaultInstance()) return this;
        if (other.hasStartDate()) {
          setStartDate(other.getStartDate());
        }
        if (other.hasEndDate()) {
          setEndDate(other.getEndDate());
        }
        if (other.hasRate()) {
          setRate(other.getRate());
        }
        if (!other.type_.isEmpty()) {
          if (type_.isEmpty()) {
            type_ = other.type_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTypeIsMutable();
            type_.addAll(other.type_);
          }
          onChanged();
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000010;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasContent()) {
          bitField0_ |= 0x00000020;
          content_ = other.content_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.DoubleReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.DoubleReward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 startDate = 1;
      private long startDate_ ;
      /**
       * <code>optional uint64 startDate = 1;</code>
       */
      public boolean hasStartDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 startDate = 1;</code>
       */
      public long getStartDate() {
        return startDate_;
      }
      /**
       * <code>optional uint64 startDate = 1;</code>
       */
      public Builder setStartDate(long value) {
        bitField0_ |= 0x00000001;
        startDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 startDate = 1;</code>
       */
      public Builder clearStartDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startDate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 endDate = 2;
      private long endDate_ ;
      /**
       * <code>optional uint64 endDate = 2;</code>
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 endDate = 2;</code>
       */
      public long getEndDate() {
        return endDate_;
      }
      /**
       * <code>optional uint64 endDate = 2;</code>
       */
      public Builder setEndDate(long value) {
        bitField0_ |= 0x00000002;
        endDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 endDate = 2;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endDate_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rate = 3;
      private int rate_ ;
      /**
       * <code>optional int32 rate = 3;</code>
       */
      public boolean hasRate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 rate = 3;</code>
       */
      public int getRate() {
        return rate_;
      }
      /**
       * <code>optional int32 rate = 3;</code>
       */
      public Builder setRate(int value) {
        bitField0_ |= 0x00000004;
        rate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rate = 3;</code>
       */
      public Builder clearRate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rate_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 type = 4;
      private java.util.List<java.lang.Integer> type_ = java.util.Collections.emptyList();
      private void ensureTypeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          type_ = new java.util.ArrayList<java.lang.Integer>(type_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 type = 4;</code>
       *
       * <pre>
       * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTypeList() {
        return java.util.Collections.unmodifiableList(type_);
      }
      /**
       * <code>repeated int32 type = 4;</code>
       *
       * <pre>
       * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
       * </pre>
       */
      public int getTypeCount() {
        return type_.size();
      }
      /**
       * <code>repeated int32 type = 4;</code>
       *
       * <pre>
       * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
       * </pre>
       */
      public int getType(int index) {
        return type_.get(index);
      }
      /**
       * <code>repeated int32 type = 4;</code>
       *
       * <pre>
       * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
       * </pre>
       */
      public Builder setType(
          int index, int value) {
        ensureTypeIsMutable();
        type_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 4;</code>
       *
       * <pre>
       * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
       * </pre>
       */
      public Builder addType(int value) {
        ensureTypeIsMutable();
        type_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 4;</code>
       *
       * <pre>
       * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
       * </pre>
       */
      public Builder addAllType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTypeIsMutable();
        super.addAll(values, type_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 4;</code>
       *
       * <pre>
       * 1.副本闯关  2.资源副本 3.轮回塔命匣 4.神魔掉落 5.神魔出现几率 6.魔抽指定碎片掉落
       * </pre>
       */
      public Builder clearType() {
        type_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional string title = 5;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 5;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string title = 5;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 5;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 5;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 5;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        title_ = value;
        onChanged();
        return this;
      }

      // optional string content = 6;
      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 6;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string content = 6;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 6;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 6;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 6;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000020);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 6;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        content_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DoubleReward)
    }

    static {
      defaultInstance = new DoubleReward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DoubleReward)
  }

  public interface HongbaoActivityMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 startTime = 1;
    /**
     * <code>optional uint64 startTime = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional uint64 startTime = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    long getStartTime();

    // optional uint64 endTime = 2;
    /**
     * <code>optional uint64 endTime = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional uint64 endTime = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    long getEndTime();

    // optional string decription = 3;
    /**
     * <code>optional string decription = 3;</code>
     *
     * <pre>
     * 活动描述
     * </pre>
     */
    boolean hasDecription();
    /**
     * <code>optional string decription = 3;</code>
     *
     * <pre>
     * 活动描述
     * </pre>
     */
    java.lang.String getDecription();
    /**
     * <code>optional string decription = 3;</code>
     *
     * <pre>
     * 活动描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDecriptionBytes();

    // optional int32 ownMoney = 4;
    /**
     * <code>optional int32 ownMoney = 4;</code>
     *
     * <pre>
     * 角色已经抢到的钱(单位是分)
     * </pre>
     */
    boolean hasOwnMoney();
    /**
     * <code>optional int32 ownMoney = 4;</code>
     *
     * <pre>
     * 角色已经抢到的钱(单位是分)
     * </pre>
     */
    int getOwnMoney();
  }
  /**
   * Protobuf type {@code HongbaoActivityMessage}
   */
  public static final class HongbaoActivityMessage extends
      com.google.protobuf.GeneratedMessage
      implements HongbaoActivityMessageOrBuilder {
    // Use HongbaoActivityMessage.newBuilder() to construct.
    private HongbaoActivityMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HongbaoActivityMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HongbaoActivityMessage defaultInstance;
    public static HongbaoActivityMessage getDefaultInstance() {
      return defaultInstance;
    }

    public HongbaoActivityMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HongbaoActivityMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startTime_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readUInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              decription_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ownMoney_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_HongbaoActivityMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_HongbaoActivityMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.HongbaoActivityMessage.class, myudfs.Common.HongbaoActivityMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<HongbaoActivityMessage> PARSER =
        new com.google.protobuf.AbstractParser<HongbaoActivityMessage>() {
      public HongbaoActivityMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HongbaoActivityMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HongbaoActivityMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 startTime = 1;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private long startTime_;
    /**
     * <code>optional uint64 startTime = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 startTime = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // optional uint64 endTime = 2;
    public static final int ENDTIME_FIELD_NUMBER = 2;
    private long endTime_;
    /**
     * <code>optional uint64 endTime = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 endTime = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    // optional string decription = 3;
    public static final int DECRIPTION_FIELD_NUMBER = 3;
    private java.lang.Object decription_;
    /**
     * <code>optional string decription = 3;</code>
     *
     * <pre>
     * 活动描述
     * </pre>
     */
    public boolean hasDecription() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string decription = 3;</code>
     *
     * <pre>
     * 活动描述
     * </pre>
     */
    public java.lang.String getDecription() {
      java.lang.Object ref = decription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          decription_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string decription = 3;</code>
     *
     * <pre>
     * 活动描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDecriptionBytes() {
      java.lang.Object ref = decription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        decription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 ownMoney = 4;
    public static final int OWNMONEY_FIELD_NUMBER = 4;
    private int ownMoney_;
    /**
     * <code>optional int32 ownMoney = 4;</code>
     *
     * <pre>
     * 角色已经抢到的钱(单位是分)
     * </pre>
     */
    public boolean hasOwnMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 ownMoney = 4;</code>
     *
     * <pre>
     * 角色已经抢到的钱(单位是分)
     * </pre>
     */
    public int getOwnMoney() {
      return ownMoney_;
    }

    private void initFields() {
      startTime_ = 0L;
      endTime_ = 0L;
      decription_ = "";
      ownMoney_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, startTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDecriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, ownMoney_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, startTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDecriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, ownMoney_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.HongbaoActivityMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.HongbaoActivityMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.HongbaoActivityMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.HongbaoActivityMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.HongbaoActivityMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.HongbaoActivityMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.HongbaoActivityMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.HongbaoActivityMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.HongbaoActivityMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.HongbaoActivityMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.HongbaoActivityMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HongbaoActivityMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.HongbaoActivityMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_HongbaoActivityMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_HongbaoActivityMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.HongbaoActivityMessage.class, myudfs.Common.HongbaoActivityMessage.Builder.class);
      }

      // Construct using myudfs.Common.HongbaoActivityMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        decription_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ownMoney_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_HongbaoActivityMessage_descriptor;
      }

      public myudfs.Common.HongbaoActivityMessage getDefaultInstanceForType() {
        return myudfs.Common.HongbaoActivityMessage.getDefaultInstance();
      }

      public myudfs.Common.HongbaoActivityMessage build() {
        myudfs.Common.HongbaoActivityMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.HongbaoActivityMessage buildPartial() {
        myudfs.Common.HongbaoActivityMessage result = new myudfs.Common.HongbaoActivityMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.decription_ = decription_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ownMoney_ = ownMoney_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.HongbaoActivityMessage) {
          return mergeFrom((myudfs.Common.HongbaoActivityMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.HongbaoActivityMessage other) {
        if (other == myudfs.Common.HongbaoActivityMessage.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasDecription()) {
          bitField0_ |= 0x00000004;
          decription_ = other.decription_;
          onChanged();
        }
        if (other.hasOwnMoney()) {
          setOwnMoney(other.getOwnMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.HongbaoActivityMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.HongbaoActivityMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 startTime = 1;
      private long startTime_ ;
      /**
       * <code>optional uint64 startTime = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 startTime = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional uint64 startTime = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000001;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 startTime = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 endTime = 2;
      private long endTime_ ;
      /**
       * <code>optional uint64 endTime = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 endTime = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional uint64 endTime = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000002;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 endTime = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // optional string decription = 3;
      private java.lang.Object decription_ = "";
      /**
       * <code>optional string decription = 3;</code>
       *
       * <pre>
       * 活动描述
       * </pre>
       */
      public boolean hasDecription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string decription = 3;</code>
       *
       * <pre>
       * 活动描述
       * </pre>
       */
      public java.lang.String getDecription() {
        java.lang.Object ref = decription_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          decription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string decription = 3;</code>
       *
       * <pre>
       * 活动描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDecriptionBytes() {
        java.lang.Object ref = decription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          decription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string decription = 3;</code>
       *
       * <pre>
       * 活动描述
       * </pre>
       */
      public Builder setDecription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        decription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string decription = 3;</code>
       *
       * <pre>
       * 活动描述
       * </pre>
       */
      public Builder clearDecription() {
        bitField0_ = (bitField0_ & ~0x00000004);
        decription_ = getDefaultInstance().getDecription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string decription = 3;</code>
       *
       * <pre>
       * 活动描述
       * </pre>
       */
      public Builder setDecriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        decription_ = value;
        onChanged();
        return this;
      }

      // optional int32 ownMoney = 4;
      private int ownMoney_ ;
      /**
       * <code>optional int32 ownMoney = 4;</code>
       *
       * <pre>
       * 角色已经抢到的钱(单位是分)
       * </pre>
       */
      public boolean hasOwnMoney() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 ownMoney = 4;</code>
       *
       * <pre>
       * 角色已经抢到的钱(单位是分)
       * </pre>
       */
      public int getOwnMoney() {
        return ownMoney_;
      }
      /**
       * <code>optional int32 ownMoney = 4;</code>
       *
       * <pre>
       * 角色已经抢到的钱(单位是分)
       * </pre>
       */
      public Builder setOwnMoney(int value) {
        bitField0_ |= 0x00000008;
        ownMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ownMoney = 4;</code>
       *
       * <pre>
       * 角色已经抢到的钱(单位是分)
       * </pre>
       */
      public Builder clearOwnMoney() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ownMoney_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HongbaoActivityMessage)
    }

    static {
      defaultInstance = new HongbaoActivityMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HongbaoActivityMessage)
  }

  public interface ZhuanPanItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 lv = 1;
    /**
     * <code>optional int32 lv = 1;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 1;</code>
     */
    int getLv();

    // optional int32 vip = 2;
    /**
     * <code>optional int32 vip = 2;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 2;</code>
     */
    int getVip();

    // optional uint64 beginDate = 3;
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    boolean hasBeginDate();
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    long getBeginDate();

    // optional uint64 endDate = 4;
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    boolean hasEndDate();
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    long getEndDate();
  }
  /**
   * Protobuf type {@code ZhuanPanItem}
   */
  public static final class ZhuanPanItem extends
      com.google.protobuf.GeneratedMessage
      implements ZhuanPanItemOrBuilder {
    // Use ZhuanPanItem.newBuilder() to construct.
    private ZhuanPanItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZhuanPanItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZhuanPanItem defaultInstance;
    public static ZhuanPanItem getDefaultInstance() {
      return defaultInstance;
    }

    public ZhuanPanItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZhuanPanItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lv_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vip_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              beginDate_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endDate_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ZhuanPanItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ZhuanPanItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ZhuanPanItem.class, myudfs.Common.ZhuanPanItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ZhuanPanItem> PARSER =
        new com.google.protobuf.AbstractParser<ZhuanPanItem>() {
      public ZhuanPanItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZhuanPanItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZhuanPanItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 lv = 1;
    public static final int LV_FIELD_NUMBER = 1;
    private int lv_;
    /**
     * <code>optional int32 lv = 1;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 lv = 1;</code>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 vip = 2;
    public static final int VIP_FIELD_NUMBER = 2;
    private int vip_;
    /**
     * <code>optional int32 vip = 2;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 vip = 2;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional uint64 beginDate = 3;
    public static final int BEGINDATE_FIELD_NUMBER = 3;
    private long beginDate_;
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    public boolean hasBeginDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    public long getBeginDate() {
      return beginDate_;
    }

    // optional uint64 endDate = 4;
    public static final int ENDDATE_FIELD_NUMBER = 4;
    private long endDate_;
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    public long getEndDate() {
      return endDate_;
    }

    private void initFields() {
      lv_ = 0;
      vip_ = 0;
      beginDate_ = 0L;
      endDate_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, lv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, vip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, beginDate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, endDate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, vip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, beginDate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, endDate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ZhuanPanItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ZhuanPanItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ZhuanPanItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ZhuanPanItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ZhuanPanItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ZhuanPanItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ZhuanPanItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ZhuanPanItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ZhuanPanItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ZhuanPanItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ZhuanPanItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZhuanPanItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ZhuanPanItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ZhuanPanItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ZhuanPanItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ZhuanPanItem.class, myudfs.Common.ZhuanPanItem.Builder.class);
      }

      // Construct using myudfs.Common.ZhuanPanItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        beginDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        endDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ZhuanPanItem_descriptor;
      }

      public myudfs.Common.ZhuanPanItem getDefaultInstanceForType() {
        return myudfs.Common.ZhuanPanItem.getDefaultInstance();
      }

      public myudfs.Common.ZhuanPanItem build() {
        myudfs.Common.ZhuanPanItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ZhuanPanItem buildPartial() {
        myudfs.Common.ZhuanPanItem result = new myudfs.Common.ZhuanPanItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.beginDate_ = beginDate_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endDate_ = endDate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ZhuanPanItem) {
          return mergeFrom((myudfs.Common.ZhuanPanItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ZhuanPanItem other) {
        if (other == myudfs.Common.ZhuanPanItem.getDefaultInstance()) return this;
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasBeginDate()) {
          setBeginDate(other.getBeginDate());
        }
        if (other.hasEndDate()) {
          setEndDate(other.getEndDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ZhuanPanItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ZhuanPanItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 lv = 1;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 1;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 lv = 1;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 1;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000001;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 1;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vip = 2;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 2;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 vip = 2;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 2;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000002;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 2;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 beginDate = 3;
      private long beginDate_ ;
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public boolean hasBeginDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public long getBeginDate() {
        return beginDate_;
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public Builder setBeginDate(long value) {
        bitField0_ |= 0x00000004;
        beginDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public Builder clearBeginDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        beginDate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 endDate = 4;
      private long endDate_ ;
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public long getEndDate() {
        return endDate_;
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public Builder setEndDate(long value) {
        bitField0_ |= 0x00000008;
        endDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endDate_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZhuanPanItem)
    }

    static {
      defaultInstance = new ZhuanPanItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZhuanPanItem)
  }

  public interface PayRewardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string id = 1;
    /**
     * <code>optional string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional int32 gold = 2;
    /**
     * <code>optional int32 gold = 2;</code>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 2;</code>
     */
    int getGold();

    // optional int32 times = 3;
    /**
     * <code>optional int32 times = 3;</code>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 3;</code>
     */
    int getTimes();

    // optional int32 gain = 4;
    /**
     * <code>optional int32 gain = 4;</code>
     */
    boolean hasGain();
    /**
     * <code>optional int32 gain = 4;</code>
     */
    int getGain();
  }
  /**
   * Protobuf type {@code PayReward}
   */
  public static final class PayReward extends
      com.google.protobuf.GeneratedMessage
      implements PayRewardOrBuilder {
    // Use PayReward.newBuilder() to construct.
    private PayReward(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PayReward(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PayReward defaultInstance;
    public static PayReward getDefaultInstance() {
      return defaultInstance;
    }

    public PayReward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PayReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gold_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              times_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gain_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PayReward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PayReward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PayReward.class, myudfs.Common.PayReward.Builder.class);
    }

    public static com.google.protobuf.Parser<PayReward> PARSER =
        new com.google.protobuf.AbstractParser<PayReward>() {
      public PayReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PayReward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PayReward> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 gold = 2;
    public static final int GOLD_FIELD_NUMBER = 2;
    private int gold_;
    /**
     * <code>optional int32 gold = 2;</code>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gold = 2;</code>
     */
    public int getGold() {
      return gold_;
    }

    // optional int32 times = 3;
    public static final int TIMES_FIELD_NUMBER = 3;
    private int times_;
    /**
     * <code>optional int32 times = 3;</code>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 times = 3;</code>
     */
    public int getTimes() {
      return times_;
    }

    // optional int32 gain = 4;
    public static final int GAIN_FIELD_NUMBER = 4;
    private int gain_;
    /**
     * <code>optional int32 gain = 4;</code>
     */
    public boolean hasGain() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 gain = 4;</code>
     */
    public int getGain() {
      return gain_;
    }

    private void initFields() {
      id_ = "";
      gold_ = 0;
      times_ = 0;
      gain_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PayReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PayReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PayReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PayReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PayReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PayReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PayReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PayReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PayReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PayReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PayReward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PayReward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PayRewardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PayReward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PayReward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PayReward.class, myudfs.Common.PayReward.Builder.class);
      }

      // Construct using myudfs.Common.PayReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PayReward_descriptor;
      }

      public myudfs.Common.PayReward getDefaultInstanceForType() {
        return myudfs.Common.PayReward.getDefaultInstance();
      }

      public myudfs.Common.PayReward build() {
        myudfs.Common.PayReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PayReward buildPartial() {
        myudfs.Common.PayReward result = new myudfs.Common.PayReward(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gain_ = gain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PayReward) {
          return mergeFrom((myudfs.Common.PayReward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PayReward other) {
        if (other == myudfs.Common.PayReward.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (other.hasGain()) {
          setGain(other.getGain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PayReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PayReward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // optional int32 gold = 2;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000002;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 3;
      private int times_ ;
      /**
       * <code>optional int32 times = 3;</code>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 times = 3;</code>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 3;</code>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000004;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 3;</code>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        times_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gain = 4;
      private int gain_ ;
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public boolean hasGain() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public int getGain() {
        return gain_;
      }
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public Builder setGain(int value) {
        bitField0_ |= 0x00000008;
        gain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public Builder clearGain() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gain_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PayReward)
    }

    static {
      defaultInstance = new PayReward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PayReward)
  }

  public interface YunyingActivityOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string id = 1;
    /**
     * <code>optional string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional int32 gold = 2;
    /**
     * <code>optional int32 gold = 2;</code>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 2;</code>
     */
    int getGold();

    // optional int32 times = 3;
    /**
     * <code>optional int32 times = 3;</code>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 3;</code>
     */
    int getTimes();

    // optional int32 gain = 4;
    /**
     * <code>optional int32 gain = 4;</code>
     */
    boolean hasGain();
    /**
     * <code>optional int32 gain = 4;</code>
     */
    int getGain();

    // optional int32 type = 5;
    /**
     * <code>optional int32 type = 5;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 5;</code>
     */
    int getType();
  }
  /**
   * Protobuf type {@code YunyingActivity}
   */
  public static final class YunyingActivity extends
      com.google.protobuf.GeneratedMessage
      implements YunyingActivityOrBuilder {
    // Use YunyingActivity.newBuilder() to construct.
    private YunyingActivity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private YunyingActivity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final YunyingActivity defaultInstance;
    public static YunyingActivity getDefaultInstance() {
      return defaultInstance;
    }

    public YunyingActivity getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private YunyingActivity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gold_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              times_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gain_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_YunyingActivity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_YunyingActivity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.YunyingActivity.class, myudfs.Common.YunyingActivity.Builder.class);
    }

    public static com.google.protobuf.Parser<YunyingActivity> PARSER =
        new com.google.protobuf.AbstractParser<YunyingActivity>() {
      public YunyingActivity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new YunyingActivity(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<YunyingActivity> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 gold = 2;
    public static final int GOLD_FIELD_NUMBER = 2;
    private int gold_;
    /**
     * <code>optional int32 gold = 2;</code>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gold = 2;</code>
     */
    public int getGold() {
      return gold_;
    }

    // optional int32 times = 3;
    public static final int TIMES_FIELD_NUMBER = 3;
    private int times_;
    /**
     * <code>optional int32 times = 3;</code>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 times = 3;</code>
     */
    public int getTimes() {
      return times_;
    }

    // optional int32 gain = 4;
    public static final int GAIN_FIELD_NUMBER = 4;
    private int gain_;
    /**
     * <code>optional int32 gain = 4;</code>
     */
    public boolean hasGain() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 gain = 4;</code>
     */
    public int getGain() {
      return gain_;
    }

    // optional int32 type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional int32 type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 type = 5;</code>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      id_ = "";
      gold_ = 0;
      times_ = 0;
      gain_ = 0;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gain_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gain_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.YunyingActivity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.YunyingActivity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.YunyingActivity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.YunyingActivity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.YunyingActivity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.YunyingActivity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.YunyingActivity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.YunyingActivity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.YunyingActivity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.YunyingActivity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.YunyingActivity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code YunyingActivity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.YunyingActivityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_YunyingActivity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_YunyingActivity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.YunyingActivity.class, myudfs.Common.YunyingActivity.Builder.class);
      }

      // Construct using myudfs.Common.YunyingActivity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_YunyingActivity_descriptor;
      }

      public myudfs.Common.YunyingActivity getDefaultInstanceForType() {
        return myudfs.Common.YunyingActivity.getDefaultInstance();
      }

      public myudfs.Common.YunyingActivity build() {
        myudfs.Common.YunyingActivity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.YunyingActivity buildPartial() {
        myudfs.Common.YunyingActivity result = new myudfs.Common.YunyingActivity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gain_ = gain_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.YunyingActivity) {
          return mergeFrom((myudfs.Common.YunyingActivity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.YunyingActivity other) {
        if (other == myudfs.Common.YunyingActivity.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (other.hasGain()) {
          setGain(other.getGain());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.YunyingActivity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.YunyingActivity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // optional int32 gold = 2;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000002;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 2;</code>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 3;
      private int times_ ;
      /**
       * <code>optional int32 times = 3;</code>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 times = 3;</code>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 3;</code>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000004;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 3;</code>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        times_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gain = 4;
      private int gain_ ;
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public boolean hasGain() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public int getGain() {
        return gain_;
      }
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public Builder setGain(int value) {
        bitField0_ |= 0x00000008;
        gain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gain = 4;</code>
       */
      public Builder clearGain() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gain_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 5;
      private int type_ ;
      /**
       * <code>optional int32 type = 5;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 type = 5;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 5;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 5;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:YunyingActivity)
    }

    static {
      defaultInstance = new YunyingActivity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:YunyingActivity)
  }

  public interface TrainItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 trainType = 1;
    /**
     * <code>optional int32 trainType = 1;</code>
     */
    boolean hasTrainType();
    /**
     * <code>optional int32 trainType = 1;</code>
     */
    int getTrainType();

    // optional int32 quality = 2;
    /**
     * <code>optional int32 quality = 2;</code>
     */
    boolean hasQuality();
    /**
     * <code>optional int32 quality = 2;</code>
     */
    int getQuality();

    // optional bool used = 3;
    /**
     * <code>optional bool used = 3;</code>
     */
    boolean hasUsed();
    /**
     * <code>optional bool used = 3;</code>
     */
    boolean getUsed();
  }
  /**
   * Protobuf type {@code TrainItem}
   *
   * <pre>
   * 角色:卡牌修炼属性
   * </pre>
   */
  public static final class TrainItem extends
      com.google.protobuf.GeneratedMessage
      implements TrainItemOrBuilder {
    // Use TrainItem.newBuilder() to construct.
    private TrainItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TrainItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TrainItem defaultInstance;
    public static TrainItem getDefaultInstance() {
      return defaultInstance;
    }

    public TrainItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TrainItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trainType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quality_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              used_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_TrainItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_TrainItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.TrainItem.class, myudfs.Common.TrainItem.Builder.class);
    }

    public static com.google.protobuf.Parser<TrainItem> PARSER =
        new com.google.protobuf.AbstractParser<TrainItem>() {
      public TrainItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrainItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TrainItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 trainType = 1;
    public static final int TRAINTYPE_FIELD_NUMBER = 1;
    private int trainType_;
    /**
     * <code>optional int32 trainType = 1;</code>
     */
    public boolean hasTrainType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 trainType = 1;</code>
     */
    public int getTrainType() {
      return trainType_;
    }

    // optional int32 quality = 2;
    public static final int QUALITY_FIELD_NUMBER = 2;
    private int quality_;
    /**
     * <code>optional int32 quality = 2;</code>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 quality = 2;</code>
     */
    public int getQuality() {
      return quality_;
    }

    // optional bool used = 3;
    public static final int USED_FIELD_NUMBER = 3;
    private boolean used_;
    /**
     * <code>optional bool used = 3;</code>
     */
    public boolean hasUsed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool used = 3;</code>
     */
    public boolean getUsed() {
      return used_;
    }

    private void initFields() {
      trainType_ = 0;
      quality_ = 0;
      used_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, trainType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, used_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, trainType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, used_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.TrainItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.TrainItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.TrainItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.TrainItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.TrainItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.TrainItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.TrainItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.TrainItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.TrainItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.TrainItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.TrainItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainItem}
     *
     * <pre>
     * 角色:卡牌修炼属性
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.TrainItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_TrainItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_TrainItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.TrainItem.class, myudfs.Common.TrainItem.Builder.class);
      }

      // Construct using myudfs.Common.TrainItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        trainType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        used_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_TrainItem_descriptor;
      }

      public myudfs.Common.TrainItem getDefaultInstanceForType() {
        return myudfs.Common.TrainItem.getDefaultInstance();
      }

      public myudfs.Common.TrainItem build() {
        myudfs.Common.TrainItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.TrainItem buildPartial() {
        myudfs.Common.TrainItem result = new myudfs.Common.TrainItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trainType_ = trainType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.used_ = used_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.TrainItem) {
          return mergeFrom((myudfs.Common.TrainItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.TrainItem other) {
        if (other == myudfs.Common.TrainItem.getDefaultInstance()) return this;
        if (other.hasTrainType()) {
          setTrainType(other.getTrainType());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasUsed()) {
          setUsed(other.getUsed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.TrainItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.TrainItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 trainType = 1;
      private int trainType_ ;
      /**
       * <code>optional int32 trainType = 1;</code>
       */
      public boolean hasTrainType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 trainType = 1;</code>
       */
      public int getTrainType() {
        return trainType_;
      }
      /**
       * <code>optional int32 trainType = 1;</code>
       */
      public Builder setTrainType(int value) {
        bitField0_ |= 0x00000001;
        trainType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trainType = 1;</code>
       */
      public Builder clearTrainType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trainType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quality = 2;
      private int quality_ ;
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000002;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        onChanged();
        return this;
      }

      // optional bool used = 3;
      private boolean used_ ;
      /**
       * <code>optional bool used = 3;</code>
       */
      public boolean hasUsed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool used = 3;</code>
       */
      public boolean getUsed() {
        return used_;
      }
      /**
       * <code>optional bool used = 3;</code>
       */
      public Builder setUsed(boolean value) {
        bitField0_ |= 0x00000004;
        used_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool used = 3;</code>
       */
      public Builder clearUsed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        used_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TrainItem)
    }

    static {
      defaultInstance = new TrainItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TrainItem)
  }

  public interface HuFaItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int64 cards = 1;
    /**
     * <code>repeated int64 cards = 1;</code>
     *
     * <pre>
     *护法卡
     * </pre>
     */
    java.util.List<java.lang.Long> getCardsList();
    /**
     * <code>repeated int64 cards = 1;</code>
     *
     * <pre>
     *护法卡
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int64 cards = 1;</code>
     *
     * <pre>
     *护法卡
     * </pre>
     */
    long getCards(int index);

    // optional int32 quality1 = 2;
    /**
     * <code>optional int32 quality1 = 2;</code>
     *
     * <pre>
     * 青龙品质
     * </pre>
     */
    boolean hasQuality1();
    /**
     * <code>optional int32 quality1 = 2;</code>
     *
     * <pre>
     * 青龙品质
     * </pre>
     */
    int getQuality1();

    // optional int32 quality2 = 3;
    /**
     * <code>optional int32 quality2 = 3;</code>
     *
     * <pre>
     * 白虎品质
     * </pre>
     */
    boolean hasQuality2();
    /**
     * <code>optional int32 quality2 = 3;</code>
     *
     * <pre>
     * 白虎品质
     * </pre>
     */
    int getQuality2();

    // optional int32 quality3 = 4;
    /**
     * <code>optional int32 quality3 = 4;</code>
     *
     * <pre>
     * 玄武品质
     * </pre>
     */
    boolean hasQuality3();
    /**
     * <code>optional int32 quality3 = 4;</code>
     *
     * <pre>
     * 玄武品质
     * </pre>
     */
    int getQuality3();

    // optional int32 quality4 = 5;
    /**
     * <code>optional int32 quality4 = 5;</code>
     *
     * <pre>
     * 朱雀品质
     * </pre>
     */
    boolean hasQuality4();
    /**
     * <code>optional int32 quality4 = 5;</code>
     *
     * <pre>
     * 朱雀品质
     * </pre>
     */
    int getQuality4();

    // optional int32 addon1 = 6;
    /**
     * <code>optional int32 addon1 = 6;</code>
     *
     * <pre>
     * 青龙加成
     * </pre>
     */
    boolean hasAddon1();
    /**
     * <code>optional int32 addon1 = 6;</code>
     *
     * <pre>
     * 青龙加成
     * </pre>
     */
    int getAddon1();

    // optional int32 addon2 = 7;
    /**
     * <code>optional int32 addon2 = 7;</code>
     *
     * <pre>
     * 白虎加成
     * </pre>
     */
    boolean hasAddon2();
    /**
     * <code>optional int32 addon2 = 7;</code>
     *
     * <pre>
     * 白虎加成
     * </pre>
     */
    int getAddon2();

    // optional int32 addon3 = 8;
    /**
     * <code>optional int32 addon3 = 8;</code>
     *
     * <pre>
     * 玄武加成
     * </pre>
     */
    boolean hasAddon3();
    /**
     * <code>optional int32 addon3 = 8;</code>
     *
     * <pre>
     * 玄武加成
     * </pre>
     */
    int getAddon3();

    // optional int32 addon4 = 9;
    /**
     * <code>optional int32 addon4 = 9;</code>
     *
     * <pre>
     * 朱雀加成
     * </pre>
     */
    boolean hasAddon4();
    /**
     * <code>optional int32 addon4 = 9;</code>
     *
     * <pre>
     * 朱雀加成
     * </pre>
     */
    int getAddon4();
  }
  /**
   * Protobuf type {@code HuFaItem}
   *
   * <pre>
   * 角色:护法
   * </pre>
   */
  public static final class HuFaItem extends
      com.google.protobuf.GeneratedMessage
      implements HuFaItemOrBuilder {
    // Use HuFaItem.newBuilder() to construct.
    private HuFaItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HuFaItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HuFaItem defaultInstance;
    public static HuFaItem getDefaultInstance() {
      return defaultInstance;
    }

    public HuFaItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HuFaItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cards_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              quality1_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              quality2_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              quality3_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              quality4_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              addon1_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              addon2_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              addon3_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              addon4_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_HuFaItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_HuFaItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.HuFaItem.class, myudfs.Common.HuFaItem.Builder.class);
    }

    public static com.google.protobuf.Parser<HuFaItem> PARSER =
        new com.google.protobuf.AbstractParser<HuFaItem>() {
      public HuFaItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HuFaItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HuFaItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int64 cards = 1;
    public static final int CARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> cards_;
    /**
     * <code>repeated int64 cards = 1;</code>
     *
     * <pre>
     *护法卡
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int64 cards = 1;</code>
     *
     * <pre>
     *护法卡
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int64 cards = 1;</code>
     *
     * <pre>
     *护法卡
     * </pre>
     */
    public long getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 quality1 = 2;
    public static final int QUALITY1_FIELD_NUMBER = 2;
    private int quality1_;
    /**
     * <code>optional int32 quality1 = 2;</code>
     *
     * <pre>
     * 青龙品质
     * </pre>
     */
    public boolean hasQuality1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 quality1 = 2;</code>
     *
     * <pre>
     * 青龙品质
     * </pre>
     */
    public int getQuality1() {
      return quality1_;
    }

    // optional int32 quality2 = 3;
    public static final int QUALITY2_FIELD_NUMBER = 3;
    private int quality2_;
    /**
     * <code>optional int32 quality2 = 3;</code>
     *
     * <pre>
     * 白虎品质
     * </pre>
     */
    public boolean hasQuality2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 quality2 = 3;</code>
     *
     * <pre>
     * 白虎品质
     * </pre>
     */
    public int getQuality2() {
      return quality2_;
    }

    // optional int32 quality3 = 4;
    public static final int QUALITY3_FIELD_NUMBER = 4;
    private int quality3_;
    /**
     * <code>optional int32 quality3 = 4;</code>
     *
     * <pre>
     * 玄武品质
     * </pre>
     */
    public boolean hasQuality3() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 quality3 = 4;</code>
     *
     * <pre>
     * 玄武品质
     * </pre>
     */
    public int getQuality3() {
      return quality3_;
    }

    // optional int32 quality4 = 5;
    public static final int QUALITY4_FIELD_NUMBER = 5;
    private int quality4_;
    /**
     * <code>optional int32 quality4 = 5;</code>
     *
     * <pre>
     * 朱雀品质
     * </pre>
     */
    public boolean hasQuality4() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 quality4 = 5;</code>
     *
     * <pre>
     * 朱雀品质
     * </pre>
     */
    public int getQuality4() {
      return quality4_;
    }

    // optional int32 addon1 = 6;
    public static final int ADDON1_FIELD_NUMBER = 6;
    private int addon1_;
    /**
     * <code>optional int32 addon1 = 6;</code>
     *
     * <pre>
     * 青龙加成
     * </pre>
     */
    public boolean hasAddon1() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 addon1 = 6;</code>
     *
     * <pre>
     * 青龙加成
     * </pre>
     */
    public int getAddon1() {
      return addon1_;
    }

    // optional int32 addon2 = 7;
    public static final int ADDON2_FIELD_NUMBER = 7;
    private int addon2_;
    /**
     * <code>optional int32 addon2 = 7;</code>
     *
     * <pre>
     * 白虎加成
     * </pre>
     */
    public boolean hasAddon2() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 addon2 = 7;</code>
     *
     * <pre>
     * 白虎加成
     * </pre>
     */
    public int getAddon2() {
      return addon2_;
    }

    // optional int32 addon3 = 8;
    public static final int ADDON3_FIELD_NUMBER = 8;
    private int addon3_;
    /**
     * <code>optional int32 addon3 = 8;</code>
     *
     * <pre>
     * 玄武加成
     * </pre>
     */
    public boolean hasAddon3() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 addon3 = 8;</code>
     *
     * <pre>
     * 玄武加成
     * </pre>
     */
    public int getAddon3() {
      return addon3_;
    }

    // optional int32 addon4 = 9;
    public static final int ADDON4_FIELD_NUMBER = 9;
    private int addon4_;
    /**
     * <code>optional int32 addon4 = 9;</code>
     *
     * <pre>
     * 朱雀加成
     * </pre>
     */
    public boolean hasAddon4() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 addon4 = 9;</code>
     *
     * <pre>
     * 朱雀加成
     * </pre>
     */
    public int getAddon4() {
      return addon4_;
    }

    private void initFields() {
      cards_ = java.util.Collections.emptyList();
      quality1_ = 0;
      quality2_ = 0;
      quality3_ = 0;
      quality4_ = 0;
      addon1_ = 0;
      addon2_ = 0;
      addon3_ = 0;
      addon4_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt64(1, cards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, quality1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, quality2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, quality3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, quality4_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, addon1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, addon2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, addon3_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, addon4_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quality1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, quality2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, quality3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, quality4_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, addon1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, addon2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, addon3_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, addon4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.HuFaItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.HuFaItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.HuFaItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.HuFaItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.HuFaItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.HuFaItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.HuFaItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.HuFaItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.HuFaItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.HuFaItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.HuFaItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HuFaItem}
     *
     * <pre>
     * 角色:护法
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.HuFaItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_HuFaItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_HuFaItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.HuFaItem.class, myudfs.Common.HuFaItem.Builder.class);
      }

      // Construct using myudfs.Common.HuFaItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        quality1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        quality2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        quality3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        quality4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        addon1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        addon2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        addon3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        addon4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_HuFaItem_descriptor;
      }

      public myudfs.Common.HuFaItem getDefaultInstanceForType() {
        return myudfs.Common.HuFaItem.getDefaultInstance();
      }

      public myudfs.Common.HuFaItem build() {
        myudfs.Common.HuFaItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.HuFaItem buildPartial() {
        myudfs.Common.HuFaItem result = new myudfs.Common.HuFaItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.quality1_ = quality1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quality2_ = quality2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quality3_ = quality3_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.quality4_ = quality4_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.addon1_ = addon1_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.addon2_ = addon2_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.addon3_ = addon3_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.addon4_ = addon4_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.HuFaItem) {
          return mergeFrom((myudfs.Common.HuFaItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.HuFaItem other) {
        if (other == myudfs.Common.HuFaItem.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasQuality1()) {
          setQuality1(other.getQuality1());
        }
        if (other.hasQuality2()) {
          setQuality2(other.getQuality2());
        }
        if (other.hasQuality3()) {
          setQuality3(other.getQuality3());
        }
        if (other.hasQuality4()) {
          setQuality4(other.getQuality4());
        }
        if (other.hasAddon1()) {
          setAddon1(other.getAddon1());
        }
        if (other.hasAddon2()) {
          setAddon2(other.getAddon2());
        }
        if (other.hasAddon3()) {
          setAddon3(other.getAddon3());
        }
        if (other.hasAddon4()) {
          setAddon4(other.getAddon4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.HuFaItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.HuFaItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int64 cards = 1;
      private java.util.List<java.lang.Long> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = new java.util.ArrayList<java.lang.Long>(cards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 cards = 1;</code>
       *
       * <pre>
       *护法卡
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int64 cards = 1;</code>
       *
       * <pre>
       *护法卡
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int64 cards = 1;</code>
       *
       * <pre>
       *护法卡
       * </pre>
       */
      public long getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int64 cards = 1;</code>
       *
       * <pre>
       *护法卡
       * </pre>
       */
      public Builder setCards(
          int index, long value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cards = 1;</code>
       *
       * <pre>
       *护法卡
       * </pre>
       */
      public Builder addCards(long value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cards = 1;</code>
       *
       * <pre>
       *护法卡
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cards = 1;</code>
       *
       * <pre>
       *护法卡
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 quality1 = 2;
      private int quality1_ ;
      /**
       * <code>optional int32 quality1 = 2;</code>
       *
       * <pre>
       * 青龙品质
       * </pre>
       */
      public boolean hasQuality1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 quality1 = 2;</code>
       *
       * <pre>
       * 青龙品质
       * </pre>
       */
      public int getQuality1() {
        return quality1_;
      }
      /**
       * <code>optional int32 quality1 = 2;</code>
       *
       * <pre>
       * 青龙品质
       * </pre>
       */
      public Builder setQuality1(int value) {
        bitField0_ |= 0x00000002;
        quality1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quality1 = 2;</code>
       *
       * <pre>
       * 青龙品质
       * </pre>
       */
      public Builder clearQuality1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quality2 = 3;
      private int quality2_ ;
      /**
       * <code>optional int32 quality2 = 3;</code>
       *
       * <pre>
       * 白虎品质
       * </pre>
       */
      public boolean hasQuality2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 quality2 = 3;</code>
       *
       * <pre>
       * 白虎品质
       * </pre>
       */
      public int getQuality2() {
        return quality2_;
      }
      /**
       * <code>optional int32 quality2 = 3;</code>
       *
       * <pre>
       * 白虎品质
       * </pre>
       */
      public Builder setQuality2(int value) {
        bitField0_ |= 0x00000004;
        quality2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quality2 = 3;</code>
       *
       * <pre>
       * 白虎品质
       * </pre>
       */
      public Builder clearQuality2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quality2_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quality3 = 4;
      private int quality3_ ;
      /**
       * <code>optional int32 quality3 = 4;</code>
       *
       * <pre>
       * 玄武品质
       * </pre>
       */
      public boolean hasQuality3() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 quality3 = 4;</code>
       *
       * <pre>
       * 玄武品质
       * </pre>
       */
      public int getQuality3() {
        return quality3_;
      }
      /**
       * <code>optional int32 quality3 = 4;</code>
       *
       * <pre>
       * 玄武品质
       * </pre>
       */
      public Builder setQuality3(int value) {
        bitField0_ |= 0x00000008;
        quality3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quality3 = 4;</code>
       *
       * <pre>
       * 玄武品质
       * </pre>
       */
      public Builder clearQuality3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        quality3_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quality4 = 5;
      private int quality4_ ;
      /**
       * <code>optional int32 quality4 = 5;</code>
       *
       * <pre>
       * 朱雀品质
       * </pre>
       */
      public boolean hasQuality4() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 quality4 = 5;</code>
       *
       * <pre>
       * 朱雀品质
       * </pre>
       */
      public int getQuality4() {
        return quality4_;
      }
      /**
       * <code>optional int32 quality4 = 5;</code>
       *
       * <pre>
       * 朱雀品质
       * </pre>
       */
      public Builder setQuality4(int value) {
        bitField0_ |= 0x00000010;
        quality4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quality4 = 5;</code>
       *
       * <pre>
       * 朱雀品质
       * </pre>
       */
      public Builder clearQuality4() {
        bitField0_ = (bitField0_ & ~0x00000010);
        quality4_ = 0;
        onChanged();
        return this;
      }

      // optional int32 addon1 = 6;
      private int addon1_ ;
      /**
       * <code>optional int32 addon1 = 6;</code>
       *
       * <pre>
       * 青龙加成
       * </pre>
       */
      public boolean hasAddon1() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 addon1 = 6;</code>
       *
       * <pre>
       * 青龙加成
       * </pre>
       */
      public int getAddon1() {
        return addon1_;
      }
      /**
       * <code>optional int32 addon1 = 6;</code>
       *
       * <pre>
       * 青龙加成
       * </pre>
       */
      public Builder setAddon1(int value) {
        bitField0_ |= 0x00000020;
        addon1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 addon1 = 6;</code>
       *
       * <pre>
       * 青龙加成
       * </pre>
       */
      public Builder clearAddon1() {
        bitField0_ = (bitField0_ & ~0x00000020);
        addon1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 addon2 = 7;
      private int addon2_ ;
      /**
       * <code>optional int32 addon2 = 7;</code>
       *
       * <pre>
       * 白虎加成
       * </pre>
       */
      public boolean hasAddon2() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 addon2 = 7;</code>
       *
       * <pre>
       * 白虎加成
       * </pre>
       */
      public int getAddon2() {
        return addon2_;
      }
      /**
       * <code>optional int32 addon2 = 7;</code>
       *
       * <pre>
       * 白虎加成
       * </pre>
       */
      public Builder setAddon2(int value) {
        bitField0_ |= 0x00000040;
        addon2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 addon2 = 7;</code>
       *
       * <pre>
       * 白虎加成
       * </pre>
       */
      public Builder clearAddon2() {
        bitField0_ = (bitField0_ & ~0x00000040);
        addon2_ = 0;
        onChanged();
        return this;
      }

      // optional int32 addon3 = 8;
      private int addon3_ ;
      /**
       * <code>optional int32 addon3 = 8;</code>
       *
       * <pre>
       * 玄武加成
       * </pre>
       */
      public boolean hasAddon3() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 addon3 = 8;</code>
       *
       * <pre>
       * 玄武加成
       * </pre>
       */
      public int getAddon3() {
        return addon3_;
      }
      /**
       * <code>optional int32 addon3 = 8;</code>
       *
       * <pre>
       * 玄武加成
       * </pre>
       */
      public Builder setAddon3(int value) {
        bitField0_ |= 0x00000080;
        addon3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 addon3 = 8;</code>
       *
       * <pre>
       * 玄武加成
       * </pre>
       */
      public Builder clearAddon3() {
        bitField0_ = (bitField0_ & ~0x00000080);
        addon3_ = 0;
        onChanged();
        return this;
      }

      // optional int32 addon4 = 9;
      private int addon4_ ;
      /**
       * <code>optional int32 addon4 = 9;</code>
       *
       * <pre>
       * 朱雀加成
       * </pre>
       */
      public boolean hasAddon4() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 addon4 = 9;</code>
       *
       * <pre>
       * 朱雀加成
       * </pre>
       */
      public int getAddon4() {
        return addon4_;
      }
      /**
       * <code>optional int32 addon4 = 9;</code>
       *
       * <pre>
       * 朱雀加成
       * </pre>
       */
      public Builder setAddon4(int value) {
        bitField0_ |= 0x00000100;
        addon4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 addon4 = 9;</code>
       *
       * <pre>
       * 朱雀加成
       * </pre>
       */
      public Builder clearAddon4() {
        bitField0_ = (bitField0_ & ~0x00000100);
        addon4_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HuFaItem)
    }

    static {
      defaultInstance = new HuFaItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HuFaItem)
  }

  public interface ItemsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    // optional int32 itemid = 2;
    /**
     * <code>optional int32 itemid = 2;</code>
     */
    boolean hasItemid();
    /**
     * <code>optional int32 itemid = 2;</code>
     */
    int getItemid();

    // optional int32 lv = 3;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 3;</code>
     */
    int getLv();

    // optional int32 num = 5;
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     *	optional string lvcost = 4;
     * </pre>
     */
    boolean hasNum();
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     *	optional string lvcost = 4;
     * </pre>
     */
    int getNum();

    // optional int32 advancedTimes = 6;
    /**
     * <code>optional int32 advancedTimes = 6;</code>
     *
     * <pre>
     *锻造次数
     * </pre>
     */
    boolean hasAdvancedTimes();
    /**
     * <code>optional int32 advancedTimes = 6;</code>
     *
     * <pre>
     *锻造次数
     * </pre>
     */
    int getAdvancedTimes();

    // repeated .MapItem fenglingProperty = 7;
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getFenglingPropertyList();
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    myudfs.Common.MapItem getFenglingProperty(int index);
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    int getFenglingPropertyCount();
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getFenglingPropertyOrBuilderList();
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getFenglingPropertyOrBuilder(
        int index);

    // optional int32 usedNum = 8;
    /**
     * <code>optional int32 usedNum = 8;</code>
     *
     * <pre>
     *封灵属性的个数
     * </pre>
     */
    boolean hasUsedNum();
    /**
     * <code>optional int32 usedNum = 8;</code>
     *
     * <pre>
     *封灵属性的个数
     * </pre>
     */
    int getUsedNum();

    // optional int32 isLocked = 9;
    /**
     * <code>optional int32 isLocked = 9;</code>
     *
     * <pre>
     *是否被配置 1:锁定
     * </pre>
     */
    boolean hasIsLocked();
    /**
     * <code>optional int32 isLocked = 9;</code>
     *
     * <pre>
     *是否被配置 1:锁定
     * </pre>
     */
    int getIsLocked();

    // repeated .MapItem flLockedProperty = 10;
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem> 
        getFlLockedPropertyList();
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    myudfs.Common.MapItem getFlLockedProperty(int index);
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    int getFlLockedPropertyCount();
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getFlLockedPropertyOrBuilderList();
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    myudfs.Common.MapItemOrBuilder getFlLockedPropertyOrBuilder(
        int index);

    // optional uint64 ownTimes = 11;
    /**
     * <code>optional uint64 ownTimes = 11;</code>
     *
     * <pre>
     *拥有时间
     * </pre>
     */
    boolean hasOwnTimes();
    /**
     * <code>optional uint64 ownTimes = 11;</code>
     *
     * <pre>
     *拥有时间
     * </pre>
     */
    long getOwnTimes();

    // optional int32 type = 12;
    /**
     * <code>optional int32 type = 12;</code>
     *
     * <pre>
     * 1:删除
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 12;</code>
     *
     * <pre>
     * 1:删除
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code Items}
   *
   * <pre>
   * 角色:物品
   * </pre>
   */
  public static final class Items extends
      com.google.protobuf.GeneratedMessage
      implements ItemsOrBuilder {
    // Use Items.newBuilder() to construct.
    private Items(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Items(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Items defaultInstance;
    public static Items getDefaultInstance() {
      return defaultInstance;
    }

    public Items getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Items(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lv_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              num_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              advancedTimes_ = input.readInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                fenglingProperty_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x00000020;
              }
              fenglingProperty_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              usedNum_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              isLocked_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                flLockedProperty_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x00000100;
              }
              flLockedProperty_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              ownTimes_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          fenglingProperty_ = java.util.Collections.unmodifiableList(fenglingProperty_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          flLockedProperty_ = java.util.Collections.unmodifiableList(flLockedProperty_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_Items_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_Items_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.Items.class, myudfs.Common.Items.Builder.class);
    }

    public static com.google.protobuf.Parser<Items> PARSER =
        new com.google.protobuf.AbstractParser<Items>() {
      public Items parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Items(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Items> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    // optional int32 itemid = 2;
    public static final int ITEMID_FIELD_NUMBER = 2;
    private int itemid_;
    /**
     * <code>optional int32 itemid = 2;</code>
     */
    public boolean hasItemid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 itemid = 2;</code>
     */
    public int getItemid() {
      return itemid_;
    }

    // optional int32 lv = 3;
    public static final int LV_FIELD_NUMBER = 3;
    private int lv_;
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 lv = 3;</code>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 num = 5;
    public static final int NUM_FIELD_NUMBER = 5;
    private int num_;
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     *	optional string lvcost = 4;
     * </pre>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     *	optional string lvcost = 4;
     * </pre>
     */
    public int getNum() {
      return num_;
    }

    // optional int32 advancedTimes = 6;
    public static final int ADVANCEDTIMES_FIELD_NUMBER = 6;
    private int advancedTimes_;
    /**
     * <code>optional int32 advancedTimes = 6;</code>
     *
     * <pre>
     *锻造次数
     * </pre>
     */
    public boolean hasAdvancedTimes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 advancedTimes = 6;</code>
     *
     * <pre>
     *锻造次数
     * </pre>
     */
    public int getAdvancedTimes() {
      return advancedTimes_;
    }

    // repeated .MapItem fenglingProperty = 7;
    public static final int FENGLINGPROPERTY_FIELD_NUMBER = 7;
    private java.util.List<myudfs.Common.MapItem> fenglingProperty_;
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getFenglingPropertyList() {
      return fenglingProperty_;
    }
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getFenglingPropertyOrBuilderList() {
      return fenglingProperty_;
    }
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    public int getFenglingPropertyCount() {
      return fenglingProperty_.size();
    }
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    public myudfs.Common.MapItem getFenglingProperty(int index) {
      return fenglingProperty_.get(index);
    }
    /**
     * <code>repeated .MapItem fenglingProperty = 7;</code>
     *
     * <pre>
     *封灵属性
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getFenglingPropertyOrBuilder(
        int index) {
      return fenglingProperty_.get(index);
    }

    // optional int32 usedNum = 8;
    public static final int USEDNUM_FIELD_NUMBER = 8;
    private int usedNum_;
    /**
     * <code>optional int32 usedNum = 8;</code>
     *
     * <pre>
     *封灵属性的个数
     * </pre>
     */
    public boolean hasUsedNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 usedNum = 8;</code>
     *
     * <pre>
     *封灵属性的个数
     * </pre>
     */
    public int getUsedNum() {
      return usedNum_;
    }

    // optional int32 isLocked = 9;
    public static final int ISLOCKED_FIELD_NUMBER = 9;
    private int isLocked_;
    /**
     * <code>optional int32 isLocked = 9;</code>
     *
     * <pre>
     *是否被配置 1:锁定
     * </pre>
     */
    public boolean hasIsLocked() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 isLocked = 9;</code>
     *
     * <pre>
     *是否被配置 1:锁定
     * </pre>
     */
    public int getIsLocked() {
      return isLocked_;
    }

    // repeated .MapItem flLockedProperty = 10;
    public static final int FLLOCKEDPROPERTY_FIELD_NUMBER = 10;
    private java.util.List<myudfs.Common.MapItem> flLockedProperty_;
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem> getFlLockedPropertyList() {
      return flLockedProperty_;
    }
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getFlLockedPropertyOrBuilderList() {
      return flLockedProperty_;
    }
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    public int getFlLockedPropertyCount() {
      return flLockedProperty_.size();
    }
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    public myudfs.Common.MapItem getFlLockedProperty(int index) {
      return flLockedProperty_.get(index);
    }
    /**
     * <code>repeated .MapItem flLockedProperty = 10;</code>
     *
     * <pre>
     *封灵锁定属性
     * </pre>
     */
    public myudfs.Common.MapItemOrBuilder getFlLockedPropertyOrBuilder(
        int index) {
      return flLockedProperty_.get(index);
    }

    // optional uint64 ownTimes = 11;
    public static final int OWNTIMES_FIELD_NUMBER = 11;
    private long ownTimes_;
    /**
     * <code>optional uint64 ownTimes = 11;</code>
     *
     * <pre>
     *拥有时间
     * </pre>
     */
    public boolean hasOwnTimes() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 ownTimes = 11;</code>
     *
     * <pre>
     *拥有时间
     * </pre>
     */
    public long getOwnTimes() {
      return ownTimes_;
    }

    // optional int32 type = 12;
    public static final int TYPE_FIELD_NUMBER = 12;
    private int type_;
    /**
     * <code>optional int32 type = 12;</code>
     *
     * <pre>
     * 1:删除
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 type = 12;</code>
     *
     * <pre>
     * 1:删除
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      id_ = 0L;
      itemid_ = 0;
      lv_ = 0;
      num_ = 0;
      advancedTimes_ = 0;
      fenglingProperty_ = java.util.Collections.emptyList();
      usedNum_ = 0;
      isLocked_ = 0;
      flLockedProperty_ = java.util.Collections.emptyList();
      ownTimes_ = 0L;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, num_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, advancedTimes_);
      }
      for (int i = 0; i < fenglingProperty_.size(); i++) {
        output.writeMessage(7, fenglingProperty_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, usedNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, isLocked_);
      }
      for (int i = 0; i < flLockedProperty_.size(); i++) {
        output.writeMessage(10, flLockedProperty_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(11, ownTimes_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lv_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, num_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, advancedTimes_);
      }
      for (int i = 0; i < fenglingProperty_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fenglingProperty_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, usedNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, isLocked_);
      }
      for (int i = 0; i < flLockedProperty_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, flLockedProperty_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, ownTimes_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.Items parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.Items parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.Items parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.Items parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.Items parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.Items parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.Items parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.Items parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.Items parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.Items parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.Items prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Items}
     *
     * <pre>
     * 角色:物品
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ItemsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_Items_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_Items_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.Items.class, myudfs.Common.Items.Builder.class);
      }

      // Construct using myudfs.Common.Items.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFenglingPropertyFieldBuilder();
          getFlLockedPropertyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        advancedTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (fenglingPropertyBuilder_ == null) {
          fenglingProperty_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          fenglingPropertyBuilder_.clear();
        }
        usedNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        isLocked_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (flLockedPropertyBuilder_ == null) {
          flLockedProperty_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          flLockedPropertyBuilder_.clear();
        }
        ownTimes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_Items_descriptor;
      }

      public myudfs.Common.Items getDefaultInstanceForType() {
        return myudfs.Common.Items.getDefaultInstance();
      }

      public myudfs.Common.Items build() {
        myudfs.Common.Items result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.Items buildPartial() {
        myudfs.Common.Items result = new myudfs.Common.Items(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemid_ = itemid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.num_ = num_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.advancedTimes_ = advancedTimes_;
        if (fenglingPropertyBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            fenglingProperty_ = java.util.Collections.unmodifiableList(fenglingProperty_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.fenglingProperty_ = fenglingProperty_;
        } else {
          result.fenglingProperty_ = fenglingPropertyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.usedNum_ = usedNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isLocked_ = isLocked_;
        if (flLockedPropertyBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            flLockedProperty_ = java.util.Collections.unmodifiableList(flLockedProperty_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.flLockedProperty_ = flLockedProperty_;
        } else {
          result.flLockedProperty_ = flLockedPropertyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ownTimes_ = ownTimes_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.Items) {
          return mergeFrom((myudfs.Common.Items)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.Items other) {
        if (other == myudfs.Common.Items.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasItemid()) {
          setItemid(other.getItemid());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        if (other.hasAdvancedTimes()) {
          setAdvancedTimes(other.getAdvancedTimes());
        }
        if (fenglingPropertyBuilder_ == null) {
          if (!other.fenglingProperty_.isEmpty()) {
            if (fenglingProperty_.isEmpty()) {
              fenglingProperty_ = other.fenglingProperty_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureFenglingPropertyIsMutable();
              fenglingProperty_.addAll(other.fenglingProperty_);
            }
            onChanged();
          }
        } else {
          if (!other.fenglingProperty_.isEmpty()) {
            if (fenglingPropertyBuilder_.isEmpty()) {
              fenglingPropertyBuilder_.dispose();
              fenglingPropertyBuilder_ = null;
              fenglingProperty_ = other.fenglingProperty_;
              bitField0_ = (bitField0_ & ~0x00000020);
              fenglingPropertyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFenglingPropertyFieldBuilder() : null;
            } else {
              fenglingPropertyBuilder_.addAllMessages(other.fenglingProperty_);
            }
          }
        }
        if (other.hasUsedNum()) {
          setUsedNum(other.getUsedNum());
        }
        if (other.hasIsLocked()) {
          setIsLocked(other.getIsLocked());
        }
        if (flLockedPropertyBuilder_ == null) {
          if (!other.flLockedProperty_.isEmpty()) {
            if (flLockedProperty_.isEmpty()) {
              flLockedProperty_ = other.flLockedProperty_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureFlLockedPropertyIsMutable();
              flLockedProperty_.addAll(other.flLockedProperty_);
            }
            onChanged();
          }
        } else {
          if (!other.flLockedProperty_.isEmpty()) {
            if (flLockedPropertyBuilder_.isEmpty()) {
              flLockedPropertyBuilder_.dispose();
              flLockedPropertyBuilder_ = null;
              flLockedProperty_ = other.flLockedProperty_;
              bitField0_ = (bitField0_ & ~0x00000100);
              flLockedPropertyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFlLockedPropertyFieldBuilder() : null;
            } else {
              flLockedPropertyBuilder_.addAllMessages(other.flLockedProperty_);
            }
          }
        }
        if (other.hasOwnTimes()) {
          setOwnTimes(other.getOwnTimes());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.Items parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.Items) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 itemid = 2;
      private int itemid_ ;
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public boolean hasItemid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public int getItemid() {
        return itemid_;
      }
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public Builder setItemid(int value) {
        bitField0_ |= 0x00000002;
        itemid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public Builder clearItemid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lv = 3;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000004;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 3;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 num = 5;
      private int num_ ;
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       *	optional string lvcost = 4;
       * </pre>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       *	optional string lvcost = 4;
       * </pre>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       *	optional string lvcost = 4;
       * </pre>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000008;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       *	optional string lvcost = 4;
       * </pre>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        num_ = 0;
        onChanged();
        return this;
      }

      // optional int32 advancedTimes = 6;
      private int advancedTimes_ ;
      /**
       * <code>optional int32 advancedTimes = 6;</code>
       *
       * <pre>
       *锻造次数
       * </pre>
       */
      public boolean hasAdvancedTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 advancedTimes = 6;</code>
       *
       * <pre>
       *锻造次数
       * </pre>
       */
      public int getAdvancedTimes() {
        return advancedTimes_;
      }
      /**
       * <code>optional int32 advancedTimes = 6;</code>
       *
       * <pre>
       *锻造次数
       * </pre>
       */
      public Builder setAdvancedTimes(int value) {
        bitField0_ |= 0x00000010;
        advancedTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 advancedTimes = 6;</code>
       *
       * <pre>
       *锻造次数
       * </pre>
       */
      public Builder clearAdvancedTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        advancedTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated .MapItem fenglingProperty = 7;
      private java.util.List<myudfs.Common.MapItem> fenglingProperty_ =
        java.util.Collections.emptyList();
      private void ensureFenglingPropertyIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          fenglingProperty_ = new java.util.ArrayList<myudfs.Common.MapItem>(fenglingProperty_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> fenglingPropertyBuilder_;

      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getFenglingPropertyList() {
        if (fenglingPropertyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fenglingProperty_);
        } else {
          return fenglingPropertyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public int getFenglingPropertyCount() {
        if (fenglingPropertyBuilder_ == null) {
          return fenglingProperty_.size();
        } else {
          return fenglingPropertyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public myudfs.Common.MapItem getFenglingProperty(int index) {
        if (fenglingPropertyBuilder_ == null) {
          return fenglingProperty_.get(index);
        } else {
          return fenglingPropertyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder setFenglingProperty(
          int index, myudfs.Common.MapItem value) {
        if (fenglingPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFenglingPropertyIsMutable();
          fenglingProperty_.set(index, value);
          onChanged();
        } else {
          fenglingPropertyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder setFenglingProperty(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (fenglingPropertyBuilder_ == null) {
          ensureFenglingPropertyIsMutable();
          fenglingProperty_.set(index, builderForValue.build());
          onChanged();
        } else {
          fenglingPropertyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder addFenglingProperty(myudfs.Common.MapItem value) {
        if (fenglingPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFenglingPropertyIsMutable();
          fenglingProperty_.add(value);
          onChanged();
        } else {
          fenglingPropertyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder addFenglingProperty(
          int index, myudfs.Common.MapItem value) {
        if (fenglingPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFenglingPropertyIsMutable();
          fenglingProperty_.add(index, value);
          onChanged();
        } else {
          fenglingPropertyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder addFenglingProperty(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (fenglingPropertyBuilder_ == null) {
          ensureFenglingPropertyIsMutable();
          fenglingProperty_.add(builderForValue.build());
          onChanged();
        } else {
          fenglingPropertyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder addFenglingProperty(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (fenglingPropertyBuilder_ == null) {
          ensureFenglingPropertyIsMutable();
          fenglingProperty_.add(index, builderForValue.build());
          onChanged();
        } else {
          fenglingPropertyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder addAllFenglingProperty(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (fenglingPropertyBuilder_ == null) {
          ensureFenglingPropertyIsMutable();
          super.addAll(values, fenglingProperty_);
          onChanged();
        } else {
          fenglingPropertyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder clearFenglingProperty() {
        if (fenglingPropertyBuilder_ == null) {
          fenglingProperty_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          fenglingPropertyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public Builder removeFenglingProperty(int index) {
        if (fenglingPropertyBuilder_ == null) {
          ensureFenglingPropertyIsMutable();
          fenglingProperty_.remove(index);
          onChanged();
        } else {
          fenglingPropertyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getFenglingPropertyBuilder(
          int index) {
        return getFenglingPropertyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getFenglingPropertyOrBuilder(
          int index) {
        if (fenglingPropertyBuilder_ == null) {
          return fenglingProperty_.get(index);  } else {
          return fenglingPropertyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getFenglingPropertyOrBuilderList() {
        if (fenglingPropertyBuilder_ != null) {
          return fenglingPropertyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fenglingProperty_);
        }
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addFenglingPropertyBuilder() {
        return getFenglingPropertyFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addFenglingPropertyBuilder(
          int index) {
        return getFenglingPropertyFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem fenglingProperty = 7;</code>
       *
       * <pre>
       *封灵属性
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getFenglingPropertyBuilderList() {
        return getFenglingPropertyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getFenglingPropertyFieldBuilder() {
        if (fenglingPropertyBuilder_ == null) {
          fenglingPropertyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  fenglingProperty_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          fenglingProperty_ = null;
        }
        return fenglingPropertyBuilder_;
      }

      // optional int32 usedNum = 8;
      private int usedNum_ ;
      /**
       * <code>optional int32 usedNum = 8;</code>
       *
       * <pre>
       *封灵属性的个数
       * </pre>
       */
      public boolean hasUsedNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 usedNum = 8;</code>
       *
       * <pre>
       *封灵属性的个数
       * </pre>
       */
      public int getUsedNum() {
        return usedNum_;
      }
      /**
       * <code>optional int32 usedNum = 8;</code>
       *
       * <pre>
       *封灵属性的个数
       * </pre>
       */
      public Builder setUsedNum(int value) {
        bitField0_ |= 0x00000040;
        usedNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 usedNum = 8;</code>
       *
       * <pre>
       *封灵属性的个数
       * </pre>
       */
      public Builder clearUsedNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        usedNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isLocked = 9;
      private int isLocked_ ;
      /**
       * <code>optional int32 isLocked = 9;</code>
       *
       * <pre>
       *是否被配置 1:锁定
       * </pre>
       */
      public boolean hasIsLocked() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 isLocked = 9;</code>
       *
       * <pre>
       *是否被配置 1:锁定
       * </pre>
       */
      public int getIsLocked() {
        return isLocked_;
      }
      /**
       * <code>optional int32 isLocked = 9;</code>
       *
       * <pre>
       *是否被配置 1:锁定
       * </pre>
       */
      public Builder setIsLocked(int value) {
        bitField0_ |= 0x00000080;
        isLocked_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isLocked = 9;</code>
       *
       * <pre>
       *是否被配置 1:锁定
       * </pre>
       */
      public Builder clearIsLocked() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isLocked_ = 0;
        onChanged();
        return this;
      }

      // repeated .MapItem flLockedProperty = 10;
      private java.util.List<myudfs.Common.MapItem> flLockedProperty_ =
        java.util.Collections.emptyList();
      private void ensureFlLockedPropertyIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          flLockedProperty_ = new java.util.ArrayList<myudfs.Common.MapItem>(flLockedProperty_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> flLockedPropertyBuilder_;

      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem> getFlLockedPropertyList() {
        if (flLockedPropertyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(flLockedProperty_);
        } else {
          return flLockedPropertyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public int getFlLockedPropertyCount() {
        if (flLockedPropertyBuilder_ == null) {
          return flLockedProperty_.size();
        } else {
          return flLockedPropertyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public myudfs.Common.MapItem getFlLockedProperty(int index) {
        if (flLockedPropertyBuilder_ == null) {
          return flLockedProperty_.get(index);
        } else {
          return flLockedPropertyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder setFlLockedProperty(
          int index, myudfs.Common.MapItem value) {
        if (flLockedPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlLockedPropertyIsMutable();
          flLockedProperty_.set(index, value);
          onChanged();
        } else {
          flLockedPropertyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder setFlLockedProperty(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (flLockedPropertyBuilder_ == null) {
          ensureFlLockedPropertyIsMutable();
          flLockedProperty_.set(index, builderForValue.build());
          onChanged();
        } else {
          flLockedPropertyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder addFlLockedProperty(myudfs.Common.MapItem value) {
        if (flLockedPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlLockedPropertyIsMutable();
          flLockedProperty_.add(value);
          onChanged();
        } else {
          flLockedPropertyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder addFlLockedProperty(
          int index, myudfs.Common.MapItem value) {
        if (flLockedPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlLockedPropertyIsMutable();
          flLockedProperty_.add(index, value);
          onChanged();
        } else {
          flLockedPropertyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder addFlLockedProperty(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (flLockedPropertyBuilder_ == null) {
          ensureFlLockedPropertyIsMutable();
          flLockedProperty_.add(builderForValue.build());
          onChanged();
        } else {
          flLockedPropertyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder addFlLockedProperty(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (flLockedPropertyBuilder_ == null) {
          ensureFlLockedPropertyIsMutable();
          flLockedProperty_.add(index, builderForValue.build());
          onChanged();
        } else {
          flLockedPropertyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder addAllFlLockedProperty(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (flLockedPropertyBuilder_ == null) {
          ensureFlLockedPropertyIsMutable();
          super.addAll(values, flLockedProperty_);
          onChanged();
        } else {
          flLockedPropertyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder clearFlLockedProperty() {
        if (flLockedPropertyBuilder_ == null) {
          flLockedProperty_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          flLockedPropertyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public Builder removeFlLockedProperty(int index) {
        if (flLockedPropertyBuilder_ == null) {
          ensureFlLockedPropertyIsMutable();
          flLockedProperty_.remove(index);
          onChanged();
        } else {
          flLockedPropertyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public myudfs.Common.MapItem.Builder getFlLockedPropertyBuilder(
          int index) {
        return getFlLockedPropertyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public myudfs.Common.MapItemOrBuilder getFlLockedPropertyOrBuilder(
          int index) {
        if (flLockedPropertyBuilder_ == null) {
          return flLockedProperty_.get(index);  } else {
          return flLockedPropertyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getFlLockedPropertyOrBuilderList() {
        if (flLockedPropertyBuilder_ != null) {
          return flLockedPropertyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(flLockedProperty_);
        }
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addFlLockedPropertyBuilder() {
        return getFlLockedPropertyFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public myudfs.Common.MapItem.Builder addFlLockedPropertyBuilder(
          int index) {
        return getFlLockedPropertyFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem flLockedProperty = 10;</code>
       *
       * <pre>
       *封灵锁定属性
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getFlLockedPropertyBuilderList() {
        return getFlLockedPropertyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getFlLockedPropertyFieldBuilder() {
        if (flLockedPropertyBuilder_ == null) {
          flLockedPropertyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  flLockedProperty_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          flLockedProperty_ = null;
        }
        return flLockedPropertyBuilder_;
      }

      // optional uint64 ownTimes = 11;
      private long ownTimes_ ;
      /**
       * <code>optional uint64 ownTimes = 11;</code>
       *
       * <pre>
       *拥有时间
       * </pre>
       */
      public boolean hasOwnTimes() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 ownTimes = 11;</code>
       *
       * <pre>
       *拥有时间
       * </pre>
       */
      public long getOwnTimes() {
        return ownTimes_;
      }
      /**
       * <code>optional uint64 ownTimes = 11;</code>
       *
       * <pre>
       *拥有时间
       * </pre>
       */
      public Builder setOwnTimes(long value) {
        bitField0_ |= 0x00000200;
        ownTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ownTimes = 11;</code>
       *
       * <pre>
       *拥有时间
       * </pre>
       */
      public Builder clearOwnTimes() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ownTimes_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 type = 12;
      private int type_ ;
      /**
       * <code>optional int32 type = 12;</code>
       *
       * <pre>
       * 1:删除
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 type = 12;</code>
       *
       * <pre>
       * 1:删除
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 12;</code>
       *
       * <pre>
       * 1:删除
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000400;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 12;</code>
       *
       * <pre>
       * 1:删除
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000400);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Items)
    }

    static {
      defaultInstance = new Items(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Items)
  }

  public interface QuestItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    // optional int32 star = 2;
    /**
     * <code>optional int32 star = 2;</code>
     *
     * <pre>
     *星级
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>optional int32 star = 2;</code>
     *
     * <pre>
     *星级
     * </pre>
     */
    int getStar();

    // repeated int32 starId = 3;
    /**
     * <code>repeated int32 starId = 3;</code>
     *
     * <pre>
     *评星事件id
     * </pre>
     */
    java.util.List<java.lang.Integer> getStarIdList();
    /**
     * <code>repeated int32 starId = 3;</code>
     *
     * <pre>
     *评星事件id
     * </pre>
     */
    int getStarIdCount();
    /**
     * <code>repeated int32 starId = 3;</code>
     *
     * <pre>
     *评星事件id
     * </pre>
     */
    int getStarId(int index);
  }
  /**
   * Protobuf type {@code QuestItem}
   */
  public static final class QuestItem extends
      com.google.protobuf.GeneratedMessage
      implements QuestItemOrBuilder {
    // Use QuestItem.newBuilder() to construct.
    private QuestItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QuestItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QuestItem defaultInstance;
    public static QuestItem getDefaultInstance() {
      return defaultInstance;
    }

    public QuestItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QuestItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              star_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                starId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              starId_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                starId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                starId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          starId_ = java.util.Collections.unmodifiableList(starId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_QuestItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_QuestItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.QuestItem.class, myudfs.Common.QuestItem.Builder.class);
    }

    public static com.google.protobuf.Parser<QuestItem> PARSER =
        new com.google.protobuf.AbstractParser<QuestItem>() {
      public QuestItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuestItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QuestItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // optional int32 star = 2;
    public static final int STAR_FIELD_NUMBER = 2;
    private int star_;
    /**
     * <code>optional int32 star = 2;</code>
     *
     * <pre>
     *星级
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 star = 2;</code>
     *
     * <pre>
     *星级
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    // repeated int32 starId = 3;
    public static final int STARID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> starId_;
    /**
     * <code>repeated int32 starId = 3;</code>
     *
     * <pre>
     *评星事件id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStarIdList() {
      return starId_;
    }
    /**
     * <code>repeated int32 starId = 3;</code>
     *
     * <pre>
     *评星事件id
     * </pre>
     */
    public int getStarIdCount() {
      return starId_.size();
    }
    /**
     * <code>repeated int32 starId = 3;</code>
     *
     * <pre>
     *评星事件id
     * </pre>
     */
    public int getStarId(int index) {
      return starId_.get(index);
    }

    private void initFields() {
      id_ = 0;
      star_ = 0;
      starId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, star_);
      }
      for (int i = 0; i < starId_.size(); i++) {
        output.writeInt32(3, starId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, star_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < starId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(starId_.get(i));
        }
        size += dataSize;
        size += 1 * getStarIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.QuestItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.QuestItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.QuestItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.QuestItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.QuestItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.QuestItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.QuestItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.QuestItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.QuestItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.QuestItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.QuestItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code QuestItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.QuestItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_QuestItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_QuestItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.QuestItem.class, myudfs.Common.QuestItem.Builder.class);
      }

      // Construct using myudfs.Common.QuestItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        starId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_QuestItem_descriptor;
      }

      public myudfs.Common.QuestItem getDefaultInstanceForType() {
        return myudfs.Common.QuestItem.getDefaultInstance();
      }

      public myudfs.Common.QuestItem build() {
        myudfs.Common.QuestItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.QuestItem buildPartial() {
        myudfs.Common.QuestItem result = new myudfs.Common.QuestItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.star_ = star_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          starId_ = java.util.Collections.unmodifiableList(starId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.starId_ = starId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.QuestItem) {
          return mergeFrom((myudfs.Common.QuestItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.QuestItem other) {
        if (other == myudfs.Common.QuestItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        if (!other.starId_.isEmpty()) {
          if (starId_.isEmpty()) {
            starId_ = other.starId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStarIdIsMutable();
            starId_.addAll(other.starId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.QuestItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.QuestItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 star = 2;
      private int star_ ;
      /**
       * <code>optional int32 star = 2;</code>
       *
       * <pre>
       *星级
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 star = 2;</code>
       *
       * <pre>
       *星级
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>optional int32 star = 2;</code>
       *
       * <pre>
       *星级
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000002;
        star_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 star = 2;</code>
       *
       * <pre>
       *星级
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000002);
        star_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 starId = 3;
      private java.util.List<java.lang.Integer> starId_ = java.util.Collections.emptyList();
      private void ensureStarIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          starId_ = new java.util.ArrayList<java.lang.Integer>(starId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 starId = 3;</code>
       *
       * <pre>
       *评星事件id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStarIdList() {
        return java.util.Collections.unmodifiableList(starId_);
      }
      /**
       * <code>repeated int32 starId = 3;</code>
       *
       * <pre>
       *评星事件id
       * </pre>
       */
      public int getStarIdCount() {
        return starId_.size();
      }
      /**
       * <code>repeated int32 starId = 3;</code>
       *
       * <pre>
       *评星事件id
       * </pre>
       */
      public int getStarId(int index) {
        return starId_.get(index);
      }
      /**
       * <code>repeated int32 starId = 3;</code>
       *
       * <pre>
       *评星事件id
       * </pre>
       */
      public Builder setStarId(
          int index, int value) {
        ensureStarIdIsMutable();
        starId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 starId = 3;</code>
       *
       * <pre>
       *评星事件id
       * </pre>
       */
      public Builder addStarId(int value) {
        ensureStarIdIsMutable();
        starId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 starId = 3;</code>
       *
       * <pre>
       *评星事件id
       * </pre>
       */
      public Builder addAllStarId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStarIdIsMutable();
        super.addAll(values, starId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 starId = 3;</code>
       *
       * <pre>
       *评星事件id
       * </pre>
       */
      public Builder clearStarId() {
        starId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:QuestItem)
    }

    static {
      defaultInstance = new QuestItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:QuestItem)
  }

  public interface EquipmentItemsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 equipmentPosition = 1;
    /**
     * <code>optional int32 equipmentPosition = 1;</code>
     */
    boolean hasEquipmentPosition();
    /**
     * <code>optional int32 equipmentPosition = 1;</code>
     */
    int getEquipmentPosition();

    // optional int64 equipmentId = 2;
    /**
     * <code>optional int64 equipmentId = 2;</code>
     */
    boolean hasEquipmentId();
    /**
     * <code>optional int64 equipmentId = 2;</code>
     */
    long getEquipmentId();
  }
  /**
   * Protobuf type {@code EquipmentItems}
   */
  public static final class EquipmentItems extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentItemsOrBuilder {
    // Use EquipmentItems.newBuilder() to construct.
    private EquipmentItems(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipmentItems(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipmentItems defaultInstance;
    public static EquipmentItems getDefaultInstance() {
      return defaultInstance;
    }

    public EquipmentItems getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipmentItems(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              equipmentPosition_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              equipmentId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_EquipmentItems_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_EquipmentItems_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.EquipmentItems.class, myudfs.Common.EquipmentItems.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipmentItems> PARSER =
        new com.google.protobuf.AbstractParser<EquipmentItems>() {
      public EquipmentItems parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipmentItems(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipmentItems> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 equipmentPosition = 1;
    public static final int EQUIPMENTPOSITION_FIELD_NUMBER = 1;
    private int equipmentPosition_;
    /**
     * <code>optional int32 equipmentPosition = 1;</code>
     */
    public boolean hasEquipmentPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 equipmentPosition = 1;</code>
     */
    public int getEquipmentPosition() {
      return equipmentPosition_;
    }

    // optional int64 equipmentId = 2;
    public static final int EQUIPMENTID_FIELD_NUMBER = 2;
    private long equipmentId_;
    /**
     * <code>optional int64 equipmentId = 2;</code>
     */
    public boolean hasEquipmentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 equipmentId = 2;</code>
     */
    public long getEquipmentId() {
      return equipmentId_;
    }

    private void initFields() {
      equipmentPosition_ = 0;
      equipmentId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, equipmentPosition_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, equipmentId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, equipmentPosition_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, equipmentId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.EquipmentItems parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.EquipmentItems parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.EquipmentItems parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.EquipmentItems parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.EquipmentItems parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.EquipmentItems parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.EquipmentItems parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.EquipmentItems parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.EquipmentItems parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.EquipmentItems parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.EquipmentItems prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EquipmentItems}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.EquipmentItemsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_EquipmentItems_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_EquipmentItems_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.EquipmentItems.class, myudfs.Common.EquipmentItems.Builder.class);
      }

      // Construct using myudfs.Common.EquipmentItems.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        equipmentPosition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        equipmentId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_EquipmentItems_descriptor;
      }

      public myudfs.Common.EquipmentItems getDefaultInstanceForType() {
        return myudfs.Common.EquipmentItems.getDefaultInstance();
      }

      public myudfs.Common.EquipmentItems build() {
        myudfs.Common.EquipmentItems result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.EquipmentItems buildPartial() {
        myudfs.Common.EquipmentItems result = new myudfs.Common.EquipmentItems(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.equipmentPosition_ = equipmentPosition_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.equipmentId_ = equipmentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.EquipmentItems) {
          return mergeFrom((myudfs.Common.EquipmentItems)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.EquipmentItems other) {
        if (other == myudfs.Common.EquipmentItems.getDefaultInstance()) return this;
        if (other.hasEquipmentPosition()) {
          setEquipmentPosition(other.getEquipmentPosition());
        }
        if (other.hasEquipmentId()) {
          setEquipmentId(other.getEquipmentId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.EquipmentItems parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.EquipmentItems) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 equipmentPosition = 1;
      private int equipmentPosition_ ;
      /**
       * <code>optional int32 equipmentPosition = 1;</code>
       */
      public boolean hasEquipmentPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 equipmentPosition = 1;</code>
       */
      public int getEquipmentPosition() {
        return equipmentPosition_;
      }
      /**
       * <code>optional int32 equipmentPosition = 1;</code>
       */
      public Builder setEquipmentPosition(int value) {
        bitField0_ |= 0x00000001;
        equipmentPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 equipmentPosition = 1;</code>
       */
      public Builder clearEquipmentPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        equipmentPosition_ = 0;
        onChanged();
        return this;
      }

      // optional int64 equipmentId = 2;
      private long equipmentId_ ;
      /**
       * <code>optional int64 equipmentId = 2;</code>
       */
      public boolean hasEquipmentId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 equipmentId = 2;</code>
       */
      public long getEquipmentId() {
        return equipmentId_;
      }
      /**
       * <code>optional int64 equipmentId = 2;</code>
       */
      public Builder setEquipmentId(long value) {
        bitField0_ |= 0x00000002;
        equipmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 equipmentId = 2;</code>
       */
      public Builder clearEquipmentId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        equipmentId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EquipmentItems)
    }

    static {
      defaultInstance = new EquipmentItems(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EquipmentItems)
  }

  public interface MailEncourageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gold = 1;
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    int getGold();

    // optional int32 stamina = 2;
    /**
     * <code>optional int32 stamina = 2;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    boolean hasStamina();
    /**
     * <code>optional int32 stamina = 2;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    int getStamina();

    // optional int32 spirit = 3;
    /**
     * <code>optional int32 spirit = 3;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    boolean hasSpirit();
    /**
     * <code>optional int32 spirit = 3;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    int getSpirit();

    // optional int32 quility = 4;
    /**
     * <code>optional int32 quility = 4;</code>
     *
     * <pre>
     * 魂品质
     * </pre>
     */
    boolean hasQuility();
    /**
     * <code>optional int32 quility = 4;</code>
     *
     * <pre>
     * 魂品质
     * </pre>
     */
    int getQuility();

    // optional int32 num = 5;
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    boolean hasNum();
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    int getNum();

    // optional int32 shengWang = 6;
    /**
     * <code>optional int32 shengWang = 6;</code>
     *
     * <pre>
     * 声望
     * </pre>
     */
    boolean hasShengWang();
    /**
     * <code>optional int32 shengWang = 6;</code>
     *
     * <pre>
     * 声望
     * </pre>
     */
    int getShengWang();

    // optional int32 xianYuan = 7;
    /**
     * <code>optional int32 xianYuan = 7;</code>
     *
     * <pre>
     * 仙缘
     * </pre>
     */
    boolean hasXianYuan();
    /**
     * <code>optional int32 xianYuan = 7;</code>
     *
     * <pre>
     * 仙缘
     * </pre>
     */
    int getXianYuan();

    // optional int32 daoxing = 8;
    /**
     * <code>optional int32 daoxing = 8;</code>
     *
     * <pre>
     * 道行
     * </pre>
     */
    boolean hasDaoxing();
    /**
     * <code>optional int32 daoxing = 8;</code>
     *
     * <pre>
     * 道行
     * </pre>
     */
    int getDaoxing();

    // optional int32 coin = 27;
    /**
     * <code>optional int32 coin = 27;</code>
     *
     * <pre>
     *	optional int32 cardSignId1 = 9; //卡牌元神
     *	optional int32 cardSignNum1 = 10; //卡牌元神数量
     *	optional int32 cardSignId2 = 11; //卡牌元神
     *	optional int32 cardSignNum2 = 12; //卡牌元神数量
     *	optional int32 cardSignId3 = 13; //卡牌元神
     *	optional int32 cardSignNum3 = 14; //卡牌元神数量
     *	optional int32 magicWeaponId1 = 15; //法宝Id
     *	optional int32 mwNum1 = 16; // 法宝数量
     *	optional int32 magicWeaponId2 = 17; //法宝Id
     *	optional int32 mwNum2 = 18; // 法宝数量
     *	optional int32 magicWeaponId3 = 19; //法宝Id
     *	optional int32 mwNum3 = 20; // 法宝数量
     *	optional int32 itemId1 = 21; // 道具Id
     *	optional int32 itemNum1 = 22; // 道具数量
     *	optional int32 itemId2 = 23; // 道具Id
     *	optional int32 itemNum2 = 24; // 道具数量
     *	optional int32 itemId3 = 25; // 道具Id
     *	optional int32 itemNum3 = 26; // 道具数量
     * </pre>
     */
    boolean hasCoin();
    /**
     * <code>optional int32 coin = 27;</code>
     *
     * <pre>
     *	optional int32 cardSignId1 = 9; //卡牌元神
     *	optional int32 cardSignNum1 = 10; //卡牌元神数量
     *	optional int32 cardSignId2 = 11; //卡牌元神
     *	optional int32 cardSignNum2 = 12; //卡牌元神数量
     *	optional int32 cardSignId3 = 13; //卡牌元神
     *	optional int32 cardSignNum3 = 14; //卡牌元神数量
     *	optional int32 magicWeaponId1 = 15; //法宝Id
     *	optional int32 mwNum1 = 16; // 法宝数量
     *	optional int32 magicWeaponId2 = 17; //法宝Id
     *	optional int32 mwNum2 = 18; // 法宝数量
     *	optional int32 magicWeaponId3 = 19; //法宝Id
     *	optional int32 mwNum3 = 20; // 法宝数量
     *	optional int32 itemId1 = 21; // 道具Id
     *	optional int32 itemNum1 = 22; // 道具数量
     *	optional int32 itemId2 = 23; // 道具Id
     *	optional int32 itemNum2 = 24; // 道具数量
     *	optional int32 itemId3 = 25; // 道具Id
     *	optional int32 itemNum3 = 26; // 道具数量
     * </pre>
     */
    int getCoin();

    // optional int32 silver = 28;
    /**
     * <code>optional int32 silver = 28;</code>
     *
     * <pre>
     *银两
     * </pre>
     */
    boolean hasSilver();
    /**
     * <code>optional int32 silver = 28;</code>
     *
     * <pre>
     *银两
     * </pre>
     */
    int getSilver();

    // optional int32 vipGold = 29;
    /**
     * <code>optional int32 vipGold = 29;</code>
     *
     * <pre>
     * 用于提升vip的元宝
     * </pre>
     */
    boolean hasVipGold();
    /**
     * <code>optional int32 vipGold = 29;</code>
     *
     * <pre>
     * 用于提升vip的元宝
     * </pre>
     */
    int getVipGold();

    // optional int32 xiuWei = 30;
    /**
     * <code>optional int32 xiuWei = 30;</code>
     *
     * <pre>
     * 修为
     * </pre>
     */
    boolean hasXiuWei();
    /**
     * <code>optional int32 xiuWei = 30;</code>
     *
     * <pre>
     * 修为
     * </pre>
     */
    int getXiuWei();

    // optional int32 lingli = 31;
    /**
     * <code>optional int32 lingli = 31;</code>
     *
     * <pre>
     *灵力
     * </pre>
     */
    boolean hasLingli();
    /**
     * <code>optional int32 lingli = 31;</code>
     *
     * <pre>
     *灵力
     * </pre>
     */
    int getLingli();

    // optional int32 choukaQuan = 32;
    /**
     * <code>optional int32 choukaQuan = 32;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    boolean hasChoukaQuan();
    /**
     * <code>optional int32 choukaQuan = 32;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    int getChoukaQuan();

    // optional int32 hunyu = 33;
    /**
     * <code>optional int32 hunyu = 33;</code>
     */
    boolean hasHunyu();
    /**
     * <code>optional int32 hunyu = 33;</code>
     */
    int getHunyu();

    // optional int32 lingHun = 34;
    /**
     * <code>optional int32 lingHun = 34;</code>
     */
    boolean hasLingHun();
    /**
     * <code>optional int32 lingHun = 34;</code>
     */
    int getLingHun();

    // repeated .MapItem6 cardSignItems = 39;
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem6> 
        getCardSignItemsList();
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    myudfs.Common.MapItem6 getCardSignItems(int index);
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    int getCardSignItemsCount();
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
        getCardSignItemsOrBuilderList();
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    myudfs.Common.MapItem6OrBuilder getCardSignItemsOrBuilder(
        int index);

    // repeated .MapItem6 items = 40;
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem6> 
        getItemsList();
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    myudfs.Common.MapItem6 getItems(int index);
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    int getItemsCount();
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    myudfs.Common.MapItem6OrBuilder getItemsOrBuilder(
        int index);

    // repeated .MapItem6 boxItems = 41;
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem6> 
        getBoxItemsList();
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    myudfs.Common.MapItem6 getBoxItems(int index);
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    int getBoxItemsCount();
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
        getBoxItemsOrBuilderList();
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    myudfs.Common.MapItem6OrBuilder getBoxItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MailEncourage}
   */
  public static final class MailEncourage extends
      com.google.protobuf.GeneratedMessage
      implements MailEncourageOrBuilder {
    // Use MailEncourage.newBuilder() to construct.
    private MailEncourage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MailEncourage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MailEncourage defaultInstance;
    public static MailEncourage getDefaultInstance() {
      return defaultInstance;
    }

    public MailEncourage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MailEncourage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gold_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stamina_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              spirit_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              quility_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              num_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              shengWang_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              xianYuan_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              daoxing_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00000100;
              coin_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00000200;
              silver_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x00000400;
              vipGold_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00000800;
              xiuWei_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x00001000;
              lingli_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x00002000;
              choukaQuan_ = input.readInt32();
              break;
            }
            case 264: {
              bitField0_ |= 0x00004000;
              hunyu_ = input.readInt32();
              break;
            }
            case 272: {
              bitField0_ |= 0x00008000;
              lingHun_ = input.readInt32();
              break;
            }
            case 314: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                cardSignItems_ = new java.util.ArrayList<myudfs.Common.MapItem6>();
                mutable_bitField0_ |= 0x00010000;
              }
              cardSignItems_.add(input.readMessage(myudfs.Common.MapItem6.PARSER, extensionRegistry));
              break;
            }
            case 322: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                items_ = new java.util.ArrayList<myudfs.Common.MapItem6>();
                mutable_bitField0_ |= 0x00020000;
              }
              items_.add(input.readMessage(myudfs.Common.MapItem6.PARSER, extensionRegistry));
              break;
            }
            case 330: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                boxItems_ = new java.util.ArrayList<myudfs.Common.MapItem6>();
                mutable_bitField0_ |= 0x00040000;
              }
              boxItems_.add(input.readMessage(myudfs.Common.MapItem6.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          cardSignItems_ = java.util.Collections.unmodifiableList(cardSignItems_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          boxItems_ = java.util.Collections.unmodifiableList(boxItems_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MailEncourage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MailEncourage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MailEncourage.class, myudfs.Common.MailEncourage.Builder.class);
    }

    public static com.google.protobuf.Parser<MailEncourage> PARSER =
        new com.google.protobuf.AbstractParser<MailEncourage>() {
      public MailEncourage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MailEncourage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MailEncourage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gold = 1;
    public static final int GOLD_FIELD_NUMBER = 1;
    private int gold_;
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional int32 stamina = 2;
    public static final int STAMINA_FIELD_NUMBER = 2;
    private int stamina_;
    /**
     * <code>optional int32 stamina = 2;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public boolean hasStamina() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 stamina = 2;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public int getStamina() {
      return stamina_;
    }

    // optional int32 spirit = 3;
    public static final int SPIRIT_FIELD_NUMBER = 3;
    private int spirit_;
    /**
     * <code>optional int32 spirit = 3;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    public boolean hasSpirit() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 spirit = 3;</code>
     *
     * <pre>
     *精力
     * </pre>
     */
    public int getSpirit() {
      return spirit_;
    }

    // optional int32 quility = 4;
    public static final int QUILITY_FIELD_NUMBER = 4;
    private int quility_;
    /**
     * <code>optional int32 quility = 4;</code>
     *
     * <pre>
     * 魂品质
     * </pre>
     */
    public boolean hasQuility() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 quility = 4;</code>
     *
     * <pre>
     * 魂品质
     * </pre>
     */
    public int getQuility() {
      return quility_;
    }

    // optional int32 num = 5;
    public static final int NUM_FIELD_NUMBER = 5;
    private int num_;
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 num = 5;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    public int getNum() {
      return num_;
    }

    // optional int32 shengWang = 6;
    public static final int SHENGWANG_FIELD_NUMBER = 6;
    private int shengWang_;
    /**
     * <code>optional int32 shengWang = 6;</code>
     *
     * <pre>
     * 声望
     * </pre>
     */
    public boolean hasShengWang() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 shengWang = 6;</code>
     *
     * <pre>
     * 声望
     * </pre>
     */
    public int getShengWang() {
      return shengWang_;
    }

    // optional int32 xianYuan = 7;
    public static final int XIANYUAN_FIELD_NUMBER = 7;
    private int xianYuan_;
    /**
     * <code>optional int32 xianYuan = 7;</code>
     *
     * <pre>
     * 仙缘
     * </pre>
     */
    public boolean hasXianYuan() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 xianYuan = 7;</code>
     *
     * <pre>
     * 仙缘
     * </pre>
     */
    public int getXianYuan() {
      return xianYuan_;
    }

    // optional int32 daoxing = 8;
    public static final int DAOXING_FIELD_NUMBER = 8;
    private int daoxing_;
    /**
     * <code>optional int32 daoxing = 8;</code>
     *
     * <pre>
     * 道行
     * </pre>
     */
    public boolean hasDaoxing() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 daoxing = 8;</code>
     *
     * <pre>
     * 道行
     * </pre>
     */
    public int getDaoxing() {
      return daoxing_;
    }

    // optional int32 coin = 27;
    public static final int COIN_FIELD_NUMBER = 27;
    private int coin_;
    /**
     * <code>optional int32 coin = 27;</code>
     *
     * <pre>
     *	optional int32 cardSignId1 = 9; //卡牌元神
     *	optional int32 cardSignNum1 = 10; //卡牌元神数量
     *	optional int32 cardSignId2 = 11; //卡牌元神
     *	optional int32 cardSignNum2 = 12; //卡牌元神数量
     *	optional int32 cardSignId3 = 13; //卡牌元神
     *	optional int32 cardSignNum3 = 14; //卡牌元神数量
     *	optional int32 magicWeaponId1 = 15; //法宝Id
     *	optional int32 mwNum1 = 16; // 法宝数量
     *	optional int32 magicWeaponId2 = 17; //法宝Id
     *	optional int32 mwNum2 = 18; // 法宝数量
     *	optional int32 magicWeaponId3 = 19; //法宝Id
     *	optional int32 mwNum3 = 20; // 法宝数量
     *	optional int32 itemId1 = 21; // 道具Id
     *	optional int32 itemNum1 = 22; // 道具数量
     *	optional int32 itemId2 = 23; // 道具Id
     *	optional int32 itemNum2 = 24; // 道具数量
     *	optional int32 itemId3 = 25; // 道具Id
     *	optional int32 itemNum3 = 26; // 道具数量
     * </pre>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 coin = 27;</code>
     *
     * <pre>
     *	optional int32 cardSignId1 = 9; //卡牌元神
     *	optional int32 cardSignNum1 = 10; //卡牌元神数量
     *	optional int32 cardSignId2 = 11; //卡牌元神
     *	optional int32 cardSignNum2 = 12; //卡牌元神数量
     *	optional int32 cardSignId3 = 13; //卡牌元神
     *	optional int32 cardSignNum3 = 14; //卡牌元神数量
     *	optional int32 magicWeaponId1 = 15; //法宝Id
     *	optional int32 mwNum1 = 16; // 法宝数量
     *	optional int32 magicWeaponId2 = 17; //法宝Id
     *	optional int32 mwNum2 = 18; // 法宝数量
     *	optional int32 magicWeaponId3 = 19; //法宝Id
     *	optional int32 mwNum3 = 20; // 法宝数量
     *	optional int32 itemId1 = 21; // 道具Id
     *	optional int32 itemNum1 = 22; // 道具数量
     *	optional int32 itemId2 = 23; // 道具Id
     *	optional int32 itemNum2 = 24; // 道具数量
     *	optional int32 itemId3 = 25; // 道具Id
     *	optional int32 itemNum3 = 26; // 道具数量
     * </pre>
     */
    public int getCoin() {
      return coin_;
    }

    // optional int32 silver = 28;
    public static final int SILVER_FIELD_NUMBER = 28;
    private int silver_;
    /**
     * <code>optional int32 silver = 28;</code>
     *
     * <pre>
     *银两
     * </pre>
     */
    public boolean hasSilver() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 silver = 28;</code>
     *
     * <pre>
     *银两
     * </pre>
     */
    public int getSilver() {
      return silver_;
    }

    // optional int32 vipGold = 29;
    public static final int VIPGOLD_FIELD_NUMBER = 29;
    private int vipGold_;
    /**
     * <code>optional int32 vipGold = 29;</code>
     *
     * <pre>
     * 用于提升vip的元宝
     * </pre>
     */
    public boolean hasVipGold() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 vipGold = 29;</code>
     *
     * <pre>
     * 用于提升vip的元宝
     * </pre>
     */
    public int getVipGold() {
      return vipGold_;
    }

    // optional int32 xiuWei = 30;
    public static final int XIUWEI_FIELD_NUMBER = 30;
    private int xiuWei_;
    /**
     * <code>optional int32 xiuWei = 30;</code>
     *
     * <pre>
     * 修为
     * </pre>
     */
    public boolean hasXiuWei() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 xiuWei = 30;</code>
     *
     * <pre>
     * 修为
     * </pre>
     */
    public int getXiuWei() {
      return xiuWei_;
    }

    // optional int32 lingli = 31;
    public static final int LINGLI_FIELD_NUMBER = 31;
    private int lingli_;
    /**
     * <code>optional int32 lingli = 31;</code>
     *
     * <pre>
     *灵力
     * </pre>
     */
    public boolean hasLingli() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 lingli = 31;</code>
     *
     * <pre>
     *灵力
     * </pre>
     */
    public int getLingli() {
      return lingli_;
    }

    // optional int32 choukaQuan = 32;
    public static final int CHOUKAQUAN_FIELD_NUMBER = 32;
    private int choukaQuan_;
    /**
     * <code>optional int32 choukaQuan = 32;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    public boolean hasChoukaQuan() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 choukaQuan = 32;</code>
     *
     * <pre>
     *抽卡券
     * </pre>
     */
    public int getChoukaQuan() {
      return choukaQuan_;
    }

    // optional int32 hunyu = 33;
    public static final int HUNYU_FIELD_NUMBER = 33;
    private int hunyu_;
    /**
     * <code>optional int32 hunyu = 33;</code>
     */
    public boolean hasHunyu() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 hunyu = 33;</code>
     */
    public int getHunyu() {
      return hunyu_;
    }

    // optional int32 lingHun = 34;
    public static final int LINGHUN_FIELD_NUMBER = 34;
    private int lingHun_;
    /**
     * <code>optional int32 lingHun = 34;</code>
     */
    public boolean hasLingHun() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 lingHun = 34;</code>
     */
    public int getLingHun() {
      return lingHun_;
    }

    // repeated .MapItem6 cardSignItems = 39;
    public static final int CARDSIGNITEMS_FIELD_NUMBER = 39;
    private java.util.List<myudfs.Common.MapItem6> cardSignItems_;
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem6> getCardSignItemsList() {
      return cardSignItems_;
    }
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
        getCardSignItemsOrBuilderList() {
      return cardSignItems_;
    }
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    public int getCardSignItemsCount() {
      return cardSignItems_.size();
    }
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    public myudfs.Common.MapItem6 getCardSignItems(int index) {
      return cardSignItems_.get(index);
    }
    /**
     * <code>repeated .MapItem6 cardSignItems = 39;</code>
     *
     * <pre>
     *	optional int32 boxId1 = 35;
     *	optional int32 boxNum1 = 36;
     *	optional int32 boxId2 = 37;
     *	optional int32 boxNum2 = 38;
     * </pre>
     */
    public myudfs.Common.MapItem6OrBuilder getCardSignItemsOrBuilder(
        int index) {
      return cardSignItems_.get(index);
    }

    // repeated .MapItem6 items = 40;
    public static final int ITEMS_FIELD_NUMBER = 40;
    private java.util.List<myudfs.Common.MapItem6> items_;
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem6> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public myudfs.Common.MapItem6 getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .MapItem6 items = 40;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public myudfs.Common.MapItem6OrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    // repeated .MapItem6 boxItems = 41;
    public static final int BOXITEMS_FIELD_NUMBER = 41;
    private java.util.List<myudfs.Common.MapItem6> boxItems_;
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem6> getBoxItemsList() {
      return boxItems_;
    }
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
        getBoxItemsOrBuilderList() {
      return boxItems_;
    }
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    public int getBoxItemsCount() {
      return boxItems_.size();
    }
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    public myudfs.Common.MapItem6 getBoxItems(int index) {
      return boxItems_.get(index);
    }
    /**
     * <code>repeated .MapItem6 boxItems = 41;</code>
     *
     * <pre>
     * 宝箱列表
     * </pre>
     */
    public myudfs.Common.MapItem6OrBuilder getBoxItemsOrBuilder(
        int index) {
      return boxItems_.get(index);
    }

    private void initFields() {
      gold_ = 0;
      stamina_ = 0;
      spirit_ = 0;
      quility_ = 0;
      num_ = 0;
      shengWang_ = 0;
      xianYuan_ = 0;
      daoxing_ = 0;
      coin_ = 0;
      silver_ = 0;
      vipGold_ = 0;
      xiuWei_ = 0;
      lingli_ = 0;
      choukaQuan_ = 0;
      hunyu_ = 0;
      lingHun_ = 0;
      cardSignItems_ = java.util.Collections.emptyList();
      items_ = java.util.Collections.emptyList();
      boxItems_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, stamina_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, spirit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, quility_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, num_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, shengWang_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, xianYuan_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, daoxing_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(27, coin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(28, silver_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(29, vipGold_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(30, xiuWei_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(31, lingli_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(32, choukaQuan_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(33, hunyu_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(34, lingHun_);
      }
      for (int i = 0; i < cardSignItems_.size(); i++) {
        output.writeMessage(39, cardSignItems_.get(i));
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(40, items_.get(i));
      }
      for (int i = 0; i < boxItems_.size(); i++) {
        output.writeMessage(41, boxItems_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, stamina_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, spirit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, quility_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, num_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, shengWang_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, xianYuan_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, daoxing_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, coin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, silver_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, vipGold_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, xiuWei_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, lingli_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, choukaQuan_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, hunyu_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, lingHun_);
      }
      for (int i = 0; i < cardSignItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, cardSignItems_.get(i));
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, items_.get(i));
      }
      for (int i = 0; i < boxItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, boxItems_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MailEncourage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MailEncourage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MailEncourage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MailEncourage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MailEncourage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MailEncourage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MailEncourage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MailEncourage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MailEncourage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MailEncourage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MailEncourage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MailEncourage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MailEncourageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MailEncourage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MailEncourage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MailEncourage.class, myudfs.Common.MailEncourage.Builder.class);
      }

      // Construct using myudfs.Common.MailEncourage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardSignItemsFieldBuilder();
          getItemsFieldBuilder();
          getBoxItemsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        stamina_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        spirit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        quility_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        shengWang_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        xianYuan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        daoxing_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        coin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        silver_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        vipGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        xiuWei_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        lingli_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        choukaQuan_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        hunyu_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        lingHun_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (cardSignItemsBuilder_ == null) {
          cardSignItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          cardSignItemsBuilder_.clear();
        }
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          itemsBuilder_.clear();
        }
        if (boxItemsBuilder_ == null) {
          boxItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          boxItemsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MailEncourage_descriptor;
      }

      public myudfs.Common.MailEncourage getDefaultInstanceForType() {
        return myudfs.Common.MailEncourage.getDefaultInstance();
      }

      public myudfs.Common.MailEncourage build() {
        myudfs.Common.MailEncourage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MailEncourage buildPartial() {
        myudfs.Common.MailEncourage result = new myudfs.Common.MailEncourage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stamina_ = stamina_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.spirit_ = spirit_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.quility_ = quility_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.num_ = num_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.shengWang_ = shengWang_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.xianYuan_ = xianYuan_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.daoxing_ = daoxing_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.coin_ = coin_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.silver_ = silver_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.vipGold_ = vipGold_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.xiuWei_ = xiuWei_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.lingli_ = lingli_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.choukaQuan_ = choukaQuan_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.hunyu_ = hunyu_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.lingHun_ = lingHun_;
        if (cardSignItemsBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            cardSignItems_ = java.util.Collections.unmodifiableList(cardSignItems_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.cardSignItems_ = cardSignItems_;
        } else {
          result.cardSignItems_ = cardSignItemsBuilder_.build();
        }
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        if (boxItemsBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            boxItems_ = java.util.Collections.unmodifiableList(boxItems_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.boxItems_ = boxItems_;
        } else {
          result.boxItems_ = boxItemsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MailEncourage) {
          return mergeFrom((myudfs.Common.MailEncourage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MailEncourage other) {
        if (other == myudfs.Common.MailEncourage.getDefaultInstance()) return this;
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasStamina()) {
          setStamina(other.getStamina());
        }
        if (other.hasSpirit()) {
          setSpirit(other.getSpirit());
        }
        if (other.hasQuility()) {
          setQuility(other.getQuility());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        if (other.hasShengWang()) {
          setShengWang(other.getShengWang());
        }
        if (other.hasXianYuan()) {
          setXianYuan(other.getXianYuan());
        }
        if (other.hasDaoxing()) {
          setDaoxing(other.getDaoxing());
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (other.hasSilver()) {
          setSilver(other.getSilver());
        }
        if (other.hasVipGold()) {
          setVipGold(other.getVipGold());
        }
        if (other.hasXiuWei()) {
          setXiuWei(other.getXiuWei());
        }
        if (other.hasLingli()) {
          setLingli(other.getLingli());
        }
        if (other.hasChoukaQuan()) {
          setChoukaQuan(other.getChoukaQuan());
        }
        if (other.hasHunyu()) {
          setHunyu(other.getHunyu());
        }
        if (other.hasLingHun()) {
          setLingHun(other.getLingHun());
        }
        if (cardSignItemsBuilder_ == null) {
          if (!other.cardSignItems_.isEmpty()) {
            if (cardSignItems_.isEmpty()) {
              cardSignItems_ = other.cardSignItems_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureCardSignItemsIsMutable();
              cardSignItems_.addAll(other.cardSignItems_);
            }
            onChanged();
          }
        } else {
          if (!other.cardSignItems_.isEmpty()) {
            if (cardSignItemsBuilder_.isEmpty()) {
              cardSignItemsBuilder_.dispose();
              cardSignItemsBuilder_ = null;
              cardSignItems_ = other.cardSignItems_;
              bitField0_ = (bitField0_ & ~0x00010000);
              cardSignItemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardSignItemsFieldBuilder() : null;
            } else {
              cardSignItemsBuilder_.addAllMessages(other.cardSignItems_);
            }
          }
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00020000);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        if (boxItemsBuilder_ == null) {
          if (!other.boxItems_.isEmpty()) {
            if (boxItems_.isEmpty()) {
              boxItems_ = other.boxItems_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureBoxItemsIsMutable();
              boxItems_.addAll(other.boxItems_);
            }
            onChanged();
          }
        } else {
          if (!other.boxItems_.isEmpty()) {
            if (boxItemsBuilder_.isEmpty()) {
              boxItemsBuilder_.dispose();
              boxItemsBuilder_ = null;
              boxItems_ = other.boxItems_;
              bitField0_ = (bitField0_ & ~0x00040000);
              boxItemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoxItemsFieldBuilder() : null;
            } else {
              boxItemsBuilder_.addAllMessages(other.boxItems_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MailEncourage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MailEncourage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gold = 1;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000001;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 stamina = 2;
      private int stamina_ ;
      /**
       * <code>optional int32 stamina = 2;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public boolean hasStamina() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 stamina = 2;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public int getStamina() {
        return stamina_;
      }
      /**
       * <code>optional int32 stamina = 2;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public Builder setStamina(int value) {
        bitField0_ |= 0x00000002;
        stamina_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stamina = 2;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public Builder clearStamina() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stamina_ = 0;
        onChanged();
        return this;
      }

      // optional int32 spirit = 3;
      private int spirit_ ;
      /**
       * <code>optional int32 spirit = 3;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public boolean hasSpirit() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 spirit = 3;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public int getSpirit() {
        return spirit_;
      }
      /**
       * <code>optional int32 spirit = 3;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public Builder setSpirit(int value) {
        bitField0_ |= 0x00000004;
        spirit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 spirit = 3;</code>
       *
       * <pre>
       *精力
       * </pre>
       */
      public Builder clearSpirit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        spirit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quility = 4;
      private int quility_ ;
      /**
       * <code>optional int32 quility = 4;</code>
       *
       * <pre>
       * 魂品质
       * </pre>
       */
      public boolean hasQuility() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 quility = 4;</code>
       *
       * <pre>
       * 魂品质
       * </pre>
       */
      public int getQuility() {
        return quility_;
      }
      /**
       * <code>optional int32 quility = 4;</code>
       *
       * <pre>
       * 魂品质
       * </pre>
       */
      public Builder setQuility(int value) {
        bitField0_ |= 0x00000008;
        quility_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quility = 4;</code>
       *
       * <pre>
       * 魂品质
       * </pre>
       */
      public Builder clearQuility() {
        bitField0_ = (bitField0_ & ~0x00000008);
        quility_ = 0;
        onChanged();
        return this;
      }

      // optional int32 num = 5;
      private int num_ ;
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000010;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 num = 5;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        num_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shengWang = 6;
      private int shengWang_ ;
      /**
       * <code>optional int32 shengWang = 6;</code>
       *
       * <pre>
       * 声望
       * </pre>
       */
      public boolean hasShengWang() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 shengWang = 6;</code>
       *
       * <pre>
       * 声望
       * </pre>
       */
      public int getShengWang() {
        return shengWang_;
      }
      /**
       * <code>optional int32 shengWang = 6;</code>
       *
       * <pre>
       * 声望
       * </pre>
       */
      public Builder setShengWang(int value) {
        bitField0_ |= 0x00000020;
        shengWang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shengWang = 6;</code>
       *
       * <pre>
       * 声望
       * </pre>
       */
      public Builder clearShengWang() {
        bitField0_ = (bitField0_ & ~0x00000020);
        shengWang_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xianYuan = 7;
      private int xianYuan_ ;
      /**
       * <code>optional int32 xianYuan = 7;</code>
       *
       * <pre>
       * 仙缘
       * </pre>
       */
      public boolean hasXianYuan() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 xianYuan = 7;</code>
       *
       * <pre>
       * 仙缘
       * </pre>
       */
      public int getXianYuan() {
        return xianYuan_;
      }
      /**
       * <code>optional int32 xianYuan = 7;</code>
       *
       * <pre>
       * 仙缘
       * </pre>
       */
      public Builder setXianYuan(int value) {
        bitField0_ |= 0x00000040;
        xianYuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xianYuan = 7;</code>
       *
       * <pre>
       * 仙缘
       * </pre>
       */
      public Builder clearXianYuan() {
        bitField0_ = (bitField0_ & ~0x00000040);
        xianYuan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 daoxing = 8;
      private int daoxing_ ;
      /**
       * <code>optional int32 daoxing = 8;</code>
       *
       * <pre>
       * 道行
       * </pre>
       */
      public boolean hasDaoxing() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 daoxing = 8;</code>
       *
       * <pre>
       * 道行
       * </pre>
       */
      public int getDaoxing() {
        return daoxing_;
      }
      /**
       * <code>optional int32 daoxing = 8;</code>
       *
       * <pre>
       * 道行
       * </pre>
       */
      public Builder setDaoxing(int value) {
        bitField0_ |= 0x00000080;
        daoxing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 daoxing = 8;</code>
       *
       * <pre>
       * 道行
       * </pre>
       */
      public Builder clearDaoxing() {
        bitField0_ = (bitField0_ & ~0x00000080);
        daoxing_ = 0;
        onChanged();
        return this;
      }

      // optional int32 coin = 27;
      private int coin_ ;
      /**
       * <code>optional int32 coin = 27;</code>
       *
       * <pre>
       *	optional int32 cardSignId1 = 9; //卡牌元神
       *	optional int32 cardSignNum1 = 10; //卡牌元神数量
       *	optional int32 cardSignId2 = 11; //卡牌元神
       *	optional int32 cardSignNum2 = 12; //卡牌元神数量
       *	optional int32 cardSignId3 = 13; //卡牌元神
       *	optional int32 cardSignNum3 = 14; //卡牌元神数量
       *	optional int32 magicWeaponId1 = 15; //法宝Id
       *	optional int32 mwNum1 = 16; // 法宝数量
       *	optional int32 magicWeaponId2 = 17; //法宝Id
       *	optional int32 mwNum2 = 18; // 法宝数量
       *	optional int32 magicWeaponId3 = 19; //法宝Id
       *	optional int32 mwNum3 = 20; // 法宝数量
       *	optional int32 itemId1 = 21; // 道具Id
       *	optional int32 itemNum1 = 22; // 道具数量
       *	optional int32 itemId2 = 23; // 道具Id
       *	optional int32 itemNum2 = 24; // 道具数量
       *	optional int32 itemId3 = 25; // 道具Id
       *	optional int32 itemNum3 = 26; // 道具数量
       * </pre>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 coin = 27;</code>
       *
       * <pre>
       *	optional int32 cardSignId1 = 9; //卡牌元神
       *	optional int32 cardSignNum1 = 10; //卡牌元神数量
       *	optional int32 cardSignId2 = 11; //卡牌元神
       *	optional int32 cardSignNum2 = 12; //卡牌元神数量
       *	optional int32 cardSignId3 = 13; //卡牌元神
       *	optional int32 cardSignNum3 = 14; //卡牌元神数量
       *	optional int32 magicWeaponId1 = 15; //法宝Id
       *	optional int32 mwNum1 = 16; // 法宝数量
       *	optional int32 magicWeaponId2 = 17; //法宝Id
       *	optional int32 mwNum2 = 18; // 法宝数量
       *	optional int32 magicWeaponId3 = 19; //法宝Id
       *	optional int32 mwNum3 = 20; // 法宝数量
       *	optional int32 itemId1 = 21; // 道具Id
       *	optional int32 itemNum1 = 22; // 道具数量
       *	optional int32 itemId2 = 23; // 道具Id
       *	optional int32 itemNum2 = 24; // 道具数量
       *	optional int32 itemId3 = 25; // 道具Id
       *	optional int32 itemNum3 = 26; // 道具数量
       * </pre>
       */
      public int getCoin() {
        return coin_;
      }
      /**
       * <code>optional int32 coin = 27;</code>
       *
       * <pre>
       *	optional int32 cardSignId1 = 9; //卡牌元神
       *	optional int32 cardSignNum1 = 10; //卡牌元神数量
       *	optional int32 cardSignId2 = 11; //卡牌元神
       *	optional int32 cardSignNum2 = 12; //卡牌元神数量
       *	optional int32 cardSignId3 = 13; //卡牌元神
       *	optional int32 cardSignNum3 = 14; //卡牌元神数量
       *	optional int32 magicWeaponId1 = 15; //法宝Id
       *	optional int32 mwNum1 = 16; // 法宝数量
       *	optional int32 magicWeaponId2 = 17; //法宝Id
       *	optional int32 mwNum2 = 18; // 法宝数量
       *	optional int32 magicWeaponId3 = 19; //法宝Id
       *	optional int32 mwNum3 = 20; // 法宝数量
       *	optional int32 itemId1 = 21; // 道具Id
       *	optional int32 itemNum1 = 22; // 道具数量
       *	optional int32 itemId2 = 23; // 道具Id
       *	optional int32 itemNum2 = 24; // 道具数量
       *	optional int32 itemId3 = 25; // 道具Id
       *	optional int32 itemNum3 = 26; // 道具数量
       * </pre>
       */
      public Builder setCoin(int value) {
        bitField0_ |= 0x00000100;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 coin = 27;</code>
       *
       * <pre>
       *	optional int32 cardSignId1 = 9; //卡牌元神
       *	optional int32 cardSignNum1 = 10; //卡牌元神数量
       *	optional int32 cardSignId2 = 11; //卡牌元神
       *	optional int32 cardSignNum2 = 12; //卡牌元神数量
       *	optional int32 cardSignId3 = 13; //卡牌元神
       *	optional int32 cardSignNum3 = 14; //卡牌元神数量
       *	optional int32 magicWeaponId1 = 15; //法宝Id
       *	optional int32 mwNum1 = 16; // 法宝数量
       *	optional int32 magicWeaponId2 = 17; //法宝Id
       *	optional int32 mwNum2 = 18; // 法宝数量
       *	optional int32 magicWeaponId3 = 19; //法宝Id
       *	optional int32 mwNum3 = 20; // 法宝数量
       *	optional int32 itemId1 = 21; // 道具Id
       *	optional int32 itemNum1 = 22; // 道具数量
       *	optional int32 itemId2 = 23; // 道具Id
       *	optional int32 itemNum2 = 24; // 道具数量
       *	optional int32 itemId3 = 25; // 道具Id
       *	optional int32 itemNum3 = 26; // 道具数量
       * </pre>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x00000100);
        coin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 silver = 28;
      private int silver_ ;
      /**
       * <code>optional int32 silver = 28;</code>
       *
       * <pre>
       *银两
       * </pre>
       */
      public boolean hasSilver() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 silver = 28;</code>
       *
       * <pre>
       *银两
       * </pre>
       */
      public int getSilver() {
        return silver_;
      }
      /**
       * <code>optional int32 silver = 28;</code>
       *
       * <pre>
       *银两
       * </pre>
       */
      public Builder setSilver(int value) {
        bitField0_ |= 0x00000200;
        silver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 silver = 28;</code>
       *
       * <pre>
       *银两
       * </pre>
       */
      public Builder clearSilver() {
        bitField0_ = (bitField0_ & ~0x00000200);
        silver_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vipGold = 29;
      private int vipGold_ ;
      /**
       * <code>optional int32 vipGold = 29;</code>
       *
       * <pre>
       * 用于提升vip的元宝
       * </pre>
       */
      public boolean hasVipGold() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 vipGold = 29;</code>
       *
       * <pre>
       * 用于提升vip的元宝
       * </pre>
       */
      public int getVipGold() {
        return vipGold_;
      }
      /**
       * <code>optional int32 vipGold = 29;</code>
       *
       * <pre>
       * 用于提升vip的元宝
       * </pre>
       */
      public Builder setVipGold(int value) {
        bitField0_ |= 0x00000400;
        vipGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipGold = 29;</code>
       *
       * <pre>
       * 用于提升vip的元宝
       * </pre>
       */
      public Builder clearVipGold() {
        bitField0_ = (bitField0_ & ~0x00000400);
        vipGold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xiuWei = 30;
      private int xiuWei_ ;
      /**
       * <code>optional int32 xiuWei = 30;</code>
       *
       * <pre>
       * 修为
       * </pre>
       */
      public boolean hasXiuWei() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 xiuWei = 30;</code>
       *
       * <pre>
       * 修为
       * </pre>
       */
      public int getXiuWei() {
        return xiuWei_;
      }
      /**
       * <code>optional int32 xiuWei = 30;</code>
       *
       * <pre>
       * 修为
       * </pre>
       */
      public Builder setXiuWei(int value) {
        bitField0_ |= 0x00000800;
        xiuWei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiuWei = 30;</code>
       *
       * <pre>
       * 修为
       * </pre>
       */
      public Builder clearXiuWei() {
        bitField0_ = (bitField0_ & ~0x00000800);
        xiuWei_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lingli = 31;
      private int lingli_ ;
      /**
       * <code>optional int32 lingli = 31;</code>
       *
       * <pre>
       *灵力
       * </pre>
       */
      public boolean hasLingli() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 lingli = 31;</code>
       *
       * <pre>
       *灵力
       * </pre>
       */
      public int getLingli() {
        return lingli_;
      }
      /**
       * <code>optional int32 lingli = 31;</code>
       *
       * <pre>
       *灵力
       * </pre>
       */
      public Builder setLingli(int value) {
        bitField0_ |= 0x00001000;
        lingli_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lingli = 31;</code>
       *
       * <pre>
       *灵力
       * </pre>
       */
      public Builder clearLingli() {
        bitField0_ = (bitField0_ & ~0x00001000);
        lingli_ = 0;
        onChanged();
        return this;
      }

      // optional int32 choukaQuan = 32;
      private int choukaQuan_ ;
      /**
       * <code>optional int32 choukaQuan = 32;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public boolean hasChoukaQuan() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 choukaQuan = 32;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public int getChoukaQuan() {
        return choukaQuan_;
      }
      /**
       * <code>optional int32 choukaQuan = 32;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public Builder setChoukaQuan(int value) {
        bitField0_ |= 0x00002000;
        choukaQuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 choukaQuan = 32;</code>
       *
       * <pre>
       *抽卡券
       * </pre>
       */
      public Builder clearChoukaQuan() {
        bitField0_ = (bitField0_ & ~0x00002000);
        choukaQuan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hunyu = 33;
      private int hunyu_ ;
      /**
       * <code>optional int32 hunyu = 33;</code>
       */
      public boolean hasHunyu() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 hunyu = 33;</code>
       */
      public int getHunyu() {
        return hunyu_;
      }
      /**
       * <code>optional int32 hunyu = 33;</code>
       */
      public Builder setHunyu(int value) {
        bitField0_ |= 0x00004000;
        hunyu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hunyu = 33;</code>
       */
      public Builder clearHunyu() {
        bitField0_ = (bitField0_ & ~0x00004000);
        hunyu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lingHun = 34;
      private int lingHun_ ;
      /**
       * <code>optional int32 lingHun = 34;</code>
       */
      public boolean hasLingHun() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 lingHun = 34;</code>
       */
      public int getLingHun() {
        return lingHun_;
      }
      /**
       * <code>optional int32 lingHun = 34;</code>
       */
      public Builder setLingHun(int value) {
        bitField0_ |= 0x00008000;
        lingHun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lingHun = 34;</code>
       */
      public Builder clearLingHun() {
        bitField0_ = (bitField0_ & ~0x00008000);
        lingHun_ = 0;
        onChanged();
        return this;
      }

      // repeated .MapItem6 cardSignItems = 39;
      private java.util.List<myudfs.Common.MapItem6> cardSignItems_ =
        java.util.Collections.emptyList();
      private void ensureCardSignItemsIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          cardSignItems_ = new java.util.ArrayList<myudfs.Common.MapItem6>(cardSignItems_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder> cardSignItemsBuilder_;

      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem6> getCardSignItemsList() {
        if (cardSignItemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardSignItems_);
        } else {
          return cardSignItemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public int getCardSignItemsCount() {
        if (cardSignItemsBuilder_ == null) {
          return cardSignItems_.size();
        } else {
          return cardSignItemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public myudfs.Common.MapItem6 getCardSignItems(int index) {
        if (cardSignItemsBuilder_ == null) {
          return cardSignItems_.get(index);
        } else {
          return cardSignItemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder setCardSignItems(
          int index, myudfs.Common.MapItem6 value) {
        if (cardSignItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardSignItemsIsMutable();
          cardSignItems_.set(index, value);
          onChanged();
        } else {
          cardSignItemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder setCardSignItems(
          int index, myudfs.Common.MapItem6.Builder builderForValue) {
        if (cardSignItemsBuilder_ == null) {
          ensureCardSignItemsIsMutable();
          cardSignItems_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardSignItemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder addCardSignItems(myudfs.Common.MapItem6 value) {
        if (cardSignItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardSignItemsIsMutable();
          cardSignItems_.add(value);
          onChanged();
        } else {
          cardSignItemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder addCardSignItems(
          int index, myudfs.Common.MapItem6 value) {
        if (cardSignItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardSignItemsIsMutable();
          cardSignItems_.add(index, value);
          onChanged();
        } else {
          cardSignItemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder addCardSignItems(
          myudfs.Common.MapItem6.Builder builderForValue) {
        if (cardSignItemsBuilder_ == null) {
          ensureCardSignItemsIsMutable();
          cardSignItems_.add(builderForValue.build());
          onChanged();
        } else {
          cardSignItemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder addCardSignItems(
          int index, myudfs.Common.MapItem6.Builder builderForValue) {
        if (cardSignItemsBuilder_ == null) {
          ensureCardSignItemsIsMutable();
          cardSignItems_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardSignItemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder addAllCardSignItems(
          java.lang.Iterable<? extends myudfs.Common.MapItem6> values) {
        if (cardSignItemsBuilder_ == null) {
          ensureCardSignItemsIsMutable();
          super.addAll(values, cardSignItems_);
          onChanged();
        } else {
          cardSignItemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder clearCardSignItems() {
        if (cardSignItemsBuilder_ == null) {
          cardSignItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          cardSignItemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public Builder removeCardSignItems(int index) {
        if (cardSignItemsBuilder_ == null) {
          ensureCardSignItemsIsMutable();
          cardSignItems_.remove(index);
          onChanged();
        } else {
          cardSignItemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder getCardSignItemsBuilder(
          int index) {
        return getCardSignItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public myudfs.Common.MapItem6OrBuilder getCardSignItemsOrBuilder(
          int index) {
        if (cardSignItemsBuilder_ == null) {
          return cardSignItems_.get(index);  } else {
          return cardSignItemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
           getCardSignItemsOrBuilderList() {
        if (cardSignItemsBuilder_ != null) {
          return cardSignItemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardSignItems_);
        }
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder addCardSignItemsBuilder() {
        return getCardSignItemsFieldBuilder().addBuilder(
            myudfs.Common.MapItem6.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder addCardSignItemsBuilder(
          int index) {
        return getCardSignItemsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem6.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem6 cardSignItems = 39;</code>
       *
       * <pre>
       *	optional int32 boxId1 = 35;
       *	optional int32 boxNum1 = 36;
       *	optional int32 boxId2 = 37;
       *	optional int32 boxNum2 = 38;
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem6.Builder> 
           getCardSignItemsBuilderList() {
        return getCardSignItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder> 
          getCardSignItemsFieldBuilder() {
        if (cardSignItemsBuilder_ == null) {
          cardSignItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder>(
                  cardSignItems_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          cardSignItems_ = null;
        }
        return cardSignItemsBuilder_;
      }

      // repeated .MapItem6 items = 40;
      private java.util.List<myudfs.Common.MapItem6> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          items_ = new java.util.ArrayList<myudfs.Common.MapItem6>(items_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder> itemsBuilder_;

      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem6> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public myudfs.Common.MapItem6 getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder setItems(
          int index, myudfs.Common.MapItem6 value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder setItems(
          int index, myudfs.Common.MapItem6.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addItems(myudfs.Common.MapItem6 value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addItems(
          int index, myudfs.Common.MapItem6 value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addItems(
          myudfs.Common.MapItem6.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addItems(
          int index, myudfs.Common.MapItem6.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends myudfs.Common.MapItem6> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          super.addAll(values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public myudfs.Common.MapItem6OrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            myudfs.Common.MapItem6.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem6.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem6 items = 40;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem6.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder>(
                  items_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // repeated .MapItem6 boxItems = 41;
      private java.util.List<myudfs.Common.MapItem6> boxItems_ =
        java.util.Collections.emptyList();
      private void ensureBoxItemsIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          boxItems_ = new java.util.ArrayList<myudfs.Common.MapItem6>(boxItems_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder> boxItemsBuilder_;

      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem6> getBoxItemsList() {
        if (boxItemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boxItems_);
        } else {
          return boxItemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public int getBoxItemsCount() {
        if (boxItemsBuilder_ == null) {
          return boxItems_.size();
        } else {
          return boxItemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public myudfs.Common.MapItem6 getBoxItems(int index) {
        if (boxItemsBuilder_ == null) {
          return boxItems_.get(index);
        } else {
          return boxItemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder setBoxItems(
          int index, myudfs.Common.MapItem6 value) {
        if (boxItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxItemsIsMutable();
          boxItems_.set(index, value);
          onChanged();
        } else {
          boxItemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder setBoxItems(
          int index, myudfs.Common.MapItem6.Builder builderForValue) {
        if (boxItemsBuilder_ == null) {
          ensureBoxItemsIsMutable();
          boxItems_.set(index, builderForValue.build());
          onChanged();
        } else {
          boxItemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder addBoxItems(myudfs.Common.MapItem6 value) {
        if (boxItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxItemsIsMutable();
          boxItems_.add(value);
          onChanged();
        } else {
          boxItemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder addBoxItems(
          int index, myudfs.Common.MapItem6 value) {
        if (boxItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxItemsIsMutable();
          boxItems_.add(index, value);
          onChanged();
        } else {
          boxItemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder addBoxItems(
          myudfs.Common.MapItem6.Builder builderForValue) {
        if (boxItemsBuilder_ == null) {
          ensureBoxItemsIsMutable();
          boxItems_.add(builderForValue.build());
          onChanged();
        } else {
          boxItemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder addBoxItems(
          int index, myudfs.Common.MapItem6.Builder builderForValue) {
        if (boxItemsBuilder_ == null) {
          ensureBoxItemsIsMutable();
          boxItems_.add(index, builderForValue.build());
          onChanged();
        } else {
          boxItemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder addAllBoxItems(
          java.lang.Iterable<? extends myudfs.Common.MapItem6> values) {
        if (boxItemsBuilder_ == null) {
          ensureBoxItemsIsMutable();
          super.addAll(values, boxItems_);
          onChanged();
        } else {
          boxItemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder clearBoxItems() {
        if (boxItemsBuilder_ == null) {
          boxItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          boxItemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public Builder removeBoxItems(int index) {
        if (boxItemsBuilder_ == null) {
          ensureBoxItemsIsMutable();
          boxItems_.remove(index);
          onChanged();
        } else {
          boxItemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder getBoxItemsBuilder(
          int index) {
        return getBoxItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public myudfs.Common.MapItem6OrBuilder getBoxItemsOrBuilder(
          int index) {
        if (boxItemsBuilder_ == null) {
          return boxItems_.get(index);  } else {
          return boxItemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItem6OrBuilder> 
           getBoxItemsOrBuilderList() {
        if (boxItemsBuilder_ != null) {
          return boxItemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boxItems_);
        }
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder addBoxItemsBuilder() {
        return getBoxItemsFieldBuilder().addBuilder(
            myudfs.Common.MapItem6.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public myudfs.Common.MapItem6.Builder addBoxItemsBuilder(
          int index) {
        return getBoxItemsFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem6.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem6 boxItems = 41;</code>
       *
       * <pre>
       * 宝箱列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem6.Builder> 
           getBoxItemsBuilderList() {
        return getBoxItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder> 
          getBoxItemsFieldBuilder() {
        if (boxItemsBuilder_ == null) {
          boxItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem6, myudfs.Common.MapItem6.Builder, myudfs.Common.MapItem6OrBuilder>(
                  boxItems_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          boxItems_ = null;
        }
        return boxItemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MailEncourage)
    }

    static {
      defaultInstance = new MailEncourage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MailEncourage)
  }

  public interface PvpFightResultItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
     * </pre>
     */
    int getType();

    // optional string targetName = 2;
    /**
     * <code>optional string targetName = 2;</code>
     *
     * <pre>
     *另一方的名字
     * </pre>
     */
    boolean hasTargetName();
    /**
     * <code>optional string targetName = 2;</code>
     *
     * <pre>
     *另一方的名字
     * </pre>
     */
    java.lang.String getTargetName();
    /**
     * <code>optional string targetName = 2;</code>
     *
     * <pre>
     *另一方的名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getTargetNameBytes();

    // optional int32 floor = 3;
    /**
     * <code>optional int32 floor = 3;</code>
     *
     * <pre>
     *变化的楼层
     * </pre>
     */
    boolean hasFloor();
    /**
     * <code>optional int32 floor = 3;</code>
     *
     * <pre>
     *变化的楼层
     * </pre>
     */
    int getFloor();

    // optional int32 gold = 4;
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *获得的金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *获得的金币
     * </pre>
     */
    int getGold();

    // optional int32 shengWang = 5;
    /**
     * <code>optional int32 shengWang = 5;</code>
     *
     * <pre>
     *获得的声望
     * </pre>
     */
    boolean hasShengWang();
    /**
     * <code>optional int32 shengWang = 5;</code>
     *
     * <pre>
     *获得的声望
     * </pre>
     */
    int getShengWang();

    // optional int32 targetFloor = 6;
    /**
     * <code>optional int32 targetFloor = 6;</code>
     *
     * <pre>
     *另一方当前的楼层
     * </pre>
     */
    boolean hasTargetFloor();
    /**
     * <code>optional int32 targetFloor = 6;</code>
     *
     * <pre>
     *另一方当前的楼层
     * </pre>
     */
    int getTargetFloor();

    // optional uint64 date = 7;
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    boolean hasDate();
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    long getDate();

    // optional int64 targetId = 8;
    /**
     * <code>optional int64 targetId = 8;</code>
     *
     * <pre>
     *另一方的id
     * </pre>
     */
    boolean hasTargetId();
    /**
     * <code>optional int64 targetId = 8;</code>
     *
     * <pre>
     *另一方的id
     * </pre>
     */
    long getTargetId();

    // optional int32 coin = 9;
    /**
     * <code>optional int32 coin = 9;</code>
     */
    boolean hasCoin();
    /**
     * <code>optional int32 coin = 9;</code>
     */
    int getCoin();

    // optional int64 resultId = 10;
    /**
     * <code>optional int64 resultId = 10;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    boolean hasResultId();
    /**
     * <code>optional int64 resultId = 10;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    long getResultId();

    // optional bool displayFightResultButton = 11;
    /**
     * <code>optional bool displayFightResultButton = 11;</code>
     *
     * <pre>
     * true:显示战报按钮 false:不显示
     * </pre>
     */
    boolean hasDisplayFightResultButton();
    /**
     * <code>optional bool displayFightResultButton = 11;</code>
     *
     * <pre>
     * true:显示战报按钮 false:不显示
     * </pre>
     */
    boolean getDisplayFightResultButton();
  }
  /**
   * Protobuf type {@code PvpFightResultItem}
   */
  public static final class PvpFightResultItem extends
      com.google.protobuf.GeneratedMessage
      implements PvpFightResultItemOrBuilder {
    // Use PvpFightResultItem.newBuilder() to construct.
    private PvpFightResultItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PvpFightResultItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PvpFightResultItem defaultInstance;
    public static PvpFightResultItem getDefaultInstance() {
      return defaultInstance;
    }

    public PvpFightResultItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PvpFightResultItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              targetName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              floor_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gold_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              shengWang_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              targetFloor_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              date_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              targetId_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              coin_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              resultId_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              displayFightResultButton_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PvpFightResultItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PvpFightResultItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PvpFightResultItem.class, myudfs.Common.PvpFightResultItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PvpFightResultItem> PARSER =
        new com.google.protobuf.AbstractParser<PvpFightResultItem>() {
      public PvpFightResultItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PvpFightResultItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PvpFightResultItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional string targetName = 2;
    public static final int TARGETNAME_FIELD_NUMBER = 2;
    private java.lang.Object targetName_;
    /**
     * <code>optional string targetName = 2;</code>
     *
     * <pre>
     *另一方的名字
     * </pre>
     */
    public boolean hasTargetName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string targetName = 2;</code>
     *
     * <pre>
     *另一方的名字
     * </pre>
     */
    public java.lang.String getTargetName() {
      java.lang.Object ref = targetName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          targetName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string targetName = 2;</code>
     *
     * <pre>
     *另一方的名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTargetNameBytes() {
      java.lang.Object ref = targetName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 floor = 3;
    public static final int FLOOR_FIELD_NUMBER = 3;
    private int floor_;
    /**
     * <code>optional int32 floor = 3;</code>
     *
     * <pre>
     *变化的楼层
     * </pre>
     */
    public boolean hasFloor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 floor = 3;</code>
     *
     * <pre>
     *变化的楼层
     * </pre>
     */
    public int getFloor() {
      return floor_;
    }

    // optional int32 gold = 4;
    public static final int GOLD_FIELD_NUMBER = 4;
    private int gold_;
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *获得的金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *获得的金币
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional int32 shengWang = 5;
    public static final int SHENGWANG_FIELD_NUMBER = 5;
    private int shengWang_;
    /**
     * <code>optional int32 shengWang = 5;</code>
     *
     * <pre>
     *获得的声望
     * </pre>
     */
    public boolean hasShengWang() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 shengWang = 5;</code>
     *
     * <pre>
     *获得的声望
     * </pre>
     */
    public int getShengWang() {
      return shengWang_;
    }

    // optional int32 targetFloor = 6;
    public static final int TARGETFLOOR_FIELD_NUMBER = 6;
    private int targetFloor_;
    /**
     * <code>optional int32 targetFloor = 6;</code>
     *
     * <pre>
     *另一方当前的楼层
     * </pre>
     */
    public boolean hasTargetFloor() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 targetFloor = 6;</code>
     *
     * <pre>
     *另一方当前的楼层
     * </pre>
     */
    public int getTargetFloor() {
      return targetFloor_;
    }

    // optional uint64 date = 7;
    public static final int DATE_FIELD_NUMBER = 7;
    private long date_;
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 date = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    public long getDate() {
      return date_;
    }

    // optional int64 targetId = 8;
    public static final int TARGETID_FIELD_NUMBER = 8;
    private long targetId_;
    /**
     * <code>optional int64 targetId = 8;</code>
     *
     * <pre>
     *另一方的id
     * </pre>
     */
    public boolean hasTargetId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 targetId = 8;</code>
     *
     * <pre>
     *另一方的id
     * </pre>
     */
    public long getTargetId() {
      return targetId_;
    }

    // optional int32 coin = 9;
    public static final int COIN_FIELD_NUMBER = 9;
    private int coin_;
    /**
     * <code>optional int32 coin = 9;</code>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 coin = 9;</code>
     */
    public int getCoin() {
      return coin_;
    }

    // optional int64 resultId = 10;
    public static final int RESULTID_FIELD_NUMBER = 10;
    private long resultId_;
    /**
     * <code>optional int64 resultId = 10;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    public boolean hasResultId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 resultId = 10;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    public long getResultId() {
      return resultId_;
    }

    // optional bool displayFightResultButton = 11;
    public static final int DISPLAYFIGHTRESULTBUTTON_FIELD_NUMBER = 11;
    private boolean displayFightResultButton_;
    /**
     * <code>optional bool displayFightResultButton = 11;</code>
     *
     * <pre>
     * true:显示战报按钮 false:不显示
     * </pre>
     */
    public boolean hasDisplayFightResultButton() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool displayFightResultButton = 11;</code>
     *
     * <pre>
     * true:显示战报按钮 false:不显示
     * </pre>
     */
    public boolean getDisplayFightResultButton() {
      return displayFightResultButton_;
    }

    private void initFields() {
      type_ = 0;
      targetName_ = "";
      floor_ = 0;
      gold_ = 0;
      shengWang_ = 0;
      targetFloor_ = 0;
      date_ = 0L;
      targetId_ = 0L;
      coin_ = 0;
      resultId_ = 0L;
      displayFightResultButton_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTargetNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, floor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, shengWang_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, targetFloor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, date_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, targetId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, coin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, resultId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, displayFightResultButton_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTargetNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, floor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, shengWang_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, targetFloor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, date_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, targetId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, coin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, resultId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, displayFightResultButton_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PvpFightResultItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpFightResultItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpFightResultItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpFightResultItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpFightResultItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpFightResultItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpFightResultItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PvpFightResultItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpFightResultItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpFightResultItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PvpFightResultItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PvpFightResultItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PvpFightResultItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PvpFightResultItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PvpFightResultItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PvpFightResultItem.class, myudfs.Common.PvpFightResultItem.Builder.class);
      }

      // Construct using myudfs.Common.PvpFightResultItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        floor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        shengWang_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        targetFloor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        date_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        targetId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        coin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        resultId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        displayFightResultButton_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PvpFightResultItem_descriptor;
      }

      public myudfs.Common.PvpFightResultItem getDefaultInstanceForType() {
        return myudfs.Common.PvpFightResultItem.getDefaultInstance();
      }

      public myudfs.Common.PvpFightResultItem build() {
        myudfs.Common.PvpFightResultItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PvpFightResultItem buildPartial() {
        myudfs.Common.PvpFightResultItem result = new myudfs.Common.PvpFightResultItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetName_ = targetName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.floor_ = floor_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.shengWang_ = shengWang_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.targetFloor_ = targetFloor_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.targetId_ = targetId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.coin_ = coin_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.resultId_ = resultId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.displayFightResultButton_ = displayFightResultButton_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PvpFightResultItem) {
          return mergeFrom((myudfs.Common.PvpFightResultItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PvpFightResultItem other) {
        if (other == myudfs.Common.PvpFightResultItem.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTargetName()) {
          bitField0_ |= 0x00000002;
          targetName_ = other.targetName_;
          onChanged();
        }
        if (other.hasFloor()) {
          setFloor(other.getFloor());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasShengWang()) {
          setShengWang(other.getShengWang());
        }
        if (other.hasTargetFloor()) {
          setTargetFloor(other.getTargetFloor());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        if (other.hasTargetId()) {
          setTargetId(other.getTargetId());
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (other.hasResultId()) {
          setResultId(other.getResultId());
        }
        if (other.hasDisplayFightResultButton()) {
          setDisplayFightResultButton(other.getDisplayFightResultButton());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PvpFightResultItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PvpFightResultItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 1:挑战胜利 2:挑战失败 3:被挑战成功 4:被挑战失败 5:掠夺成功 6:掠夺失败 7:被掠夺成功 8:被掠夺失败
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional string targetName = 2;
      private java.lang.Object targetName_ = "";
      /**
       * <code>optional string targetName = 2;</code>
       *
       * <pre>
       *另一方的名字
       * </pre>
       */
      public boolean hasTargetName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string targetName = 2;</code>
       *
       * <pre>
       *另一方的名字
       * </pre>
       */
      public java.lang.String getTargetName() {
        java.lang.Object ref = targetName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          targetName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string targetName = 2;</code>
       *
       * <pre>
       *另一方的名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTargetNameBytes() {
        java.lang.Object ref = targetName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string targetName = 2;</code>
       *
       * <pre>
       *另一方的名字
       * </pre>
       */
      public Builder setTargetName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        targetName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string targetName = 2;</code>
       *
       * <pre>
       *另一方的名字
       * </pre>
       */
      public Builder clearTargetName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetName_ = getDefaultInstance().getTargetName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string targetName = 2;</code>
       *
       * <pre>
       *另一方的名字
       * </pre>
       */
      public Builder setTargetNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        targetName_ = value;
        onChanged();
        return this;
      }

      // optional int32 floor = 3;
      private int floor_ ;
      /**
       * <code>optional int32 floor = 3;</code>
       *
       * <pre>
       *变化的楼层
       * </pre>
       */
      public boolean hasFloor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 floor = 3;</code>
       *
       * <pre>
       *变化的楼层
       * </pre>
       */
      public int getFloor() {
        return floor_;
      }
      /**
       * <code>optional int32 floor = 3;</code>
       *
       * <pre>
       *变化的楼层
       * </pre>
       */
      public Builder setFloor(int value) {
        bitField0_ |= 0x00000004;
        floor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 floor = 3;</code>
       *
       * <pre>
       *变化的楼层
       * </pre>
       */
      public Builder clearFloor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        floor_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gold = 4;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *获得的金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *获得的金币
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *获得的金币
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000008;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *获得的金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shengWang = 5;
      private int shengWang_ ;
      /**
       * <code>optional int32 shengWang = 5;</code>
       *
       * <pre>
       *获得的声望
       * </pre>
       */
      public boolean hasShengWang() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 shengWang = 5;</code>
       *
       * <pre>
       *获得的声望
       * </pre>
       */
      public int getShengWang() {
        return shengWang_;
      }
      /**
       * <code>optional int32 shengWang = 5;</code>
       *
       * <pre>
       *获得的声望
       * </pre>
       */
      public Builder setShengWang(int value) {
        bitField0_ |= 0x00000010;
        shengWang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shengWang = 5;</code>
       *
       * <pre>
       *获得的声望
       * </pre>
       */
      public Builder clearShengWang() {
        bitField0_ = (bitField0_ & ~0x00000010);
        shengWang_ = 0;
        onChanged();
        return this;
      }

      // optional int32 targetFloor = 6;
      private int targetFloor_ ;
      /**
       * <code>optional int32 targetFloor = 6;</code>
       *
       * <pre>
       *另一方当前的楼层
       * </pre>
       */
      public boolean hasTargetFloor() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 targetFloor = 6;</code>
       *
       * <pre>
       *另一方当前的楼层
       * </pre>
       */
      public int getTargetFloor() {
        return targetFloor_;
      }
      /**
       * <code>optional int32 targetFloor = 6;</code>
       *
       * <pre>
       *另一方当前的楼层
       * </pre>
       */
      public Builder setTargetFloor(int value) {
        bitField0_ |= 0x00000020;
        targetFloor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 targetFloor = 6;</code>
       *
       * <pre>
       *另一方当前的楼层
       * </pre>
       */
      public Builder clearTargetFloor() {
        bitField0_ = (bitField0_ & ~0x00000020);
        targetFloor_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 date = 7;
      private long date_ ;
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public long getDate() {
        return date_;
      }
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public Builder setDate(long value) {
        bitField0_ |= 0x00000040;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 date = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        date_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 targetId = 8;
      private long targetId_ ;
      /**
       * <code>optional int64 targetId = 8;</code>
       *
       * <pre>
       *另一方的id
       * </pre>
       */
      public boolean hasTargetId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 targetId = 8;</code>
       *
       * <pre>
       *另一方的id
       * </pre>
       */
      public long getTargetId() {
        return targetId_;
      }
      /**
       * <code>optional int64 targetId = 8;</code>
       *
       * <pre>
       *另一方的id
       * </pre>
       */
      public Builder setTargetId(long value) {
        bitField0_ |= 0x00000080;
        targetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 targetId = 8;</code>
       *
       * <pre>
       *另一方的id
       * </pre>
       */
      public Builder clearTargetId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        targetId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 coin = 9;
      private int coin_ ;
      /**
       * <code>optional int32 coin = 9;</code>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 coin = 9;</code>
       */
      public int getCoin() {
        return coin_;
      }
      /**
       * <code>optional int32 coin = 9;</code>
       */
      public Builder setCoin(int value) {
        bitField0_ |= 0x00000100;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 coin = 9;</code>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x00000100);
        coin_ = 0;
        onChanged();
        return this;
      }

      // optional int64 resultId = 10;
      private long resultId_ ;
      /**
       * <code>optional int64 resultId = 10;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public boolean hasResultId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 resultId = 10;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public long getResultId() {
        return resultId_;
      }
      /**
       * <code>optional int64 resultId = 10;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder setResultId(long value) {
        bitField0_ |= 0x00000200;
        resultId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 resultId = 10;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder clearResultId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        resultId_ = 0L;
        onChanged();
        return this;
      }

      // optional bool displayFightResultButton = 11;
      private boolean displayFightResultButton_ ;
      /**
       * <code>optional bool displayFightResultButton = 11;</code>
       *
       * <pre>
       * true:显示战报按钮 false:不显示
       * </pre>
       */
      public boolean hasDisplayFightResultButton() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool displayFightResultButton = 11;</code>
       *
       * <pre>
       * true:显示战报按钮 false:不显示
       * </pre>
       */
      public boolean getDisplayFightResultButton() {
        return displayFightResultButton_;
      }
      /**
       * <code>optional bool displayFightResultButton = 11;</code>
       *
       * <pre>
       * true:显示战报按钮 false:不显示
       * </pre>
       */
      public Builder setDisplayFightResultButton(boolean value) {
        bitField0_ |= 0x00000400;
        displayFightResultButton_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool displayFightResultButton = 11;</code>
       *
       * <pre>
       * true:显示战报按钮 false:不显示
       * </pre>
       */
      public Builder clearDisplayFightResultButton() {
        bitField0_ = (bitField0_ & ~0x00000400);
        displayFightResultButton_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PvpFightResultItem)
    }

    static {
      defaultInstance = new PvpFightResultItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PvpFightResultItem)
  }

  public interface ShenTongItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *神通配置id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *神通配置id
     * </pre>
     */
    int getId();

    // optional int32 exp = 2;
    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     *神通当前经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     *神通当前经验
     * </pre>
     */
    int getExp();

    // optional int32 index = 3;
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     *所在的神通槽位
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     *所在的神通槽位
     * </pre>
     */
    int getIndex();

    // optional int32 expMultiple = 4;
    /**
     * <code>optional int32 expMultiple = 4;</code>
     *
     * <pre>
     *经验暴击倍数
     * </pre>
     */
    boolean hasExpMultiple();
    /**
     * <code>optional int32 expMultiple = 4;</code>
     *
     * <pre>
     *经验暴击倍数
     * </pre>
     */
    int getExpMultiple();

    // optional bool available = 5;
    /**
     * <code>optional bool available = 5;</code>
     *
     * <pre>
     * 借好友卡地方用
     * </pre>
     */
    boolean hasAvailable();
    /**
     * <code>optional bool available = 5;</code>
     *
     * <pre>
     * 借好友卡地方用
     * </pre>
     */
    boolean getAvailable();

    // optional bool isTiansheng = 6;
    /**
     * <code>optional bool isTiansheng = 6;</code>
     */
    boolean hasIsTiansheng();
    /**
     * <code>optional bool isTiansheng = 6;</code>
     */
    boolean getIsTiansheng();
  }
  /**
   * Protobuf type {@code ShenTongItem}
   */
  public static final class ShenTongItem extends
      com.google.protobuf.GeneratedMessage
      implements ShenTongItemOrBuilder {
    // Use ShenTongItem.newBuilder() to construct.
    private ShenTongItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShenTongItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShenTongItem defaultInstance;
    public static ShenTongItem getDefaultInstance() {
      return defaultInstance;
    }

    public ShenTongItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShenTongItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exp_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              index_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              expMultiple_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              available_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isTiansheng_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ShenTongItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ShenTongItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ShenTongItem.class, myudfs.Common.ShenTongItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ShenTongItem> PARSER =
        new com.google.protobuf.AbstractParser<ShenTongItem>() {
      public ShenTongItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShenTongItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShenTongItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *神通配置id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *神通配置id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 exp = 2;
    public static final int EXP_FIELD_NUMBER = 2;
    private int exp_;
    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     *神通当前经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     *神通当前经验
     * </pre>
     */
    public int getExp() {
      return exp_;
    }

    // optional int32 index = 3;
    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_;
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     *所在的神通槽位
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     *所在的神通槽位
     * </pre>
     */
    public int getIndex() {
      return index_;
    }

    // optional int32 expMultiple = 4;
    public static final int EXPMULTIPLE_FIELD_NUMBER = 4;
    private int expMultiple_;
    /**
     * <code>optional int32 expMultiple = 4;</code>
     *
     * <pre>
     *经验暴击倍数
     * </pre>
     */
    public boolean hasExpMultiple() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 expMultiple = 4;</code>
     *
     * <pre>
     *经验暴击倍数
     * </pre>
     */
    public int getExpMultiple() {
      return expMultiple_;
    }

    // optional bool available = 5;
    public static final int AVAILABLE_FIELD_NUMBER = 5;
    private boolean available_;
    /**
     * <code>optional bool available = 5;</code>
     *
     * <pre>
     * 借好友卡地方用
     * </pre>
     */
    public boolean hasAvailable() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool available = 5;</code>
     *
     * <pre>
     * 借好友卡地方用
     * </pre>
     */
    public boolean getAvailable() {
      return available_;
    }

    // optional bool isTiansheng = 6;
    public static final int ISTIANSHENG_FIELD_NUMBER = 6;
    private boolean isTiansheng_;
    /**
     * <code>optional bool isTiansheng = 6;</code>
     */
    public boolean hasIsTiansheng() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isTiansheng = 6;</code>
     */
    public boolean getIsTiansheng() {
      return isTiansheng_;
    }

    private void initFields() {
      id_ = 0;
      exp_ = 0;
      index_ = 0;
      expMultiple_ = 0;
      available_ = false;
      isTiansheng_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, exp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, index_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, expMultiple_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, available_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isTiansheng_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, exp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, expMultiple_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, available_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isTiansheng_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ShenTongItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ShenTongItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ShenTongItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ShenTongItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ShenTongItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ShenTongItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ShenTongItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ShenTongItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ShenTongItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ShenTongItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ShenTongItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ShenTongItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ShenTongItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ShenTongItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ShenTongItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ShenTongItem.class, myudfs.Common.ShenTongItem.Builder.class);
      }

      // Construct using myudfs.Common.ShenTongItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        expMultiple_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        available_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        isTiansheng_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ShenTongItem_descriptor;
      }

      public myudfs.Common.ShenTongItem getDefaultInstanceForType() {
        return myudfs.Common.ShenTongItem.getDefaultInstance();
      }

      public myudfs.Common.ShenTongItem build() {
        myudfs.Common.ShenTongItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ShenTongItem buildPartial() {
        myudfs.Common.ShenTongItem result = new myudfs.Common.ShenTongItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.expMultiple_ = expMultiple_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.available_ = available_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isTiansheng_ = isTiansheng_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ShenTongItem) {
          return mergeFrom((myudfs.Common.ShenTongItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ShenTongItem other) {
        if (other == myudfs.Common.ShenTongItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasExpMultiple()) {
          setExpMultiple(other.getExpMultiple());
        }
        if (other.hasAvailable()) {
          setAvailable(other.getAvailable());
        }
        if (other.hasIsTiansheng()) {
          setIsTiansheng(other.getIsTiansheng());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ShenTongItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ShenTongItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *神通配置id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *神通配置id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *神通配置id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *神通配置id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 exp = 2;
      private int exp_ ;
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       *神通当前经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       *神通当前经验
       * </pre>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       *神通当前经验
       * </pre>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000002;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       *神通当前经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 index = 3;
      private int index_ ;
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       *所在的神通槽位
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       *所在的神通槽位
       * </pre>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       *所在的神通槽位
       * </pre>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000004;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       *所在的神通槽位
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        index_ = 0;
        onChanged();
        return this;
      }

      // optional int32 expMultiple = 4;
      private int expMultiple_ ;
      /**
       * <code>optional int32 expMultiple = 4;</code>
       *
       * <pre>
       *经验暴击倍数
       * </pre>
       */
      public boolean hasExpMultiple() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 expMultiple = 4;</code>
       *
       * <pre>
       *经验暴击倍数
       * </pre>
       */
      public int getExpMultiple() {
        return expMultiple_;
      }
      /**
       * <code>optional int32 expMultiple = 4;</code>
       *
       * <pre>
       *经验暴击倍数
       * </pre>
       */
      public Builder setExpMultiple(int value) {
        bitField0_ |= 0x00000008;
        expMultiple_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 expMultiple = 4;</code>
       *
       * <pre>
       *经验暴击倍数
       * </pre>
       */
      public Builder clearExpMultiple() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expMultiple_ = 0;
        onChanged();
        return this;
      }

      // optional bool available = 5;
      private boolean available_ ;
      /**
       * <code>optional bool available = 5;</code>
       *
       * <pre>
       * 借好友卡地方用
       * </pre>
       */
      public boolean hasAvailable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool available = 5;</code>
       *
       * <pre>
       * 借好友卡地方用
       * </pre>
       */
      public boolean getAvailable() {
        return available_;
      }
      /**
       * <code>optional bool available = 5;</code>
       *
       * <pre>
       * 借好友卡地方用
       * </pre>
       */
      public Builder setAvailable(boolean value) {
        bitField0_ |= 0x00000010;
        available_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool available = 5;</code>
       *
       * <pre>
       * 借好友卡地方用
       * </pre>
       */
      public Builder clearAvailable() {
        bitField0_ = (bitField0_ & ~0x00000010);
        available_ = false;
        onChanged();
        return this;
      }

      // optional bool isTiansheng = 6;
      private boolean isTiansheng_ ;
      /**
       * <code>optional bool isTiansheng = 6;</code>
       */
      public boolean hasIsTiansheng() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool isTiansheng = 6;</code>
       */
      public boolean getIsTiansheng() {
        return isTiansheng_;
      }
      /**
       * <code>optional bool isTiansheng = 6;</code>
       */
      public Builder setIsTiansheng(boolean value) {
        bitField0_ |= 0x00000020;
        isTiansheng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isTiansheng = 6;</code>
       */
      public Builder clearIsTiansheng() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isTiansheng_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ShenTongItem)
    }

    static {
      defaultInstance = new ShenTongItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ShenTongItem)
  }

  public interface MissionItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    // optional int32 status = 2;
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 1:任务条件完成，可交任务
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 1:任务条件完成，可交任务
     * </pre>
     */
    int getStatus();

    // optional bool dialogShowed = 3;
    /**
     * <code>optional bool dialogShowed = 3;</code>
     *
     * <pre>
     * true:对白已播放
     * </pre>
     */
    boolean hasDialogShowed();
    /**
     * <code>optional bool dialogShowed = 3;</code>
     *
     * <pre>
     * true:对白已播放
     * </pre>
     */
    boolean getDialogShowed();

    // optional int32 targetFinished = 4;
    /**
     * <code>optional int32 targetFinished = 4;</code>
     *
     * <pre>
     * 目标1达成(预留的扩展，防止策划继续加达成的目标)
     * </pre>
     */
    boolean hasTargetFinished();
    /**
     * <code>optional int32 targetFinished = 4;</code>
     *
     * <pre>
     * 目标1达成(预留的扩展，防止策划继续加达成的目标)
     * </pre>
     */
    int getTargetFinished();

    // optional int32 type = 5;
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 0:非日常任务 1:日常任务
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 0:非日常任务 1:日常任务
     * </pre>
     */
    int getType();

    // optional int32 aimNum = 6;
    /**
     * <code>optional int32 aimNum = 6;</code>
     *
     * <pre>
     * 已完成的次数
     * </pre>
     */
    boolean hasAimNum();
    /**
     * <code>optional int32 aimNum = 6;</code>
     *
     * <pre>
     * 已完成的次数
     * </pre>
     */
    int getAimNum();

    // optional string guideId = 7;
    /**
     * <code>optional string guideId = 7;</code>
     */
    boolean hasGuideId();
    /**
     * <code>optional string guideId = 7;</code>
     */
    java.lang.String getGuideId();
    /**
     * <code>optional string guideId = 7;</code>
     */
    com.google.protobuf.ByteString
        getGuideIdBytes();
  }
  /**
   * Protobuf type {@code MissionItem}
   */
  public static final class MissionItem extends
      com.google.protobuf.GeneratedMessage
      implements MissionItemOrBuilder {
    // Use MissionItem.newBuilder() to construct.
    private MissionItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MissionItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MissionItem defaultInstance;
    public static MissionItem getDefaultInstance() {
      return defaultInstance;
    }

    public MissionItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MissionItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dialogShowed_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              targetFinished_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              aimNum_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              guideId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MissionItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MissionItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MissionItem.class, myudfs.Common.MissionItem.Builder.class);
    }

    public static com.google.protobuf.Parser<MissionItem> PARSER =
        new com.google.protobuf.AbstractParser<MissionItem>() {
      public MissionItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MissionItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MissionItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 1:任务条件完成，可交任务
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 1:任务条件完成，可交任务
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional bool dialogShowed = 3;
    public static final int DIALOGSHOWED_FIELD_NUMBER = 3;
    private boolean dialogShowed_;
    /**
     * <code>optional bool dialogShowed = 3;</code>
     *
     * <pre>
     * true:对白已播放
     * </pre>
     */
    public boolean hasDialogShowed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool dialogShowed = 3;</code>
     *
     * <pre>
     * true:对白已播放
     * </pre>
     */
    public boolean getDialogShowed() {
      return dialogShowed_;
    }

    // optional int32 targetFinished = 4;
    public static final int TARGETFINISHED_FIELD_NUMBER = 4;
    private int targetFinished_;
    /**
     * <code>optional int32 targetFinished = 4;</code>
     *
     * <pre>
     * 目标1达成(预留的扩展，防止策划继续加达成的目标)
     * </pre>
     */
    public boolean hasTargetFinished() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 targetFinished = 4;</code>
     *
     * <pre>
     * 目标1达成(预留的扩展，防止策划继续加达成的目标)
     * </pre>
     */
    public int getTargetFinished() {
      return targetFinished_;
    }

    // optional int32 type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 0:非日常任务 1:日常任务
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 0:非日常任务 1:日常任务
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 aimNum = 6;
    public static final int AIMNUM_FIELD_NUMBER = 6;
    private int aimNum_;
    /**
     * <code>optional int32 aimNum = 6;</code>
     *
     * <pre>
     * 已完成的次数
     * </pre>
     */
    public boolean hasAimNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 aimNum = 6;</code>
     *
     * <pre>
     * 已完成的次数
     * </pre>
     */
    public int getAimNum() {
      return aimNum_;
    }

    // optional string guideId = 7;
    public static final int GUIDEID_FIELD_NUMBER = 7;
    private java.lang.Object guideId_;
    /**
     * <code>optional string guideId = 7;</code>
     */
    public boolean hasGuideId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string guideId = 7;</code>
     */
    public java.lang.String getGuideId() {
      java.lang.Object ref = guideId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          guideId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string guideId = 7;</code>
     */
    public com.google.protobuf.ByteString
        getGuideIdBytes() {
      java.lang.Object ref = guideId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        guideId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = 0;
      status_ = 0;
      dialogShowed_ = false;
      targetFinished_ = 0;
      type_ = 0;
      aimNum_ = 0;
      guideId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, dialogShowed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, targetFinished_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, aimNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getGuideIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, dialogShowed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, targetFinished_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, aimNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getGuideIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MissionItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MissionItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MissionItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MissionItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MissionItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MissionItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MissionItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MissionItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MissionItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MissionItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MissionItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MissionItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MissionItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MissionItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MissionItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MissionItem.class, myudfs.Common.MissionItem.Builder.class);
      }

      // Construct using myudfs.Common.MissionItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dialogShowed_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        targetFinished_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        aimNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        guideId_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MissionItem_descriptor;
      }

      public myudfs.Common.MissionItem getDefaultInstanceForType() {
        return myudfs.Common.MissionItem.getDefaultInstance();
      }

      public myudfs.Common.MissionItem build() {
        myudfs.Common.MissionItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MissionItem buildPartial() {
        myudfs.Common.MissionItem result = new myudfs.Common.MissionItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dialogShowed_ = dialogShowed_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.targetFinished_ = targetFinished_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.aimNum_ = aimNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.guideId_ = guideId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MissionItem) {
          return mergeFrom((myudfs.Common.MissionItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MissionItem other) {
        if (other == myudfs.Common.MissionItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasDialogShowed()) {
          setDialogShowed(other.getDialogShowed());
        }
        if (other.hasTargetFinished()) {
          setTargetFinished(other.getTargetFinished());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasAimNum()) {
          setAimNum(other.getAimNum());
        }
        if (other.hasGuideId()) {
          bitField0_ |= 0x00000040;
          guideId_ = other.guideId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MissionItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MissionItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 2;
      private int status_ ;
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 1:任务条件完成，可交任务
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 1:任务条件完成，可交任务
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 1:任务条件完成，可交任务
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 1:任务条件完成，可交任务
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional bool dialogShowed = 3;
      private boolean dialogShowed_ ;
      /**
       * <code>optional bool dialogShowed = 3;</code>
       *
       * <pre>
       * true:对白已播放
       * </pre>
       */
      public boolean hasDialogShowed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool dialogShowed = 3;</code>
       *
       * <pre>
       * true:对白已播放
       * </pre>
       */
      public boolean getDialogShowed() {
        return dialogShowed_;
      }
      /**
       * <code>optional bool dialogShowed = 3;</code>
       *
       * <pre>
       * true:对白已播放
       * </pre>
       */
      public Builder setDialogShowed(boolean value) {
        bitField0_ |= 0x00000004;
        dialogShowed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool dialogShowed = 3;</code>
       *
       * <pre>
       * true:对白已播放
       * </pre>
       */
      public Builder clearDialogShowed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dialogShowed_ = false;
        onChanged();
        return this;
      }

      // optional int32 targetFinished = 4;
      private int targetFinished_ ;
      /**
       * <code>optional int32 targetFinished = 4;</code>
       *
       * <pre>
       * 目标1达成(预留的扩展，防止策划继续加达成的目标)
       * </pre>
       */
      public boolean hasTargetFinished() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 targetFinished = 4;</code>
       *
       * <pre>
       * 目标1达成(预留的扩展，防止策划继续加达成的目标)
       * </pre>
       */
      public int getTargetFinished() {
        return targetFinished_;
      }
      /**
       * <code>optional int32 targetFinished = 4;</code>
       *
       * <pre>
       * 目标1达成(预留的扩展，防止策划继续加达成的目标)
       * </pre>
       */
      public Builder setTargetFinished(int value) {
        bitField0_ |= 0x00000008;
        targetFinished_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 targetFinished = 4;</code>
       *
       * <pre>
       * 目标1达成(预留的扩展，防止策划继续加达成的目标)
       * </pre>
       */
      public Builder clearTargetFinished() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetFinished_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 5;
      private int type_ ;
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 0:非日常任务 1:日常任务
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 0:非日常任务 1:日常任务
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 0:非日常任务 1:日常任务
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 0:非日常任务 1:日常任务
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 aimNum = 6;
      private int aimNum_ ;
      /**
       * <code>optional int32 aimNum = 6;</code>
       *
       * <pre>
       * 已完成的次数
       * </pre>
       */
      public boolean hasAimNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 aimNum = 6;</code>
       *
       * <pre>
       * 已完成的次数
       * </pre>
       */
      public int getAimNum() {
        return aimNum_;
      }
      /**
       * <code>optional int32 aimNum = 6;</code>
       *
       * <pre>
       * 已完成的次数
       * </pre>
       */
      public Builder setAimNum(int value) {
        bitField0_ |= 0x00000020;
        aimNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 aimNum = 6;</code>
       *
       * <pre>
       * 已完成的次数
       * </pre>
       */
      public Builder clearAimNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        aimNum_ = 0;
        onChanged();
        return this;
      }

      // optional string guideId = 7;
      private java.lang.Object guideId_ = "";
      /**
       * <code>optional string guideId = 7;</code>
       */
      public boolean hasGuideId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string guideId = 7;</code>
       */
      public java.lang.String getGuideId() {
        java.lang.Object ref = guideId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          guideId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string guideId = 7;</code>
       */
      public com.google.protobuf.ByteString
          getGuideIdBytes() {
        java.lang.Object ref = guideId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guideId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string guideId = 7;</code>
       */
      public Builder setGuideId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        guideId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string guideId = 7;</code>
       */
      public Builder clearGuideId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        guideId_ = getDefaultInstance().getGuideId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string guideId = 7;</code>
       */
      public Builder setGuideIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        guideId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MissionItem)
    }

    static {
      defaultInstance = new MissionItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MissionItem)
  }

  public interface ServerListMessageItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string ip = 3;
    /**
     * <code>optional string ip = 3;</code>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 3;</code>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 3;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 port = 4;
    /**
     * <code>optional int32 port = 4;</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 4;</code>
     */
    int getPort();

    // optional int32 status = 5;
    /**
     * <code>optional int32 status = 5;</code>
     *
     * <pre>
     * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 5;</code>
     *
     * <pre>
     * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
     * </pre>
     */
    int getStatus();

    // optional int32 tuiJian = 6;
    /**
     * <code>optional int32 tuiJian = 6;</code>
     *
     * <pre>
     * 1:推荐
     * </pre>
     */
    boolean hasTuiJian();
    /**
     * <code>optional int32 tuiJian = 6;</code>
     *
     * <pre>
     * 1:推荐
     * </pre>
     */
    int getTuiJian();

    // optional bool isLogin = 7;
    /**
     * <code>optional bool isLogin = 7;</code>
     *
     * <pre>
     *是否登录过这个服务器
     * </pre>
     */
    boolean hasIsLogin();
    /**
     * <code>optional bool isLogin = 7;</code>
     *
     * <pre>
     *是否登录过这个服务器
     * </pre>
     */
    boolean getIsLogin();
  }
  /**
   * Protobuf type {@code ServerListMessageItem}
   */
  public static final class ServerListMessageItem extends
      com.google.protobuf.GeneratedMessage
      implements ServerListMessageItemOrBuilder {
    // Use ServerListMessageItem.newBuilder() to construct.
    private ServerListMessageItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ServerListMessageItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ServerListMessageItem defaultInstance;
    public static ServerListMessageItem getDefaultInstance() {
      return defaultInstance;
    }

    public ServerListMessageItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ServerListMessageItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ip_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              port_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tuiJian_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isLogin_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ServerListMessageItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ServerListMessageItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ServerListMessageItem.class, myudfs.Common.ServerListMessageItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ServerListMessageItem> PARSER =
        new com.google.protobuf.AbstractParser<ServerListMessageItem>() {
      public ServerListMessageItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServerListMessageItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServerListMessageItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ip = 3;
    public static final int IP_FIELD_NUMBER = 3;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 3;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ip = 3;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 4;
    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    /**
     * <code>optional int32 port = 4;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 port = 4;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional int32 status = 5;
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    /**
     * <code>optional int32 status = 5;</code>
     *
     * <pre>
     * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 status = 5;</code>
     *
     * <pre>
     * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 tuiJian = 6;
    public static final int TUIJIAN_FIELD_NUMBER = 6;
    private int tuiJian_;
    /**
     * <code>optional int32 tuiJian = 6;</code>
     *
     * <pre>
     * 1:推荐
     * </pre>
     */
    public boolean hasTuiJian() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tuiJian = 6;</code>
     *
     * <pre>
     * 1:推荐
     * </pre>
     */
    public int getTuiJian() {
      return tuiJian_;
    }

    // optional bool isLogin = 7;
    public static final int ISLOGIN_FIELD_NUMBER = 7;
    private boolean isLogin_;
    /**
     * <code>optional bool isLogin = 7;</code>
     *
     * <pre>
     *是否登录过这个服务器
     * </pre>
     */
    public boolean hasIsLogin() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool isLogin = 7;</code>
     *
     * <pre>
     *是否登录过这个服务器
     * </pre>
     */
    public boolean getIsLogin() {
      return isLogin_;
    }

    private void initFields() {
      id_ = 0;
      name_ = "";
      ip_ = "";
      port_ = 0;
      status_ = 0;
      tuiJian_ = 0;
      isLogin_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, tuiJian_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isLogin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tuiJian_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isLogin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ServerListMessageItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ServerListMessageItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ServerListMessageItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ServerListMessageItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ServerListMessageItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ServerListMessageItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ServerListMessageItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ServerListMessageItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ServerListMessageItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ServerListMessageItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ServerListMessageItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ServerListMessageItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ServerListMessageItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ServerListMessageItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ServerListMessageItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ServerListMessageItem.class, myudfs.Common.ServerListMessageItem.Builder.class);
      }

      // Construct using myudfs.Common.ServerListMessageItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tuiJian_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        isLogin_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ServerListMessageItem_descriptor;
      }

      public myudfs.Common.ServerListMessageItem getDefaultInstanceForType() {
        return myudfs.Common.ServerListMessageItem.getDefaultInstance();
      }

      public myudfs.Common.ServerListMessageItem build() {
        myudfs.Common.ServerListMessageItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ServerListMessageItem buildPartial() {
        myudfs.Common.ServerListMessageItem result = new myudfs.Common.ServerListMessageItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tuiJian_ = tuiJian_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isLogin_ = isLogin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ServerListMessageItem) {
          return mergeFrom((myudfs.Common.ServerListMessageItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ServerListMessageItem other) {
        if (other == myudfs.Common.ServerListMessageItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000004;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasTuiJian()) {
          setTuiJian(other.getTuiJian());
        }
        if (other.hasIsLogin()) {
          setIsLogin(other.getIsLogin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ServerListMessageItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ServerListMessageItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional string ip = 3;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 3;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ip = 3;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 3;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 3;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 3;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 4;
      private int port_ ;
      /**
       * <code>optional int32 port = 4;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 port = 4;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 4;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000008;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 4;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 5;
      private int status_ ;
      /**
       * <code>optional int32 status = 5;</code>
       *
       * <pre>
       * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 status = 5;</code>
       *
       * <pre>
       * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 5;</code>
       *
       * <pre>
       * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 5;</code>
       *
       * <pre>
       * 1:暂未开放 2:正常 3:火爆 4:新服 5:维护
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tuiJian = 6;
      private int tuiJian_ ;
      /**
       * <code>optional int32 tuiJian = 6;</code>
       *
       * <pre>
       * 1:推荐
       * </pre>
       */
      public boolean hasTuiJian() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tuiJian = 6;</code>
       *
       * <pre>
       * 1:推荐
       * </pre>
       */
      public int getTuiJian() {
        return tuiJian_;
      }
      /**
       * <code>optional int32 tuiJian = 6;</code>
       *
       * <pre>
       * 1:推荐
       * </pre>
       */
      public Builder setTuiJian(int value) {
        bitField0_ |= 0x00000020;
        tuiJian_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tuiJian = 6;</code>
       *
       * <pre>
       * 1:推荐
       * </pre>
       */
      public Builder clearTuiJian() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tuiJian_ = 0;
        onChanged();
        return this;
      }

      // optional bool isLogin = 7;
      private boolean isLogin_ ;
      /**
       * <code>optional bool isLogin = 7;</code>
       *
       * <pre>
       *是否登录过这个服务器
       * </pre>
       */
      public boolean hasIsLogin() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool isLogin = 7;</code>
       *
       * <pre>
       *是否登录过这个服务器
       * </pre>
       */
      public boolean getIsLogin() {
        return isLogin_;
      }
      /**
       * <code>optional bool isLogin = 7;</code>
       *
       * <pre>
       *是否登录过这个服务器
       * </pre>
       */
      public Builder setIsLogin(boolean value) {
        bitField0_ |= 0x00000040;
        isLogin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isLogin = 7;</code>
       *
       * <pre>
       *是否登录过这个服务器
       * </pre>
       */
      public Builder clearIsLogin() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isLogin_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ServerListMessageItem)
    }

    static {
      defaultInstance = new ServerListMessageItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ServerListMessageItem)
  }

  public interface VipPlayersItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .MapItem vipPlayers = 1;
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    java.util.List<myudfs.Common.MapItem> 
        getVipPlayersList();
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    myudfs.Common.MapItem getVipPlayers(int index);
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    int getVipPlayersCount();
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getVipPlayersOrBuilderList();
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    myudfs.Common.MapItemOrBuilder getVipPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code VipPlayersItem}
   */
  public static final class VipPlayersItem extends
      com.google.protobuf.GeneratedMessage
      implements VipPlayersItemOrBuilder {
    // Use VipPlayersItem.newBuilder() to construct.
    private VipPlayersItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VipPlayersItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VipPlayersItem defaultInstance;
    public static VipPlayersItem getDefaultInstance() {
      return defaultInstance;
    }

    public VipPlayersItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VipPlayersItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                vipPlayers_ = new java.util.ArrayList<myudfs.Common.MapItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              vipPlayers_.add(input.readMessage(myudfs.Common.MapItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          vipPlayers_ = java.util.Collections.unmodifiableList(vipPlayers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_VipPlayersItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_VipPlayersItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.VipPlayersItem.class, myudfs.Common.VipPlayersItem.Builder.class);
    }

    public static com.google.protobuf.Parser<VipPlayersItem> PARSER =
        new com.google.protobuf.AbstractParser<VipPlayersItem>() {
      public VipPlayersItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VipPlayersItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VipPlayersItem> getParserForType() {
      return PARSER;
    }

    // repeated .MapItem vipPlayers = 1;
    public static final int VIPPLAYERS_FIELD_NUMBER = 1;
    private java.util.List<myudfs.Common.MapItem> vipPlayers_;
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    public java.util.List<myudfs.Common.MapItem> getVipPlayersList() {
      return vipPlayers_;
    }
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
        getVipPlayersOrBuilderList() {
      return vipPlayers_;
    }
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    public int getVipPlayersCount() {
      return vipPlayers_.size();
    }
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    public myudfs.Common.MapItem getVipPlayers(int index) {
      return vipPlayers_.get(index);
    }
    /**
     * <code>repeated .MapItem vipPlayers = 1;</code>
     */
    public myudfs.Common.MapItemOrBuilder getVipPlayersOrBuilder(
        int index) {
      return vipPlayers_.get(index);
    }

    private void initFields() {
      vipPlayers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < vipPlayers_.size(); i++) {
        output.writeMessage(1, vipPlayers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vipPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vipPlayers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.VipPlayersItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.VipPlayersItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.VipPlayersItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.VipPlayersItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.VipPlayersItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.VipPlayersItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.VipPlayersItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.VipPlayersItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.VipPlayersItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.VipPlayersItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.VipPlayersItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code VipPlayersItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.VipPlayersItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_VipPlayersItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_VipPlayersItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.VipPlayersItem.class, myudfs.Common.VipPlayersItem.Builder.class);
      }

      // Construct using myudfs.Common.VipPlayersItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVipPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (vipPlayersBuilder_ == null) {
          vipPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vipPlayersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_VipPlayersItem_descriptor;
      }

      public myudfs.Common.VipPlayersItem getDefaultInstanceForType() {
        return myudfs.Common.VipPlayersItem.getDefaultInstance();
      }

      public myudfs.Common.VipPlayersItem build() {
        myudfs.Common.VipPlayersItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.VipPlayersItem buildPartial() {
        myudfs.Common.VipPlayersItem result = new myudfs.Common.VipPlayersItem(this);
        int from_bitField0_ = bitField0_;
        if (vipPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            vipPlayers_ = java.util.Collections.unmodifiableList(vipPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vipPlayers_ = vipPlayers_;
        } else {
          result.vipPlayers_ = vipPlayersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.VipPlayersItem) {
          return mergeFrom((myudfs.Common.VipPlayersItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.VipPlayersItem other) {
        if (other == myudfs.Common.VipPlayersItem.getDefaultInstance()) return this;
        if (vipPlayersBuilder_ == null) {
          if (!other.vipPlayers_.isEmpty()) {
            if (vipPlayers_.isEmpty()) {
              vipPlayers_ = other.vipPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVipPlayersIsMutable();
              vipPlayers_.addAll(other.vipPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.vipPlayers_.isEmpty()) {
            if (vipPlayersBuilder_.isEmpty()) {
              vipPlayersBuilder_.dispose();
              vipPlayersBuilder_ = null;
              vipPlayers_ = other.vipPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vipPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVipPlayersFieldBuilder() : null;
            } else {
              vipPlayersBuilder_.addAllMessages(other.vipPlayers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.VipPlayersItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.VipPlayersItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .MapItem vipPlayers = 1;
      private java.util.List<myudfs.Common.MapItem> vipPlayers_ =
        java.util.Collections.emptyList();
      private void ensureVipPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          vipPlayers_ = new java.util.ArrayList<myudfs.Common.MapItem>(vipPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> vipPlayersBuilder_;

      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public java.util.List<myudfs.Common.MapItem> getVipPlayersList() {
        if (vipPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vipPlayers_);
        } else {
          return vipPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public int getVipPlayersCount() {
        if (vipPlayersBuilder_ == null) {
          return vipPlayers_.size();
        } else {
          return vipPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public myudfs.Common.MapItem getVipPlayers(int index) {
        if (vipPlayersBuilder_ == null) {
          return vipPlayers_.get(index);
        } else {
          return vipPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder setVipPlayers(
          int index, myudfs.Common.MapItem value) {
        if (vipPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipPlayersIsMutable();
          vipPlayers_.set(index, value);
          onChanged();
        } else {
          vipPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder setVipPlayers(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (vipPlayersBuilder_ == null) {
          ensureVipPlayersIsMutable();
          vipPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          vipPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder addVipPlayers(myudfs.Common.MapItem value) {
        if (vipPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipPlayersIsMutable();
          vipPlayers_.add(value);
          onChanged();
        } else {
          vipPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder addVipPlayers(
          int index, myudfs.Common.MapItem value) {
        if (vipPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipPlayersIsMutable();
          vipPlayers_.add(index, value);
          onChanged();
        } else {
          vipPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder addVipPlayers(
          myudfs.Common.MapItem.Builder builderForValue) {
        if (vipPlayersBuilder_ == null) {
          ensureVipPlayersIsMutable();
          vipPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          vipPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder addVipPlayers(
          int index, myudfs.Common.MapItem.Builder builderForValue) {
        if (vipPlayersBuilder_ == null) {
          ensureVipPlayersIsMutable();
          vipPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          vipPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder addAllVipPlayers(
          java.lang.Iterable<? extends myudfs.Common.MapItem> values) {
        if (vipPlayersBuilder_ == null) {
          ensureVipPlayersIsMutable();
          super.addAll(values, vipPlayers_);
          onChanged();
        } else {
          vipPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder clearVipPlayers() {
        if (vipPlayersBuilder_ == null) {
          vipPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vipPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public Builder removeVipPlayers(int index) {
        if (vipPlayersBuilder_ == null) {
          ensureVipPlayersIsMutable();
          vipPlayers_.remove(index);
          onChanged();
        } else {
          vipPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public myudfs.Common.MapItem.Builder getVipPlayersBuilder(
          int index) {
        return getVipPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public myudfs.Common.MapItemOrBuilder getVipPlayersOrBuilder(
          int index) {
        if (vipPlayersBuilder_ == null) {
          return vipPlayers_.get(index);  } else {
          return vipPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public java.util.List<? extends myudfs.Common.MapItemOrBuilder> 
           getVipPlayersOrBuilderList() {
        if (vipPlayersBuilder_ != null) {
          return vipPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vipPlayers_);
        }
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public myudfs.Common.MapItem.Builder addVipPlayersBuilder() {
        return getVipPlayersFieldBuilder().addBuilder(
            myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public myudfs.Common.MapItem.Builder addVipPlayersBuilder(
          int index) {
        return getVipPlayersFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem vipPlayers = 1;</code>
       */
      public java.util.List<myudfs.Common.MapItem.Builder> 
           getVipPlayersBuilderList() {
        return getVipPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder> 
          getVipPlayersFieldBuilder() {
        if (vipPlayersBuilder_ == null) {
          vipPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem, myudfs.Common.MapItem.Builder, myudfs.Common.MapItemOrBuilder>(
                  vipPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          vipPlayers_ = null;
        }
        return vipPlayersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:VipPlayersItem)
    }

    static {
      defaultInstance = new VipPlayersItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VipPlayersItem)
  }

  public interface PvpExchangeItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * id
     * </pre>
     */
    int getId();

    // optional int32 costCredit = 2;
    /**
     * <code>optional int32 costCredit = 2;</code>
     *
     * <pre>
     * 兑换消耗的声望
     * </pre>
     */
    boolean hasCostCredit();
    /**
     * <code>optional int32 costCredit = 2;</code>
     *
     * <pre>
     * 兑换消耗的声望
     * </pre>
     */
    int getCostCredit();

    // optional int32 rewardCard = 3;
    /**
     * <code>optional int32 rewardCard = 3;</code>
     *
     * <pre>
     * 元神id
     * </pre>
     */
    boolean hasRewardCard();
    /**
     * <code>optional int32 rewardCard = 3;</code>
     *
     * <pre>
     * 元神id
     * </pre>
     */
    int getRewardCard();

    // optional int32 rewardCardNum = 4;
    /**
     * <code>optional int32 rewardCardNum = 4;</code>
     *
     * <pre>
     * 元神数量
     * </pre>
     */
    boolean hasRewardCardNum();
    /**
     * <code>optional int32 rewardCardNum = 4;</code>
     *
     * <pre>
     * 元神数量
     * </pre>
     */
    int getRewardCardNum();

    // optional int32 rewardItem = 5;
    /**
     * <code>optional int32 rewardItem = 5;</code>
     *
     * <pre>
     * 道具id
     * </pre>
     */
    boolean hasRewardItem();
    /**
     * <code>optional int32 rewardItem = 5;</code>
     *
     * <pre>
     * 道具id
     * </pre>
     */
    int getRewardItem();

    // optional int32 rewardItemNum = 6;
    /**
     * <code>optional int32 rewardItemNum = 6;</code>
     *
     * <pre>
     * 道具数量
     * </pre>
     */
    boolean hasRewardItemNum();
    /**
     * <code>optional int32 rewardItemNum = 6;</code>
     *
     * <pre>
     * 道具数量
     * </pre>
     */
    int getRewardItemNum();

    // optional int32 rewardMagicWeapon = 7;
    /**
     * <code>optional int32 rewardMagicWeapon = 7;</code>
     *
     * <pre>
     * 法宝id
     * </pre>
     */
    boolean hasRewardMagicWeapon();
    /**
     * <code>optional int32 rewardMagicWeapon = 7;</code>
     *
     * <pre>
     * 法宝id
     * </pre>
     */
    int getRewardMagicWeapon();

    // optional int32 rewardMagicWeaponNum = 8;
    /**
     * <code>optional int32 rewardMagicWeaponNum = 8;</code>
     *
     * <pre>
     * 法宝数量
     * </pre>
     */
    boolean hasRewardMagicWeaponNum();
    /**
     * <code>optional int32 rewardMagicWeaponNum = 8;</code>
     *
     * <pre>
     * 法宝数量
     * </pre>
     */
    int getRewardMagicWeaponNum();

    // optional bool selled = 9;
    /**
     * <code>optional bool selled = 9;</code>
     *
     * <pre>
     * true:已经兑换过了
     * </pre>
     */
    boolean hasSelled();
    /**
     * <code>optional bool selled = 9;</code>
     *
     * <pre>
     * true:已经兑换过了
     * </pre>
     */
    boolean getSelled();
  }
  /**
   * Protobuf type {@code PvpExchangeItem}
   */
  public static final class PvpExchangeItem extends
      com.google.protobuf.GeneratedMessage
      implements PvpExchangeItemOrBuilder {
    // Use PvpExchangeItem.newBuilder() to construct.
    private PvpExchangeItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PvpExchangeItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PvpExchangeItem defaultInstance;
    public static PvpExchangeItem getDefaultInstance() {
      return defaultInstance;
    }

    public PvpExchangeItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PvpExchangeItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              costCredit_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rewardCard_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rewardCardNum_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rewardItem_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              rewardItemNum_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              rewardMagicWeapon_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              rewardMagicWeaponNum_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              selled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PvpExchangeItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PvpExchangeItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PvpExchangeItem.class, myudfs.Common.PvpExchangeItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PvpExchangeItem> PARSER =
        new com.google.protobuf.AbstractParser<PvpExchangeItem>() {
      public PvpExchangeItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PvpExchangeItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PvpExchangeItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 costCredit = 2;
    public static final int COSTCREDIT_FIELD_NUMBER = 2;
    private int costCredit_;
    /**
     * <code>optional int32 costCredit = 2;</code>
     *
     * <pre>
     * 兑换消耗的声望
     * </pre>
     */
    public boolean hasCostCredit() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 costCredit = 2;</code>
     *
     * <pre>
     * 兑换消耗的声望
     * </pre>
     */
    public int getCostCredit() {
      return costCredit_;
    }

    // optional int32 rewardCard = 3;
    public static final int REWARDCARD_FIELD_NUMBER = 3;
    private int rewardCard_;
    /**
     * <code>optional int32 rewardCard = 3;</code>
     *
     * <pre>
     * 元神id
     * </pre>
     */
    public boolean hasRewardCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 rewardCard = 3;</code>
     *
     * <pre>
     * 元神id
     * </pre>
     */
    public int getRewardCard() {
      return rewardCard_;
    }

    // optional int32 rewardCardNum = 4;
    public static final int REWARDCARDNUM_FIELD_NUMBER = 4;
    private int rewardCardNum_;
    /**
     * <code>optional int32 rewardCardNum = 4;</code>
     *
     * <pre>
     * 元神数量
     * </pre>
     */
    public boolean hasRewardCardNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 rewardCardNum = 4;</code>
     *
     * <pre>
     * 元神数量
     * </pre>
     */
    public int getRewardCardNum() {
      return rewardCardNum_;
    }

    // optional int32 rewardItem = 5;
    public static final int REWARDITEM_FIELD_NUMBER = 5;
    private int rewardItem_;
    /**
     * <code>optional int32 rewardItem = 5;</code>
     *
     * <pre>
     * 道具id
     * </pre>
     */
    public boolean hasRewardItem() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 rewardItem = 5;</code>
     *
     * <pre>
     * 道具id
     * </pre>
     */
    public int getRewardItem() {
      return rewardItem_;
    }

    // optional int32 rewardItemNum = 6;
    public static final int REWARDITEMNUM_FIELD_NUMBER = 6;
    private int rewardItemNum_;
    /**
     * <code>optional int32 rewardItemNum = 6;</code>
     *
     * <pre>
     * 道具数量
     * </pre>
     */
    public boolean hasRewardItemNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 rewardItemNum = 6;</code>
     *
     * <pre>
     * 道具数量
     * </pre>
     */
    public int getRewardItemNum() {
      return rewardItemNum_;
    }

    // optional int32 rewardMagicWeapon = 7;
    public static final int REWARDMAGICWEAPON_FIELD_NUMBER = 7;
    private int rewardMagicWeapon_;
    /**
     * <code>optional int32 rewardMagicWeapon = 7;</code>
     *
     * <pre>
     * 法宝id
     * </pre>
     */
    public boolean hasRewardMagicWeapon() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 rewardMagicWeapon = 7;</code>
     *
     * <pre>
     * 法宝id
     * </pre>
     */
    public int getRewardMagicWeapon() {
      return rewardMagicWeapon_;
    }

    // optional int32 rewardMagicWeaponNum = 8;
    public static final int REWARDMAGICWEAPONNUM_FIELD_NUMBER = 8;
    private int rewardMagicWeaponNum_;
    /**
     * <code>optional int32 rewardMagicWeaponNum = 8;</code>
     *
     * <pre>
     * 法宝数量
     * </pre>
     */
    public boolean hasRewardMagicWeaponNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 rewardMagicWeaponNum = 8;</code>
     *
     * <pre>
     * 法宝数量
     * </pre>
     */
    public int getRewardMagicWeaponNum() {
      return rewardMagicWeaponNum_;
    }

    // optional bool selled = 9;
    public static final int SELLED_FIELD_NUMBER = 9;
    private boolean selled_;
    /**
     * <code>optional bool selled = 9;</code>
     *
     * <pre>
     * true:已经兑换过了
     * </pre>
     */
    public boolean hasSelled() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool selled = 9;</code>
     *
     * <pre>
     * true:已经兑换过了
     * </pre>
     */
    public boolean getSelled() {
      return selled_;
    }

    private void initFields() {
      id_ = 0;
      costCredit_ = 0;
      rewardCard_ = 0;
      rewardCardNum_ = 0;
      rewardItem_ = 0;
      rewardItemNum_ = 0;
      rewardMagicWeapon_ = 0;
      rewardMagicWeaponNum_ = 0;
      selled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, costCredit_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rewardCard_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, rewardCardNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rewardItem_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, rewardItemNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, rewardMagicWeapon_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, rewardMagicWeaponNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, selled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, costCredit_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rewardCard_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rewardCardNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rewardItem_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, rewardItemNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rewardMagicWeapon_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, rewardMagicWeaponNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, selled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PvpExchangeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpExchangeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpExchangeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpExchangeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpExchangeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpExchangeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpExchangeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PvpExchangeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpExchangeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpExchangeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PvpExchangeItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PvpExchangeItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PvpExchangeItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PvpExchangeItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PvpExchangeItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PvpExchangeItem.class, myudfs.Common.PvpExchangeItem.Builder.class);
      }

      // Construct using myudfs.Common.PvpExchangeItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        costCredit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rewardCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rewardCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rewardItem_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        rewardItemNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        rewardMagicWeapon_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rewardMagicWeaponNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        selled_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PvpExchangeItem_descriptor;
      }

      public myudfs.Common.PvpExchangeItem getDefaultInstanceForType() {
        return myudfs.Common.PvpExchangeItem.getDefaultInstance();
      }

      public myudfs.Common.PvpExchangeItem build() {
        myudfs.Common.PvpExchangeItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PvpExchangeItem buildPartial() {
        myudfs.Common.PvpExchangeItem result = new myudfs.Common.PvpExchangeItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.costCredit_ = costCredit_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rewardCard_ = rewardCard_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rewardCardNum_ = rewardCardNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rewardItem_ = rewardItem_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rewardItemNum_ = rewardItemNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rewardMagicWeapon_ = rewardMagicWeapon_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rewardMagicWeaponNum_ = rewardMagicWeaponNum_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.selled_ = selled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PvpExchangeItem) {
          return mergeFrom((myudfs.Common.PvpExchangeItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PvpExchangeItem other) {
        if (other == myudfs.Common.PvpExchangeItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCostCredit()) {
          setCostCredit(other.getCostCredit());
        }
        if (other.hasRewardCard()) {
          setRewardCard(other.getRewardCard());
        }
        if (other.hasRewardCardNum()) {
          setRewardCardNum(other.getRewardCardNum());
        }
        if (other.hasRewardItem()) {
          setRewardItem(other.getRewardItem());
        }
        if (other.hasRewardItemNum()) {
          setRewardItemNum(other.getRewardItemNum());
        }
        if (other.hasRewardMagicWeapon()) {
          setRewardMagicWeapon(other.getRewardMagicWeapon());
        }
        if (other.hasRewardMagicWeaponNum()) {
          setRewardMagicWeaponNum(other.getRewardMagicWeaponNum());
        }
        if (other.hasSelled()) {
          setSelled(other.getSelled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PvpExchangeItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PvpExchangeItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 costCredit = 2;
      private int costCredit_ ;
      /**
       * <code>optional int32 costCredit = 2;</code>
       *
       * <pre>
       * 兑换消耗的声望
       * </pre>
       */
      public boolean hasCostCredit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 costCredit = 2;</code>
       *
       * <pre>
       * 兑换消耗的声望
       * </pre>
       */
      public int getCostCredit() {
        return costCredit_;
      }
      /**
       * <code>optional int32 costCredit = 2;</code>
       *
       * <pre>
       * 兑换消耗的声望
       * </pre>
       */
      public Builder setCostCredit(int value) {
        bitField0_ |= 0x00000002;
        costCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 costCredit = 2;</code>
       *
       * <pre>
       * 兑换消耗的声望
       * </pre>
       */
      public Builder clearCostCredit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        costCredit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rewardCard = 3;
      private int rewardCard_ ;
      /**
       * <code>optional int32 rewardCard = 3;</code>
       *
       * <pre>
       * 元神id
       * </pre>
       */
      public boolean hasRewardCard() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 rewardCard = 3;</code>
       *
       * <pre>
       * 元神id
       * </pre>
       */
      public int getRewardCard() {
        return rewardCard_;
      }
      /**
       * <code>optional int32 rewardCard = 3;</code>
       *
       * <pre>
       * 元神id
       * </pre>
       */
      public Builder setRewardCard(int value) {
        bitField0_ |= 0x00000004;
        rewardCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardCard = 3;</code>
       *
       * <pre>
       * 元神id
       * </pre>
       */
      public Builder clearRewardCard() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rewardCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rewardCardNum = 4;
      private int rewardCardNum_ ;
      /**
       * <code>optional int32 rewardCardNum = 4;</code>
       *
       * <pre>
       * 元神数量
       * </pre>
       */
      public boolean hasRewardCardNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 rewardCardNum = 4;</code>
       *
       * <pre>
       * 元神数量
       * </pre>
       */
      public int getRewardCardNum() {
        return rewardCardNum_;
      }
      /**
       * <code>optional int32 rewardCardNum = 4;</code>
       *
       * <pre>
       * 元神数量
       * </pre>
       */
      public Builder setRewardCardNum(int value) {
        bitField0_ |= 0x00000008;
        rewardCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardCardNum = 4;</code>
       *
       * <pre>
       * 元神数量
       * </pre>
       */
      public Builder clearRewardCardNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rewardCardNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rewardItem = 5;
      private int rewardItem_ ;
      /**
       * <code>optional int32 rewardItem = 5;</code>
       *
       * <pre>
       * 道具id
       * </pre>
       */
      public boolean hasRewardItem() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rewardItem = 5;</code>
       *
       * <pre>
       * 道具id
       * </pre>
       */
      public int getRewardItem() {
        return rewardItem_;
      }
      /**
       * <code>optional int32 rewardItem = 5;</code>
       *
       * <pre>
       * 道具id
       * </pre>
       */
      public Builder setRewardItem(int value) {
        bitField0_ |= 0x00000010;
        rewardItem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardItem = 5;</code>
       *
       * <pre>
       * 道具id
       * </pre>
       */
      public Builder clearRewardItem() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rewardItem_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rewardItemNum = 6;
      private int rewardItemNum_ ;
      /**
       * <code>optional int32 rewardItemNum = 6;</code>
       *
       * <pre>
       * 道具数量
       * </pre>
       */
      public boolean hasRewardItemNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 rewardItemNum = 6;</code>
       *
       * <pre>
       * 道具数量
       * </pre>
       */
      public int getRewardItemNum() {
        return rewardItemNum_;
      }
      /**
       * <code>optional int32 rewardItemNum = 6;</code>
       *
       * <pre>
       * 道具数量
       * </pre>
       */
      public Builder setRewardItemNum(int value) {
        bitField0_ |= 0x00000020;
        rewardItemNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardItemNum = 6;</code>
       *
       * <pre>
       * 道具数量
       * </pre>
       */
      public Builder clearRewardItemNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rewardItemNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rewardMagicWeapon = 7;
      private int rewardMagicWeapon_ ;
      /**
       * <code>optional int32 rewardMagicWeapon = 7;</code>
       *
       * <pre>
       * 法宝id
       * </pre>
       */
      public boolean hasRewardMagicWeapon() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 rewardMagicWeapon = 7;</code>
       *
       * <pre>
       * 法宝id
       * </pre>
       */
      public int getRewardMagicWeapon() {
        return rewardMagicWeapon_;
      }
      /**
       * <code>optional int32 rewardMagicWeapon = 7;</code>
       *
       * <pre>
       * 法宝id
       * </pre>
       */
      public Builder setRewardMagicWeapon(int value) {
        bitField0_ |= 0x00000040;
        rewardMagicWeapon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardMagicWeapon = 7;</code>
       *
       * <pre>
       * 法宝id
       * </pre>
       */
      public Builder clearRewardMagicWeapon() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rewardMagicWeapon_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rewardMagicWeaponNum = 8;
      private int rewardMagicWeaponNum_ ;
      /**
       * <code>optional int32 rewardMagicWeaponNum = 8;</code>
       *
       * <pre>
       * 法宝数量
       * </pre>
       */
      public boolean hasRewardMagicWeaponNum() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 rewardMagicWeaponNum = 8;</code>
       *
       * <pre>
       * 法宝数量
       * </pre>
       */
      public int getRewardMagicWeaponNum() {
        return rewardMagicWeaponNum_;
      }
      /**
       * <code>optional int32 rewardMagicWeaponNum = 8;</code>
       *
       * <pre>
       * 法宝数量
       * </pre>
       */
      public Builder setRewardMagicWeaponNum(int value) {
        bitField0_ |= 0x00000080;
        rewardMagicWeaponNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardMagicWeaponNum = 8;</code>
       *
       * <pre>
       * 法宝数量
       * </pre>
       */
      public Builder clearRewardMagicWeaponNum() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rewardMagicWeaponNum_ = 0;
        onChanged();
        return this;
      }

      // optional bool selled = 9;
      private boolean selled_ ;
      /**
       * <code>optional bool selled = 9;</code>
       *
       * <pre>
       * true:已经兑换过了
       * </pre>
       */
      public boolean hasSelled() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool selled = 9;</code>
       *
       * <pre>
       * true:已经兑换过了
       * </pre>
       */
      public boolean getSelled() {
        return selled_;
      }
      /**
       * <code>optional bool selled = 9;</code>
       *
       * <pre>
       * true:已经兑换过了
       * </pre>
       */
      public Builder setSelled(boolean value) {
        bitField0_ |= 0x00000100;
        selled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool selled = 9;</code>
       *
       * <pre>
       * true:已经兑换过了
       * </pre>
       */
      public Builder clearSelled() {
        bitField0_ = (bitField0_ & ~0x00000100);
        selled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PvpExchangeItem)
    }

    static {
      defaultInstance = new PvpExchangeItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PvpExchangeItem)
  }

  public interface ShenMoItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 唯一id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 唯一id
     * </pre>
     */
    long getId();

    // optional int32 shenMoId = 2;
    /**
     * <code>optional int32 shenMoId = 2;</code>
     *
     * <pre>
     *配置id
     * </pre>
     */
    boolean hasShenMoId();
    /**
     * <code>optional int32 shenMoId = 2;</code>
     *
     * <pre>
     *配置id
     * </pre>
     */
    int getShenMoId();

    // optional int32 hp = 3;
    /**
     * <code>optional int32 hp = 3;</code>
     *
     * <pre>
     * 剩余血量
     * </pre>
     */
    boolean hasHp();
    /**
     * <code>optional int32 hp = 3;</code>
     *
     * <pre>
     * 剩余血量
     * </pre>
     */
    int getHp();

    // optional int32 maxHp = 4;
    /**
     * <code>optional int32 maxHp = 4;</code>
     *
     * <pre>
     * 最大血量
     * </pre>
     */
    boolean hasMaxHp();
    /**
     * <code>optional int32 maxHp = 4;</code>
     *
     * <pre>
     * 最大血量
     * </pre>
     */
    int getMaxHp();

    // optional uint64 escapeDate = 5;
    /**
     * <code>optional uint64 escapeDate = 5;</code>
     *
     * <pre>
     * 逃亡时间
     * </pre>
     */
    boolean hasEscapeDate();
    /**
     * <code>optional uint64 escapeDate = 5;</code>
     *
     * <pre>
     * 逃亡时间
     * </pre>
     */
    long getEscapeDate();

    // optional string name = 6;
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     * 发现者
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     * 发现者
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     * 发现者
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int64 playerId = 7;
    /**
     * <code>optional int64 playerId = 7;</code>
     *
     * <pre>
     * 发现者 player.id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 7;</code>
     *
     * <pre>
     * 发现者 player.id
     * </pre>
     */
    long getPlayerId();

    // optional int32 lv = 8;
    /**
     * <code>optional int32 lv = 8;</code>
     *
     * <pre>
     *神魔等级
     * </pre>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 8;</code>
     *
     * <pre>
     *神魔等级
     * </pre>
     */
    int getLv();

    // optional bool share = 9;
    /**
     * <code>optional bool share = 9;</code>
     *
     * <pre>
     * true:已经分享过
     * </pre>
     */
    boolean hasShare();
    /**
     * <code>optional bool share = 9;</code>
     *
     * <pre>
     * true:已经分享过
     * </pre>
     */
    boolean getShare();

    // repeated int32 cardConfigIds = 10;
    /**
     * <code>repeated int32 cardConfigIds = 10;</code>
     *
     * <pre>
     *cardConfig.id
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardConfigIdsList();
    /**
     * <code>repeated int32 cardConfigIds = 10;</code>
     *
     * <pre>
     *cardConfig.id
     * </pre>
     */
    int getCardConfigIdsCount();
    /**
     * <code>repeated int32 cardConfigIds = 10;</code>
     *
     * <pre>
     *cardConfig.id
     * </pre>
     */
    int getCardConfigIds(int index);

    // optional bool finderReward = 11;
    /**
     * <code>optional bool finderReward = 11;</code>
     *
     * <pre>
     *true:可以领取发现者奖励
     * </pre>
     */
    boolean hasFinderReward();
    /**
     * <code>optional bool finderReward = 11;</code>
     *
     * <pre>
     *true:可以领取发现者奖励
     * </pre>
     */
    boolean getFinderReward();

    // optional bool maxDmgReward = 12;
    /**
     * <code>optional bool maxDmgReward = 12;</code>
     *
     * <pre>
     *true:可以领取最大伤害奖励
     * </pre>
     */
    boolean hasMaxDmgReward();
    /**
     * <code>optional bool maxDmgReward = 12;</code>
     *
     * <pre>
     *true:可以领取最大伤害奖励
     * </pre>
     */
    boolean getMaxDmgReward();

    // optional bool killerReward = 13;
    /**
     * <code>optional bool killerReward = 13;</code>
     *
     * <pre>
     *true:可以领取击杀奖励
     * </pre>
     */
    boolean hasKillerReward();
    /**
     * <code>optional bool killerReward = 13;</code>
     *
     * <pre>
     *true:可以领取击杀奖励
     * </pre>
     */
    boolean getKillerReward();

    // optional bool finderReward2 = 14;
    /**
     * <code>optional bool finderReward2 = 14;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    boolean hasFinderReward2();
    /**
     * <code>optional bool finderReward2 = 14;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    boolean getFinderReward2();

    // optional bool maxDmgReward2 = 15;
    /**
     * <code>optional bool maxDmgReward2 = 15;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    boolean hasMaxDmgReward2();
    /**
     * <code>optional bool maxDmgReward2 = 15;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    boolean getMaxDmgReward2();

    // optional bool killerReward2 = 16;
    /**
     * <code>optional bool killerReward2 = 16;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    boolean hasKillerReward2();
    /**
     * <code>optional bool killerReward2 = 16;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    boolean getKillerReward2();

    // optional string playerNameKiller = 17;
    /**
     * <code>optional string playerNameKiller = 17;</code>
     *
     * <pre>
     *击杀者名字
     * </pre>
     */
    boolean hasPlayerNameKiller();
    /**
     * <code>optional string playerNameKiller = 17;</code>
     *
     * <pre>
     *击杀者名字
     * </pre>
     */
    java.lang.String getPlayerNameKiller();
    /**
     * <code>optional string playerNameKiller = 17;</code>
     *
     * <pre>
     *击杀者名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getPlayerNameKillerBytes();

    // optional bool attacked = 18;
    /**
     * <code>optional bool attacked = 18;</code>
     *
     * <pre>
     * true:已经参与过打此神魔
     * </pre>
     */
    boolean hasAttacked();
    /**
     * <code>optional bool attacked = 18;</code>
     *
     * <pre>
     * true:已经参与过打此神魔
     * </pre>
     */
    boolean getAttacked();

    // optional bool attackReward = 19;
    /**
     * <code>optional bool attackReward = 19;</code>
     *
     * <pre>
     *true:可以领取参与者奖励
     * </pre>
     */
    boolean hasAttackReward();
    /**
     * <code>optional bool attackReward = 19;</code>
     *
     * <pre>
     *true:可以领取参与者奖励
     * </pre>
     */
    boolean getAttackReward();

    // optional bool attackReward2 = 20;
    /**
     * <code>optional bool attackReward2 = 20;</code>
     *
     * <pre>
     *true:领取过参与者奖励
     * </pre>
     */
    boolean hasAttackReward2();
    /**
     * <code>optional bool attackReward2 = 20;</code>
     *
     * <pre>
     *true:领取过参与者奖励
     * </pre>
     */
    boolean getAttackReward2();
  }
  /**
   * Protobuf type {@code ShenMoItem}
   */
  public static final class ShenMoItem extends
      com.google.protobuf.GeneratedMessage
      implements ShenMoItemOrBuilder {
    // Use ShenMoItem.newBuilder() to construct.
    private ShenMoItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShenMoItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShenMoItem defaultInstance;
    public static ShenMoItem getDefaultInstance() {
      return defaultInstance;
    }

    public ShenMoItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShenMoItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              shenMoId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              hp_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              maxHp_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              escapeDate_ = input.readUInt64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              name_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              playerId_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              lv_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              share_ = input.readBool();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                cardConfigIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              cardConfigIds_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                cardConfigIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardConfigIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              finderReward_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              maxDmgReward_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              killerReward_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              finderReward2_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              maxDmgReward2_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              killerReward2_ = input.readBool();
              break;
            }
            case 138: {
              bitField0_ |= 0x00008000;
              playerNameKiller_ = input.readBytes();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              attacked_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00020000;
              attackReward_ = input.readBool();
              break;
            }
            case 160: {
              bitField0_ |= 0x00040000;
              attackReward2_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          cardConfigIds_ = java.util.Collections.unmodifiableList(cardConfigIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ShenMoItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ShenMoItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ShenMoItem.class, myudfs.Common.ShenMoItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ShenMoItem> PARSER =
        new com.google.protobuf.AbstractParser<ShenMoItem>() {
      public ShenMoItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShenMoItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShenMoItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 唯一id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 唯一id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // optional int32 shenMoId = 2;
    public static final int SHENMOID_FIELD_NUMBER = 2;
    private int shenMoId_;
    /**
     * <code>optional int32 shenMoId = 2;</code>
     *
     * <pre>
     *配置id
     * </pre>
     */
    public boolean hasShenMoId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 shenMoId = 2;</code>
     *
     * <pre>
     *配置id
     * </pre>
     */
    public int getShenMoId() {
      return shenMoId_;
    }

    // optional int32 hp = 3;
    public static final int HP_FIELD_NUMBER = 3;
    private int hp_;
    /**
     * <code>optional int32 hp = 3;</code>
     *
     * <pre>
     * 剩余血量
     * </pre>
     */
    public boolean hasHp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 hp = 3;</code>
     *
     * <pre>
     * 剩余血量
     * </pre>
     */
    public int getHp() {
      return hp_;
    }

    // optional int32 maxHp = 4;
    public static final int MAXHP_FIELD_NUMBER = 4;
    private int maxHp_;
    /**
     * <code>optional int32 maxHp = 4;</code>
     *
     * <pre>
     * 最大血量
     * </pre>
     */
    public boolean hasMaxHp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 maxHp = 4;</code>
     *
     * <pre>
     * 最大血量
     * </pre>
     */
    public int getMaxHp() {
      return maxHp_;
    }

    // optional uint64 escapeDate = 5;
    public static final int ESCAPEDATE_FIELD_NUMBER = 5;
    private long escapeDate_;
    /**
     * <code>optional uint64 escapeDate = 5;</code>
     *
     * <pre>
     * 逃亡时间
     * </pre>
     */
    public boolean hasEscapeDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 escapeDate = 5;</code>
     *
     * <pre>
     * 逃亡时间
     * </pre>
     */
    public long getEscapeDate() {
      return escapeDate_;
    }

    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     * 发现者
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     * 发现者
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     * 发现者
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 playerId = 7;
    public static final int PLAYERID_FIELD_NUMBER = 7;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 7;</code>
     *
     * <pre>
     * 发现者 player.id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 playerId = 7;</code>
     *
     * <pre>
     * 发现者 player.id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    // optional int32 lv = 8;
    public static final int LV_FIELD_NUMBER = 8;
    private int lv_;
    /**
     * <code>optional int32 lv = 8;</code>
     *
     * <pre>
     *神魔等级
     * </pre>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 lv = 8;</code>
     *
     * <pre>
     *神魔等级
     * </pre>
     */
    public int getLv() {
      return lv_;
    }

    // optional bool share = 9;
    public static final int SHARE_FIELD_NUMBER = 9;
    private boolean share_;
    /**
     * <code>optional bool share = 9;</code>
     *
     * <pre>
     * true:已经分享过
     * </pre>
     */
    public boolean hasShare() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool share = 9;</code>
     *
     * <pre>
     * true:已经分享过
     * </pre>
     */
    public boolean getShare() {
      return share_;
    }

    // repeated int32 cardConfigIds = 10;
    public static final int CARDCONFIGIDS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> cardConfigIds_;
    /**
     * <code>repeated int32 cardConfigIds = 10;</code>
     *
     * <pre>
     *cardConfig.id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardConfigIdsList() {
      return cardConfigIds_;
    }
    /**
     * <code>repeated int32 cardConfigIds = 10;</code>
     *
     * <pre>
     *cardConfig.id
     * </pre>
     */
    public int getCardConfigIdsCount() {
      return cardConfigIds_.size();
    }
    /**
     * <code>repeated int32 cardConfigIds = 10;</code>
     *
     * <pre>
     *cardConfig.id
     * </pre>
     */
    public int getCardConfigIds(int index) {
      return cardConfigIds_.get(index);
    }

    // optional bool finderReward = 11;
    public static final int FINDERREWARD_FIELD_NUMBER = 11;
    private boolean finderReward_;
    /**
     * <code>optional bool finderReward = 11;</code>
     *
     * <pre>
     *true:可以领取发现者奖励
     * </pre>
     */
    public boolean hasFinderReward() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool finderReward = 11;</code>
     *
     * <pre>
     *true:可以领取发现者奖励
     * </pre>
     */
    public boolean getFinderReward() {
      return finderReward_;
    }

    // optional bool maxDmgReward = 12;
    public static final int MAXDMGREWARD_FIELD_NUMBER = 12;
    private boolean maxDmgReward_;
    /**
     * <code>optional bool maxDmgReward = 12;</code>
     *
     * <pre>
     *true:可以领取最大伤害奖励
     * </pre>
     */
    public boolean hasMaxDmgReward() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool maxDmgReward = 12;</code>
     *
     * <pre>
     *true:可以领取最大伤害奖励
     * </pre>
     */
    public boolean getMaxDmgReward() {
      return maxDmgReward_;
    }

    // optional bool killerReward = 13;
    public static final int KILLERREWARD_FIELD_NUMBER = 13;
    private boolean killerReward_;
    /**
     * <code>optional bool killerReward = 13;</code>
     *
     * <pre>
     *true:可以领取击杀奖励
     * </pre>
     */
    public boolean hasKillerReward() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool killerReward = 13;</code>
     *
     * <pre>
     *true:可以领取击杀奖励
     * </pre>
     */
    public boolean getKillerReward() {
      return killerReward_;
    }

    // optional bool finderReward2 = 14;
    public static final int FINDERREWARD2_FIELD_NUMBER = 14;
    private boolean finderReward2_;
    /**
     * <code>optional bool finderReward2 = 14;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    public boolean hasFinderReward2() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool finderReward2 = 14;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    public boolean getFinderReward2() {
      return finderReward2_;
    }

    // optional bool maxDmgReward2 = 15;
    public static final int MAXDMGREWARD2_FIELD_NUMBER = 15;
    private boolean maxDmgReward2_;
    /**
     * <code>optional bool maxDmgReward2 = 15;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    public boolean hasMaxDmgReward2() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool maxDmgReward2 = 15;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    public boolean getMaxDmgReward2() {
      return maxDmgReward2_;
    }

    // optional bool killerReward2 = 16;
    public static final int KILLERREWARD2_FIELD_NUMBER = 16;
    private boolean killerReward2_;
    /**
     * <code>optional bool killerReward2 = 16;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    public boolean hasKillerReward2() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool killerReward2 = 16;</code>
     *
     * <pre>
     *true:领取过奖励
     * </pre>
     */
    public boolean getKillerReward2() {
      return killerReward2_;
    }

    // optional string playerNameKiller = 17;
    public static final int PLAYERNAMEKILLER_FIELD_NUMBER = 17;
    private java.lang.Object playerNameKiller_;
    /**
     * <code>optional string playerNameKiller = 17;</code>
     *
     * <pre>
     *击杀者名字
     * </pre>
     */
    public boolean hasPlayerNameKiller() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string playerNameKiller = 17;</code>
     *
     * <pre>
     *击杀者名字
     * </pre>
     */
    public java.lang.String getPlayerNameKiller() {
      java.lang.Object ref = playerNameKiller_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerNameKiller_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string playerNameKiller = 17;</code>
     *
     * <pre>
     *击杀者名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPlayerNameKillerBytes() {
      java.lang.Object ref = playerNameKiller_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerNameKiller_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool attacked = 18;
    public static final int ATTACKED_FIELD_NUMBER = 18;
    private boolean attacked_;
    /**
     * <code>optional bool attacked = 18;</code>
     *
     * <pre>
     * true:已经参与过打此神魔
     * </pre>
     */
    public boolean hasAttacked() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool attacked = 18;</code>
     *
     * <pre>
     * true:已经参与过打此神魔
     * </pre>
     */
    public boolean getAttacked() {
      return attacked_;
    }

    // optional bool attackReward = 19;
    public static final int ATTACKREWARD_FIELD_NUMBER = 19;
    private boolean attackReward_;
    /**
     * <code>optional bool attackReward = 19;</code>
     *
     * <pre>
     *true:可以领取参与者奖励
     * </pre>
     */
    public boolean hasAttackReward() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool attackReward = 19;</code>
     *
     * <pre>
     *true:可以领取参与者奖励
     * </pre>
     */
    public boolean getAttackReward() {
      return attackReward_;
    }

    // optional bool attackReward2 = 20;
    public static final int ATTACKREWARD2_FIELD_NUMBER = 20;
    private boolean attackReward2_;
    /**
     * <code>optional bool attackReward2 = 20;</code>
     *
     * <pre>
     *true:领取过参与者奖励
     * </pre>
     */
    public boolean hasAttackReward2() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool attackReward2 = 20;</code>
     *
     * <pre>
     *true:领取过参与者奖励
     * </pre>
     */
    public boolean getAttackReward2() {
      return attackReward2_;
    }

    private void initFields() {
      id_ = 0L;
      shenMoId_ = 0;
      hp_ = 0;
      maxHp_ = 0;
      escapeDate_ = 0L;
      name_ = "";
      playerId_ = 0L;
      lv_ = 0;
      share_ = false;
      cardConfigIds_ = java.util.Collections.emptyList();
      finderReward_ = false;
      maxDmgReward_ = false;
      killerReward_ = false;
      finderReward2_ = false;
      maxDmgReward2_ = false;
      killerReward2_ = false;
      playerNameKiller_ = "";
      attacked_ = false;
      attackReward_ = false;
      attackReward2_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, shenMoId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, hp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, maxHp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, escapeDate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, playerId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, lv_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, share_);
      }
      for (int i = 0; i < cardConfigIds_.size(); i++) {
        output.writeInt32(10, cardConfigIds_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(11, finderReward_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(12, maxDmgReward_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(13, killerReward_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(14, finderReward2_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(15, maxDmgReward2_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(16, killerReward2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(17, getPlayerNameKillerBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(18, attacked_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(19, attackReward_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(20, attackReward2_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, shenMoId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, hp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxHp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, escapeDate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, playerId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lv_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, share_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardConfigIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardConfigIds_.get(i));
        }
        size += dataSize;
        size += 1 * getCardConfigIdsList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, finderReward_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, maxDmgReward_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, killerReward_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, finderReward2_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, maxDmgReward2_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, killerReward2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getPlayerNameKillerBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, attacked_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, attackReward_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, attackReward2_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ShenMoItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ShenMoItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ShenMoItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ShenMoItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ShenMoItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ShenMoItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ShenMoItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ShenMoItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ShenMoItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ShenMoItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ShenMoItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ShenMoItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ShenMoItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ShenMoItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ShenMoItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ShenMoItem.class, myudfs.Common.ShenMoItem.Builder.class);
      }

      // Construct using myudfs.Common.ShenMoItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        shenMoId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        hp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        maxHp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        escapeDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        share_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        cardConfigIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        finderReward_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        maxDmgReward_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        killerReward_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        finderReward2_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        maxDmgReward2_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        killerReward2_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        playerNameKiller_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        attacked_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        attackReward_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        attackReward2_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ShenMoItem_descriptor;
      }

      public myudfs.Common.ShenMoItem getDefaultInstanceForType() {
        return myudfs.Common.ShenMoItem.getDefaultInstance();
      }

      public myudfs.Common.ShenMoItem build() {
        myudfs.Common.ShenMoItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ShenMoItem buildPartial() {
        myudfs.Common.ShenMoItem result = new myudfs.Common.ShenMoItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.shenMoId_ = shenMoId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hp_ = hp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxHp_ = maxHp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.escapeDate_ = escapeDate_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.share_ = share_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          cardConfigIds_ = java.util.Collections.unmodifiableList(cardConfigIds_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.cardConfigIds_ = cardConfigIds_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.finderReward_ = finderReward_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.maxDmgReward_ = maxDmgReward_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.killerReward_ = killerReward_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.finderReward2_ = finderReward2_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.maxDmgReward2_ = maxDmgReward2_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.killerReward2_ = killerReward2_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.playerNameKiller_ = playerNameKiller_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.attacked_ = attacked_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.attackReward_ = attackReward_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.attackReward2_ = attackReward2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ShenMoItem) {
          return mergeFrom((myudfs.Common.ShenMoItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ShenMoItem other) {
        if (other == myudfs.Common.ShenMoItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasShenMoId()) {
          setShenMoId(other.getShenMoId());
        }
        if (other.hasHp()) {
          setHp(other.getHp());
        }
        if (other.hasMaxHp()) {
          setMaxHp(other.getMaxHp());
        }
        if (other.hasEscapeDate()) {
          setEscapeDate(other.getEscapeDate());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000020;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasShare()) {
          setShare(other.getShare());
        }
        if (!other.cardConfigIds_.isEmpty()) {
          if (cardConfigIds_.isEmpty()) {
            cardConfigIds_ = other.cardConfigIds_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureCardConfigIdsIsMutable();
            cardConfigIds_.addAll(other.cardConfigIds_);
          }
          onChanged();
        }
        if (other.hasFinderReward()) {
          setFinderReward(other.getFinderReward());
        }
        if (other.hasMaxDmgReward()) {
          setMaxDmgReward(other.getMaxDmgReward());
        }
        if (other.hasKillerReward()) {
          setKillerReward(other.getKillerReward());
        }
        if (other.hasFinderReward2()) {
          setFinderReward2(other.getFinderReward2());
        }
        if (other.hasMaxDmgReward2()) {
          setMaxDmgReward2(other.getMaxDmgReward2());
        }
        if (other.hasKillerReward2()) {
          setKillerReward2(other.getKillerReward2());
        }
        if (other.hasPlayerNameKiller()) {
          bitField0_ |= 0x00010000;
          playerNameKiller_ = other.playerNameKiller_;
          onChanged();
        }
        if (other.hasAttacked()) {
          setAttacked(other.getAttacked());
        }
        if (other.hasAttackReward()) {
          setAttackReward(other.getAttackReward());
        }
        if (other.hasAttackReward2()) {
          setAttackReward2(other.getAttackReward2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ShenMoItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ShenMoItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 唯一id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 唯一id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 唯一id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 唯一id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 shenMoId = 2;
      private int shenMoId_ ;
      /**
       * <code>optional int32 shenMoId = 2;</code>
       *
       * <pre>
       *配置id
       * </pre>
       */
      public boolean hasShenMoId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 shenMoId = 2;</code>
       *
       * <pre>
       *配置id
       * </pre>
       */
      public int getShenMoId() {
        return shenMoId_;
      }
      /**
       * <code>optional int32 shenMoId = 2;</code>
       *
       * <pre>
       *配置id
       * </pre>
       */
      public Builder setShenMoId(int value) {
        bitField0_ |= 0x00000002;
        shenMoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shenMoId = 2;</code>
       *
       * <pre>
       *配置id
       * </pre>
       */
      public Builder clearShenMoId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        shenMoId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hp = 3;
      private int hp_ ;
      /**
       * <code>optional int32 hp = 3;</code>
       *
       * <pre>
       * 剩余血量
       * </pre>
       */
      public boolean hasHp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 hp = 3;</code>
       *
       * <pre>
       * 剩余血量
       * </pre>
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <code>optional int32 hp = 3;</code>
       *
       * <pre>
       * 剩余血量
       * </pre>
       */
      public Builder setHp(int value) {
        bitField0_ |= 0x00000004;
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hp = 3;</code>
       *
       * <pre>
       * 剩余血量
       * </pre>
       */
      public Builder clearHp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxHp = 4;
      private int maxHp_ ;
      /**
       * <code>optional int32 maxHp = 4;</code>
       *
       * <pre>
       * 最大血量
       * </pre>
       */
      public boolean hasMaxHp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 maxHp = 4;</code>
       *
       * <pre>
       * 最大血量
       * </pre>
       */
      public int getMaxHp() {
        return maxHp_;
      }
      /**
       * <code>optional int32 maxHp = 4;</code>
       *
       * <pre>
       * 最大血量
       * </pre>
       */
      public Builder setMaxHp(int value) {
        bitField0_ |= 0x00000008;
        maxHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxHp = 4;</code>
       *
       * <pre>
       * 最大血量
       * </pre>
       */
      public Builder clearMaxHp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxHp_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 escapeDate = 5;
      private long escapeDate_ ;
      /**
       * <code>optional uint64 escapeDate = 5;</code>
       *
       * <pre>
       * 逃亡时间
       * </pre>
       */
      public boolean hasEscapeDate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 escapeDate = 5;</code>
       *
       * <pre>
       * 逃亡时间
       * </pre>
       */
      public long getEscapeDate() {
        return escapeDate_;
      }
      /**
       * <code>optional uint64 escapeDate = 5;</code>
       *
       * <pre>
       * 逃亡时间
       * </pre>
       */
      public Builder setEscapeDate(long value) {
        bitField0_ |= 0x00000010;
        escapeDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 escapeDate = 5;</code>
       *
       * <pre>
       * 逃亡时间
       * </pre>
       */
      public Builder clearEscapeDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        escapeDate_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 6;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       * 发现者
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       * 发现者
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       * 发现者
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       * 发现者
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       * 发现者
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       * 发现者
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int64 playerId = 7;
      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 7;</code>
       *
       * <pre>
       * 发现者 player.id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 playerId = 7;</code>
       *
       * <pre>
       * 发现者 player.id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 7;</code>
       *
       * <pre>
       * 发现者 player.id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000040;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 7;</code>
       *
       * <pre>
       * 发现者 player.id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 lv = 8;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 8;</code>
       *
       * <pre>
       *神魔等级
       * </pre>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 lv = 8;</code>
       *
       * <pre>
       *神魔等级
       * </pre>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 8;</code>
       *
       * <pre>
       *神魔等级
       * </pre>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000080;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 8;</code>
       *
       * <pre>
       *神魔等级
       * </pre>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional bool share = 9;
      private boolean share_ ;
      /**
       * <code>optional bool share = 9;</code>
       *
       * <pre>
       * true:已经分享过
       * </pre>
       */
      public boolean hasShare() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool share = 9;</code>
       *
       * <pre>
       * true:已经分享过
       * </pre>
       */
      public boolean getShare() {
        return share_;
      }
      /**
       * <code>optional bool share = 9;</code>
       *
       * <pre>
       * true:已经分享过
       * </pre>
       */
      public Builder setShare(boolean value) {
        bitField0_ |= 0x00000100;
        share_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool share = 9;</code>
       *
       * <pre>
       * true:已经分享过
       * </pre>
       */
      public Builder clearShare() {
        bitField0_ = (bitField0_ & ~0x00000100);
        share_ = false;
        onChanged();
        return this;
      }

      // repeated int32 cardConfigIds = 10;
      private java.util.List<java.lang.Integer> cardConfigIds_ = java.util.Collections.emptyList();
      private void ensureCardConfigIdsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          cardConfigIds_ = new java.util.ArrayList<java.lang.Integer>(cardConfigIds_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 cardConfigIds = 10;</code>
       *
       * <pre>
       *cardConfig.id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardConfigIdsList() {
        return java.util.Collections.unmodifiableList(cardConfigIds_);
      }
      /**
       * <code>repeated int32 cardConfigIds = 10;</code>
       *
       * <pre>
       *cardConfig.id
       * </pre>
       */
      public int getCardConfigIdsCount() {
        return cardConfigIds_.size();
      }
      /**
       * <code>repeated int32 cardConfigIds = 10;</code>
       *
       * <pre>
       *cardConfig.id
       * </pre>
       */
      public int getCardConfigIds(int index) {
        return cardConfigIds_.get(index);
      }
      /**
       * <code>repeated int32 cardConfigIds = 10;</code>
       *
       * <pre>
       *cardConfig.id
       * </pre>
       */
      public Builder setCardConfigIds(
          int index, int value) {
        ensureCardConfigIdsIsMutable();
        cardConfigIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardConfigIds = 10;</code>
       *
       * <pre>
       *cardConfig.id
       * </pre>
       */
      public Builder addCardConfigIds(int value) {
        ensureCardConfigIdsIsMutable();
        cardConfigIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardConfigIds = 10;</code>
       *
       * <pre>
       *cardConfig.id
       * </pre>
       */
      public Builder addAllCardConfigIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardConfigIdsIsMutable();
        super.addAll(values, cardConfigIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardConfigIds = 10;</code>
       *
       * <pre>
       *cardConfig.id
       * </pre>
       */
      public Builder clearCardConfigIds() {
        cardConfigIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional bool finderReward = 11;
      private boolean finderReward_ ;
      /**
       * <code>optional bool finderReward = 11;</code>
       *
       * <pre>
       *true:可以领取发现者奖励
       * </pre>
       */
      public boolean hasFinderReward() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool finderReward = 11;</code>
       *
       * <pre>
       *true:可以领取发现者奖励
       * </pre>
       */
      public boolean getFinderReward() {
        return finderReward_;
      }
      /**
       * <code>optional bool finderReward = 11;</code>
       *
       * <pre>
       *true:可以领取发现者奖励
       * </pre>
       */
      public Builder setFinderReward(boolean value) {
        bitField0_ |= 0x00000400;
        finderReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool finderReward = 11;</code>
       *
       * <pre>
       *true:可以领取发现者奖励
       * </pre>
       */
      public Builder clearFinderReward() {
        bitField0_ = (bitField0_ & ~0x00000400);
        finderReward_ = false;
        onChanged();
        return this;
      }

      // optional bool maxDmgReward = 12;
      private boolean maxDmgReward_ ;
      /**
       * <code>optional bool maxDmgReward = 12;</code>
       *
       * <pre>
       *true:可以领取最大伤害奖励
       * </pre>
       */
      public boolean hasMaxDmgReward() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool maxDmgReward = 12;</code>
       *
       * <pre>
       *true:可以领取最大伤害奖励
       * </pre>
       */
      public boolean getMaxDmgReward() {
        return maxDmgReward_;
      }
      /**
       * <code>optional bool maxDmgReward = 12;</code>
       *
       * <pre>
       *true:可以领取最大伤害奖励
       * </pre>
       */
      public Builder setMaxDmgReward(boolean value) {
        bitField0_ |= 0x00000800;
        maxDmgReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool maxDmgReward = 12;</code>
       *
       * <pre>
       *true:可以领取最大伤害奖励
       * </pre>
       */
      public Builder clearMaxDmgReward() {
        bitField0_ = (bitField0_ & ~0x00000800);
        maxDmgReward_ = false;
        onChanged();
        return this;
      }

      // optional bool killerReward = 13;
      private boolean killerReward_ ;
      /**
       * <code>optional bool killerReward = 13;</code>
       *
       * <pre>
       *true:可以领取击杀奖励
       * </pre>
       */
      public boolean hasKillerReward() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool killerReward = 13;</code>
       *
       * <pre>
       *true:可以领取击杀奖励
       * </pre>
       */
      public boolean getKillerReward() {
        return killerReward_;
      }
      /**
       * <code>optional bool killerReward = 13;</code>
       *
       * <pre>
       *true:可以领取击杀奖励
       * </pre>
       */
      public Builder setKillerReward(boolean value) {
        bitField0_ |= 0x00001000;
        killerReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool killerReward = 13;</code>
       *
       * <pre>
       *true:可以领取击杀奖励
       * </pre>
       */
      public Builder clearKillerReward() {
        bitField0_ = (bitField0_ & ~0x00001000);
        killerReward_ = false;
        onChanged();
        return this;
      }

      // optional bool finderReward2 = 14;
      private boolean finderReward2_ ;
      /**
       * <code>optional bool finderReward2 = 14;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public boolean hasFinderReward2() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool finderReward2 = 14;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public boolean getFinderReward2() {
        return finderReward2_;
      }
      /**
       * <code>optional bool finderReward2 = 14;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public Builder setFinderReward2(boolean value) {
        bitField0_ |= 0x00002000;
        finderReward2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool finderReward2 = 14;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public Builder clearFinderReward2() {
        bitField0_ = (bitField0_ & ~0x00002000);
        finderReward2_ = false;
        onChanged();
        return this;
      }

      // optional bool maxDmgReward2 = 15;
      private boolean maxDmgReward2_ ;
      /**
       * <code>optional bool maxDmgReward2 = 15;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public boolean hasMaxDmgReward2() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool maxDmgReward2 = 15;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public boolean getMaxDmgReward2() {
        return maxDmgReward2_;
      }
      /**
       * <code>optional bool maxDmgReward2 = 15;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public Builder setMaxDmgReward2(boolean value) {
        bitField0_ |= 0x00004000;
        maxDmgReward2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool maxDmgReward2 = 15;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public Builder clearMaxDmgReward2() {
        bitField0_ = (bitField0_ & ~0x00004000);
        maxDmgReward2_ = false;
        onChanged();
        return this;
      }

      // optional bool killerReward2 = 16;
      private boolean killerReward2_ ;
      /**
       * <code>optional bool killerReward2 = 16;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public boolean hasKillerReward2() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool killerReward2 = 16;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public boolean getKillerReward2() {
        return killerReward2_;
      }
      /**
       * <code>optional bool killerReward2 = 16;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public Builder setKillerReward2(boolean value) {
        bitField0_ |= 0x00008000;
        killerReward2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool killerReward2 = 16;</code>
       *
       * <pre>
       *true:领取过奖励
       * </pre>
       */
      public Builder clearKillerReward2() {
        bitField0_ = (bitField0_ & ~0x00008000);
        killerReward2_ = false;
        onChanged();
        return this;
      }

      // optional string playerNameKiller = 17;
      private java.lang.Object playerNameKiller_ = "";
      /**
       * <code>optional string playerNameKiller = 17;</code>
       *
       * <pre>
       *击杀者名字
       * </pre>
       */
      public boolean hasPlayerNameKiller() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string playerNameKiller = 17;</code>
       *
       * <pre>
       *击杀者名字
       * </pre>
       */
      public java.lang.String getPlayerNameKiller() {
        java.lang.Object ref = playerNameKiller_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          playerNameKiller_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string playerNameKiller = 17;</code>
       *
       * <pre>
       *击杀者名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPlayerNameKillerBytes() {
        java.lang.Object ref = playerNameKiller_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerNameKiller_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string playerNameKiller = 17;</code>
       *
       * <pre>
       *击杀者名字
       * </pre>
       */
      public Builder setPlayerNameKiller(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        playerNameKiller_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerNameKiller = 17;</code>
       *
       * <pre>
       *击杀者名字
       * </pre>
       */
      public Builder clearPlayerNameKiller() {
        bitField0_ = (bitField0_ & ~0x00010000);
        playerNameKiller_ = getDefaultInstance().getPlayerNameKiller();
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerNameKiller = 17;</code>
       *
       * <pre>
       *击杀者名字
       * </pre>
       */
      public Builder setPlayerNameKillerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        playerNameKiller_ = value;
        onChanged();
        return this;
      }

      // optional bool attacked = 18;
      private boolean attacked_ ;
      /**
       * <code>optional bool attacked = 18;</code>
       *
       * <pre>
       * true:已经参与过打此神魔
       * </pre>
       */
      public boolean hasAttacked() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool attacked = 18;</code>
       *
       * <pre>
       * true:已经参与过打此神魔
       * </pre>
       */
      public boolean getAttacked() {
        return attacked_;
      }
      /**
       * <code>optional bool attacked = 18;</code>
       *
       * <pre>
       * true:已经参与过打此神魔
       * </pre>
       */
      public Builder setAttacked(boolean value) {
        bitField0_ |= 0x00020000;
        attacked_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool attacked = 18;</code>
       *
       * <pre>
       * true:已经参与过打此神魔
       * </pre>
       */
      public Builder clearAttacked() {
        bitField0_ = (bitField0_ & ~0x00020000);
        attacked_ = false;
        onChanged();
        return this;
      }

      // optional bool attackReward = 19;
      private boolean attackReward_ ;
      /**
       * <code>optional bool attackReward = 19;</code>
       *
       * <pre>
       *true:可以领取参与者奖励
       * </pre>
       */
      public boolean hasAttackReward() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool attackReward = 19;</code>
       *
       * <pre>
       *true:可以领取参与者奖励
       * </pre>
       */
      public boolean getAttackReward() {
        return attackReward_;
      }
      /**
       * <code>optional bool attackReward = 19;</code>
       *
       * <pre>
       *true:可以领取参与者奖励
       * </pre>
       */
      public Builder setAttackReward(boolean value) {
        bitField0_ |= 0x00040000;
        attackReward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool attackReward = 19;</code>
       *
       * <pre>
       *true:可以领取参与者奖励
       * </pre>
       */
      public Builder clearAttackReward() {
        bitField0_ = (bitField0_ & ~0x00040000);
        attackReward_ = false;
        onChanged();
        return this;
      }

      // optional bool attackReward2 = 20;
      private boolean attackReward2_ ;
      /**
       * <code>optional bool attackReward2 = 20;</code>
       *
       * <pre>
       *true:领取过参与者奖励
       * </pre>
       */
      public boolean hasAttackReward2() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool attackReward2 = 20;</code>
       *
       * <pre>
       *true:领取过参与者奖励
       * </pre>
       */
      public boolean getAttackReward2() {
        return attackReward2_;
      }
      /**
       * <code>optional bool attackReward2 = 20;</code>
       *
       * <pre>
       *true:领取过参与者奖励
       * </pre>
       */
      public Builder setAttackReward2(boolean value) {
        bitField0_ |= 0x00080000;
        attackReward2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool attackReward2 = 20;</code>
       *
       * <pre>
       *true:领取过参与者奖励
       * </pre>
       */
      public Builder clearAttackReward2() {
        bitField0_ = (bitField0_ & ~0x00080000);
        attackReward2_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ShenMoItem)
    }

    static {
      defaultInstance = new ShenMoItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ShenMoItem)
  }

  public interface DaliyMissionItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rewardId = 1;
    /**
     * <code>optional int32 rewardId = 1;</code>
     */
    boolean hasRewardId();
    /**
     * <code>optional int32 rewardId = 1;</code>
     */
    int getRewardId();

    // repeated int32 contentId = 2;
    /**
     * <code>repeated int32 contentId = 2;</code>
     */
    java.util.List<java.lang.Integer> getContentIdList();
    /**
     * <code>repeated int32 contentId = 2;</code>
     */
    int getContentIdCount();
    /**
     * <code>repeated int32 contentId = 2;</code>
     */
    int getContentId(int index);
  }
  /**
   * Protobuf type {@code DaliyMissionItem}
   */
  public static final class DaliyMissionItem extends
      com.google.protobuf.GeneratedMessage
      implements DaliyMissionItemOrBuilder {
    // Use DaliyMissionItem.newBuilder() to construct.
    private DaliyMissionItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DaliyMissionItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DaliyMissionItem defaultInstance;
    public static DaliyMissionItem getDefaultInstance() {
      return defaultInstance;
    }

    public DaliyMissionItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DaliyMissionItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rewardId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                contentId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              contentId_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                contentId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                contentId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          contentId_ = java.util.Collections.unmodifiableList(contentId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_DaliyMissionItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_DaliyMissionItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.DaliyMissionItem.class, myudfs.Common.DaliyMissionItem.Builder.class);
    }

    public static com.google.protobuf.Parser<DaliyMissionItem> PARSER =
        new com.google.protobuf.AbstractParser<DaliyMissionItem>() {
      public DaliyMissionItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DaliyMissionItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DaliyMissionItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rewardId = 1;
    public static final int REWARDID_FIELD_NUMBER = 1;
    private int rewardId_;
    /**
     * <code>optional int32 rewardId = 1;</code>
     */
    public boolean hasRewardId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rewardId = 1;</code>
     */
    public int getRewardId() {
      return rewardId_;
    }

    // repeated int32 contentId = 2;
    public static final int CONTENTID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> contentId_;
    /**
     * <code>repeated int32 contentId = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getContentIdList() {
      return contentId_;
    }
    /**
     * <code>repeated int32 contentId = 2;</code>
     */
    public int getContentIdCount() {
      return contentId_.size();
    }
    /**
     * <code>repeated int32 contentId = 2;</code>
     */
    public int getContentId(int index) {
      return contentId_.get(index);
    }

    private void initFields() {
      rewardId_ = 0;
      contentId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rewardId_);
      }
      for (int i = 0; i < contentId_.size(); i++) {
        output.writeInt32(2, contentId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rewardId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < contentId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(contentId_.get(i));
        }
        size += dataSize;
        size += 1 * getContentIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.DaliyMissionItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DaliyMissionItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DaliyMissionItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DaliyMissionItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DaliyMissionItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DaliyMissionItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DaliyMissionItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.DaliyMissionItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DaliyMissionItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DaliyMissionItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.DaliyMissionItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DaliyMissionItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.DaliyMissionItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_DaliyMissionItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_DaliyMissionItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.DaliyMissionItem.class, myudfs.Common.DaliyMissionItem.Builder.class);
      }

      // Construct using myudfs.Common.DaliyMissionItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rewardId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        contentId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_DaliyMissionItem_descriptor;
      }

      public myudfs.Common.DaliyMissionItem getDefaultInstanceForType() {
        return myudfs.Common.DaliyMissionItem.getDefaultInstance();
      }

      public myudfs.Common.DaliyMissionItem build() {
        myudfs.Common.DaliyMissionItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.DaliyMissionItem buildPartial() {
        myudfs.Common.DaliyMissionItem result = new myudfs.Common.DaliyMissionItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rewardId_ = rewardId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          contentId_ = java.util.Collections.unmodifiableList(contentId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.contentId_ = contentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.DaliyMissionItem) {
          return mergeFrom((myudfs.Common.DaliyMissionItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.DaliyMissionItem other) {
        if (other == myudfs.Common.DaliyMissionItem.getDefaultInstance()) return this;
        if (other.hasRewardId()) {
          setRewardId(other.getRewardId());
        }
        if (!other.contentId_.isEmpty()) {
          if (contentId_.isEmpty()) {
            contentId_ = other.contentId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureContentIdIsMutable();
            contentId_.addAll(other.contentId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.DaliyMissionItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.DaliyMissionItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rewardId = 1;
      private int rewardId_ ;
      /**
       * <code>optional int32 rewardId = 1;</code>
       */
      public boolean hasRewardId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rewardId = 1;</code>
       */
      public int getRewardId() {
        return rewardId_;
      }
      /**
       * <code>optional int32 rewardId = 1;</code>
       */
      public Builder setRewardId(int value) {
        bitField0_ |= 0x00000001;
        rewardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardId = 1;</code>
       */
      public Builder clearRewardId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rewardId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 contentId = 2;
      private java.util.List<java.lang.Integer> contentId_ = java.util.Collections.emptyList();
      private void ensureContentIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          contentId_ = new java.util.ArrayList<java.lang.Integer>(contentId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 contentId = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getContentIdList() {
        return java.util.Collections.unmodifiableList(contentId_);
      }
      /**
       * <code>repeated int32 contentId = 2;</code>
       */
      public int getContentIdCount() {
        return contentId_.size();
      }
      /**
       * <code>repeated int32 contentId = 2;</code>
       */
      public int getContentId(int index) {
        return contentId_.get(index);
      }
      /**
       * <code>repeated int32 contentId = 2;</code>
       */
      public Builder setContentId(
          int index, int value) {
        ensureContentIdIsMutable();
        contentId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 contentId = 2;</code>
       */
      public Builder addContentId(int value) {
        ensureContentIdIsMutable();
        contentId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 contentId = 2;</code>
       */
      public Builder addAllContentId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureContentIdIsMutable();
        super.addAll(values, contentId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 contentId = 2;</code>
       */
      public Builder clearContentId() {
        contentId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DaliyMissionItem)
    }

    static {
      defaultInstance = new DaliyMissionItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DaliyMissionItem)
  }

  public interface ActivityItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     */
    int getType();

    // optional string content = 2;
    /**
     * <code>optional string content = 2;</code>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 2;</code>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 2;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    // optional uint64 beginDate = 3;
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    boolean hasBeginDate();
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    long getBeginDate();

    // optional uint64 endDate = 4;
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    boolean hasEndDate();
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    long getEndDate();

    // repeated .ActivityRewardItem rewardItem = 5;
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    java.util.List<myudfs.Common.ActivityRewardItem> 
        getRewardItemList();
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    myudfs.Common.ActivityRewardItem getRewardItem(int index);
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    int getRewardItemCount();
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
        getRewardItemOrBuilderList();
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    myudfs.Common.ActivityRewardItemOrBuilder getRewardItemOrBuilder(
        int index);

    // optional int32 id = 6;
    /**
     * <code>optional int32 id = 6;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 6;</code>
     */
    int getId();

    // optional int32 lv = 7;
    /**
     * <code>optional int32 lv = 7;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 7;</code>
     */
    int getLv();

    // optional int32 vip = 8;
    /**
     * <code>optional int32 vip = 8;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 8;</code>
     */
    int getVip();

    // optional string title = 9;
    /**
     * <code>optional string title = 9;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 9;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 9;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional string model = 10;
    /**
     * <code>optional string model = 10;</code>
     */
    boolean hasModel();
    /**
     * <code>optional string model = 10;</code>
     */
    java.lang.String getModel();
    /**
     * <code>optional string model = 10;</code>
     */
    com.google.protobuf.ByteString
        getModelBytes();

    // optional string name = 11;
    /**
     * <code>optional string name = 11;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 11;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 11;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated .ActivityRewardItem timesRewardItem = 12;
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    java.util.List<myudfs.Common.ActivityRewardItem> 
        getTimesRewardItemList();
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    myudfs.Common.ActivityRewardItem getTimesRewardItem(int index);
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    int getTimesRewardItemCount();
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
        getTimesRewardItemOrBuilderList();
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    myudfs.Common.ActivityRewardItemOrBuilder getTimesRewardItemOrBuilder(
        int index);

    // repeated .ActivityRewardItem onlyRewardItem = 13;
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    java.util.List<myudfs.Common.ActivityRewardItem> 
        getOnlyRewardItemList();
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    myudfs.Common.ActivityRewardItem getOnlyRewardItem(int index);
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    int getOnlyRewardItemCount();
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
        getOnlyRewardItemOrBuilderList();
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    myudfs.Common.ActivityRewardItemOrBuilder getOnlyRewardItemOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ActivityItem}
   */
  public static final class ActivityItem extends
      com.google.protobuf.GeneratedMessage
      implements ActivityItemOrBuilder {
    // Use ActivityItem.newBuilder() to construct.
    private ActivityItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActivityItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActivityItem defaultInstance;
    public static ActivityItem getDefaultInstance() {
      return defaultInstance;
    }

    public ActivityItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActivityItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              content_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              beginDate_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endDate_ = input.readUInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                rewardItem_ = new java.util.ArrayList<myudfs.Common.ActivityRewardItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              rewardItem_.add(input.readMessage(myudfs.Common.ActivityRewardItem.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              id_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              lv_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              vip_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000080;
              title_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000100;
              model_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000200;
              name_ = input.readBytes();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                timesRewardItem_ = new java.util.ArrayList<myudfs.Common.ActivityRewardItem>();
                mutable_bitField0_ |= 0x00000800;
              }
              timesRewardItem_.add(input.readMessage(myudfs.Common.ActivityRewardItem.PARSER, extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                onlyRewardItem_ = new java.util.ArrayList<myudfs.Common.ActivityRewardItem>();
                mutable_bitField0_ |= 0x00001000;
              }
              onlyRewardItem_.add(input.readMessage(myudfs.Common.ActivityRewardItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          rewardItem_ = java.util.Collections.unmodifiableList(rewardItem_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          timesRewardItem_ = java.util.Collections.unmodifiableList(timesRewardItem_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          onlyRewardItem_ = java.util.Collections.unmodifiableList(onlyRewardItem_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ActivityItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ActivityItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ActivityItem.class, myudfs.Common.ActivityItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ActivityItem> PARSER =
        new com.google.protobuf.AbstractParser<ActivityItem>() {
      public ActivityItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActivityItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActivityItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    // optional string content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 2;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string content = 2;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 2;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 beginDate = 3;
    public static final int BEGINDATE_FIELD_NUMBER = 3;
    private long beginDate_;
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    public boolean hasBeginDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    public long getBeginDate() {
      return beginDate_;
    }

    // optional uint64 endDate = 4;
    public static final int ENDDATE_FIELD_NUMBER = 4;
    private long endDate_;
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    public long getEndDate() {
      return endDate_;
    }

    // repeated .ActivityRewardItem rewardItem = 5;
    public static final int REWARDITEM_FIELD_NUMBER = 5;
    private java.util.List<myudfs.Common.ActivityRewardItem> rewardItem_;
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    public java.util.List<myudfs.Common.ActivityRewardItem> getRewardItemList() {
      return rewardItem_;
    }
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
        getRewardItemOrBuilderList() {
      return rewardItem_;
    }
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    public int getRewardItemCount() {
      return rewardItem_.size();
    }
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    public myudfs.Common.ActivityRewardItem getRewardItem(int index) {
      return rewardItem_.get(index);
    }
    /**
     * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
     *
     * <pre>
     * 排名奖励
     * </pre>
     */
    public myudfs.Common.ActivityRewardItemOrBuilder getRewardItemOrBuilder(
        int index) {
      return rewardItem_.get(index);
    }

    // optional int32 id = 6;
    public static final int ID_FIELD_NUMBER = 6;
    private int id_;
    /**
     * <code>optional int32 id = 6;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 id = 6;</code>
     */
    public int getId() {
      return id_;
    }

    // optional int32 lv = 7;
    public static final int LV_FIELD_NUMBER = 7;
    private int lv_;
    /**
     * <code>optional int32 lv = 7;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lv = 7;</code>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 vip = 8;
    public static final int VIP_FIELD_NUMBER = 8;
    private int vip_;
    /**
     * <code>optional int32 vip = 8;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 vip = 8;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional string title = 9;
    public static final int TITLE_FIELD_NUMBER = 9;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 9;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string title = 9;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 9;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string model = 10;
    public static final int MODEL_FIELD_NUMBER = 10;
    private java.lang.Object model_;
    /**
     * <code>optional string model = 10;</code>
     */
    public boolean hasModel() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string model = 10;</code>
     */
    public java.lang.String getModel() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          model_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string model = 10;</code>
     */
    public com.google.protobuf.ByteString
        getModelBytes() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        model_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 11;
    public static final int NAME_FIELD_NUMBER = 11;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 11;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string name = 11;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 11;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .ActivityRewardItem timesRewardItem = 12;
    public static final int TIMESREWARDITEM_FIELD_NUMBER = 12;
    private java.util.List<myudfs.Common.ActivityRewardItem> timesRewardItem_;
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    public java.util.List<myudfs.Common.ActivityRewardItem> getTimesRewardItemList() {
      return timesRewardItem_;
    }
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
        getTimesRewardItemOrBuilderList() {
      return timesRewardItem_;
    }
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    public int getTimesRewardItemCount() {
      return timesRewardItem_.size();
    }
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    public myudfs.Common.ActivityRewardItem getTimesRewardItem(int index) {
      return timesRewardItem_.get(index);
    }
    /**
     * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
     *
     * <pre>
     * 领取奖励
     * </pre>
     */
    public myudfs.Common.ActivityRewardItemOrBuilder getTimesRewardItemOrBuilder(
        int index) {
      return timesRewardItem_.get(index);
    }

    // repeated .ActivityRewardItem onlyRewardItem = 13;
    public static final int ONLYREWARDITEM_FIELD_NUMBER = 13;
    private java.util.List<myudfs.Common.ActivityRewardItem> onlyRewardItem_;
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    public java.util.List<myudfs.Common.ActivityRewardItem> getOnlyRewardItemList() {
      return onlyRewardItem_;
    }
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
        getOnlyRewardItemOrBuilderList() {
      return onlyRewardItem_;
    }
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    public int getOnlyRewardItemCount() {
      return onlyRewardItem_.size();
    }
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    public myudfs.Common.ActivityRewardItem getOnlyRewardItem(int index) {
      return onlyRewardItem_.get(index);
    }
    /**
     * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
     *
     * <pre>
     * 活动结束的次数奖励
     * </pre>
     */
    public myudfs.Common.ActivityRewardItemOrBuilder getOnlyRewardItemOrBuilder(
        int index) {
      return onlyRewardItem_.get(index);
    }

    private void initFields() {
      type_ = 0;
      content_ = "";
      beginDate_ = 0L;
      endDate_ = 0L;
      rewardItem_ = java.util.Collections.emptyList();
      id_ = 0;
      lv_ = 0;
      vip_ = 0;
      title_ = "";
      model_ = "";
      name_ = "";
      timesRewardItem_ = java.util.Collections.emptyList();
      onlyRewardItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getContentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, beginDate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, endDate_);
      }
      for (int i = 0; i < rewardItem_.size(); i++) {
        output.writeMessage(5, rewardItem_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, id_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, lv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, vip_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getTitleBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getModelBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getNameBytes());
      }
      for (int i = 0; i < timesRewardItem_.size(); i++) {
        output.writeMessage(12, timesRewardItem_.get(i));
      }
      for (int i = 0; i < onlyRewardItem_.size(); i++) {
        output.writeMessage(13, onlyRewardItem_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, beginDate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, endDate_);
      }
      for (int i = 0; i < rewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, rewardItem_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, id_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, lv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, vip_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getTitleBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getModelBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getNameBytes());
      }
      for (int i = 0; i < timesRewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, timesRewardItem_.get(i));
      }
      for (int i = 0; i < onlyRewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, onlyRewardItem_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ActivityItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ActivityItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ActivityItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ActivityItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ActivityItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ActivityItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ActivityItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ActivityItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ActivityItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ActivityItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ActivityItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ActivityItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ActivityItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ActivityItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ActivityItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ActivityItem.class, myudfs.Common.ActivityItem.Builder.class);
      }

      // Construct using myudfs.Common.ActivityItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRewardItemFieldBuilder();
          getTimesRewardItemFieldBuilder();
          getOnlyRewardItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        beginDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        endDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (rewardItemBuilder_ == null) {
          rewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          rewardItemBuilder_.clear();
        }
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        model_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        if (timesRewardItemBuilder_ == null) {
          timesRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          timesRewardItemBuilder_.clear();
        }
        if (onlyRewardItemBuilder_ == null) {
          onlyRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          onlyRewardItemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ActivityItem_descriptor;
      }

      public myudfs.Common.ActivityItem getDefaultInstanceForType() {
        return myudfs.Common.ActivityItem.getDefaultInstance();
      }

      public myudfs.Common.ActivityItem build() {
        myudfs.Common.ActivityItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ActivityItem buildPartial() {
        myudfs.Common.ActivityItem result = new myudfs.Common.ActivityItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.beginDate_ = beginDate_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endDate_ = endDate_;
        if (rewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            rewardItem_ = java.util.Collections.unmodifiableList(rewardItem_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rewardItem_ = rewardItem_;
        } else {
          result.rewardItem_ = rewardItemBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.model_ = model_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.name_ = name_;
        if (timesRewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            timesRewardItem_ = java.util.Collections.unmodifiableList(timesRewardItem_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.timesRewardItem_ = timesRewardItem_;
        } else {
          result.timesRewardItem_ = timesRewardItemBuilder_.build();
        }
        if (onlyRewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            onlyRewardItem_ = java.util.Collections.unmodifiableList(onlyRewardItem_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.onlyRewardItem_ = onlyRewardItem_;
        } else {
          result.onlyRewardItem_ = onlyRewardItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ActivityItem) {
          return mergeFrom((myudfs.Common.ActivityItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ActivityItem other) {
        if (other == myudfs.Common.ActivityItem.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasContent()) {
          bitField0_ |= 0x00000002;
          content_ = other.content_;
          onChanged();
        }
        if (other.hasBeginDate()) {
          setBeginDate(other.getBeginDate());
        }
        if (other.hasEndDate()) {
          setEndDate(other.getEndDate());
        }
        if (rewardItemBuilder_ == null) {
          if (!other.rewardItem_.isEmpty()) {
            if (rewardItem_.isEmpty()) {
              rewardItem_ = other.rewardItem_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRewardItemIsMutable();
              rewardItem_.addAll(other.rewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.rewardItem_.isEmpty()) {
            if (rewardItemBuilder_.isEmpty()) {
              rewardItemBuilder_.dispose();
              rewardItemBuilder_ = null;
              rewardItem_ = other.rewardItem_;
              bitField0_ = (bitField0_ & ~0x00000010);
              rewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRewardItemFieldBuilder() : null;
            } else {
              rewardItemBuilder_.addAllMessages(other.rewardItem_);
            }
          }
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000100;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasModel()) {
          bitField0_ |= 0x00000200;
          model_ = other.model_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000400;
          name_ = other.name_;
          onChanged();
        }
        if (timesRewardItemBuilder_ == null) {
          if (!other.timesRewardItem_.isEmpty()) {
            if (timesRewardItem_.isEmpty()) {
              timesRewardItem_ = other.timesRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureTimesRewardItemIsMutable();
              timesRewardItem_.addAll(other.timesRewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.timesRewardItem_.isEmpty()) {
            if (timesRewardItemBuilder_.isEmpty()) {
              timesRewardItemBuilder_.dispose();
              timesRewardItemBuilder_ = null;
              timesRewardItem_ = other.timesRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000800);
              timesRewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTimesRewardItemFieldBuilder() : null;
            } else {
              timesRewardItemBuilder_.addAllMessages(other.timesRewardItem_);
            }
          }
        }
        if (onlyRewardItemBuilder_ == null) {
          if (!other.onlyRewardItem_.isEmpty()) {
            if (onlyRewardItem_.isEmpty()) {
              onlyRewardItem_ = other.onlyRewardItem_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureOnlyRewardItemIsMutable();
              onlyRewardItem_.addAll(other.onlyRewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.onlyRewardItem_.isEmpty()) {
            if (onlyRewardItemBuilder_.isEmpty()) {
              onlyRewardItemBuilder_.dispose();
              onlyRewardItemBuilder_ = null;
              onlyRewardItem_ = other.onlyRewardItem_;
              bitField0_ = (bitField0_ & ~0x00001000);
              onlyRewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOnlyRewardItemFieldBuilder() : null;
            } else {
              onlyRewardItemBuilder_.addAllMessages(other.onlyRewardItem_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ActivityItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ActivityItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional string content = 2;
      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 2;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }

      // optional uint64 beginDate = 3;
      private long beginDate_ ;
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public boolean hasBeginDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public long getBeginDate() {
        return beginDate_;
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public Builder setBeginDate(long value) {
        bitField0_ |= 0x00000004;
        beginDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public Builder clearBeginDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        beginDate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 endDate = 4;
      private long endDate_ ;
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public long getEndDate() {
        return endDate_;
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public Builder setEndDate(long value) {
        bitField0_ |= 0x00000008;
        endDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endDate_ = 0L;
        onChanged();
        return this;
      }

      // repeated .ActivityRewardItem rewardItem = 5;
      private java.util.List<myudfs.Common.ActivityRewardItem> rewardItem_ =
        java.util.Collections.emptyList();
      private void ensureRewardItemIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          rewardItem_ = new java.util.ArrayList<myudfs.Common.ActivityRewardItem>(rewardItem_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder> rewardItemBuilder_;

      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public java.util.List<myudfs.Common.ActivityRewardItem> getRewardItemList() {
        if (rewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rewardItem_);
        } else {
          return rewardItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public int getRewardItemCount() {
        if (rewardItemBuilder_ == null) {
          return rewardItem_.size();
        } else {
          return rewardItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem getRewardItem(int index) {
        if (rewardItemBuilder_ == null) {
          return rewardItem_.get(index);
        } else {
          return rewardItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder setRewardItem(
          int index, myudfs.Common.ActivityRewardItem value) {
        if (rewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardItemIsMutable();
          rewardItem_.set(index, value);
          onChanged();
        } else {
          rewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder setRewardItem(
          int index, myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (rewardItemBuilder_ == null) {
          ensureRewardItemIsMutable();
          rewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder addRewardItem(myudfs.Common.ActivityRewardItem value) {
        if (rewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardItemIsMutable();
          rewardItem_.add(value);
          onChanged();
        } else {
          rewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder addRewardItem(
          int index, myudfs.Common.ActivityRewardItem value) {
        if (rewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardItemIsMutable();
          rewardItem_.add(index, value);
          onChanged();
        } else {
          rewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder addRewardItem(
          myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (rewardItemBuilder_ == null) {
          ensureRewardItemIsMutable();
          rewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          rewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder addRewardItem(
          int index, myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (rewardItemBuilder_ == null) {
          ensureRewardItemIsMutable();
          rewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder addAllRewardItem(
          java.lang.Iterable<? extends myudfs.Common.ActivityRewardItem> values) {
        if (rewardItemBuilder_ == null) {
          ensureRewardItemIsMutable();
          super.addAll(values, rewardItem_);
          onChanged();
        } else {
          rewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder clearRewardItem() {
        if (rewardItemBuilder_ == null) {
          rewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          rewardItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public Builder removeRewardItem(int index) {
        if (rewardItemBuilder_ == null) {
          ensureRewardItemIsMutable();
          rewardItem_.remove(index);
          onChanged();
        } else {
          rewardItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder getRewardItemBuilder(
          int index) {
        return getRewardItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItemOrBuilder getRewardItemOrBuilder(
          int index) {
        if (rewardItemBuilder_ == null) {
          return rewardItem_.get(index);  } else {
          return rewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
           getRewardItemOrBuilderList() {
        if (rewardItemBuilder_ != null) {
          return rewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rewardItem_);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder addRewardItemBuilder() {
        return getRewardItemFieldBuilder().addBuilder(
            myudfs.Common.ActivityRewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder addRewardItemBuilder(
          int index) {
        return getRewardItemFieldBuilder().addBuilder(
            index, myudfs.Common.ActivityRewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityRewardItem rewardItem = 5;</code>
       *
       * <pre>
       * 排名奖励
       * </pre>
       */
      public java.util.List<myudfs.Common.ActivityRewardItem.Builder> 
           getRewardItemBuilderList() {
        return getRewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder> 
          getRewardItemFieldBuilder() {
        if (rewardItemBuilder_ == null) {
          rewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder>(
                  rewardItem_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          rewardItem_ = null;
        }
        return rewardItemBuilder_;
      }

      // optional int32 id = 6;
      private int id_ ;
      /**
       * <code>optional int32 id = 6;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 id = 6;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 6;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000020;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 6;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lv = 7;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000040;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000040);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vip = 8;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000080;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000080);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional string title = 9;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 9;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000100);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        title_ = value;
        onChanged();
        return this;
      }

      // optional string model = 10;
      private java.lang.Object model_ = "";
      /**
       * <code>optional string model = 10;</code>
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public java.lang.String getModel() {
        java.lang.Object ref = model_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          model_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public com.google.protobuf.ByteString
          getModelBytes() {
        java.lang.Object ref = model_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          model_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public Builder setModel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        model_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public Builder clearModel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        model_ = getDefaultInstance().getModel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public Builder setModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        model_ = value;
        onChanged();
        return this;
      }

      // optional string name = 11;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 11;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string name = 11;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 11;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 11;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 11;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000400);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 11;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        name_ = value;
        onChanged();
        return this;
      }

      // repeated .ActivityRewardItem timesRewardItem = 12;
      private java.util.List<myudfs.Common.ActivityRewardItem> timesRewardItem_ =
        java.util.Collections.emptyList();
      private void ensureTimesRewardItemIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          timesRewardItem_ = new java.util.ArrayList<myudfs.Common.ActivityRewardItem>(timesRewardItem_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder> timesRewardItemBuilder_;

      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public java.util.List<myudfs.Common.ActivityRewardItem> getTimesRewardItemList() {
        if (timesRewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(timesRewardItem_);
        } else {
          return timesRewardItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public int getTimesRewardItemCount() {
        if (timesRewardItemBuilder_ == null) {
          return timesRewardItem_.size();
        } else {
          return timesRewardItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem getTimesRewardItem(int index) {
        if (timesRewardItemBuilder_ == null) {
          return timesRewardItem_.get(index);
        } else {
          return timesRewardItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder setTimesRewardItem(
          int index, myudfs.Common.ActivityRewardItem value) {
        if (timesRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimesRewardItemIsMutable();
          timesRewardItem_.set(index, value);
          onChanged();
        } else {
          timesRewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder setTimesRewardItem(
          int index, myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (timesRewardItemBuilder_ == null) {
          ensureTimesRewardItemIsMutable();
          timesRewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          timesRewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder addTimesRewardItem(myudfs.Common.ActivityRewardItem value) {
        if (timesRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimesRewardItemIsMutable();
          timesRewardItem_.add(value);
          onChanged();
        } else {
          timesRewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder addTimesRewardItem(
          int index, myudfs.Common.ActivityRewardItem value) {
        if (timesRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimesRewardItemIsMutable();
          timesRewardItem_.add(index, value);
          onChanged();
        } else {
          timesRewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder addTimesRewardItem(
          myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (timesRewardItemBuilder_ == null) {
          ensureTimesRewardItemIsMutable();
          timesRewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          timesRewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder addTimesRewardItem(
          int index, myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (timesRewardItemBuilder_ == null) {
          ensureTimesRewardItemIsMutable();
          timesRewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          timesRewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder addAllTimesRewardItem(
          java.lang.Iterable<? extends myudfs.Common.ActivityRewardItem> values) {
        if (timesRewardItemBuilder_ == null) {
          ensureTimesRewardItemIsMutable();
          super.addAll(values, timesRewardItem_);
          onChanged();
        } else {
          timesRewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder clearTimesRewardItem() {
        if (timesRewardItemBuilder_ == null) {
          timesRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          timesRewardItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public Builder removeTimesRewardItem(int index) {
        if (timesRewardItemBuilder_ == null) {
          ensureTimesRewardItemIsMutable();
          timesRewardItem_.remove(index);
          onChanged();
        } else {
          timesRewardItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder getTimesRewardItemBuilder(
          int index) {
        return getTimesRewardItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItemOrBuilder getTimesRewardItemOrBuilder(
          int index) {
        if (timesRewardItemBuilder_ == null) {
          return timesRewardItem_.get(index);  } else {
          return timesRewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
           getTimesRewardItemOrBuilderList() {
        if (timesRewardItemBuilder_ != null) {
          return timesRewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(timesRewardItem_);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder addTimesRewardItemBuilder() {
        return getTimesRewardItemFieldBuilder().addBuilder(
            myudfs.Common.ActivityRewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder addTimesRewardItemBuilder(
          int index) {
        return getTimesRewardItemFieldBuilder().addBuilder(
            index, myudfs.Common.ActivityRewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityRewardItem timesRewardItem = 12;</code>
       *
       * <pre>
       * 领取奖励
       * </pre>
       */
      public java.util.List<myudfs.Common.ActivityRewardItem.Builder> 
           getTimesRewardItemBuilderList() {
        return getTimesRewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder> 
          getTimesRewardItemFieldBuilder() {
        if (timesRewardItemBuilder_ == null) {
          timesRewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder>(
                  timesRewardItem_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          timesRewardItem_ = null;
        }
        return timesRewardItemBuilder_;
      }

      // repeated .ActivityRewardItem onlyRewardItem = 13;
      private java.util.List<myudfs.Common.ActivityRewardItem> onlyRewardItem_ =
        java.util.Collections.emptyList();
      private void ensureOnlyRewardItemIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          onlyRewardItem_ = new java.util.ArrayList<myudfs.Common.ActivityRewardItem>(onlyRewardItem_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder> onlyRewardItemBuilder_;

      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public java.util.List<myudfs.Common.ActivityRewardItem> getOnlyRewardItemList() {
        if (onlyRewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(onlyRewardItem_);
        } else {
          return onlyRewardItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public int getOnlyRewardItemCount() {
        if (onlyRewardItemBuilder_ == null) {
          return onlyRewardItem_.size();
        } else {
          return onlyRewardItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem getOnlyRewardItem(int index) {
        if (onlyRewardItemBuilder_ == null) {
          return onlyRewardItem_.get(index);
        } else {
          return onlyRewardItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder setOnlyRewardItem(
          int index, myudfs.Common.ActivityRewardItem value) {
        if (onlyRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOnlyRewardItemIsMutable();
          onlyRewardItem_.set(index, value);
          onChanged();
        } else {
          onlyRewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder setOnlyRewardItem(
          int index, myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (onlyRewardItemBuilder_ == null) {
          ensureOnlyRewardItemIsMutable();
          onlyRewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          onlyRewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder addOnlyRewardItem(myudfs.Common.ActivityRewardItem value) {
        if (onlyRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOnlyRewardItemIsMutable();
          onlyRewardItem_.add(value);
          onChanged();
        } else {
          onlyRewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder addOnlyRewardItem(
          int index, myudfs.Common.ActivityRewardItem value) {
        if (onlyRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOnlyRewardItemIsMutable();
          onlyRewardItem_.add(index, value);
          onChanged();
        } else {
          onlyRewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder addOnlyRewardItem(
          myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (onlyRewardItemBuilder_ == null) {
          ensureOnlyRewardItemIsMutable();
          onlyRewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          onlyRewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder addOnlyRewardItem(
          int index, myudfs.Common.ActivityRewardItem.Builder builderForValue) {
        if (onlyRewardItemBuilder_ == null) {
          ensureOnlyRewardItemIsMutable();
          onlyRewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          onlyRewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder addAllOnlyRewardItem(
          java.lang.Iterable<? extends myudfs.Common.ActivityRewardItem> values) {
        if (onlyRewardItemBuilder_ == null) {
          ensureOnlyRewardItemIsMutable();
          super.addAll(values, onlyRewardItem_);
          onChanged();
        } else {
          onlyRewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder clearOnlyRewardItem() {
        if (onlyRewardItemBuilder_ == null) {
          onlyRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          onlyRewardItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public Builder removeOnlyRewardItem(int index) {
        if (onlyRewardItemBuilder_ == null) {
          ensureOnlyRewardItemIsMutable();
          onlyRewardItem_.remove(index);
          onChanged();
        } else {
          onlyRewardItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder getOnlyRewardItemBuilder(
          int index) {
        return getOnlyRewardItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItemOrBuilder getOnlyRewardItemOrBuilder(
          int index) {
        if (onlyRewardItemBuilder_ == null) {
          return onlyRewardItem_.get(index);  } else {
          return onlyRewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.ActivityRewardItemOrBuilder> 
           getOnlyRewardItemOrBuilderList() {
        if (onlyRewardItemBuilder_ != null) {
          return onlyRewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(onlyRewardItem_);
        }
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder addOnlyRewardItemBuilder() {
        return getOnlyRewardItemFieldBuilder().addBuilder(
            myudfs.Common.ActivityRewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public myudfs.Common.ActivityRewardItem.Builder addOnlyRewardItemBuilder(
          int index) {
        return getOnlyRewardItemFieldBuilder().addBuilder(
            index, myudfs.Common.ActivityRewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityRewardItem onlyRewardItem = 13;</code>
       *
       * <pre>
       * 活动结束的次数奖励
       * </pre>
       */
      public java.util.List<myudfs.Common.ActivityRewardItem.Builder> 
           getOnlyRewardItemBuilderList() {
        return getOnlyRewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder> 
          getOnlyRewardItemFieldBuilder() {
        if (onlyRewardItemBuilder_ == null) {
          onlyRewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.ActivityRewardItem, myudfs.Common.ActivityRewardItem.Builder, myudfs.Common.ActivityRewardItemOrBuilder>(
                  onlyRewardItem_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          onlyRewardItem_ = null;
        }
        return onlyRewardItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ActivityItem)
    }

    static {
      defaultInstance = new ActivityItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ActivityItem)
  }

  public interface LoginActivityOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     */
    int getType();

    // optional string content = 2;
    /**
     * <code>optional string content = 2;</code>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 2;</code>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 2;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    // optional uint64 beginDate = 3;
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    boolean hasBeginDate();
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    long getBeginDate();

    // optional uint64 endDate = 4;
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    boolean hasEndDate();
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    long getEndDate();

    // optional int32 id = 6;
    /**
     * <code>optional int32 id = 6;</code>
     *
     * <pre>
     *	repeated ActivityRewardItem rewardItem = 5;
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 6;</code>
     *
     * <pre>
     *	repeated ActivityRewardItem rewardItem = 5;
     * </pre>
     */
    int getId();

    // optional int32 lv = 7;
    /**
     * <code>optional int32 lv = 7;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 7;</code>
     */
    int getLv();

    // optional int32 vip = 8;
    /**
     * <code>optional int32 vip = 8;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 8;</code>
     */
    int getVip();

    // optional string title = 9;
    /**
     * <code>optional string title = 9;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 9;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 9;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional string model = 10;
    /**
     * <code>optional string model = 10;</code>
     */
    boolean hasModel();
    /**
     * <code>optional string model = 10;</code>
     */
    java.lang.String getModel();
    /**
     * <code>optional string model = 10;</code>
     */
    com.google.protobuf.ByteString
        getModelBytes();
  }
  /**
   * Protobuf type {@code LoginActivity}
   */
  public static final class LoginActivity extends
      com.google.protobuf.GeneratedMessage
      implements LoginActivityOrBuilder {
    // Use LoginActivity.newBuilder() to construct.
    private LoginActivity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoginActivity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoginActivity defaultInstance;
    public static LoginActivity getDefaultInstance() {
      return defaultInstance;
    }

    public LoginActivity getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoginActivity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              content_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              beginDate_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endDate_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              id_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              lv_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              vip_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000080;
              title_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000100;
              model_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_LoginActivity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_LoginActivity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.LoginActivity.class, myudfs.Common.LoginActivity.Builder.class);
    }

    public static com.google.protobuf.Parser<LoginActivity> PARSER =
        new com.google.protobuf.AbstractParser<LoginActivity>() {
      public LoginActivity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoginActivity(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoginActivity> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    // optional string content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 2;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string content = 2;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 2;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 beginDate = 3;
    public static final int BEGINDATE_FIELD_NUMBER = 3;
    private long beginDate_;
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    public boolean hasBeginDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 beginDate = 3;</code>
     */
    public long getBeginDate() {
      return beginDate_;
    }

    // optional uint64 endDate = 4;
    public static final int ENDDATE_FIELD_NUMBER = 4;
    private long endDate_;
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 endDate = 4;</code>
     */
    public long getEndDate() {
      return endDate_;
    }

    // optional int32 id = 6;
    public static final int ID_FIELD_NUMBER = 6;
    private int id_;
    /**
     * <code>optional int32 id = 6;</code>
     *
     * <pre>
     *	repeated ActivityRewardItem rewardItem = 5;
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 id = 6;</code>
     *
     * <pre>
     *	repeated ActivityRewardItem rewardItem = 5;
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 lv = 7;
    public static final int LV_FIELD_NUMBER = 7;
    private int lv_;
    /**
     * <code>optional int32 lv = 7;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lv = 7;</code>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 vip = 8;
    public static final int VIP_FIELD_NUMBER = 8;
    private int vip_;
    /**
     * <code>optional int32 vip = 8;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 vip = 8;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional string title = 9;
    public static final int TITLE_FIELD_NUMBER = 9;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 9;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string title = 9;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 9;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string model = 10;
    public static final int MODEL_FIELD_NUMBER = 10;
    private java.lang.Object model_;
    /**
     * <code>optional string model = 10;</code>
     */
    public boolean hasModel() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string model = 10;</code>
     */
    public java.lang.String getModel() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          model_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string model = 10;</code>
     */
    public com.google.protobuf.ByteString
        getModelBytes() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        model_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = 0;
      content_ = "";
      beginDate_ = 0L;
      endDate_ = 0L;
      id_ = 0;
      lv_ = 0;
      vip_ = 0;
      title_ = "";
      model_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getContentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, beginDate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, endDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, id_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, lv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, vip_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getTitleBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getModelBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, beginDate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, endDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, id_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, lv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, vip_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getTitleBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getModelBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.LoginActivity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.LoginActivity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.LoginActivity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.LoginActivity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.LoginActivity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.LoginActivity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.LoginActivity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.LoginActivity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.LoginActivity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.LoginActivity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.LoginActivity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LoginActivity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.LoginActivityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_LoginActivity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_LoginActivity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.LoginActivity.class, myudfs.Common.LoginActivity.Builder.class);
      }

      // Construct using myudfs.Common.LoginActivity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        beginDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        endDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        model_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_LoginActivity_descriptor;
      }

      public myudfs.Common.LoginActivity getDefaultInstanceForType() {
        return myudfs.Common.LoginActivity.getDefaultInstance();
      }

      public myudfs.Common.LoginActivity build() {
        myudfs.Common.LoginActivity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.LoginActivity buildPartial() {
        myudfs.Common.LoginActivity result = new myudfs.Common.LoginActivity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.beginDate_ = beginDate_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endDate_ = endDate_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.model_ = model_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.LoginActivity) {
          return mergeFrom((myudfs.Common.LoginActivity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.LoginActivity other) {
        if (other == myudfs.Common.LoginActivity.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasContent()) {
          bitField0_ |= 0x00000002;
          content_ = other.content_;
          onChanged();
        }
        if (other.hasBeginDate()) {
          setBeginDate(other.getBeginDate());
        }
        if (other.hasEndDate()) {
          setEndDate(other.getEndDate());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000080;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasModel()) {
          bitField0_ |= 0x00000100;
          model_ = other.model_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.LoginActivity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.LoginActivity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional string content = 2;
      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 2;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 2;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }

      // optional uint64 beginDate = 3;
      private long beginDate_ ;
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public boolean hasBeginDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public long getBeginDate() {
        return beginDate_;
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public Builder setBeginDate(long value) {
        bitField0_ |= 0x00000004;
        beginDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 beginDate = 3;</code>
       */
      public Builder clearBeginDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        beginDate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 endDate = 4;
      private long endDate_ ;
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public long getEndDate() {
        return endDate_;
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public Builder setEndDate(long value) {
        bitField0_ |= 0x00000008;
        endDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 endDate = 4;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endDate_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 id = 6;
      private int id_ ;
      /**
       * <code>optional int32 id = 6;</code>
       *
       * <pre>
       *	repeated ActivityRewardItem rewardItem = 5;
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 id = 6;</code>
       *
       * <pre>
       *	repeated ActivityRewardItem rewardItem = 5;
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 6;</code>
       *
       * <pre>
       *	repeated ActivityRewardItem rewardItem = 5;
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000010;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 6;</code>
       *
       * <pre>
       *	repeated ActivityRewardItem rewardItem = 5;
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lv = 7;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000020;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 7;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vip = 8;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000040;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 8;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional string title = 9;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 9;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 9;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        title_ = value;
        onChanged();
        return this;
      }

      // optional string model = 10;
      private java.lang.Object model_ = "";
      /**
       * <code>optional string model = 10;</code>
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public java.lang.String getModel() {
        java.lang.Object ref = model_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          model_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public com.google.protobuf.ByteString
          getModelBytes() {
        java.lang.Object ref = model_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          model_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public Builder setModel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        model_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public Builder clearModel() {
        bitField0_ = (bitField0_ & ~0x00000100);
        model_ = getDefaultInstance().getModel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string model = 10;</code>
       */
      public Builder setModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        model_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LoginActivity)
    }

    static {
      defaultInstance = new LoginActivity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LoginActivity)
  }

  public interface ActivityRewardItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string id = 1;
    /**
     * <code>optional string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional int32 goalGold = 2;
    /**
     * <code>optional int32 goalGold = 2;</code>
     */
    boolean hasGoalGold();
    /**
     * <code>optional int32 goalGold = 2;</code>
     */
    int getGoalGold();

    // optional string title = 3;
    /**
     * <code>optional string title = 3;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 3;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 3;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional int32 times = 4;
    /**
     * <code>optional int32 times = 4;</code>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 4;</code>
     */
    int getTimes();

    // repeated .RewardItem protoData = 5;
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    java.util.List<myudfs.Common.RewardItem> 
        getProtoDataList();
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    myudfs.Common.RewardItem getProtoData(int index);
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    int getProtoDataCount();
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    java.util.List<? extends myudfs.Common.RewardItemOrBuilder> 
        getProtoDataOrBuilderList();
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    myudfs.Common.RewardItemOrBuilder getProtoDataOrBuilder(
        int index);

    // optional int32 status = 6;
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
     * </pre>
     */
    int getStatus();

    // optional bool notValide = 7;
    /**
     * <code>optional bool notValide = 7;</code>
     *
     * <pre>
     * true:不可领取
     * </pre>
     */
    boolean hasNotValide();
    /**
     * <code>optional bool notValide = 7;</code>
     *
     * <pre>
     * true:不可领取
     * </pre>
     */
    boolean getNotValide();

    // repeated .RewardItem consume = 8;
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    java.util.List<myudfs.Common.RewardItem> 
        getConsumeList();
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    myudfs.Common.RewardItem getConsume(int index);
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    int getConsumeCount();
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    java.util.List<? extends myudfs.Common.RewardItemOrBuilder> 
        getConsumeOrBuilderList();
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    myudfs.Common.RewardItemOrBuilder getConsumeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ActivityRewardItem}
   */
  public static final class ActivityRewardItem extends
      com.google.protobuf.GeneratedMessage
      implements ActivityRewardItemOrBuilder {
    // Use ActivityRewardItem.newBuilder() to construct.
    private ActivityRewardItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActivityRewardItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActivityRewardItem defaultInstance;
    public static ActivityRewardItem getDefaultInstance() {
      return defaultInstance;
    }

    public ActivityRewardItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActivityRewardItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              goalGold_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              title_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              times_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                protoData_ = new java.util.ArrayList<myudfs.Common.RewardItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              protoData_.add(input.readMessage(myudfs.Common.RewardItem.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              notValide_ = input.readBool();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                consume_ = new java.util.ArrayList<myudfs.Common.RewardItem>();
                mutable_bitField0_ |= 0x00000080;
              }
              consume_.add(input.readMessage(myudfs.Common.RewardItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          protoData_ = java.util.Collections.unmodifiableList(protoData_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          consume_ = java.util.Collections.unmodifiableList(consume_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ActivityRewardItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ActivityRewardItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ActivityRewardItem.class, myudfs.Common.ActivityRewardItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ActivityRewardItem> PARSER =
        new com.google.protobuf.AbstractParser<ActivityRewardItem>() {
      public ActivityRewardItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActivityRewardItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActivityRewardItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 goalGold = 2;
    public static final int GOALGOLD_FIELD_NUMBER = 2;
    private int goalGold_;
    /**
     * <code>optional int32 goalGold = 2;</code>
     */
    public boolean hasGoalGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 goalGold = 2;</code>
     */
    public int getGoalGold() {
      return goalGold_;
    }

    // optional string title = 3;
    public static final int TITLE_FIELD_NUMBER = 3;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 3;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string title = 3;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 times = 4;
    public static final int TIMES_FIELD_NUMBER = 4;
    private int times_;
    /**
     * <code>optional int32 times = 4;</code>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 times = 4;</code>
     */
    public int getTimes() {
      return times_;
    }

    // repeated .RewardItem protoData = 5;
    public static final int PROTODATA_FIELD_NUMBER = 5;
    private java.util.List<myudfs.Common.RewardItem> protoData_;
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    public java.util.List<myudfs.Common.RewardItem> getProtoDataList() {
      return protoData_;
    }
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    public java.util.List<? extends myudfs.Common.RewardItemOrBuilder> 
        getProtoDataOrBuilderList() {
      return protoData_;
    }
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    public int getProtoDataCount() {
      return protoData_.size();
    }
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    public myudfs.Common.RewardItem getProtoData(int index) {
      return protoData_.get(index);
    }
    /**
     * <code>repeated .RewardItem protoData = 5;</code>
     */
    public myudfs.Common.RewardItemOrBuilder getProtoDataOrBuilder(
        int index) {
      return protoData_.get(index);
    }

    // optional int32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional bool notValide = 7;
    public static final int NOTVALIDE_FIELD_NUMBER = 7;
    private boolean notValide_;
    /**
     * <code>optional bool notValide = 7;</code>
     *
     * <pre>
     * true:不可领取
     * </pre>
     */
    public boolean hasNotValide() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool notValide = 7;</code>
     *
     * <pre>
     * true:不可领取
     * </pre>
     */
    public boolean getNotValide() {
      return notValide_;
    }

    // repeated .RewardItem consume = 8;
    public static final int CONSUME_FIELD_NUMBER = 8;
    private java.util.List<myudfs.Common.RewardItem> consume_;
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    public java.util.List<myudfs.Common.RewardItem> getConsumeList() {
      return consume_;
    }
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    public java.util.List<? extends myudfs.Common.RewardItemOrBuilder> 
        getConsumeOrBuilderList() {
      return consume_;
    }
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    public int getConsumeCount() {
      return consume_.size();
    }
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    public myudfs.Common.RewardItem getConsume(int index) {
      return consume_.get(index);
    }
    /**
     * <code>repeated .RewardItem consume = 8;</code>
     */
    public myudfs.Common.RewardItemOrBuilder getConsumeOrBuilder(
        int index) {
      return consume_.get(index);
    }

    private void initFields() {
      id_ = "";
      goalGold_ = 0;
      title_ = "";
      times_ = 0;
      protoData_ = java.util.Collections.emptyList();
      status_ = 0;
      notValide_ = false;
      consume_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, goalGold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, times_);
      }
      for (int i = 0; i < protoData_.size(); i++) {
        output.writeMessage(5, protoData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, notValide_);
      }
      for (int i = 0; i < consume_.size(); i++) {
        output.writeMessage(8, consume_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, goalGold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, times_);
      }
      for (int i = 0; i < protoData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, protoData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, notValide_);
      }
      for (int i = 0; i < consume_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, consume_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ActivityRewardItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ActivityRewardItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ActivityRewardItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ActivityRewardItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ActivityRewardItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ActivityRewardItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ActivityRewardItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ActivityRewardItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ActivityRewardItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ActivityRewardItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ActivityRewardItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ActivityRewardItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ActivityRewardItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ActivityRewardItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ActivityRewardItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ActivityRewardItem.class, myudfs.Common.ActivityRewardItem.Builder.class);
      }

      // Construct using myudfs.Common.ActivityRewardItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProtoDataFieldBuilder();
          getConsumeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        goalGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (protoDataBuilder_ == null) {
          protoData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          protoDataBuilder_.clear();
        }
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        notValide_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (consumeBuilder_ == null) {
          consume_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          consumeBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ActivityRewardItem_descriptor;
      }

      public myudfs.Common.ActivityRewardItem getDefaultInstanceForType() {
        return myudfs.Common.ActivityRewardItem.getDefaultInstance();
      }

      public myudfs.Common.ActivityRewardItem build() {
        myudfs.Common.ActivityRewardItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ActivityRewardItem buildPartial() {
        myudfs.Common.ActivityRewardItem result = new myudfs.Common.ActivityRewardItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.goalGold_ = goalGold_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.times_ = times_;
        if (protoDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            protoData_ = java.util.Collections.unmodifiableList(protoData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.protoData_ = protoData_;
        } else {
          result.protoData_ = protoDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.notValide_ = notValide_;
        if (consumeBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            consume_ = java.util.Collections.unmodifiableList(consume_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.consume_ = consume_;
        } else {
          result.consume_ = consumeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ActivityRewardItem) {
          return mergeFrom((myudfs.Common.ActivityRewardItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ActivityRewardItem other) {
        if (other == myudfs.Common.ActivityRewardItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasGoalGold()) {
          setGoalGold(other.getGoalGold());
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000004;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (protoDataBuilder_ == null) {
          if (!other.protoData_.isEmpty()) {
            if (protoData_.isEmpty()) {
              protoData_ = other.protoData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureProtoDataIsMutable();
              protoData_.addAll(other.protoData_);
            }
            onChanged();
          }
        } else {
          if (!other.protoData_.isEmpty()) {
            if (protoDataBuilder_.isEmpty()) {
              protoDataBuilder_.dispose();
              protoDataBuilder_ = null;
              protoData_ = other.protoData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              protoDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getProtoDataFieldBuilder() : null;
            } else {
              protoDataBuilder_.addAllMessages(other.protoData_);
            }
          }
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasNotValide()) {
          setNotValide(other.getNotValide());
        }
        if (consumeBuilder_ == null) {
          if (!other.consume_.isEmpty()) {
            if (consume_.isEmpty()) {
              consume_ = other.consume_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureConsumeIsMutable();
              consume_.addAll(other.consume_);
            }
            onChanged();
          }
        } else {
          if (!other.consume_.isEmpty()) {
            if (consumeBuilder_.isEmpty()) {
              consumeBuilder_.dispose();
              consumeBuilder_ = null;
              consume_ = other.consume_;
              bitField0_ = (bitField0_ & ~0x00000080);
              consumeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConsumeFieldBuilder() : null;
            } else {
              consumeBuilder_.addAllMessages(other.consume_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ActivityRewardItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ActivityRewardItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // optional int32 goalGold = 2;
      private int goalGold_ ;
      /**
       * <code>optional int32 goalGold = 2;</code>
       */
      public boolean hasGoalGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 goalGold = 2;</code>
       */
      public int getGoalGold() {
        return goalGold_;
      }
      /**
       * <code>optional int32 goalGold = 2;</code>
       */
      public Builder setGoalGold(int value) {
        bitField0_ |= 0x00000002;
        goalGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 goalGold = 2;</code>
       */
      public Builder clearGoalGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        goalGold_ = 0;
        onChanged();
        return this;
      }

      // optional string title = 3;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 3;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string title = 3;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 3;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 3;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 3;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        title_ = value;
        onChanged();
        return this;
      }

      // optional int32 times = 4;
      private int times_ ;
      /**
       * <code>optional int32 times = 4;</code>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 times = 4;</code>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 4;</code>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000008;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 4;</code>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        onChanged();
        return this;
      }

      // repeated .RewardItem protoData = 5;
      private java.util.List<myudfs.Common.RewardItem> protoData_ =
        java.util.Collections.emptyList();
      private void ensureProtoDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          protoData_ = new java.util.ArrayList<myudfs.Common.RewardItem>(protoData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.RewardItem, myudfs.Common.RewardItem.Builder, myudfs.Common.RewardItemOrBuilder> protoDataBuilder_;

      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public java.util.List<myudfs.Common.RewardItem> getProtoDataList() {
        if (protoDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(protoData_);
        } else {
          return protoDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public int getProtoDataCount() {
        if (protoDataBuilder_ == null) {
          return protoData_.size();
        } else {
          return protoDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public myudfs.Common.RewardItem getProtoData(int index) {
        if (protoDataBuilder_ == null) {
          return protoData_.get(index);
        } else {
          return protoDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder setProtoData(
          int index, myudfs.Common.RewardItem value) {
        if (protoDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProtoDataIsMutable();
          protoData_.set(index, value);
          onChanged();
        } else {
          protoDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder setProtoData(
          int index, myudfs.Common.RewardItem.Builder builderForValue) {
        if (protoDataBuilder_ == null) {
          ensureProtoDataIsMutable();
          protoData_.set(index, builderForValue.build());
          onChanged();
        } else {
          protoDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder addProtoData(myudfs.Common.RewardItem value) {
        if (protoDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProtoDataIsMutable();
          protoData_.add(value);
          onChanged();
        } else {
          protoDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder addProtoData(
          int index, myudfs.Common.RewardItem value) {
        if (protoDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProtoDataIsMutable();
          protoData_.add(index, value);
          onChanged();
        } else {
          protoDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder addProtoData(
          myudfs.Common.RewardItem.Builder builderForValue) {
        if (protoDataBuilder_ == null) {
          ensureProtoDataIsMutable();
          protoData_.add(builderForValue.build());
          onChanged();
        } else {
          protoDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder addProtoData(
          int index, myudfs.Common.RewardItem.Builder builderForValue) {
        if (protoDataBuilder_ == null) {
          ensureProtoDataIsMutable();
          protoData_.add(index, builderForValue.build());
          onChanged();
        } else {
          protoDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder addAllProtoData(
          java.lang.Iterable<? extends myudfs.Common.RewardItem> values) {
        if (protoDataBuilder_ == null) {
          ensureProtoDataIsMutable();
          super.addAll(values, protoData_);
          onChanged();
        } else {
          protoDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder clearProtoData() {
        if (protoDataBuilder_ == null) {
          protoData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          protoDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public Builder removeProtoData(int index) {
        if (protoDataBuilder_ == null) {
          ensureProtoDataIsMutable();
          protoData_.remove(index);
          onChanged();
        } else {
          protoDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public myudfs.Common.RewardItem.Builder getProtoDataBuilder(
          int index) {
        return getProtoDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public myudfs.Common.RewardItemOrBuilder getProtoDataOrBuilder(
          int index) {
        if (protoDataBuilder_ == null) {
          return protoData_.get(index);  } else {
          return protoDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public java.util.List<? extends myudfs.Common.RewardItemOrBuilder> 
           getProtoDataOrBuilderList() {
        if (protoDataBuilder_ != null) {
          return protoDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(protoData_);
        }
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public myudfs.Common.RewardItem.Builder addProtoDataBuilder() {
        return getProtoDataFieldBuilder().addBuilder(
            myudfs.Common.RewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public myudfs.Common.RewardItem.Builder addProtoDataBuilder(
          int index) {
        return getProtoDataFieldBuilder().addBuilder(
            index, myudfs.Common.RewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .RewardItem protoData = 5;</code>
       */
      public java.util.List<myudfs.Common.RewardItem.Builder> 
           getProtoDataBuilderList() {
        return getProtoDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.RewardItem, myudfs.Common.RewardItem.Builder, myudfs.Common.RewardItemOrBuilder> 
          getProtoDataFieldBuilder() {
        if (protoDataBuilder_ == null) {
          protoDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.RewardItem, myudfs.Common.RewardItem.Builder, myudfs.Common.RewardItemOrBuilder>(
                  protoData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          protoData_ = null;
        }
        return protoDataBuilder_;
      }

      // optional int32 status = 6;
      private int status_ ;
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 0 已经领过   1 可以领     2 时间没到还不能领奖   3奖励过期
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional bool notValide = 7;
      private boolean notValide_ ;
      /**
       * <code>optional bool notValide = 7;</code>
       *
       * <pre>
       * true:不可领取
       * </pre>
       */
      public boolean hasNotValide() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool notValide = 7;</code>
       *
       * <pre>
       * true:不可领取
       * </pre>
       */
      public boolean getNotValide() {
        return notValide_;
      }
      /**
       * <code>optional bool notValide = 7;</code>
       *
       * <pre>
       * true:不可领取
       * </pre>
       */
      public Builder setNotValide(boolean value) {
        bitField0_ |= 0x00000040;
        notValide_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool notValide = 7;</code>
       *
       * <pre>
       * true:不可领取
       * </pre>
       */
      public Builder clearNotValide() {
        bitField0_ = (bitField0_ & ~0x00000040);
        notValide_ = false;
        onChanged();
        return this;
      }

      // repeated .RewardItem consume = 8;
      private java.util.List<myudfs.Common.RewardItem> consume_ =
        java.util.Collections.emptyList();
      private void ensureConsumeIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          consume_ = new java.util.ArrayList<myudfs.Common.RewardItem>(consume_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.RewardItem, myudfs.Common.RewardItem.Builder, myudfs.Common.RewardItemOrBuilder> consumeBuilder_;

      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public java.util.List<myudfs.Common.RewardItem> getConsumeList() {
        if (consumeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(consume_);
        } else {
          return consumeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public int getConsumeCount() {
        if (consumeBuilder_ == null) {
          return consume_.size();
        } else {
          return consumeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public myudfs.Common.RewardItem getConsume(int index) {
        if (consumeBuilder_ == null) {
          return consume_.get(index);
        } else {
          return consumeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder setConsume(
          int index, myudfs.Common.RewardItem value) {
        if (consumeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeIsMutable();
          consume_.set(index, value);
          onChanged();
        } else {
          consumeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder setConsume(
          int index, myudfs.Common.RewardItem.Builder builderForValue) {
        if (consumeBuilder_ == null) {
          ensureConsumeIsMutable();
          consume_.set(index, builderForValue.build());
          onChanged();
        } else {
          consumeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder addConsume(myudfs.Common.RewardItem value) {
        if (consumeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeIsMutable();
          consume_.add(value);
          onChanged();
        } else {
          consumeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder addConsume(
          int index, myudfs.Common.RewardItem value) {
        if (consumeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeIsMutable();
          consume_.add(index, value);
          onChanged();
        } else {
          consumeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder addConsume(
          myudfs.Common.RewardItem.Builder builderForValue) {
        if (consumeBuilder_ == null) {
          ensureConsumeIsMutable();
          consume_.add(builderForValue.build());
          onChanged();
        } else {
          consumeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder addConsume(
          int index, myudfs.Common.RewardItem.Builder builderForValue) {
        if (consumeBuilder_ == null) {
          ensureConsumeIsMutable();
          consume_.add(index, builderForValue.build());
          onChanged();
        } else {
          consumeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder addAllConsume(
          java.lang.Iterable<? extends myudfs.Common.RewardItem> values) {
        if (consumeBuilder_ == null) {
          ensureConsumeIsMutable();
          super.addAll(values, consume_);
          onChanged();
        } else {
          consumeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder clearConsume() {
        if (consumeBuilder_ == null) {
          consume_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          consumeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public Builder removeConsume(int index) {
        if (consumeBuilder_ == null) {
          ensureConsumeIsMutable();
          consume_.remove(index);
          onChanged();
        } else {
          consumeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public myudfs.Common.RewardItem.Builder getConsumeBuilder(
          int index) {
        return getConsumeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public myudfs.Common.RewardItemOrBuilder getConsumeOrBuilder(
          int index) {
        if (consumeBuilder_ == null) {
          return consume_.get(index);  } else {
          return consumeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public java.util.List<? extends myudfs.Common.RewardItemOrBuilder> 
           getConsumeOrBuilderList() {
        if (consumeBuilder_ != null) {
          return consumeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(consume_);
        }
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public myudfs.Common.RewardItem.Builder addConsumeBuilder() {
        return getConsumeFieldBuilder().addBuilder(
            myudfs.Common.RewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public myudfs.Common.RewardItem.Builder addConsumeBuilder(
          int index) {
        return getConsumeFieldBuilder().addBuilder(
            index, myudfs.Common.RewardItem.getDefaultInstance());
      }
      /**
       * <code>repeated .RewardItem consume = 8;</code>
       */
      public java.util.List<myudfs.Common.RewardItem.Builder> 
           getConsumeBuilderList() {
        return getConsumeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.RewardItem, myudfs.Common.RewardItem.Builder, myudfs.Common.RewardItemOrBuilder> 
          getConsumeFieldBuilder() {
        if (consumeBuilder_ == null) {
          consumeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.RewardItem, myudfs.Common.RewardItem.Builder, myudfs.Common.RewardItemOrBuilder>(
                  consume_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          consume_ = null;
        }
        return consumeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ActivityRewardItem)
    }

    static {
      defaultInstance = new ActivityRewardItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ActivityRewardItem)
  }

  public interface RewardItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     */
    int getType();

    // optional int32 id = 2;
    /**
     * <code>optional int32 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     */
    int getId();

    // optional int32 num = 3;
    /**
     * <code>optional int32 num = 3;</code>
     */
    boolean hasNum();
    /**
     * <code>optional int32 num = 3;</code>
     */
    int getNum();
  }
  /**
   * Protobuf type {@code RewardItem}
   */
  public static final class RewardItem extends
      com.google.protobuf.GeneratedMessage
      implements RewardItemOrBuilder {
    // Use RewardItem.newBuilder() to construct.
    private RewardItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RewardItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RewardItem defaultInstance;
    public static RewardItem getDefaultInstance() {
      return defaultInstance;
    }

    public RewardItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RewardItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              num_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_RewardItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_RewardItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.RewardItem.class, myudfs.Common.RewardItem.Builder.class);
    }

    public static com.google.protobuf.Parser<RewardItem> PARSER =
        new com.google.protobuf.AbstractParser<RewardItem>() {
      public RewardItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RewardItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RewardItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    // optional int32 num = 3;
    public static final int NUM_FIELD_NUMBER = 3;
    private int num_;
    /**
     * <code>optional int32 num = 3;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 num = 3;</code>
     */
    public int getNum() {
      return num_;
    }

    private void initFields() {
      type_ = 0;
      id_ = 0;
      num_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, num_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, num_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.RewardItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.RewardItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.RewardItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.RewardItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.RewardItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.RewardItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.RewardItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.RewardItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.RewardItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.RewardItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.RewardItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RewardItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.RewardItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_RewardItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_RewardItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.RewardItem.class, myudfs.Common.RewardItem.Builder.class);
      }

      // Construct using myudfs.Common.RewardItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_RewardItem_descriptor;
      }

      public myudfs.Common.RewardItem getDefaultInstanceForType() {
        return myudfs.Common.RewardItem.getDefaultInstance();
      }

      public myudfs.Common.RewardItem build() {
        myudfs.Common.RewardItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.RewardItem buildPartial() {
        myudfs.Common.RewardItem result = new myudfs.Common.RewardItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.num_ = num_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.RewardItem) {
          return mergeFrom((myudfs.Common.RewardItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.RewardItem other) {
        if (other == myudfs.Common.RewardItem.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.RewardItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.RewardItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 2;
      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 num = 3;
      private int num_ ;
      /**
       * <code>optional int32 num = 3;</code>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 num = 3;</code>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>optional int32 num = 3;</code>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000004;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 num = 3;</code>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        num_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RewardItem)
    }

    static {
      defaultInstance = new RewardItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RewardItem)
  }

  public interface ChatItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string content = 3;
    /**
     * <code>optional string content = 3;</code>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 3;</code>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 3;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    // optional int32 vip = 4;
    /**
     * <code>optional int32 vip = 4;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 4;</code>
     */
    int getVip();

    // optional int32 type = 5;
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 1世界消息  2:对好友 3:对自己
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 1世界消息  2:对好友 3:对自己
     * </pre>
     */
    int getType();

    // optional uint64 chatDate = 6;
    /**
     * <code>optional uint64 chatDate = 6;</code>
     */
    boolean hasChatDate();
    /**
     * <code>optional uint64 chatDate = 6;</code>
     */
    long getChatDate();
  }
  /**
   * Protobuf type {@code ChatItem}
   */
  public static final class ChatItem extends
      com.google.protobuf.GeneratedMessage
      implements ChatItemOrBuilder {
    // Use ChatItem.newBuilder() to construct.
    private ChatItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChatItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChatItem defaultInstance;
    public static ChatItem getDefaultInstance() {
      return defaultInstance;
    }

    public ChatItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChatItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              content_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              vip_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              chatDate_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ChatItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ChatItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ChatItem.class, myudfs.Common.ChatItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ChatItem> PARSER =
        new com.google.protobuf.AbstractParser<ChatItem>() {
      public ChatItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChatItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChatItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string content = 3;
    public static final int CONTENT_FIELD_NUMBER = 3;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 3;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string content = 3;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 3;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 vip = 4;
    public static final int VIP_FIELD_NUMBER = 4;
    private int vip_;
    /**
     * <code>optional int32 vip = 4;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 vip = 4;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional int32 type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 1世界消息  2:对好友 3:对自己
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 type = 5;</code>
     *
     * <pre>
     * 1世界消息  2:对好友 3:对自己
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional uint64 chatDate = 6;
    public static final int CHATDATE_FIELD_NUMBER = 6;
    private long chatDate_;
    /**
     * <code>optional uint64 chatDate = 6;</code>
     */
    public boolean hasChatDate() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 chatDate = 6;</code>
     */
    public long getChatDate() {
      return chatDate_;
    }

    private void initFields() {
      id_ = 0;
      name_ = "";
      content_ = "";
      vip_ = 0;
      type_ = 0;
      chatDate_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getContentBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, vip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, chatDate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getContentBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, vip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, chatDate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ChatItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ChatItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ChatItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ChatItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ChatItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ChatItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ChatItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ChatItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ChatItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ChatItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ChatItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ChatItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ChatItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ChatItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ChatItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ChatItem.class, myudfs.Common.ChatItem.Builder.class);
      }

      // Construct using myudfs.Common.ChatItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        chatDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ChatItem_descriptor;
      }

      public myudfs.Common.ChatItem getDefaultInstanceForType() {
        return myudfs.Common.ChatItem.getDefaultInstance();
      }

      public myudfs.Common.ChatItem build() {
        myudfs.Common.ChatItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ChatItem buildPartial() {
        myudfs.Common.ChatItem result = new myudfs.Common.ChatItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.chatDate_ = chatDate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ChatItem) {
          return mergeFrom((myudfs.Common.ChatItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ChatItem other) {
        if (other == myudfs.Common.ChatItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasContent()) {
          bitField0_ |= 0x00000004;
          content_ = other.content_;
          onChanged();
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasChatDate()) {
          setChatDate(other.getChatDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ChatItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ChatItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional string content = 3;
      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 3;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string content = 3;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 3;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 3;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 3;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 3;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        content_ = value;
        onChanged();
        return this;
      }

      // optional int32 vip = 4;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 4;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 vip = 4;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 4;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00000008;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 4;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 5;
      private int type_ ;
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 1世界消息  2:对好友 3:对自己
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 1世界消息  2:对好友 3:对自己
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 1世界消息  2:对好友 3:对自己
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 5;</code>
       *
       * <pre>
       * 1世界消息  2:对好友 3:对自己
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 chatDate = 6;
      private long chatDate_ ;
      /**
       * <code>optional uint64 chatDate = 6;</code>
       */
      public boolean hasChatDate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 chatDate = 6;</code>
       */
      public long getChatDate() {
        return chatDate_;
      }
      /**
       * <code>optional uint64 chatDate = 6;</code>
       */
      public Builder setChatDate(long value) {
        bitField0_ |= 0x00000020;
        chatDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 chatDate = 6;</code>
       */
      public Builder clearChatDate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        chatDate_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ChatItem)
    }

    static {
      defaultInstance = new ChatItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ChatItem)
  }

  public interface PvpFightPlayerItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 floor = 3;
    /**
     * <code>optional int32 floor = 3;</code>
     */
    boolean hasFloor();
    /**
     * <code>optional int32 floor = 3;</code>
     */
    int getFloor();

    // optional int32 cardId = 4;
    /**
     * <code>optional int32 cardId = 4;</code>
     *
     * <pre>
     *卡牌配置id
     * </pre>
     */
    boolean hasCardId();
    /**
     * <code>optional int32 cardId = 4;</code>
     *
     * <pre>
     *卡牌配置id
     * </pre>
     */
    int getCardId();

    // optional int32 battleScore = 5;
    /**
     * <code>optional int32 battleScore = 5;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>optional int32 battleScore = 5;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    int getBattleScore();

    // optional int32 lv = 6;
    /**
     * <code>optional int32 lv = 6;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 6;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    int getLv();

    // optional int32 worshiptimes = 7;
    /**
     * <code>optional int32 worshiptimes = 7;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    boolean hasWorshiptimes();
    /**
     * <code>optional int32 worshiptimes = 7;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    int getWorshiptimes();

    // optional int32 pvpWins = 8;
    /**
     * <code>optional int32 pvpWins = 8;</code>
     *
     * <pre>
     *连胜
     * </pre>
     */
    boolean hasPvpWins();
    /**
     * <code>optional int32 pvpWins = 8;</code>
     *
     * <pre>
     *连胜
     * </pre>
     */
    int getPvpWins();

    // optional int32 pvpFightTotalNum = 9;
    /**
     * <code>optional int32 pvpFightTotalNum = 9;</code>
     *
     * <pre>
     *总战斗次数
     * </pre>
     */
    boolean hasPvpFightTotalNum();
    /**
     * <code>optional int32 pvpFightTotalNum = 9;</code>
     *
     * <pre>
     *总战斗次数
     * </pre>
     */
    int getPvpFightTotalNum();

    // optional int32 pvpFightWinNum = 10;
    /**
     * <code>optional int32 pvpFightWinNum = 10;</code>
     *
     * <pre>
     *胜利次数
     * </pre>
     */
    boolean hasPvpFightWinNum();
    /**
     * <code>optional int32 pvpFightWinNum = 10;</code>
     *
     * <pre>
     *胜利次数
     * </pre>
     */
    int getPvpFightWinNum();

    // optional int64 rewardLastTime = 11;
    /**
     * <code>optional int64 rewardLastTime = 11;</code>
     *
     * <pre>
     *领取奖励的剩余时间
     * </pre>
     */
    boolean hasRewardLastTime();
    /**
     * <code>optional int64 rewardLastTime = 11;</code>
     *
     * <pre>
     *领取奖励的剩余时间
     * </pre>
     */
    long getRewardLastTime();

    // optional int32 rewardShengWang = 12;
    /**
     * <code>optional int32 rewardShengWang = 12;</code>
     *
     * <pre>
     * 战胜后可获得的声望
     * </pre>
     */
    boolean hasRewardShengWang();
    /**
     * <code>optional int32 rewardShengWang = 12;</code>
     *
     * <pre>
     * 战胜后可获得的声望
     * </pre>
     */
    int getRewardShengWang();

    // optional int32 vip = 13;
    /**
     * <code>optional int32 vip = 13;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 13;</code>
     */
    int getVip();

    // optional int32 rewardCoin = 14;
    /**
     * <code>optional int32 rewardCoin = 14;</code>
     *
     * <pre>
     * 战胜后可获得的coin
     * </pre>
     */
    boolean hasRewardCoin();
    /**
     * <code>optional int32 rewardCoin = 14;</code>
     *
     * <pre>
     * 战胜后可获得的coin
     * </pre>
     */
    int getRewardCoin();

    // optional uint64 floorDate = 15;
    /**
     * <code>optional uint64 floorDate = 15;</code>
     *
     * <pre>
     *记录层数变化的时间
     * </pre>
     */
    boolean hasFloorDate();
    /**
     * <code>optional uint64 floorDate = 15;</code>
     *
     * <pre>
     *记录层数变化的时间
     * </pre>
     */
    long getFloorDate();

    // repeated .PvpFailFightResult pvpResult = 16;
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    java.util.List<myudfs.Common.PvpFailFightResult> 
        getPvpResultList();
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    myudfs.Common.PvpFailFightResult getPvpResult(int index);
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    int getPvpResultCount();
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    java.util.List<? extends myudfs.Common.PvpFailFightResultOrBuilder> 
        getPvpResultOrBuilderList();
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    myudfs.Common.PvpFailFightResultOrBuilder getPvpResultOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code PvpFightPlayerItem}
   */
  public static final class PvpFightPlayerItem extends
      com.google.protobuf.GeneratedMessage
      implements PvpFightPlayerItemOrBuilder {
    // Use PvpFightPlayerItem.newBuilder() to construct.
    private PvpFightPlayerItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PvpFightPlayerItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PvpFightPlayerItem defaultInstance;
    public static PvpFightPlayerItem getDefaultInstance() {
      return defaultInstance;
    }

    public PvpFightPlayerItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PvpFightPlayerItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              floor_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cardId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              battleScore_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lv_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              worshiptimes_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              pvpWins_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              pvpFightTotalNum_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              pvpFightWinNum_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              rewardLastTime_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              rewardShengWang_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              vip_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              rewardCoin_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              floorDate_ = input.readUInt64();
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                pvpResult_ = new java.util.ArrayList<myudfs.Common.PvpFailFightResult>();
                mutable_bitField0_ |= 0x00008000;
              }
              pvpResult_.add(input.readMessage(myudfs.Common.PvpFailFightResult.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          pvpResult_ = java.util.Collections.unmodifiableList(pvpResult_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PvpFightPlayerItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PvpFightPlayerItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PvpFightPlayerItem.class, myudfs.Common.PvpFightPlayerItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PvpFightPlayerItem> PARSER =
        new com.google.protobuf.AbstractParser<PvpFightPlayerItem>() {
      public PvpFightPlayerItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PvpFightPlayerItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PvpFightPlayerItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 floor = 3;
    public static final int FLOOR_FIELD_NUMBER = 3;
    private int floor_;
    /**
     * <code>optional int32 floor = 3;</code>
     */
    public boolean hasFloor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 floor = 3;</code>
     */
    public int getFloor() {
      return floor_;
    }

    // optional int32 cardId = 4;
    public static final int CARDID_FIELD_NUMBER = 4;
    private int cardId_;
    /**
     * <code>optional int32 cardId = 4;</code>
     *
     * <pre>
     *卡牌配置id
     * </pre>
     */
    public boolean hasCardId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 cardId = 4;</code>
     *
     * <pre>
     *卡牌配置id
     * </pre>
     */
    public int getCardId() {
      return cardId_;
    }

    // optional int32 battleScore = 5;
    public static final int BATTLESCORE_FIELD_NUMBER = 5;
    private int battleScore_;
    /**
     * <code>optional int32 battleScore = 5;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 battleScore = 5;</code>
     *
     * <pre>
     *战力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    // optional int32 lv = 6;
    public static final int LV_FIELD_NUMBER = 6;
    private int lv_;
    /**
     * <code>optional int32 lv = 6;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lv = 6;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 worshiptimes = 7;
    public static final int WORSHIPTIMES_FIELD_NUMBER = 7;
    private int worshiptimes_;
    /**
     * <code>optional int32 worshiptimes = 7;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    public boolean hasWorshiptimes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 worshiptimes = 7;</code>
     *
     * <pre>
     *被膜拜次数
     * </pre>
     */
    public int getWorshiptimes() {
      return worshiptimes_;
    }

    // optional int32 pvpWins = 8;
    public static final int PVPWINS_FIELD_NUMBER = 8;
    private int pvpWins_;
    /**
     * <code>optional int32 pvpWins = 8;</code>
     *
     * <pre>
     *连胜
     * </pre>
     */
    public boolean hasPvpWins() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 pvpWins = 8;</code>
     *
     * <pre>
     *连胜
     * </pre>
     */
    public int getPvpWins() {
      return pvpWins_;
    }

    // optional int32 pvpFightTotalNum = 9;
    public static final int PVPFIGHTTOTALNUM_FIELD_NUMBER = 9;
    private int pvpFightTotalNum_;
    /**
     * <code>optional int32 pvpFightTotalNum = 9;</code>
     *
     * <pre>
     *总战斗次数
     * </pre>
     */
    public boolean hasPvpFightTotalNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 pvpFightTotalNum = 9;</code>
     *
     * <pre>
     *总战斗次数
     * </pre>
     */
    public int getPvpFightTotalNum() {
      return pvpFightTotalNum_;
    }

    // optional int32 pvpFightWinNum = 10;
    public static final int PVPFIGHTWINNUM_FIELD_NUMBER = 10;
    private int pvpFightWinNum_;
    /**
     * <code>optional int32 pvpFightWinNum = 10;</code>
     *
     * <pre>
     *胜利次数
     * </pre>
     */
    public boolean hasPvpFightWinNum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 pvpFightWinNum = 10;</code>
     *
     * <pre>
     *胜利次数
     * </pre>
     */
    public int getPvpFightWinNum() {
      return pvpFightWinNum_;
    }

    // optional int64 rewardLastTime = 11;
    public static final int REWARDLASTTIME_FIELD_NUMBER = 11;
    private long rewardLastTime_;
    /**
     * <code>optional int64 rewardLastTime = 11;</code>
     *
     * <pre>
     *领取奖励的剩余时间
     * </pre>
     */
    public boolean hasRewardLastTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 rewardLastTime = 11;</code>
     *
     * <pre>
     *领取奖励的剩余时间
     * </pre>
     */
    public long getRewardLastTime() {
      return rewardLastTime_;
    }

    // optional int32 rewardShengWang = 12;
    public static final int REWARDSHENGWANG_FIELD_NUMBER = 12;
    private int rewardShengWang_;
    /**
     * <code>optional int32 rewardShengWang = 12;</code>
     *
     * <pre>
     * 战胜后可获得的声望
     * </pre>
     */
    public boolean hasRewardShengWang() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 rewardShengWang = 12;</code>
     *
     * <pre>
     * 战胜后可获得的声望
     * </pre>
     */
    public int getRewardShengWang() {
      return rewardShengWang_;
    }

    // optional int32 vip = 13;
    public static final int VIP_FIELD_NUMBER = 13;
    private int vip_;
    /**
     * <code>optional int32 vip = 13;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 vip = 13;</code>
     */
    public int getVip() {
      return vip_;
    }

    // optional int32 rewardCoin = 14;
    public static final int REWARDCOIN_FIELD_NUMBER = 14;
    private int rewardCoin_;
    /**
     * <code>optional int32 rewardCoin = 14;</code>
     *
     * <pre>
     * 战胜后可获得的coin
     * </pre>
     */
    public boolean hasRewardCoin() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 rewardCoin = 14;</code>
     *
     * <pre>
     * 战胜后可获得的coin
     * </pre>
     */
    public int getRewardCoin() {
      return rewardCoin_;
    }

    // optional uint64 floorDate = 15;
    public static final int FLOORDATE_FIELD_NUMBER = 15;
    private long floorDate_;
    /**
     * <code>optional uint64 floorDate = 15;</code>
     *
     * <pre>
     *记录层数变化的时间
     * </pre>
     */
    public boolean hasFloorDate() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint64 floorDate = 15;</code>
     *
     * <pre>
     *记录层数变化的时间
     * </pre>
     */
    public long getFloorDate() {
      return floorDate_;
    }

    // repeated .PvpFailFightResult pvpResult = 16;
    public static final int PVPRESULT_FIELD_NUMBER = 16;
    private java.util.List<myudfs.Common.PvpFailFightResult> pvpResult_;
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    public java.util.List<myudfs.Common.PvpFailFightResult> getPvpResultList() {
      return pvpResult_;
    }
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.PvpFailFightResultOrBuilder> 
        getPvpResultOrBuilderList() {
      return pvpResult_;
    }
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    public int getPvpResultCount() {
      return pvpResult_.size();
    }
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    public myudfs.Common.PvpFailFightResult getPvpResult(int index) {
      return pvpResult_.get(index);
    }
    /**
     * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
     *
     * <pre>
     *战报id
     * </pre>
     */
    public myudfs.Common.PvpFailFightResultOrBuilder getPvpResultOrBuilder(
        int index) {
      return pvpResult_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      floor_ = 0;
      cardId_ = 0;
      battleScore_ = 0;
      lv_ = 0;
      worshiptimes_ = 0;
      pvpWins_ = 0;
      pvpFightTotalNum_ = 0;
      pvpFightWinNum_ = 0;
      rewardLastTime_ = 0L;
      rewardShengWang_ = 0;
      vip_ = 0;
      rewardCoin_ = 0;
      floorDate_ = 0L;
      pvpResult_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, floor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, cardId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, battleScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, lv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, worshiptimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, pvpWins_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, pvpFightTotalNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, pvpFightWinNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, rewardLastTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, rewardShengWang_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, vip_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, rewardCoin_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt64(15, floorDate_);
      }
      for (int i = 0; i < pvpResult_.size(); i++) {
        output.writeMessage(16, pvpResult_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, floor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, battleScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, lv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, worshiptimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, pvpWins_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, pvpFightTotalNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, pvpFightWinNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, rewardLastTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, rewardShengWang_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, vip_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, rewardCoin_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(15, floorDate_);
      }
      for (int i = 0; i < pvpResult_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, pvpResult_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PvpFightPlayerItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpFightPlayerItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpFightPlayerItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpFightPlayerItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpFightPlayerItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpFightPlayerItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpFightPlayerItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PvpFightPlayerItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpFightPlayerItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpFightPlayerItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PvpFightPlayerItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PvpFightPlayerItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PvpFightPlayerItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PvpFightPlayerItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PvpFightPlayerItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PvpFightPlayerItem.class, myudfs.Common.PvpFightPlayerItem.Builder.class);
      }

      // Construct using myudfs.Common.PvpFightPlayerItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPvpResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        floor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        battleScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        worshiptimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        pvpWins_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        pvpFightTotalNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        pvpFightWinNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        rewardLastTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        rewardShengWang_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        vip_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        rewardCoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        floorDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (pvpResultBuilder_ == null) {
          pvpResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          pvpResultBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PvpFightPlayerItem_descriptor;
      }

      public myudfs.Common.PvpFightPlayerItem getDefaultInstanceForType() {
        return myudfs.Common.PvpFightPlayerItem.getDefaultInstance();
      }

      public myudfs.Common.PvpFightPlayerItem build() {
        myudfs.Common.PvpFightPlayerItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PvpFightPlayerItem buildPartial() {
        myudfs.Common.PvpFightPlayerItem result = new myudfs.Common.PvpFightPlayerItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.floor_ = floor_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cardId_ = cardId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.battleScore_ = battleScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.worshiptimes_ = worshiptimes_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pvpWins_ = pvpWins_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pvpFightTotalNum_ = pvpFightTotalNum_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pvpFightWinNum_ = pvpFightWinNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.rewardLastTime_ = rewardLastTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.rewardShengWang_ = rewardShengWang_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.rewardCoin_ = rewardCoin_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.floorDate_ = floorDate_;
        if (pvpResultBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            pvpResult_ = java.util.Collections.unmodifiableList(pvpResult_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.pvpResult_ = pvpResult_;
        } else {
          result.pvpResult_ = pvpResultBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PvpFightPlayerItem) {
          return mergeFrom((myudfs.Common.PvpFightPlayerItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PvpFightPlayerItem other) {
        if (other == myudfs.Common.PvpFightPlayerItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasFloor()) {
          setFloor(other.getFloor());
        }
        if (other.hasCardId()) {
          setCardId(other.getCardId());
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasWorshiptimes()) {
          setWorshiptimes(other.getWorshiptimes());
        }
        if (other.hasPvpWins()) {
          setPvpWins(other.getPvpWins());
        }
        if (other.hasPvpFightTotalNum()) {
          setPvpFightTotalNum(other.getPvpFightTotalNum());
        }
        if (other.hasPvpFightWinNum()) {
          setPvpFightWinNum(other.getPvpFightWinNum());
        }
        if (other.hasRewardLastTime()) {
          setRewardLastTime(other.getRewardLastTime());
        }
        if (other.hasRewardShengWang()) {
          setRewardShengWang(other.getRewardShengWang());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasRewardCoin()) {
          setRewardCoin(other.getRewardCoin());
        }
        if (other.hasFloorDate()) {
          setFloorDate(other.getFloorDate());
        }
        if (pvpResultBuilder_ == null) {
          if (!other.pvpResult_.isEmpty()) {
            if (pvpResult_.isEmpty()) {
              pvpResult_ = other.pvpResult_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensurePvpResultIsMutable();
              pvpResult_.addAll(other.pvpResult_);
            }
            onChanged();
          }
        } else {
          if (!other.pvpResult_.isEmpty()) {
            if (pvpResultBuilder_.isEmpty()) {
              pvpResultBuilder_.dispose();
              pvpResultBuilder_ = null;
              pvpResult_ = other.pvpResult_;
              bitField0_ = (bitField0_ & ~0x00008000);
              pvpResultBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPvpResultFieldBuilder() : null;
            } else {
              pvpResultBuilder_.addAllMessages(other.pvpResult_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PvpFightPlayerItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PvpFightPlayerItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 floor = 3;
      private int floor_ ;
      /**
       * <code>optional int32 floor = 3;</code>
       */
      public boolean hasFloor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 floor = 3;</code>
       */
      public int getFloor() {
        return floor_;
      }
      /**
       * <code>optional int32 floor = 3;</code>
       */
      public Builder setFloor(int value) {
        bitField0_ |= 0x00000004;
        floor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 floor = 3;</code>
       */
      public Builder clearFloor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        floor_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cardId = 4;
      private int cardId_ ;
      /**
       * <code>optional int32 cardId = 4;</code>
       *
       * <pre>
       *卡牌配置id
       * </pre>
       */
      public boolean hasCardId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 cardId = 4;</code>
       *
       * <pre>
       *卡牌配置id
       * </pre>
       */
      public int getCardId() {
        return cardId_;
      }
      /**
       * <code>optional int32 cardId = 4;</code>
       *
       * <pre>
       *卡牌配置id
       * </pre>
       */
      public Builder setCardId(int value) {
        bitField0_ |= 0x00000008;
        cardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardId = 4;</code>
       *
       * <pre>
       *卡牌配置id
       * </pre>
       */
      public Builder clearCardId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 battleScore = 5;
      private int battleScore_ ;
      /**
       * <code>optional int32 battleScore = 5;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 battleScore = 5;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>optional int32 battleScore = 5;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField0_ |= 0x00000010;
        battleScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 battleScore = 5;</code>
       *
       * <pre>
       *战力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        battleScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lv = 6;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 6;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 lv = 6;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 6;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000020;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 6;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 worshiptimes = 7;
      private int worshiptimes_ ;
      /**
       * <code>optional int32 worshiptimes = 7;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public boolean hasWorshiptimes() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 worshiptimes = 7;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public int getWorshiptimes() {
        return worshiptimes_;
      }
      /**
       * <code>optional int32 worshiptimes = 7;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public Builder setWorshiptimes(int value) {
        bitField0_ |= 0x00000040;
        worshiptimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 worshiptimes = 7;</code>
       *
       * <pre>
       *被膜拜次数
       * </pre>
       */
      public Builder clearWorshiptimes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        worshiptimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pvpWins = 8;
      private int pvpWins_ ;
      /**
       * <code>optional int32 pvpWins = 8;</code>
       *
       * <pre>
       *连胜
       * </pre>
       */
      public boolean hasPvpWins() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 pvpWins = 8;</code>
       *
       * <pre>
       *连胜
       * </pre>
       */
      public int getPvpWins() {
        return pvpWins_;
      }
      /**
       * <code>optional int32 pvpWins = 8;</code>
       *
       * <pre>
       *连胜
       * </pre>
       */
      public Builder setPvpWins(int value) {
        bitField0_ |= 0x00000080;
        pvpWins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpWins = 8;</code>
       *
       * <pre>
       *连胜
       * </pre>
       */
      public Builder clearPvpWins() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pvpWins_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pvpFightTotalNum = 9;
      private int pvpFightTotalNum_ ;
      /**
       * <code>optional int32 pvpFightTotalNum = 9;</code>
       *
       * <pre>
       *总战斗次数
       * </pre>
       */
      public boolean hasPvpFightTotalNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 pvpFightTotalNum = 9;</code>
       *
       * <pre>
       *总战斗次数
       * </pre>
       */
      public int getPvpFightTotalNum() {
        return pvpFightTotalNum_;
      }
      /**
       * <code>optional int32 pvpFightTotalNum = 9;</code>
       *
       * <pre>
       *总战斗次数
       * </pre>
       */
      public Builder setPvpFightTotalNum(int value) {
        bitField0_ |= 0x00000100;
        pvpFightTotalNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpFightTotalNum = 9;</code>
       *
       * <pre>
       *总战斗次数
       * </pre>
       */
      public Builder clearPvpFightTotalNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pvpFightTotalNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pvpFightWinNum = 10;
      private int pvpFightWinNum_ ;
      /**
       * <code>optional int32 pvpFightWinNum = 10;</code>
       *
       * <pre>
       *胜利次数
       * </pre>
       */
      public boolean hasPvpFightWinNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 pvpFightWinNum = 10;</code>
       *
       * <pre>
       *胜利次数
       * </pre>
       */
      public int getPvpFightWinNum() {
        return pvpFightWinNum_;
      }
      /**
       * <code>optional int32 pvpFightWinNum = 10;</code>
       *
       * <pre>
       *胜利次数
       * </pre>
       */
      public Builder setPvpFightWinNum(int value) {
        bitField0_ |= 0x00000200;
        pvpFightWinNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pvpFightWinNum = 10;</code>
       *
       * <pre>
       *胜利次数
       * </pre>
       */
      public Builder clearPvpFightWinNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pvpFightWinNum_ = 0;
        onChanged();
        return this;
      }

      // optional int64 rewardLastTime = 11;
      private long rewardLastTime_ ;
      /**
       * <code>optional int64 rewardLastTime = 11;</code>
       *
       * <pre>
       *领取奖励的剩余时间
       * </pre>
       */
      public boolean hasRewardLastTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 rewardLastTime = 11;</code>
       *
       * <pre>
       *领取奖励的剩余时间
       * </pre>
       */
      public long getRewardLastTime() {
        return rewardLastTime_;
      }
      /**
       * <code>optional int64 rewardLastTime = 11;</code>
       *
       * <pre>
       *领取奖励的剩余时间
       * </pre>
       */
      public Builder setRewardLastTime(long value) {
        bitField0_ |= 0x00000400;
        rewardLastTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rewardLastTime = 11;</code>
       *
       * <pre>
       *领取奖励的剩余时间
       * </pre>
       */
      public Builder clearRewardLastTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        rewardLastTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rewardShengWang = 12;
      private int rewardShengWang_ ;
      /**
       * <code>optional int32 rewardShengWang = 12;</code>
       *
       * <pre>
       * 战胜后可获得的声望
       * </pre>
       */
      public boolean hasRewardShengWang() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 rewardShengWang = 12;</code>
       *
       * <pre>
       * 战胜后可获得的声望
       * </pre>
       */
      public int getRewardShengWang() {
        return rewardShengWang_;
      }
      /**
       * <code>optional int32 rewardShengWang = 12;</code>
       *
       * <pre>
       * 战胜后可获得的声望
       * </pre>
       */
      public Builder setRewardShengWang(int value) {
        bitField0_ |= 0x00000800;
        rewardShengWang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardShengWang = 12;</code>
       *
       * <pre>
       * 战胜后可获得的声望
       * </pre>
       */
      public Builder clearRewardShengWang() {
        bitField0_ = (bitField0_ & ~0x00000800);
        rewardShengWang_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vip = 13;
      private int vip_ ;
      /**
       * <code>optional int32 vip = 13;</code>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 vip = 13;</code>
       */
      public int getVip() {
        return vip_;
      }
      /**
       * <code>optional int32 vip = 13;</code>
       */
      public Builder setVip(int value) {
        bitField0_ |= 0x00001000;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vip = 13;</code>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00001000);
        vip_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rewardCoin = 14;
      private int rewardCoin_ ;
      /**
       * <code>optional int32 rewardCoin = 14;</code>
       *
       * <pre>
       * 战胜后可获得的coin
       * </pre>
       */
      public boolean hasRewardCoin() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 rewardCoin = 14;</code>
       *
       * <pre>
       * 战胜后可获得的coin
       * </pre>
       */
      public int getRewardCoin() {
        return rewardCoin_;
      }
      /**
       * <code>optional int32 rewardCoin = 14;</code>
       *
       * <pre>
       * 战胜后可获得的coin
       * </pre>
       */
      public Builder setRewardCoin(int value) {
        bitField0_ |= 0x00002000;
        rewardCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardCoin = 14;</code>
       *
       * <pre>
       * 战胜后可获得的coin
       * </pre>
       */
      public Builder clearRewardCoin() {
        bitField0_ = (bitField0_ & ~0x00002000);
        rewardCoin_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 floorDate = 15;
      private long floorDate_ ;
      /**
       * <code>optional uint64 floorDate = 15;</code>
       *
       * <pre>
       *记录层数变化的时间
       * </pre>
       */
      public boolean hasFloorDate() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint64 floorDate = 15;</code>
       *
       * <pre>
       *记录层数变化的时间
       * </pre>
       */
      public long getFloorDate() {
        return floorDate_;
      }
      /**
       * <code>optional uint64 floorDate = 15;</code>
       *
       * <pre>
       *记录层数变化的时间
       * </pre>
       */
      public Builder setFloorDate(long value) {
        bitField0_ |= 0x00004000;
        floorDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 floorDate = 15;</code>
       *
       * <pre>
       *记录层数变化的时间
       * </pre>
       */
      public Builder clearFloorDate() {
        bitField0_ = (bitField0_ & ~0x00004000);
        floorDate_ = 0L;
        onChanged();
        return this;
      }

      // repeated .PvpFailFightResult pvpResult = 16;
      private java.util.List<myudfs.Common.PvpFailFightResult> pvpResult_ =
        java.util.Collections.emptyList();
      private void ensurePvpResultIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          pvpResult_ = new java.util.ArrayList<myudfs.Common.PvpFailFightResult>(pvpResult_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PvpFailFightResult, myudfs.Common.PvpFailFightResult.Builder, myudfs.Common.PvpFailFightResultOrBuilder> pvpResultBuilder_;

      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public java.util.List<myudfs.Common.PvpFailFightResult> getPvpResultList() {
        if (pvpResultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pvpResult_);
        } else {
          return pvpResultBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public int getPvpResultCount() {
        if (pvpResultBuilder_ == null) {
          return pvpResult_.size();
        } else {
          return pvpResultBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public myudfs.Common.PvpFailFightResult getPvpResult(int index) {
        if (pvpResultBuilder_ == null) {
          return pvpResult_.get(index);
        } else {
          return pvpResultBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder setPvpResult(
          int index, myudfs.Common.PvpFailFightResult value) {
        if (pvpResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpResultIsMutable();
          pvpResult_.set(index, value);
          onChanged();
        } else {
          pvpResultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder setPvpResult(
          int index, myudfs.Common.PvpFailFightResult.Builder builderForValue) {
        if (pvpResultBuilder_ == null) {
          ensurePvpResultIsMutable();
          pvpResult_.set(index, builderForValue.build());
          onChanged();
        } else {
          pvpResultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder addPvpResult(myudfs.Common.PvpFailFightResult value) {
        if (pvpResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpResultIsMutable();
          pvpResult_.add(value);
          onChanged();
        } else {
          pvpResultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder addPvpResult(
          int index, myudfs.Common.PvpFailFightResult value) {
        if (pvpResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePvpResultIsMutable();
          pvpResult_.add(index, value);
          onChanged();
        } else {
          pvpResultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder addPvpResult(
          myudfs.Common.PvpFailFightResult.Builder builderForValue) {
        if (pvpResultBuilder_ == null) {
          ensurePvpResultIsMutable();
          pvpResult_.add(builderForValue.build());
          onChanged();
        } else {
          pvpResultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder addPvpResult(
          int index, myudfs.Common.PvpFailFightResult.Builder builderForValue) {
        if (pvpResultBuilder_ == null) {
          ensurePvpResultIsMutable();
          pvpResult_.add(index, builderForValue.build());
          onChanged();
        } else {
          pvpResultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder addAllPvpResult(
          java.lang.Iterable<? extends myudfs.Common.PvpFailFightResult> values) {
        if (pvpResultBuilder_ == null) {
          ensurePvpResultIsMutable();
          super.addAll(values, pvpResult_);
          onChanged();
        } else {
          pvpResultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder clearPvpResult() {
        if (pvpResultBuilder_ == null) {
          pvpResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          pvpResultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public Builder removePvpResult(int index) {
        if (pvpResultBuilder_ == null) {
          ensurePvpResultIsMutable();
          pvpResult_.remove(index);
          onChanged();
        } else {
          pvpResultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public myudfs.Common.PvpFailFightResult.Builder getPvpResultBuilder(
          int index) {
        return getPvpResultFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public myudfs.Common.PvpFailFightResultOrBuilder getPvpResultOrBuilder(
          int index) {
        if (pvpResultBuilder_ == null) {
          return pvpResult_.get(index);  } else {
          return pvpResultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.PvpFailFightResultOrBuilder> 
           getPvpResultOrBuilderList() {
        if (pvpResultBuilder_ != null) {
          return pvpResultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pvpResult_);
        }
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public myudfs.Common.PvpFailFightResult.Builder addPvpResultBuilder() {
        return getPvpResultFieldBuilder().addBuilder(
            myudfs.Common.PvpFailFightResult.getDefaultInstance());
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public myudfs.Common.PvpFailFightResult.Builder addPvpResultBuilder(
          int index) {
        return getPvpResultFieldBuilder().addBuilder(
            index, myudfs.Common.PvpFailFightResult.getDefaultInstance());
      }
      /**
       * <code>repeated .PvpFailFightResult pvpResult = 16;</code>
       *
       * <pre>
       *战报id
       * </pre>
       */
      public java.util.List<myudfs.Common.PvpFailFightResult.Builder> 
           getPvpResultBuilderList() {
        return getPvpResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.PvpFailFightResult, myudfs.Common.PvpFailFightResult.Builder, myudfs.Common.PvpFailFightResultOrBuilder> 
          getPvpResultFieldBuilder() {
        if (pvpResultBuilder_ == null) {
          pvpResultBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.PvpFailFightResult, myudfs.Common.PvpFailFightResult.Builder, myudfs.Common.PvpFailFightResultOrBuilder>(
                  pvpResult_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          pvpResult_ = null;
        }
        return pvpResultBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:PvpFightPlayerItem)
    }

    static {
      defaultInstance = new PvpFightPlayerItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PvpFightPlayerItem)
  }

  public interface PvpFailFightResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 resultId = 1;
    /**
     * <code>optional int64 resultId = 1;</code>
     */
    boolean hasResultId();
    /**
     * <code>optional int64 resultId = 1;</code>
     */
    long getResultId();

    // optional string attackName = 2;
    /**
     * <code>optional string attackName = 2;</code>
     */
    boolean hasAttackName();
    /**
     * <code>optional string attackName = 2;</code>
     */
    java.lang.String getAttackName();
    /**
     * <code>optional string attackName = 2;</code>
     */
    com.google.protobuf.ByteString
        getAttackNameBytes();

    // optional int32 type = 3;
    /**
     * <code>optional int32 type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 3;</code>
     */
    int getType();

    // optional uint64 fightDate = 4;
    /**
     * <code>optional uint64 fightDate = 4;</code>
     */
    boolean hasFightDate();
    /**
     * <code>optional uint64 fightDate = 4;</code>
     */
    long getFightDate();
  }
  /**
   * Protobuf type {@code PvpFailFightResult}
   */
  public static final class PvpFailFightResult extends
      com.google.protobuf.GeneratedMessage
      implements PvpFailFightResultOrBuilder {
    // Use PvpFailFightResult.newBuilder() to construct.
    private PvpFailFightResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PvpFailFightResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PvpFailFightResult defaultInstance;
    public static PvpFailFightResult getDefaultInstance() {
      return defaultInstance;
    }

    public PvpFailFightResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PvpFailFightResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              resultId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              attackName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              fightDate_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PvpFailFightResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PvpFailFightResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PvpFailFightResult.class, myudfs.Common.PvpFailFightResult.Builder.class);
    }

    public static com.google.protobuf.Parser<PvpFailFightResult> PARSER =
        new com.google.protobuf.AbstractParser<PvpFailFightResult>() {
      public PvpFailFightResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PvpFailFightResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PvpFailFightResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 resultId = 1;
    public static final int RESULTID_FIELD_NUMBER = 1;
    private long resultId_;
    /**
     * <code>optional int64 resultId = 1;</code>
     */
    public boolean hasResultId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 resultId = 1;</code>
     */
    public long getResultId() {
      return resultId_;
    }

    // optional string attackName = 2;
    public static final int ATTACKNAME_FIELD_NUMBER = 2;
    private java.lang.Object attackName_;
    /**
     * <code>optional string attackName = 2;</code>
     */
    public boolean hasAttackName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string attackName = 2;</code>
     */
    public java.lang.String getAttackName() {
      java.lang.Object ref = attackName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          attackName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string attackName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAttackNameBytes() {
      java.lang.Object ref = attackName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        attackName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>optional int32 type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 type = 3;</code>
     */
    public int getType() {
      return type_;
    }

    // optional uint64 fightDate = 4;
    public static final int FIGHTDATE_FIELD_NUMBER = 4;
    private long fightDate_;
    /**
     * <code>optional uint64 fightDate = 4;</code>
     */
    public boolean hasFightDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 fightDate = 4;</code>
     */
    public long getFightDate() {
      return fightDate_;
    }

    private void initFields() {
      resultId_ = 0L;
      attackName_ = "";
      type_ = 0;
      fightDate_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, resultId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAttackNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, fightDate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, resultId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAttackNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, fightDate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PvpFailFightResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpFailFightResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpFailFightResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PvpFailFightResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PvpFailFightResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpFailFightResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpFailFightResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PvpFailFightResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PvpFailFightResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PvpFailFightResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PvpFailFightResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PvpFailFightResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PvpFailFightResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PvpFailFightResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PvpFailFightResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PvpFailFightResult.class, myudfs.Common.PvpFailFightResult.Builder.class);
      }

      // Construct using myudfs.Common.PvpFailFightResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        resultId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        attackName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fightDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PvpFailFightResult_descriptor;
      }

      public myudfs.Common.PvpFailFightResult getDefaultInstanceForType() {
        return myudfs.Common.PvpFailFightResult.getDefaultInstance();
      }

      public myudfs.Common.PvpFailFightResult build() {
        myudfs.Common.PvpFailFightResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PvpFailFightResult buildPartial() {
        myudfs.Common.PvpFailFightResult result = new myudfs.Common.PvpFailFightResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resultId_ = resultId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.attackName_ = attackName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fightDate_ = fightDate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PvpFailFightResult) {
          return mergeFrom((myudfs.Common.PvpFailFightResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PvpFailFightResult other) {
        if (other == myudfs.Common.PvpFailFightResult.getDefaultInstance()) return this;
        if (other.hasResultId()) {
          setResultId(other.getResultId());
        }
        if (other.hasAttackName()) {
          bitField0_ |= 0x00000002;
          attackName_ = other.attackName_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFightDate()) {
          setFightDate(other.getFightDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PvpFailFightResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PvpFailFightResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 resultId = 1;
      private long resultId_ ;
      /**
       * <code>optional int64 resultId = 1;</code>
       */
      public boolean hasResultId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 resultId = 1;</code>
       */
      public long getResultId() {
        return resultId_;
      }
      /**
       * <code>optional int64 resultId = 1;</code>
       */
      public Builder setResultId(long value) {
        bitField0_ |= 0x00000001;
        resultId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 resultId = 1;</code>
       */
      public Builder clearResultId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resultId_ = 0L;
        onChanged();
        return this;
      }

      // optional string attackName = 2;
      private java.lang.Object attackName_ = "";
      /**
       * <code>optional string attackName = 2;</code>
       */
      public boolean hasAttackName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string attackName = 2;</code>
       */
      public java.lang.String getAttackName() {
        java.lang.Object ref = attackName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          attackName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string attackName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAttackNameBytes() {
        java.lang.Object ref = attackName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          attackName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string attackName = 2;</code>
       */
      public Builder setAttackName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        attackName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string attackName = 2;</code>
       */
      public Builder clearAttackName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        attackName_ = getDefaultInstance().getAttackName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string attackName = 2;</code>
       */
      public Builder setAttackNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        attackName_ = value;
        onChanged();
        return this;
      }

      // optional int32 type = 3;
      private int type_ ;
      /**
       * <code>optional int32 type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 type = 3;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 3;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 fightDate = 4;
      private long fightDate_ ;
      /**
       * <code>optional uint64 fightDate = 4;</code>
       */
      public boolean hasFightDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 fightDate = 4;</code>
       */
      public long getFightDate() {
        return fightDate_;
      }
      /**
       * <code>optional uint64 fightDate = 4;</code>
       */
      public Builder setFightDate(long value) {
        bitField0_ |= 0x00000008;
        fightDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 fightDate = 4;</code>
       */
      public Builder clearFightDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fightDate_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PvpFailFightResult)
    }

    static {
      defaultInstance = new PvpFailFightResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PvpFailFightResult)
  }

  public interface PlayerGangItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string gangName = 1;
    /**
     * <code>optional string gangName = 1;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    boolean hasGangName();
    /**
     * <code>optional string gangName = 1;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    java.lang.String getGangName();
    /**
     * <code>optional string gangName = 1;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getGangNameBytes();

    // optional .GangPosition position = 2;
    /**
     * <code>optional .GangPosition position = 2;</code>
     *
     * <pre>
     * 帮派职位
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional .GangPosition position = 2;</code>
     *
     * <pre>
     * 帮派职位
     * </pre>
     */
    myudfs.Common.GangPosition getPosition();

    // optional int32 fund = 3;
    /**
     * <code>optional int32 fund = 3;</code>
     *
     * <pre>
     * 帮派资金/帮贡
     * </pre>
     */
    boolean hasFund();
    /**
     * <code>optional int32 fund = 3;</code>
     *
     * <pre>
     * 帮派资金/帮贡
     * </pre>
     */
    int getFund();

    // optional bool hasNewEvent = 4;
    /**
     * <code>optional bool hasNewEvent = 4;</code>
     *
     * <pre>
     * 是否有新事件，如果有新事件则帮派图标显示红点
     * </pre>
     */
    boolean hasHasNewEvent();
    /**
     * <code>optional bool hasNewEvent = 4;</code>
     *
     * <pre>
     * 是否有新事件，如果有新事件则帮派图标显示红点
     * </pre>
     */
    boolean getHasNewEvent();

    // optional int64 gangId = 5;
    /**
     * <code>optional int64 gangId = 5;</code>
     *
     * <pre>
     * 帮派Id
     * </pre>
     */
    boolean hasGangId();
    /**
     * <code>optional int64 gangId = 5;</code>
     *
     * <pre>
     * 帮派Id
     * </pre>
     */
    long getGangId();

    // optional uint64 exitGangTime = 6;
    /**
     * <code>optional uint64 exitGangTime = 6;</code>
     *
     * <pre>
     * 离开帮派时间
     * </pre>
     */
    boolean hasExitGangTime();
    /**
     * <code>optional uint64 exitGangTime = 6;</code>
     *
     * <pre>
     * 离开帮派时间
     * </pre>
     */
    long getExitGangTime();
  }
  /**
   * Protobuf type {@code PlayerGangItem}
   *
   * <pre>
   * 玩家帮派信息
   * </pre>
   */
  public static final class PlayerGangItem extends
      com.google.protobuf.GeneratedMessage
      implements PlayerGangItemOrBuilder {
    // Use PlayerGangItem.newBuilder() to construct.
    private PlayerGangItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerGangItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerGangItem defaultInstance;
    public static PlayerGangItem getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerGangItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerGangItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              gangName_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              myudfs.Common.GangPosition value = myudfs.Common.GangPosition.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                position_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fund_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hasNewEvent_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gangId_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              exitGangTime_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PlayerGangItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PlayerGangItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PlayerGangItem.class, myudfs.Common.PlayerGangItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerGangItem> PARSER =
        new com.google.protobuf.AbstractParser<PlayerGangItem>() {
      public PlayerGangItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerGangItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerGangItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string gangName = 1;
    public static final int GANGNAME_FIELD_NUMBER = 1;
    private java.lang.Object gangName_;
    /**
     * <code>optional string gangName = 1;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    public boolean hasGangName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string gangName = 1;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    public java.lang.String getGangName() {
      java.lang.Object ref = gangName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gangName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gangName = 1;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGangNameBytes() {
      java.lang.Object ref = gangName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gangName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .GangPosition position = 2;
    public static final int POSITION_FIELD_NUMBER = 2;
    private myudfs.Common.GangPosition position_;
    /**
     * <code>optional .GangPosition position = 2;</code>
     *
     * <pre>
     * 帮派职位
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .GangPosition position = 2;</code>
     *
     * <pre>
     * 帮派职位
     * </pre>
     */
    public myudfs.Common.GangPosition getPosition() {
      return position_;
    }

    // optional int32 fund = 3;
    public static final int FUND_FIELD_NUMBER = 3;
    private int fund_;
    /**
     * <code>optional int32 fund = 3;</code>
     *
     * <pre>
     * 帮派资金/帮贡
     * </pre>
     */
    public boolean hasFund() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 fund = 3;</code>
     *
     * <pre>
     * 帮派资金/帮贡
     * </pre>
     */
    public int getFund() {
      return fund_;
    }

    // optional bool hasNewEvent = 4;
    public static final int HASNEWEVENT_FIELD_NUMBER = 4;
    private boolean hasNewEvent_;
    /**
     * <code>optional bool hasNewEvent = 4;</code>
     *
     * <pre>
     * 是否有新事件，如果有新事件则帮派图标显示红点
     * </pre>
     */
    public boolean hasHasNewEvent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool hasNewEvent = 4;</code>
     *
     * <pre>
     * 是否有新事件，如果有新事件则帮派图标显示红点
     * </pre>
     */
    public boolean getHasNewEvent() {
      return hasNewEvent_;
    }

    // optional int64 gangId = 5;
    public static final int GANGID_FIELD_NUMBER = 5;
    private long gangId_;
    /**
     * <code>optional int64 gangId = 5;</code>
     *
     * <pre>
     * 帮派Id
     * </pre>
     */
    public boolean hasGangId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 gangId = 5;</code>
     *
     * <pre>
     * 帮派Id
     * </pre>
     */
    public long getGangId() {
      return gangId_;
    }

    // optional uint64 exitGangTime = 6;
    public static final int EXITGANGTIME_FIELD_NUMBER = 6;
    private long exitGangTime_;
    /**
     * <code>optional uint64 exitGangTime = 6;</code>
     *
     * <pre>
     * 离开帮派时间
     * </pre>
     */
    public boolean hasExitGangTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 exitGangTime = 6;</code>
     *
     * <pre>
     * 离开帮派时间
     * </pre>
     */
    public long getExitGangTime() {
      return exitGangTime_;
    }

    private void initFields() {
      gangName_ = "";
      position_ = myudfs.Common.GangPosition.GANG_POSITION_BOSS;
      fund_ = 0;
      hasNewEvent_ = false;
      gangId_ = 0L;
      exitGangTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getGangNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, position_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, fund_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, hasNewEvent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, gangId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, exitGangTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getGangNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, position_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, fund_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, hasNewEvent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, gangId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, exitGangTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PlayerGangItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PlayerGangItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PlayerGangItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PlayerGangItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PlayerGangItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PlayerGangItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PlayerGangItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PlayerGangItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PlayerGangItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PlayerGangItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PlayerGangItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerGangItem}
     *
     * <pre>
     * 玩家帮派信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PlayerGangItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PlayerGangItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PlayerGangItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PlayerGangItem.class, myudfs.Common.PlayerGangItem.Builder.class);
      }

      // Construct using myudfs.Common.PlayerGangItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gangName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = myudfs.Common.GangPosition.GANG_POSITION_BOSS;
        bitField0_ = (bitField0_ & ~0x00000002);
        fund_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hasNewEvent_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        gangId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        exitGangTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PlayerGangItem_descriptor;
      }

      public myudfs.Common.PlayerGangItem getDefaultInstanceForType() {
        return myudfs.Common.PlayerGangItem.getDefaultInstance();
      }

      public myudfs.Common.PlayerGangItem build() {
        myudfs.Common.PlayerGangItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PlayerGangItem buildPartial() {
        myudfs.Common.PlayerGangItem result = new myudfs.Common.PlayerGangItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gangName_ = gangName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fund_ = fund_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hasNewEvent_ = hasNewEvent_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gangId_ = gangId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.exitGangTime_ = exitGangTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PlayerGangItem) {
          return mergeFrom((myudfs.Common.PlayerGangItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PlayerGangItem other) {
        if (other == myudfs.Common.PlayerGangItem.getDefaultInstance()) return this;
        if (other.hasGangName()) {
          bitField0_ |= 0x00000001;
          gangName_ = other.gangName_;
          onChanged();
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasFund()) {
          setFund(other.getFund());
        }
        if (other.hasHasNewEvent()) {
          setHasNewEvent(other.getHasNewEvent());
        }
        if (other.hasGangId()) {
          setGangId(other.getGangId());
        }
        if (other.hasExitGangTime()) {
          setExitGangTime(other.getExitGangTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PlayerGangItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PlayerGangItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string gangName = 1;
      private java.lang.Object gangName_ = "";
      /**
       * <code>optional string gangName = 1;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public boolean hasGangName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string gangName = 1;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public java.lang.String getGangName() {
        java.lang.Object ref = gangName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gangName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gangName = 1;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGangNameBytes() {
        java.lang.Object ref = gangName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gangName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gangName = 1;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public Builder setGangName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gangName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gangName = 1;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public Builder clearGangName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gangName_ = getDefaultInstance().getGangName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gangName = 1;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public Builder setGangNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gangName_ = value;
        onChanged();
        return this;
      }

      // optional .GangPosition position = 2;
      private myudfs.Common.GangPosition position_ = myudfs.Common.GangPosition.GANG_POSITION_BOSS;
      /**
       * <code>optional .GangPosition position = 2;</code>
       *
       * <pre>
       * 帮派职位
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .GangPosition position = 2;</code>
       *
       * <pre>
       * 帮派职位
       * </pre>
       */
      public myudfs.Common.GangPosition getPosition() {
        return position_;
      }
      /**
       * <code>optional .GangPosition position = 2;</code>
       *
       * <pre>
       * 帮派职位
       * </pre>
       */
      public Builder setPosition(myudfs.Common.GangPosition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .GangPosition position = 2;</code>
       *
       * <pre>
       * 帮派职位
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = myudfs.Common.GangPosition.GANG_POSITION_BOSS;
        onChanged();
        return this;
      }

      // optional int32 fund = 3;
      private int fund_ ;
      /**
       * <code>optional int32 fund = 3;</code>
       *
       * <pre>
       * 帮派资金/帮贡
       * </pre>
       */
      public boolean hasFund() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 fund = 3;</code>
       *
       * <pre>
       * 帮派资金/帮贡
       * </pre>
       */
      public int getFund() {
        return fund_;
      }
      /**
       * <code>optional int32 fund = 3;</code>
       *
       * <pre>
       * 帮派资金/帮贡
       * </pre>
       */
      public Builder setFund(int value) {
        bitField0_ |= 0x00000004;
        fund_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fund = 3;</code>
       *
       * <pre>
       * 帮派资金/帮贡
       * </pre>
       */
      public Builder clearFund() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fund_ = 0;
        onChanged();
        return this;
      }

      // optional bool hasNewEvent = 4;
      private boolean hasNewEvent_ ;
      /**
       * <code>optional bool hasNewEvent = 4;</code>
       *
       * <pre>
       * 是否有新事件，如果有新事件则帮派图标显示红点
       * </pre>
       */
      public boolean hasHasNewEvent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool hasNewEvent = 4;</code>
       *
       * <pre>
       * 是否有新事件，如果有新事件则帮派图标显示红点
       * </pre>
       */
      public boolean getHasNewEvent() {
        return hasNewEvent_;
      }
      /**
       * <code>optional bool hasNewEvent = 4;</code>
       *
       * <pre>
       * 是否有新事件，如果有新事件则帮派图标显示红点
       * </pre>
       */
      public Builder setHasNewEvent(boolean value) {
        bitField0_ |= 0x00000008;
        hasNewEvent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasNewEvent = 4;</code>
       *
       * <pre>
       * 是否有新事件，如果有新事件则帮派图标显示红点
       * </pre>
       */
      public Builder clearHasNewEvent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hasNewEvent_ = false;
        onChanged();
        return this;
      }

      // optional int64 gangId = 5;
      private long gangId_ ;
      /**
       * <code>optional int64 gangId = 5;</code>
       *
       * <pre>
       * 帮派Id
       * </pre>
       */
      public boolean hasGangId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 gangId = 5;</code>
       *
       * <pre>
       * 帮派Id
       * </pre>
       */
      public long getGangId() {
        return gangId_;
      }
      /**
       * <code>optional int64 gangId = 5;</code>
       *
       * <pre>
       * 帮派Id
       * </pre>
       */
      public Builder setGangId(long value) {
        bitField0_ |= 0x00000010;
        gangId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gangId = 5;</code>
       *
       * <pre>
       * 帮派Id
       * </pre>
       */
      public Builder clearGangId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gangId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 exitGangTime = 6;
      private long exitGangTime_ ;
      /**
       * <code>optional uint64 exitGangTime = 6;</code>
       *
       * <pre>
       * 离开帮派时间
       * </pre>
       */
      public boolean hasExitGangTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 exitGangTime = 6;</code>
       *
       * <pre>
       * 离开帮派时间
       * </pre>
       */
      public long getExitGangTime() {
        return exitGangTime_;
      }
      /**
       * <code>optional uint64 exitGangTime = 6;</code>
       *
       * <pre>
       * 离开帮派时间
       * </pre>
       */
      public Builder setExitGangTime(long value) {
        bitField0_ |= 0x00000020;
        exitGangTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 exitGangTime = 6;</code>
       *
       * <pre>
       * 离开帮派时间
       * </pre>
       */
      public Builder clearExitGangTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        exitGangTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerGangItem)
    }

    static {
      defaultInstance = new PlayerGangItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerGangItem)
  }

  public interface DFPlayerInfoMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 roleId = 1;
    /**
     * <code>optional int64 roleId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasRoleId();
    /**
     * <code>optional int64 roleId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getRoleId();

    // optional int32 trialsRank = 2;
    /**
     * <code>optional int32 trialsRank = 2;</code>
     *
     * <pre>
     * 选拔赛排名
     * </pre>
     */
    boolean hasTrialsRank();
    /**
     * <code>optional int32 trialsRank = 2;</code>
     *
     * <pre>
     * 选拔赛排名
     * </pre>
     */
    int getTrialsRank();

    // optional int32 trialsPoints = 3;
    /**
     * <code>optional int32 trialsPoints = 3;</code>
     *
     * <pre>
     * 选拔赛积分
     * </pre>
     */
    boolean hasTrialsPoints();
    /**
     * <code>optional int32 trialsPoints = 3;</code>
     *
     * <pre>
     * 选拔赛积分
     * </pre>
     */
    int getTrialsPoints();

    // optional string roleName = 4;
    /**
     * <code>optional string roleName = 4;</code>
     *
     * <pre>
     * 角色名字
     * </pre>
     */
    boolean hasRoleName();
    /**
     * <code>optional string roleName = 4;</code>
     *
     * <pre>
     * 角色名字
     * </pre>
     */
    java.lang.String getRoleName();
    /**
     * <code>optional string roleName = 4;</code>
     *
     * <pre>
     * 角色名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoleNameBytes();

    // optional .DFTrialsGroup group = 5;
    /**
     * <code>optional .DFTrialsGroup group = 5;</code>
     *
     * <pre>
     * 玩家所在分组
     * </pre>
     */
    boolean hasGroup();
    /**
     * <code>optional .DFTrialsGroup group = 5;</code>
     *
     * <pre>
     * 玩家所在分组
     * </pre>
     */
    myudfs.Common.DFTrialsGroup getGroup();

    // optional int32 vipLv = 6;
    /**
     * <code>optional int32 vipLv = 6;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    boolean hasVipLv();
    /**
     * <code>optional int32 vipLv = 6;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    int getVipLv();

    // optional int32 totalZL = 7;
    /**
     * <code>optional int32 totalZL = 7;</code>
     *
     * <pre>
     * 玩家总战力
     * </pre>
     */
    boolean hasTotalZL();
    /**
     * <code>optional int32 totalZL = 7;</code>
     *
     * <pre>
     * 玩家总战力
     * </pre>
     */
    int getTotalZL();

    // optional string gangName = 8;
    /**
     * <code>optional string gangName = 8;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    boolean hasGangName();
    /**
     * <code>optional string gangName = 8;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    java.lang.String getGangName();
    /**
     * <code>optional string gangName = 8;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getGangNameBytes();

    // optional int32 trialsDFTimes = 9;
    /**
     * <code>optional int32 trialsDFTimes = 9;</code>
     *
     * <pre>
     * 选拔赛斗法次数
     * </pre>
     */
    boolean hasTrialsDFTimes();
    /**
     * <code>optional int32 trialsDFTimes = 9;</code>
     *
     * <pre>
     * 选拔赛斗法次数
     * </pre>
     */
    int getTrialsDFTimes();

    // optional int32 trialsFreeRefreshTimes = 10;
    /**
     * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
     *
     * <pre>
     * 选拔赛斗法免费刷新次数
     * </pre>
     */
    boolean hasTrialsFreeRefreshTimes();
    /**
     * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
     *
     * <pre>
     * 选拔赛斗法免费刷新次数
     * </pre>
     */
    int getTrialsFreeRefreshTimes();

    // optional .DFStage stage = 11;
    /**
     * <code>optional .DFStage stage = 11;</code>
     *
     * <pre>
     * 斗法玩家所在斗法阶段
     * </pre>
     */
    boolean hasStage();
    /**
     * <code>optional .DFStage stage = 11;</code>
     *
     * <pre>
     * 斗法玩家所在斗法阶段
     * </pre>
     */
    myudfs.Common.DFStage getStage();

    // optional int32 dfVipBuyTimes = 12;
    /**
     * <code>optional int32 dfVipBuyTimes = 12;</code>
     *
     * <pre>
     * 斗法Vip已购买次数
     * </pre>
     */
    boolean hasDfVipBuyTimes();
    /**
     * <code>optional int32 dfVipBuyTimes = 12;</code>
     *
     * <pre>
     * 斗法Vip已购买次数
     * </pre>
     */
    int getDfVipBuyTimes();

    // optional bool hasBeted = 13;
    /**
     * <code>optional bool hasBeted = 13;</code>
     *
     * <pre>
     * 是否已被押注
     * </pre>
     */
    boolean hasHasBeted();
    /**
     * <code>optional bool hasBeted = 13;</code>
     *
     * <pre>
     * 是否已被押注
     * </pre>
     */
    boolean getHasBeted();

    // optional int32 buyRefreshTimes = 14;
    /**
     * <code>optional int32 buyRefreshTimes = 14;</code>
     *
     * <pre>
     * 选拔赛已购买刷新次数
     * </pre>
     */
    boolean hasBuyRefreshTimes();
    /**
     * <code>optional int32 buyRefreshTimes = 14;</code>
     *
     * <pre>
     * 选拔赛已购买刷新次数
     * </pre>
     */
    int getBuyRefreshTimes();

    // optional int32 betTimes = 15;
    /**
     * <code>optional int32 betTimes = 15;</code>
     *
     * <pre>
     * 被押注次数
     * </pre>
     */
    boolean hasBetTimes();
    /**
     * <code>optional int32 betTimes = 15;</code>
     *
     * <pre>
     * 被押注次数
     * </pre>
     */
    int getBetTimes();

    // repeated int64 betPlays = 16;
    /**
     * <code>repeated int64 betPlays = 16;</code>
     *
     * <pre>
     * 押注玩家列表
     * </pre>
     */
    java.util.List<java.lang.Long> getBetPlaysList();
    /**
     * <code>repeated int64 betPlays = 16;</code>
     *
     * <pre>
     * 押注玩家列表
     * </pre>
     */
    int getBetPlaysCount();
    /**
     * <code>repeated int64 betPlays = 16;</code>
     *
     * <pre>
     * 押注玩家列表
     * </pre>
     */
    long getBetPlays(int index);

    // optional int32 promoteWinTimes = 17;
    /**
     * <code>optional int32 promoteWinTimes = 17;</code>
     *
     * <pre>
     * 晋级赛胜利次数
     * </pre>
     */
    boolean hasPromoteWinTimes();
    /**
     * <code>optional int32 promoteWinTimes = 17;</code>
     *
     * <pre>
     * 晋级赛胜利次数
     * </pre>
     */
    int getPromoteWinTimes();

    // repeated int64 trialsRivalIds = 18;
    /**
     * <code>repeated int64 trialsRivalIds = 18;</code>
     *
     * <pre>
     * 选拔赛挑战对手
     * </pre>
     */
    java.util.List<java.lang.Long> getTrialsRivalIdsList();
    /**
     * <code>repeated int64 trialsRivalIds = 18;</code>
     *
     * <pre>
     * 选拔赛挑战对手
     * </pre>
     */
    int getTrialsRivalIdsCount();
    /**
     * <code>repeated int64 trialsRivalIds = 18;</code>
     *
     * <pre>
     * 选拔赛挑战对手
     * </pre>
     */
    long getTrialsRivalIds(int index);

    // optional int32 leaderCardCfgId = 19;
    /**
     * <code>optional int32 leaderCardCfgId = 19;</code>
     *
     * <pre>
     * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
     * </pre>
     */
    boolean hasLeaderCardCfgId();
    /**
     * <code>optional int32 leaderCardCfgId = 19;</code>
     *
     * <pre>
     * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
     * </pre>
     */
    int getLeaderCardCfgId();

    // optional int32 championNum = 20;
    /**
     * <code>optional int32 championNum = 20;</code>
     *
     * <pre>
     * 第X届冠军
     * </pre>
     */
    boolean hasChampionNum();
    /**
     * <code>optional int32 championNum = 20;</code>
     *
     * <pre>
     * 第X届冠军
     * </pre>
     */
    int getChampionNum();

    // optional int64 uniqueId = 21;
    /**
     * <code>optional int64 uniqueId = 21;</code>
     *
     * <pre>
     * 冠军唯一id
     * </pre>
     */
    boolean hasUniqueId();
    /**
     * <code>optional int64 uniqueId = 21;</code>
     *
     * <pre>
     * 冠军唯一id
     * </pre>
     */
    long getUniqueId();
  }
  /**
   * Protobuf type {@code DFPlayerInfoMessage}
   *
   * <pre>
   * 参加斗法的玩家信息
   * </pre>
   */
  public static final class DFPlayerInfoMessage extends
      com.google.protobuf.GeneratedMessage
      implements DFPlayerInfoMessageOrBuilder {
    // Use DFPlayerInfoMessage.newBuilder() to construct.
    private DFPlayerInfoMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DFPlayerInfoMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DFPlayerInfoMessage defaultInstance;
    public static DFPlayerInfoMessage getDefaultInstance() {
      return defaultInstance;
    }

    public DFPlayerInfoMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DFPlayerInfoMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              trialsRank_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              trialsPoints_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              roleName_ = input.readBytes();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              myudfs.Common.DFTrialsGroup value = myudfs.Common.DFTrialsGroup.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                group_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              vipLv_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              totalZL_ = input.readInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              gangName_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              trialsDFTimes_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              trialsFreeRefreshTimes_ = input.readInt32();
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              myudfs.Common.DFStage value = myudfs.Common.DFStage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                stage_ = value;
              }
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              dfVipBuyTimes_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              hasBeted_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              buyRefreshTimes_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              betTimes_ = input.readInt32();
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                betPlays_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00008000;
              }
              betPlays_.add(input.readInt64());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                betPlays_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                betPlays_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              promoteWinTimes_ = input.readInt32();
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                trialsRivalIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              trialsRivalIds_.add(input.readInt64());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                trialsRivalIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                trialsRivalIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              bitField0_ |= 0x00010000;
              leaderCardCfgId_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00020000;
              championNum_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00040000;
              uniqueId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          betPlays_ = java.util.Collections.unmodifiableList(betPlays_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          trialsRivalIds_ = java.util.Collections.unmodifiableList(trialsRivalIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_DFPlayerInfoMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_DFPlayerInfoMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.DFPlayerInfoMessage.class, myudfs.Common.DFPlayerInfoMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<DFPlayerInfoMessage> PARSER =
        new com.google.protobuf.AbstractParser<DFPlayerInfoMessage>() {
      public DFPlayerInfoMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DFPlayerInfoMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DFPlayerInfoMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private long roleId_;
    /**
     * <code>optional int64 roleId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 roleId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getRoleId() {
      return roleId_;
    }

    // optional int32 trialsRank = 2;
    public static final int TRIALSRANK_FIELD_NUMBER = 2;
    private int trialsRank_;
    /**
     * <code>optional int32 trialsRank = 2;</code>
     *
     * <pre>
     * 选拔赛排名
     * </pre>
     */
    public boolean hasTrialsRank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 trialsRank = 2;</code>
     *
     * <pre>
     * 选拔赛排名
     * </pre>
     */
    public int getTrialsRank() {
      return trialsRank_;
    }

    // optional int32 trialsPoints = 3;
    public static final int TRIALSPOINTS_FIELD_NUMBER = 3;
    private int trialsPoints_;
    /**
     * <code>optional int32 trialsPoints = 3;</code>
     *
     * <pre>
     * 选拔赛积分
     * </pre>
     */
    public boolean hasTrialsPoints() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 trialsPoints = 3;</code>
     *
     * <pre>
     * 选拔赛积分
     * </pre>
     */
    public int getTrialsPoints() {
      return trialsPoints_;
    }

    // optional string roleName = 4;
    public static final int ROLENAME_FIELD_NUMBER = 4;
    private java.lang.Object roleName_;
    /**
     * <code>optional string roleName = 4;</code>
     *
     * <pre>
     * 角色名字
     * </pre>
     */
    public boolean hasRoleName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string roleName = 4;</code>
     *
     * <pre>
     * 角色名字
     * </pre>
     */
    public java.lang.String getRoleName() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roleName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string roleName = 4;</code>
     *
     * <pre>
     * 角色名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoleNameBytes() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .DFTrialsGroup group = 5;
    public static final int GROUP_FIELD_NUMBER = 5;
    private myudfs.Common.DFTrialsGroup group_;
    /**
     * <code>optional .DFTrialsGroup group = 5;</code>
     *
     * <pre>
     * 玩家所在分组
     * </pre>
     */
    public boolean hasGroup() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .DFTrialsGroup group = 5;</code>
     *
     * <pre>
     * 玩家所在分组
     * </pre>
     */
    public myudfs.Common.DFTrialsGroup getGroup() {
      return group_;
    }

    // optional int32 vipLv = 6;
    public static final int VIPLV_FIELD_NUMBER = 6;
    private int vipLv_;
    /**
     * <code>optional int32 vipLv = 6;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    public boolean hasVipLv() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 vipLv = 6;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    public int getVipLv() {
      return vipLv_;
    }

    // optional int32 totalZL = 7;
    public static final int TOTALZL_FIELD_NUMBER = 7;
    private int totalZL_;
    /**
     * <code>optional int32 totalZL = 7;</code>
     *
     * <pre>
     * 玩家总战力
     * </pre>
     */
    public boolean hasTotalZL() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 totalZL = 7;</code>
     *
     * <pre>
     * 玩家总战力
     * </pre>
     */
    public int getTotalZL() {
      return totalZL_;
    }

    // optional string gangName = 8;
    public static final int GANGNAME_FIELD_NUMBER = 8;
    private java.lang.Object gangName_;
    /**
     * <code>optional string gangName = 8;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    public boolean hasGangName() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string gangName = 8;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    public java.lang.String getGangName() {
      java.lang.Object ref = gangName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gangName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gangName = 8;</code>
     *
     * <pre>
     * 帮派名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGangNameBytes() {
      java.lang.Object ref = gangName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gangName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 trialsDFTimes = 9;
    public static final int TRIALSDFTIMES_FIELD_NUMBER = 9;
    private int trialsDFTimes_;
    /**
     * <code>optional int32 trialsDFTimes = 9;</code>
     *
     * <pre>
     * 选拔赛斗法次数
     * </pre>
     */
    public boolean hasTrialsDFTimes() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 trialsDFTimes = 9;</code>
     *
     * <pre>
     * 选拔赛斗法次数
     * </pre>
     */
    public int getTrialsDFTimes() {
      return trialsDFTimes_;
    }

    // optional int32 trialsFreeRefreshTimes = 10;
    public static final int TRIALSFREEREFRESHTIMES_FIELD_NUMBER = 10;
    private int trialsFreeRefreshTimes_;
    /**
     * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
     *
     * <pre>
     * 选拔赛斗法免费刷新次数
     * </pre>
     */
    public boolean hasTrialsFreeRefreshTimes() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
     *
     * <pre>
     * 选拔赛斗法免费刷新次数
     * </pre>
     */
    public int getTrialsFreeRefreshTimes() {
      return trialsFreeRefreshTimes_;
    }

    // optional .DFStage stage = 11;
    public static final int STAGE_FIELD_NUMBER = 11;
    private myudfs.Common.DFStage stage_;
    /**
     * <code>optional .DFStage stage = 11;</code>
     *
     * <pre>
     * 斗法玩家所在斗法阶段
     * </pre>
     */
    public boolean hasStage() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .DFStage stage = 11;</code>
     *
     * <pre>
     * 斗法玩家所在斗法阶段
     * </pre>
     */
    public myudfs.Common.DFStage getStage() {
      return stage_;
    }

    // optional int32 dfVipBuyTimes = 12;
    public static final int DFVIPBUYTIMES_FIELD_NUMBER = 12;
    private int dfVipBuyTimes_;
    /**
     * <code>optional int32 dfVipBuyTimes = 12;</code>
     *
     * <pre>
     * 斗法Vip已购买次数
     * </pre>
     */
    public boolean hasDfVipBuyTimes() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 dfVipBuyTimes = 12;</code>
     *
     * <pre>
     * 斗法Vip已购买次数
     * </pre>
     */
    public int getDfVipBuyTimes() {
      return dfVipBuyTimes_;
    }

    // optional bool hasBeted = 13;
    public static final int HASBETED_FIELD_NUMBER = 13;
    private boolean hasBeted_;
    /**
     * <code>optional bool hasBeted = 13;</code>
     *
     * <pre>
     * 是否已被押注
     * </pre>
     */
    public boolean hasHasBeted() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool hasBeted = 13;</code>
     *
     * <pre>
     * 是否已被押注
     * </pre>
     */
    public boolean getHasBeted() {
      return hasBeted_;
    }

    // optional int32 buyRefreshTimes = 14;
    public static final int BUYREFRESHTIMES_FIELD_NUMBER = 14;
    private int buyRefreshTimes_;
    /**
     * <code>optional int32 buyRefreshTimes = 14;</code>
     *
     * <pre>
     * 选拔赛已购买刷新次数
     * </pre>
     */
    public boolean hasBuyRefreshTimes() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 buyRefreshTimes = 14;</code>
     *
     * <pre>
     * 选拔赛已购买刷新次数
     * </pre>
     */
    public int getBuyRefreshTimes() {
      return buyRefreshTimes_;
    }

    // optional int32 betTimes = 15;
    public static final int BETTIMES_FIELD_NUMBER = 15;
    private int betTimes_;
    /**
     * <code>optional int32 betTimes = 15;</code>
     *
     * <pre>
     * 被押注次数
     * </pre>
     */
    public boolean hasBetTimes() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 betTimes = 15;</code>
     *
     * <pre>
     * 被押注次数
     * </pre>
     */
    public int getBetTimes() {
      return betTimes_;
    }

    // repeated int64 betPlays = 16;
    public static final int BETPLAYS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Long> betPlays_;
    /**
     * <code>repeated int64 betPlays = 16;</code>
     *
     * <pre>
     * 押注玩家列表
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getBetPlaysList() {
      return betPlays_;
    }
    /**
     * <code>repeated int64 betPlays = 16;</code>
     *
     * <pre>
     * 押注玩家列表
     * </pre>
     */
    public int getBetPlaysCount() {
      return betPlays_.size();
    }
    /**
     * <code>repeated int64 betPlays = 16;</code>
     *
     * <pre>
     * 押注玩家列表
     * </pre>
     */
    public long getBetPlays(int index) {
      return betPlays_.get(index);
    }

    // optional int32 promoteWinTimes = 17;
    public static final int PROMOTEWINTIMES_FIELD_NUMBER = 17;
    private int promoteWinTimes_;
    /**
     * <code>optional int32 promoteWinTimes = 17;</code>
     *
     * <pre>
     * 晋级赛胜利次数
     * </pre>
     */
    public boolean hasPromoteWinTimes() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 promoteWinTimes = 17;</code>
     *
     * <pre>
     * 晋级赛胜利次数
     * </pre>
     */
    public int getPromoteWinTimes() {
      return promoteWinTimes_;
    }

    // repeated int64 trialsRivalIds = 18;
    public static final int TRIALSRIVALIDS_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Long> trialsRivalIds_;
    /**
     * <code>repeated int64 trialsRivalIds = 18;</code>
     *
     * <pre>
     * 选拔赛挑战对手
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getTrialsRivalIdsList() {
      return trialsRivalIds_;
    }
    /**
     * <code>repeated int64 trialsRivalIds = 18;</code>
     *
     * <pre>
     * 选拔赛挑战对手
     * </pre>
     */
    public int getTrialsRivalIdsCount() {
      return trialsRivalIds_.size();
    }
    /**
     * <code>repeated int64 trialsRivalIds = 18;</code>
     *
     * <pre>
     * 选拔赛挑战对手
     * </pre>
     */
    public long getTrialsRivalIds(int index) {
      return trialsRivalIds_.get(index);
    }

    // optional int32 leaderCardCfgId = 19;
    public static final int LEADERCARDCFGID_FIELD_NUMBER = 19;
    private int leaderCardCfgId_;
    /**
     * <code>optional int32 leaderCardCfgId = 19;</code>
     *
     * <pre>
     * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
     * </pre>
     */
    public boolean hasLeaderCardCfgId() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 leaderCardCfgId = 19;</code>
     *
     * <pre>
     * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
     * </pre>
     */
    public int getLeaderCardCfgId() {
      return leaderCardCfgId_;
    }

    // optional int32 championNum = 20;
    public static final int CHAMPIONNUM_FIELD_NUMBER = 20;
    private int championNum_;
    /**
     * <code>optional int32 championNum = 20;</code>
     *
     * <pre>
     * 第X届冠军
     * </pre>
     */
    public boolean hasChampionNum() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 championNum = 20;</code>
     *
     * <pre>
     * 第X届冠军
     * </pre>
     */
    public int getChampionNum() {
      return championNum_;
    }

    // optional int64 uniqueId = 21;
    public static final int UNIQUEID_FIELD_NUMBER = 21;
    private long uniqueId_;
    /**
     * <code>optional int64 uniqueId = 21;</code>
     *
     * <pre>
     * 冠军唯一id
     * </pre>
     */
    public boolean hasUniqueId() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 uniqueId = 21;</code>
     *
     * <pre>
     * 冠军唯一id
     * </pre>
     */
    public long getUniqueId() {
      return uniqueId_;
    }

    private void initFields() {
      roleId_ = 0L;
      trialsRank_ = 0;
      trialsPoints_ = 0;
      roleName_ = "";
      group_ = myudfs.Common.DFTrialsGroup.GROUP_A;
      vipLv_ = 0;
      totalZL_ = 0;
      gangName_ = "";
      trialsDFTimes_ = 0;
      trialsFreeRefreshTimes_ = 0;
      stage_ = myudfs.Common.DFStage.STAGE_NOT_START_NO_CHAMPIONS;
      dfVipBuyTimes_ = 0;
      hasBeted_ = false;
      buyRefreshTimes_ = 0;
      betTimes_ = 0;
      betPlays_ = java.util.Collections.emptyList();
      promoteWinTimes_ = 0;
      trialsRivalIds_ = java.util.Collections.emptyList();
      leaderCardCfgId_ = 0;
      championNum_ = 0;
      uniqueId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, trialsRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, trialsPoints_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, group_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, vipLv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, totalZL_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getGangNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, trialsDFTimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, trialsFreeRefreshTimes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(11, stage_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, dfVipBuyTimes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, hasBeted_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, buyRefreshTimes_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, betTimes_);
      }
      for (int i = 0; i < betPlays_.size(); i++) {
        output.writeInt64(16, betPlays_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(17, promoteWinTimes_);
      }
      for (int i = 0; i < trialsRivalIds_.size(); i++) {
        output.writeInt64(18, trialsRivalIds_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(19, leaderCardCfgId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(20, championNum_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(21, uniqueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, trialsRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, trialsPoints_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, group_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, vipLv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, totalZL_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getGangNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, trialsDFTimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, trialsFreeRefreshTimes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, stage_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, dfVipBuyTimes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, hasBeted_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, buyRefreshTimes_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, betTimes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < betPlays_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(betPlays_.get(i));
        }
        size += dataSize;
        size += 2 * getBetPlaysList().size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, promoteWinTimes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < trialsRivalIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(trialsRivalIds_.get(i));
        }
        size += dataSize;
        size += 2 * getTrialsRivalIdsList().size();
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, leaderCardCfgId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, championNum_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, uniqueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.DFPlayerInfoMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DFPlayerInfoMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.DFPlayerInfoMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DFPlayerInfoMessage}
     *
     * <pre>
     * 参加斗法的玩家信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.DFPlayerInfoMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_DFPlayerInfoMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_DFPlayerInfoMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.DFPlayerInfoMessage.class, myudfs.Common.DFPlayerInfoMessage.Builder.class);
      }

      // Construct using myudfs.Common.DFPlayerInfoMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        trialsRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        trialsPoints_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        roleName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        group_ = myudfs.Common.DFTrialsGroup.GROUP_A;
        bitField0_ = (bitField0_ & ~0x00000010);
        vipLv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        totalZL_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        gangName_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        trialsDFTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        trialsFreeRefreshTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        stage_ = myudfs.Common.DFStage.STAGE_NOT_START_NO_CHAMPIONS;
        bitField0_ = (bitField0_ & ~0x00000400);
        dfVipBuyTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        hasBeted_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        buyRefreshTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        betTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        betPlays_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        promoteWinTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        trialsRivalIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        leaderCardCfgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        championNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        uniqueId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_DFPlayerInfoMessage_descriptor;
      }

      public myudfs.Common.DFPlayerInfoMessage getDefaultInstanceForType() {
        return myudfs.Common.DFPlayerInfoMessage.getDefaultInstance();
      }

      public myudfs.Common.DFPlayerInfoMessage build() {
        myudfs.Common.DFPlayerInfoMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.DFPlayerInfoMessage buildPartial() {
        myudfs.Common.DFPlayerInfoMessage result = new myudfs.Common.DFPlayerInfoMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleId_ = roleId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.trialsRank_ = trialsRank_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.trialsPoints_ = trialsPoints_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roleName_ = roleName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.group_ = group_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vipLv_ = vipLv_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalZL_ = totalZL_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.gangName_ = gangName_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.trialsDFTimes_ = trialsDFTimes_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.trialsFreeRefreshTimes_ = trialsFreeRefreshTimes_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stage_ = stage_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.dfVipBuyTimes_ = dfVipBuyTimes_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.hasBeted_ = hasBeted_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.buyRefreshTimes_ = buyRefreshTimes_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.betTimes_ = betTimes_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          betPlays_ = java.util.Collections.unmodifiableList(betPlays_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.betPlays_ = betPlays_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.promoteWinTimes_ = promoteWinTimes_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          trialsRivalIds_ = java.util.Collections.unmodifiableList(trialsRivalIds_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.trialsRivalIds_ = trialsRivalIds_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.leaderCardCfgId_ = leaderCardCfgId_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.championNum_ = championNum_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.uniqueId_ = uniqueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.DFPlayerInfoMessage) {
          return mergeFrom((myudfs.Common.DFPlayerInfoMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.DFPlayerInfoMessage other) {
        if (other == myudfs.Common.DFPlayerInfoMessage.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasTrialsRank()) {
          setTrialsRank(other.getTrialsRank());
        }
        if (other.hasTrialsPoints()) {
          setTrialsPoints(other.getTrialsPoints());
        }
        if (other.hasRoleName()) {
          bitField0_ |= 0x00000008;
          roleName_ = other.roleName_;
          onChanged();
        }
        if (other.hasGroup()) {
          setGroup(other.getGroup());
        }
        if (other.hasVipLv()) {
          setVipLv(other.getVipLv());
        }
        if (other.hasTotalZL()) {
          setTotalZL(other.getTotalZL());
        }
        if (other.hasGangName()) {
          bitField0_ |= 0x00000080;
          gangName_ = other.gangName_;
          onChanged();
        }
        if (other.hasTrialsDFTimes()) {
          setTrialsDFTimes(other.getTrialsDFTimes());
        }
        if (other.hasTrialsFreeRefreshTimes()) {
          setTrialsFreeRefreshTimes(other.getTrialsFreeRefreshTimes());
        }
        if (other.hasStage()) {
          setStage(other.getStage());
        }
        if (other.hasDfVipBuyTimes()) {
          setDfVipBuyTimes(other.getDfVipBuyTimes());
        }
        if (other.hasHasBeted()) {
          setHasBeted(other.getHasBeted());
        }
        if (other.hasBuyRefreshTimes()) {
          setBuyRefreshTimes(other.getBuyRefreshTimes());
        }
        if (other.hasBetTimes()) {
          setBetTimes(other.getBetTimes());
        }
        if (!other.betPlays_.isEmpty()) {
          if (betPlays_.isEmpty()) {
            betPlays_ = other.betPlays_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureBetPlaysIsMutable();
            betPlays_.addAll(other.betPlays_);
          }
          onChanged();
        }
        if (other.hasPromoteWinTimes()) {
          setPromoteWinTimes(other.getPromoteWinTimes());
        }
        if (!other.trialsRivalIds_.isEmpty()) {
          if (trialsRivalIds_.isEmpty()) {
            trialsRivalIds_ = other.trialsRivalIds_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureTrialsRivalIdsIsMutable();
            trialsRivalIds_.addAll(other.trialsRivalIds_);
          }
          onChanged();
        }
        if (other.hasLeaderCardCfgId()) {
          setLeaderCardCfgId(other.getLeaderCardCfgId());
        }
        if (other.hasChampionNum()) {
          setChampionNum(other.getChampionNum());
        }
        if (other.hasUniqueId()) {
          setUniqueId(other.getUniqueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.DFPlayerInfoMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.DFPlayerInfoMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 roleId = 1;
      private long roleId_ ;
      /**
       * <code>optional int64 roleId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 roleId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getRoleId() {
        return roleId_;
      }
      /**
       * <code>optional int64 roleId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setRoleId(long value) {
        bitField0_ |= 0x00000001;
        roleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roleId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 trialsRank = 2;
      private int trialsRank_ ;
      /**
       * <code>optional int32 trialsRank = 2;</code>
       *
       * <pre>
       * 选拔赛排名
       * </pre>
       */
      public boolean hasTrialsRank() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 trialsRank = 2;</code>
       *
       * <pre>
       * 选拔赛排名
       * </pre>
       */
      public int getTrialsRank() {
        return trialsRank_;
      }
      /**
       * <code>optional int32 trialsRank = 2;</code>
       *
       * <pre>
       * 选拔赛排名
       * </pre>
       */
      public Builder setTrialsRank(int value) {
        bitField0_ |= 0x00000002;
        trialsRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trialsRank = 2;</code>
       *
       * <pre>
       * 选拔赛排名
       * </pre>
       */
      public Builder clearTrialsRank() {
        bitField0_ = (bitField0_ & ~0x00000002);
        trialsRank_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trialsPoints = 3;
      private int trialsPoints_ ;
      /**
       * <code>optional int32 trialsPoints = 3;</code>
       *
       * <pre>
       * 选拔赛积分
       * </pre>
       */
      public boolean hasTrialsPoints() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 trialsPoints = 3;</code>
       *
       * <pre>
       * 选拔赛积分
       * </pre>
       */
      public int getTrialsPoints() {
        return trialsPoints_;
      }
      /**
       * <code>optional int32 trialsPoints = 3;</code>
       *
       * <pre>
       * 选拔赛积分
       * </pre>
       */
      public Builder setTrialsPoints(int value) {
        bitField0_ |= 0x00000004;
        trialsPoints_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trialsPoints = 3;</code>
       *
       * <pre>
       * 选拔赛积分
       * </pre>
       */
      public Builder clearTrialsPoints() {
        bitField0_ = (bitField0_ & ~0x00000004);
        trialsPoints_ = 0;
        onChanged();
        return this;
      }

      // optional string roleName = 4;
      private java.lang.Object roleName_ = "";
      /**
       * <code>optional string roleName = 4;</code>
       *
       * <pre>
       * 角色名字
       * </pre>
       */
      public boolean hasRoleName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string roleName = 4;</code>
       *
       * <pre>
       * 角色名字
       * </pre>
       */
      public java.lang.String getRoleName() {
        java.lang.Object ref = roleName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string roleName = 4;</code>
       *
       * <pre>
       * 角色名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoleNameBytes() {
        java.lang.Object ref = roleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string roleName = 4;</code>
       *
       * <pre>
       * 角色名字
       * </pre>
       */
      public Builder setRoleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        roleName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string roleName = 4;</code>
       *
       * <pre>
       * 角色名字
       * </pre>
       */
      public Builder clearRoleName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roleName_ = getDefaultInstance().getRoleName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string roleName = 4;</code>
       *
       * <pre>
       * 角色名字
       * </pre>
       */
      public Builder setRoleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        roleName_ = value;
        onChanged();
        return this;
      }

      // optional .DFTrialsGroup group = 5;
      private myudfs.Common.DFTrialsGroup group_ = myudfs.Common.DFTrialsGroup.GROUP_A;
      /**
       * <code>optional .DFTrialsGroup group = 5;</code>
       *
       * <pre>
       * 玩家所在分组
       * </pre>
       */
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .DFTrialsGroup group = 5;</code>
       *
       * <pre>
       * 玩家所在分组
       * </pre>
       */
      public myudfs.Common.DFTrialsGroup getGroup() {
        return group_;
      }
      /**
       * <code>optional .DFTrialsGroup group = 5;</code>
       *
       * <pre>
       * 玩家所在分组
       * </pre>
       */
      public Builder setGroup(myudfs.Common.DFTrialsGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        group_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DFTrialsGroup group = 5;</code>
       *
       * <pre>
       * 玩家所在分组
       * </pre>
       */
      public Builder clearGroup() {
        bitField0_ = (bitField0_ & ~0x00000010);
        group_ = myudfs.Common.DFTrialsGroup.GROUP_A;
        onChanged();
        return this;
      }

      // optional int32 vipLv = 6;
      private int vipLv_ ;
      /**
       * <code>optional int32 vipLv = 6;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public boolean hasVipLv() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 vipLv = 6;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public int getVipLv() {
        return vipLv_;
      }
      /**
       * <code>optional int32 vipLv = 6;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public Builder setVipLv(int value) {
        bitField0_ |= 0x00000020;
        vipLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipLv = 6;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public Builder clearVipLv() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vipLv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalZL = 7;
      private int totalZL_ ;
      /**
       * <code>optional int32 totalZL = 7;</code>
       *
       * <pre>
       * 玩家总战力
       * </pre>
       */
      public boolean hasTotalZL() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 totalZL = 7;</code>
       *
       * <pre>
       * 玩家总战力
       * </pre>
       */
      public int getTotalZL() {
        return totalZL_;
      }
      /**
       * <code>optional int32 totalZL = 7;</code>
       *
       * <pre>
       * 玩家总战力
       * </pre>
       */
      public Builder setTotalZL(int value) {
        bitField0_ |= 0x00000040;
        totalZL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalZL = 7;</code>
       *
       * <pre>
       * 玩家总战力
       * </pre>
       */
      public Builder clearTotalZL() {
        bitField0_ = (bitField0_ & ~0x00000040);
        totalZL_ = 0;
        onChanged();
        return this;
      }

      // optional string gangName = 8;
      private java.lang.Object gangName_ = "";
      /**
       * <code>optional string gangName = 8;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public boolean hasGangName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string gangName = 8;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public java.lang.String getGangName() {
        java.lang.Object ref = gangName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gangName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gangName = 8;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGangNameBytes() {
        java.lang.Object ref = gangName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gangName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gangName = 8;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public Builder setGangName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        gangName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gangName = 8;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public Builder clearGangName() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gangName_ = getDefaultInstance().getGangName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gangName = 8;</code>
       *
       * <pre>
       * 帮派名字
       * </pre>
       */
      public Builder setGangNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        gangName_ = value;
        onChanged();
        return this;
      }

      // optional int32 trialsDFTimes = 9;
      private int trialsDFTimes_ ;
      /**
       * <code>optional int32 trialsDFTimes = 9;</code>
       *
       * <pre>
       * 选拔赛斗法次数
       * </pre>
       */
      public boolean hasTrialsDFTimes() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 trialsDFTimes = 9;</code>
       *
       * <pre>
       * 选拔赛斗法次数
       * </pre>
       */
      public int getTrialsDFTimes() {
        return trialsDFTimes_;
      }
      /**
       * <code>optional int32 trialsDFTimes = 9;</code>
       *
       * <pre>
       * 选拔赛斗法次数
       * </pre>
       */
      public Builder setTrialsDFTimes(int value) {
        bitField0_ |= 0x00000100;
        trialsDFTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trialsDFTimes = 9;</code>
       *
       * <pre>
       * 选拔赛斗法次数
       * </pre>
       */
      public Builder clearTrialsDFTimes() {
        bitField0_ = (bitField0_ & ~0x00000100);
        trialsDFTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trialsFreeRefreshTimes = 10;
      private int trialsFreeRefreshTimes_ ;
      /**
       * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
       *
       * <pre>
       * 选拔赛斗法免费刷新次数
       * </pre>
       */
      public boolean hasTrialsFreeRefreshTimes() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
       *
       * <pre>
       * 选拔赛斗法免费刷新次数
       * </pre>
       */
      public int getTrialsFreeRefreshTimes() {
        return trialsFreeRefreshTimes_;
      }
      /**
       * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
       *
       * <pre>
       * 选拔赛斗法免费刷新次数
       * </pre>
       */
      public Builder setTrialsFreeRefreshTimes(int value) {
        bitField0_ |= 0x00000200;
        trialsFreeRefreshTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trialsFreeRefreshTimes = 10;</code>
       *
       * <pre>
       * 选拔赛斗法免费刷新次数
       * </pre>
       */
      public Builder clearTrialsFreeRefreshTimes() {
        bitField0_ = (bitField0_ & ~0x00000200);
        trialsFreeRefreshTimes_ = 0;
        onChanged();
        return this;
      }

      // optional .DFStage stage = 11;
      private myudfs.Common.DFStage stage_ = myudfs.Common.DFStage.STAGE_NOT_START_NO_CHAMPIONS;
      /**
       * <code>optional .DFStage stage = 11;</code>
       *
       * <pre>
       * 斗法玩家所在斗法阶段
       * </pre>
       */
      public boolean hasStage() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .DFStage stage = 11;</code>
       *
       * <pre>
       * 斗法玩家所在斗法阶段
       * </pre>
       */
      public myudfs.Common.DFStage getStage() {
        return stage_;
      }
      /**
       * <code>optional .DFStage stage = 11;</code>
       *
       * <pre>
       * 斗法玩家所在斗法阶段
       * </pre>
       */
      public Builder setStage(myudfs.Common.DFStage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        stage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DFStage stage = 11;</code>
       *
       * <pre>
       * 斗法玩家所在斗法阶段
       * </pre>
       */
      public Builder clearStage() {
        bitField0_ = (bitField0_ & ~0x00000400);
        stage_ = myudfs.Common.DFStage.STAGE_NOT_START_NO_CHAMPIONS;
        onChanged();
        return this;
      }

      // optional int32 dfVipBuyTimes = 12;
      private int dfVipBuyTimes_ ;
      /**
       * <code>optional int32 dfVipBuyTimes = 12;</code>
       *
       * <pre>
       * 斗法Vip已购买次数
       * </pre>
       */
      public boolean hasDfVipBuyTimes() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 dfVipBuyTimes = 12;</code>
       *
       * <pre>
       * 斗法Vip已购买次数
       * </pre>
       */
      public int getDfVipBuyTimes() {
        return dfVipBuyTimes_;
      }
      /**
       * <code>optional int32 dfVipBuyTimes = 12;</code>
       *
       * <pre>
       * 斗法Vip已购买次数
       * </pre>
       */
      public Builder setDfVipBuyTimes(int value) {
        bitField0_ |= 0x00000800;
        dfVipBuyTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dfVipBuyTimes = 12;</code>
       *
       * <pre>
       * 斗法Vip已购买次数
       * </pre>
       */
      public Builder clearDfVipBuyTimes() {
        bitField0_ = (bitField0_ & ~0x00000800);
        dfVipBuyTimes_ = 0;
        onChanged();
        return this;
      }

      // optional bool hasBeted = 13;
      private boolean hasBeted_ ;
      /**
       * <code>optional bool hasBeted = 13;</code>
       *
       * <pre>
       * 是否已被押注
       * </pre>
       */
      public boolean hasHasBeted() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool hasBeted = 13;</code>
       *
       * <pre>
       * 是否已被押注
       * </pre>
       */
      public boolean getHasBeted() {
        return hasBeted_;
      }
      /**
       * <code>optional bool hasBeted = 13;</code>
       *
       * <pre>
       * 是否已被押注
       * </pre>
       */
      public Builder setHasBeted(boolean value) {
        bitField0_ |= 0x00001000;
        hasBeted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasBeted = 13;</code>
       *
       * <pre>
       * 是否已被押注
       * </pre>
       */
      public Builder clearHasBeted() {
        bitField0_ = (bitField0_ & ~0x00001000);
        hasBeted_ = false;
        onChanged();
        return this;
      }

      // optional int32 buyRefreshTimes = 14;
      private int buyRefreshTimes_ ;
      /**
       * <code>optional int32 buyRefreshTimes = 14;</code>
       *
       * <pre>
       * 选拔赛已购买刷新次数
       * </pre>
       */
      public boolean hasBuyRefreshTimes() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 buyRefreshTimes = 14;</code>
       *
       * <pre>
       * 选拔赛已购买刷新次数
       * </pre>
       */
      public int getBuyRefreshTimes() {
        return buyRefreshTimes_;
      }
      /**
       * <code>optional int32 buyRefreshTimes = 14;</code>
       *
       * <pre>
       * 选拔赛已购买刷新次数
       * </pre>
       */
      public Builder setBuyRefreshTimes(int value) {
        bitField0_ |= 0x00002000;
        buyRefreshTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buyRefreshTimes = 14;</code>
       *
       * <pre>
       * 选拔赛已购买刷新次数
       * </pre>
       */
      public Builder clearBuyRefreshTimes() {
        bitField0_ = (bitField0_ & ~0x00002000);
        buyRefreshTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 betTimes = 15;
      private int betTimes_ ;
      /**
       * <code>optional int32 betTimes = 15;</code>
       *
       * <pre>
       * 被押注次数
       * </pre>
       */
      public boolean hasBetTimes() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 betTimes = 15;</code>
       *
       * <pre>
       * 被押注次数
       * </pre>
       */
      public int getBetTimes() {
        return betTimes_;
      }
      /**
       * <code>optional int32 betTimes = 15;</code>
       *
       * <pre>
       * 被押注次数
       * </pre>
       */
      public Builder setBetTimes(int value) {
        bitField0_ |= 0x00004000;
        betTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 betTimes = 15;</code>
       *
       * <pre>
       * 被押注次数
       * </pre>
       */
      public Builder clearBetTimes() {
        bitField0_ = (bitField0_ & ~0x00004000);
        betTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 betPlays = 16;
      private java.util.List<java.lang.Long> betPlays_ = java.util.Collections.emptyList();
      private void ensureBetPlaysIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          betPlays_ = new java.util.ArrayList<java.lang.Long>(betPlays_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int64 betPlays = 16;</code>
       *
       * <pre>
       * 押注玩家列表
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getBetPlaysList() {
        return java.util.Collections.unmodifiableList(betPlays_);
      }
      /**
       * <code>repeated int64 betPlays = 16;</code>
       *
       * <pre>
       * 押注玩家列表
       * </pre>
       */
      public int getBetPlaysCount() {
        return betPlays_.size();
      }
      /**
       * <code>repeated int64 betPlays = 16;</code>
       *
       * <pre>
       * 押注玩家列表
       * </pre>
       */
      public long getBetPlays(int index) {
        return betPlays_.get(index);
      }
      /**
       * <code>repeated int64 betPlays = 16;</code>
       *
       * <pre>
       * 押注玩家列表
       * </pre>
       */
      public Builder setBetPlays(
          int index, long value) {
        ensureBetPlaysIsMutable();
        betPlays_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 betPlays = 16;</code>
       *
       * <pre>
       * 押注玩家列表
       * </pre>
       */
      public Builder addBetPlays(long value) {
        ensureBetPlaysIsMutable();
        betPlays_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 betPlays = 16;</code>
       *
       * <pre>
       * 押注玩家列表
       * </pre>
       */
      public Builder addAllBetPlays(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureBetPlaysIsMutable();
        super.addAll(values, betPlays_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 betPlays = 16;</code>
       *
       * <pre>
       * 押注玩家列表
       * </pre>
       */
      public Builder clearBetPlays() {
        betPlays_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // optional int32 promoteWinTimes = 17;
      private int promoteWinTimes_ ;
      /**
       * <code>optional int32 promoteWinTimes = 17;</code>
       *
       * <pre>
       * 晋级赛胜利次数
       * </pre>
       */
      public boolean hasPromoteWinTimes() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 promoteWinTimes = 17;</code>
       *
       * <pre>
       * 晋级赛胜利次数
       * </pre>
       */
      public int getPromoteWinTimes() {
        return promoteWinTimes_;
      }
      /**
       * <code>optional int32 promoteWinTimes = 17;</code>
       *
       * <pre>
       * 晋级赛胜利次数
       * </pre>
       */
      public Builder setPromoteWinTimes(int value) {
        bitField0_ |= 0x00010000;
        promoteWinTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 promoteWinTimes = 17;</code>
       *
       * <pre>
       * 晋级赛胜利次数
       * </pre>
       */
      public Builder clearPromoteWinTimes() {
        bitField0_ = (bitField0_ & ~0x00010000);
        promoteWinTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 trialsRivalIds = 18;
      private java.util.List<java.lang.Long> trialsRivalIds_ = java.util.Collections.emptyList();
      private void ensureTrialsRivalIdsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          trialsRivalIds_ = new java.util.ArrayList<java.lang.Long>(trialsRivalIds_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int64 trialsRivalIds = 18;</code>
       *
       * <pre>
       * 选拔赛挑战对手
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getTrialsRivalIdsList() {
        return java.util.Collections.unmodifiableList(trialsRivalIds_);
      }
      /**
       * <code>repeated int64 trialsRivalIds = 18;</code>
       *
       * <pre>
       * 选拔赛挑战对手
       * </pre>
       */
      public int getTrialsRivalIdsCount() {
        return trialsRivalIds_.size();
      }
      /**
       * <code>repeated int64 trialsRivalIds = 18;</code>
       *
       * <pre>
       * 选拔赛挑战对手
       * </pre>
       */
      public long getTrialsRivalIds(int index) {
        return trialsRivalIds_.get(index);
      }
      /**
       * <code>repeated int64 trialsRivalIds = 18;</code>
       *
       * <pre>
       * 选拔赛挑战对手
       * </pre>
       */
      public Builder setTrialsRivalIds(
          int index, long value) {
        ensureTrialsRivalIdsIsMutable();
        trialsRivalIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 trialsRivalIds = 18;</code>
       *
       * <pre>
       * 选拔赛挑战对手
       * </pre>
       */
      public Builder addTrialsRivalIds(long value) {
        ensureTrialsRivalIdsIsMutable();
        trialsRivalIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 trialsRivalIds = 18;</code>
       *
       * <pre>
       * 选拔赛挑战对手
       * </pre>
       */
      public Builder addAllTrialsRivalIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTrialsRivalIdsIsMutable();
        super.addAll(values, trialsRivalIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 trialsRivalIds = 18;</code>
       *
       * <pre>
       * 选拔赛挑战对手
       * </pre>
       */
      public Builder clearTrialsRivalIds() {
        trialsRivalIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // optional int32 leaderCardCfgId = 19;
      private int leaderCardCfgId_ ;
      /**
       * <code>optional int32 leaderCardCfgId = 19;</code>
       *
       * <pre>
       * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
       * </pre>
       */
      public boolean hasLeaderCardCfgId() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 leaderCardCfgId = 19;</code>
       *
       * <pre>
       * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
       * </pre>
       */
      public int getLeaderCardCfgId() {
        return leaderCardCfgId_;
      }
      /**
       * <code>optional int32 leaderCardCfgId = 19;</code>
       *
       * <pre>
       * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
       * </pre>
       */
      public Builder setLeaderCardCfgId(int value) {
        bitField0_ |= 0x00040000;
        leaderCardCfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leaderCardCfgId = 19;</code>
       *
       * <pre>
       * 玩家队长卡牌配置id,决赛/历届斗神阶段展示
       * </pre>
       */
      public Builder clearLeaderCardCfgId() {
        bitField0_ = (bitField0_ & ~0x00040000);
        leaderCardCfgId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 championNum = 20;
      private int championNum_ ;
      /**
       * <code>optional int32 championNum = 20;</code>
       *
       * <pre>
       * 第X届冠军
       * </pre>
       */
      public boolean hasChampionNum() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 championNum = 20;</code>
       *
       * <pre>
       * 第X届冠军
       * </pre>
       */
      public int getChampionNum() {
        return championNum_;
      }
      /**
       * <code>optional int32 championNum = 20;</code>
       *
       * <pre>
       * 第X届冠军
       * </pre>
       */
      public Builder setChampionNum(int value) {
        bitField0_ |= 0x00080000;
        championNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 championNum = 20;</code>
       *
       * <pre>
       * 第X届冠军
       * </pre>
       */
      public Builder clearChampionNum() {
        bitField0_ = (bitField0_ & ~0x00080000);
        championNum_ = 0;
        onChanged();
        return this;
      }

      // optional int64 uniqueId = 21;
      private long uniqueId_ ;
      /**
       * <code>optional int64 uniqueId = 21;</code>
       *
       * <pre>
       * 冠军唯一id
       * </pre>
       */
      public boolean hasUniqueId() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 uniqueId = 21;</code>
       *
       * <pre>
       * 冠军唯一id
       * </pre>
       */
      public long getUniqueId() {
        return uniqueId_;
      }
      /**
       * <code>optional int64 uniqueId = 21;</code>
       *
       * <pre>
       * 冠军唯一id
       * </pre>
       */
      public Builder setUniqueId(long value) {
        bitField0_ |= 0x00100000;
        uniqueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 uniqueId = 21;</code>
       *
       * <pre>
       * 冠军唯一id
       * </pre>
       */
      public Builder clearUniqueId() {
        bitField0_ = (bitField0_ & ~0x00100000);
        uniqueId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DFPlayerInfoMessage)
    }

    static {
      defaultInstance = new DFPlayerInfoMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DFPlayerInfoMessage)
  }

  public interface MailSendMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int64 receivers = 1;
    /**
     * <code>repeated int64 receivers = 1;</code>
     *
     * <pre>
     * 收件人列表-玩家id
     * </pre>
     */
    java.util.List<java.lang.Long> getReceiversList();
    /**
     * <code>repeated int64 receivers = 1;</code>
     *
     * <pre>
     * 收件人列表-玩家id
     * </pre>
     */
    int getReceiversCount();
    /**
     * <code>repeated int64 receivers = 1;</code>
     *
     * <pre>
     * 收件人列表-玩家id
     * </pre>
     */
    long getReceivers(int index);

    // optional string mailContent = 2;
    /**
     * <code>optional string mailContent = 2;</code>
     *
     * <pre>
     * 邮件内容
     * </pre>
     */
    boolean hasMailContent();
    /**
     * <code>optional string mailContent = 2;</code>
     *
     * <pre>
     * 邮件内容
     * </pre>
     */
    java.lang.String getMailContent();
    /**
     * <code>optional string mailContent = 2;</code>
     *
     * <pre>
     * 邮件内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getMailContentBytes();
  }
  /**
   * Protobuf type {@code MailSendMessage}
   *
   * <pre>
   * 邮件发送信息
   * </pre>
   */
  public static final class MailSendMessage extends
      com.google.protobuf.GeneratedMessage
      implements MailSendMessageOrBuilder {
    // Use MailSendMessage.newBuilder() to construct.
    private MailSendMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MailSendMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MailSendMessage defaultInstance;
    public static MailSendMessage getDefaultInstance() {
      return defaultInstance;
    }

    public MailSendMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MailSendMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                receivers_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              receivers_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                receivers_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                receivers_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              mailContent_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          receivers_ = java.util.Collections.unmodifiableList(receivers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_MailSendMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_MailSendMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.MailSendMessage.class, myudfs.Common.MailSendMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<MailSendMessage> PARSER =
        new com.google.protobuf.AbstractParser<MailSendMessage>() {
      public MailSendMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MailSendMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MailSendMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int64 receivers = 1;
    public static final int RECEIVERS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> receivers_;
    /**
     * <code>repeated int64 receivers = 1;</code>
     *
     * <pre>
     * 收件人列表-玩家id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getReceiversList() {
      return receivers_;
    }
    /**
     * <code>repeated int64 receivers = 1;</code>
     *
     * <pre>
     * 收件人列表-玩家id
     * </pre>
     */
    public int getReceiversCount() {
      return receivers_.size();
    }
    /**
     * <code>repeated int64 receivers = 1;</code>
     *
     * <pre>
     * 收件人列表-玩家id
     * </pre>
     */
    public long getReceivers(int index) {
      return receivers_.get(index);
    }

    // optional string mailContent = 2;
    public static final int MAILCONTENT_FIELD_NUMBER = 2;
    private java.lang.Object mailContent_;
    /**
     * <code>optional string mailContent = 2;</code>
     *
     * <pre>
     * 邮件内容
     * </pre>
     */
    public boolean hasMailContent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string mailContent = 2;</code>
     *
     * <pre>
     * 邮件内容
     * </pre>
     */
    public java.lang.String getMailContent() {
      java.lang.Object ref = mailContent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mailContent_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mailContent = 2;</code>
     *
     * <pre>
     * 邮件内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMailContentBytes() {
      java.lang.Object ref = mailContent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mailContent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      receivers_ = java.util.Collections.emptyList();
      mailContent_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < receivers_.size(); i++) {
        output.writeInt64(1, receivers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getMailContentBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < receivers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(receivers_.get(i));
        }
        size += dataSize;
        size += 1 * getReceiversList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMailContentBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.MailSendMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MailSendMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MailSendMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.MailSendMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.MailSendMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MailSendMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MailSendMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.MailSendMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.MailSendMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.MailSendMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.MailSendMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MailSendMessage}
     *
     * <pre>
     * 邮件发送信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.MailSendMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_MailSendMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_MailSendMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.MailSendMessage.class, myudfs.Common.MailSendMessage.Builder.class);
      }

      // Construct using myudfs.Common.MailSendMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        receivers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        mailContent_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_MailSendMessage_descriptor;
      }

      public myudfs.Common.MailSendMessage getDefaultInstanceForType() {
        return myudfs.Common.MailSendMessage.getDefaultInstance();
      }

      public myudfs.Common.MailSendMessage build() {
        myudfs.Common.MailSendMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.MailSendMessage buildPartial() {
        myudfs.Common.MailSendMessage result = new myudfs.Common.MailSendMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          receivers_ = java.util.Collections.unmodifiableList(receivers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.receivers_ = receivers_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mailContent_ = mailContent_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.MailSendMessage) {
          return mergeFrom((myudfs.Common.MailSendMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.MailSendMessage other) {
        if (other == myudfs.Common.MailSendMessage.getDefaultInstance()) return this;
        if (!other.receivers_.isEmpty()) {
          if (receivers_.isEmpty()) {
            receivers_ = other.receivers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReceiversIsMutable();
            receivers_.addAll(other.receivers_);
          }
          onChanged();
        }
        if (other.hasMailContent()) {
          bitField0_ |= 0x00000002;
          mailContent_ = other.mailContent_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.MailSendMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.MailSendMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int64 receivers = 1;
      private java.util.List<java.lang.Long> receivers_ = java.util.Collections.emptyList();
      private void ensureReceiversIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          receivers_ = new java.util.ArrayList<java.lang.Long>(receivers_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 receivers = 1;</code>
       *
       * <pre>
       * 收件人列表-玩家id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getReceiversList() {
        return java.util.Collections.unmodifiableList(receivers_);
      }
      /**
       * <code>repeated int64 receivers = 1;</code>
       *
       * <pre>
       * 收件人列表-玩家id
       * </pre>
       */
      public int getReceiversCount() {
        return receivers_.size();
      }
      /**
       * <code>repeated int64 receivers = 1;</code>
       *
       * <pre>
       * 收件人列表-玩家id
       * </pre>
       */
      public long getReceivers(int index) {
        return receivers_.get(index);
      }
      /**
       * <code>repeated int64 receivers = 1;</code>
       *
       * <pre>
       * 收件人列表-玩家id
       * </pre>
       */
      public Builder setReceivers(
          int index, long value) {
        ensureReceiversIsMutable();
        receivers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receivers = 1;</code>
       *
       * <pre>
       * 收件人列表-玩家id
       * </pre>
       */
      public Builder addReceivers(long value) {
        ensureReceiversIsMutable();
        receivers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receivers = 1;</code>
       *
       * <pre>
       * 收件人列表-玩家id
       * </pre>
       */
      public Builder addAllReceivers(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureReceiversIsMutable();
        super.addAll(values, receivers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 receivers = 1;</code>
       *
       * <pre>
       * 收件人列表-玩家id
       * </pre>
       */
      public Builder clearReceivers() {
        receivers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional string mailContent = 2;
      private java.lang.Object mailContent_ = "";
      /**
       * <code>optional string mailContent = 2;</code>
       *
       * <pre>
       * 邮件内容
       * </pre>
       */
      public boolean hasMailContent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string mailContent = 2;</code>
       *
       * <pre>
       * 邮件内容
       * </pre>
       */
      public java.lang.String getMailContent() {
        java.lang.Object ref = mailContent_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mailContent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mailContent = 2;</code>
       *
       * <pre>
       * 邮件内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMailContentBytes() {
        java.lang.Object ref = mailContent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mailContent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mailContent = 2;</code>
       *
       * <pre>
       * 邮件内容
       * </pre>
       */
      public Builder setMailContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mailContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mailContent = 2;</code>
       *
       * <pre>
       * 邮件内容
       * </pre>
       */
      public Builder clearMailContent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mailContent_ = getDefaultInstance().getMailContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mailContent = 2;</code>
       *
       * <pre>
       * 邮件内容
       * </pre>
       */
      public Builder setMailContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mailContent_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MailSendMessage)
    }

    static {
      defaultInstance = new MailSendMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MailSendMessage)
  }

  public interface DFTeamCardGroupMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PlayerItem playerItem = 1;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    boolean hasPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItem getPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder();
  }
  /**
   * Protobuf type {@code DFTeamCardGroupMessage}
   *
   * <pre>
   * 斗法队伍卡组消息
   * </pre>
   */
  public static final class DFTeamCardGroupMessage extends
      com.google.protobuf.GeneratedMessage
      implements DFTeamCardGroupMessageOrBuilder {
    // Use DFTeamCardGroupMessage.newBuilder() to construct.
    private DFTeamCardGroupMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DFTeamCardGroupMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DFTeamCardGroupMessage defaultInstance;
    public static DFTeamCardGroupMessage getDefaultInstance() {
      return defaultInstance;
    }

    public DFTeamCardGroupMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DFTeamCardGroupMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              myudfs.Common.PlayerItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerItem_.toBuilder();
              }
              playerItem_ = input.readMessage(myudfs.Common.PlayerItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerItem_);
                playerItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_DFTeamCardGroupMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_DFTeamCardGroupMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.DFTeamCardGroupMessage.class, myudfs.Common.DFTeamCardGroupMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<DFTeamCardGroupMessage> PARSER =
        new com.google.protobuf.AbstractParser<DFTeamCardGroupMessage>() {
      public DFTeamCardGroupMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DFTeamCardGroupMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DFTeamCardGroupMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PlayerItem playerItem = 1;
    public static final int PLAYERITEM_FIELD_NUMBER = 1;
    private myudfs.Common.PlayerItem playerItem_;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public boolean hasPlayerItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItem getPlayerItem() {
      return playerItem_;
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
      return playerItem_;
    }

    private void initFields() {
      playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerItem_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerItem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DFTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.DFTeamCardGroupMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DFTeamCardGroupMessage}
     *
     * <pre>
     * 斗法队伍卡组消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.DFTeamCardGroupMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_DFTeamCardGroupMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_DFTeamCardGroupMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.DFTeamCardGroupMessage.class, myudfs.Common.DFTeamCardGroupMessage.Builder.class);
      }

      // Construct using myudfs.Common.DFTeamCardGroupMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_DFTeamCardGroupMessage_descriptor;
      }

      public myudfs.Common.DFTeamCardGroupMessage getDefaultInstanceForType() {
        return myudfs.Common.DFTeamCardGroupMessage.getDefaultInstance();
      }

      public myudfs.Common.DFTeamCardGroupMessage build() {
        myudfs.Common.DFTeamCardGroupMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.DFTeamCardGroupMessage buildPartial() {
        myudfs.Common.DFTeamCardGroupMessage result = new myudfs.Common.DFTeamCardGroupMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerItemBuilder_ == null) {
          result.playerItem_ = playerItem_;
        } else {
          result.playerItem_ = playerItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.DFTeamCardGroupMessage) {
          return mergeFrom((myudfs.Common.DFTeamCardGroupMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.DFTeamCardGroupMessage other) {
        if (other == myudfs.Common.DFTeamCardGroupMessage.getDefaultInstance()) return this;
        if (other.hasPlayerItem()) {
          mergePlayerItem(other.getPlayerItem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.DFTeamCardGroupMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.DFTeamCardGroupMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PlayerItem playerItem = 1;
      private myudfs.Common.PlayerItem playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> playerItemBuilder_;
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public boolean hasPlayerItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem getPlayerItem() {
        if (playerItemBuilder_ == null) {
          return playerItem_;
        } else {
          return playerItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerItem_ = value;
          onChanged();
        } else {
          playerItemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(
          myudfs.Common.PlayerItem.Builder builderForValue) {
        if (playerItemBuilder_ == null) {
          playerItem_ = builderForValue.build();
          onChanged();
        } else {
          playerItemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder mergePlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerItem_ != myudfs.Common.PlayerItem.getDefaultInstance()) {
            playerItem_ =
              myudfs.Common.PlayerItem.newBuilder(playerItem_).mergeFrom(value).buildPartial();
          } else {
            playerItem_ = value;
          }
          onChanged();
        } else {
          playerItemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder clearPlayerItem() {
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
          onChanged();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem.Builder getPlayerItemBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
        if (playerItemBuilder_ != null) {
          return playerItemBuilder_.getMessageOrBuilder();
        } else {
          return playerItem_;
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> 
          getPlayerItemFieldBuilder() {
        if (playerItemBuilder_ == null) {
          playerItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder>(
                  playerItem_,
                  getParentForChildren(),
                  isClean());
          playerItem_ = null;
        }
        return playerItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DFTeamCardGroupMessage)
    }

    static {
      defaultInstance = new DFTeamCardGroupMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DFTeamCardGroupMessage)
  }

  public interface XunxianOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 xunxianCountDaily = 1;
    /**
     * <code>optional int32 xunxianCountDaily = 1;</code>
     *
     * <pre>
     * 寻仙捉妖每日挑战次数
     * </pre>
     */
    boolean hasXunxianCountDaily();
    /**
     * <code>optional int32 xunxianCountDaily = 1;</code>
     *
     * <pre>
     * 寻仙捉妖每日挑战次数
     * </pre>
     */
    int getXunxianCountDaily();

    // optional uint64 xunxianCD = 2;
    /**
     * <code>optional uint64 xunxianCD = 2;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的cd时间
     * </pre>
     */
    boolean hasXunxianCD();
    /**
     * <code>optional uint64 xunxianCD = 2;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的cd时间
     * </pre>
     */
    long getXunxianCD();

    // optional int32 xunxianQuestId = 3;
    /**
     * <code>optional int32 xunxianQuestId = 3;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的关卡id
     * </pre>
     */
    boolean hasXunxianQuestId();
    /**
     * <code>optional int32 xunxianQuestId = 3;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的关卡id
     * </pre>
     */
    int getXunxianQuestId();

    // optional int32 xunxianId = 4;
    /**
     * <code>optional int32 xunxianId = 4;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的id
     * </pre>
     */
    boolean hasXunxianId();
    /**
     * <code>optional int32 xunxianId = 4;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的id
     * </pre>
     */
    int getXunxianId();

    // optional int32 modelId = 5;
    /**
     * <code>optional int32 modelId = 5;</code>
     *
     * <pre>
     * 配置表里的模型ID
     * </pre>
     */
    boolean hasModelId();
    /**
     * <code>optional int32 modelId = 5;</code>
     *
     * <pre>
     * 配置表里的模型ID
     * </pre>
     */
    int getModelId();
  }
  /**
   * Protobuf type {@code Xunxian}
   */
  public static final class Xunxian extends
      com.google.protobuf.GeneratedMessage
      implements XunxianOrBuilder {
    // Use Xunxian.newBuilder() to construct.
    private Xunxian(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Xunxian(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Xunxian defaultInstance;
    public static Xunxian getDefaultInstance() {
      return defaultInstance;
    }

    public Xunxian getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Xunxian(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              xunxianCountDaily_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              xunxianCD_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              xunxianQuestId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              xunxianId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              modelId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_Xunxian_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_Xunxian_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.Xunxian.class, myudfs.Common.Xunxian.Builder.class);
    }

    public static com.google.protobuf.Parser<Xunxian> PARSER =
        new com.google.protobuf.AbstractParser<Xunxian>() {
      public Xunxian parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Xunxian(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Xunxian> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 xunxianCountDaily = 1;
    public static final int XUNXIANCOUNTDAILY_FIELD_NUMBER = 1;
    private int xunxianCountDaily_;
    /**
     * <code>optional int32 xunxianCountDaily = 1;</code>
     *
     * <pre>
     * 寻仙捉妖每日挑战次数
     * </pre>
     */
    public boolean hasXunxianCountDaily() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 xunxianCountDaily = 1;</code>
     *
     * <pre>
     * 寻仙捉妖每日挑战次数
     * </pre>
     */
    public int getXunxianCountDaily() {
      return xunxianCountDaily_;
    }

    // optional uint64 xunxianCD = 2;
    public static final int XUNXIANCD_FIELD_NUMBER = 2;
    private long xunxianCD_;
    /**
     * <code>optional uint64 xunxianCD = 2;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的cd时间
     * </pre>
     */
    public boolean hasXunxianCD() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 xunxianCD = 2;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的cd时间
     * </pre>
     */
    public long getXunxianCD() {
      return xunxianCD_;
    }

    // optional int32 xunxianQuestId = 3;
    public static final int XUNXIANQUESTID_FIELD_NUMBER = 3;
    private int xunxianQuestId_;
    /**
     * <code>optional int32 xunxianQuestId = 3;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的关卡id
     * </pre>
     */
    public boolean hasXunxianQuestId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 xunxianQuestId = 3;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的关卡id
     * </pre>
     */
    public int getXunxianQuestId() {
      return xunxianQuestId_;
    }

    // optional int32 xunxianId = 4;
    public static final int XUNXIANID_FIELD_NUMBER = 4;
    private int xunxianId_;
    /**
     * <code>optional int32 xunxianId = 4;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的id
     * </pre>
     */
    public boolean hasXunxianId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 xunxianId = 4;</code>
     *
     * <pre>
     * 下一次寻仙捉妖的id
     * </pre>
     */
    public int getXunxianId() {
      return xunxianId_;
    }

    // optional int32 modelId = 5;
    public static final int MODELID_FIELD_NUMBER = 5;
    private int modelId_;
    /**
     * <code>optional int32 modelId = 5;</code>
     *
     * <pre>
     * 配置表里的模型ID
     * </pre>
     */
    public boolean hasModelId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 modelId = 5;</code>
     *
     * <pre>
     * 配置表里的模型ID
     * </pre>
     */
    public int getModelId() {
      return modelId_;
    }

    private void initFields() {
      xunxianCountDaily_ = 0;
      xunxianCD_ = 0L;
      xunxianQuestId_ = 0;
      xunxianId_ = 0;
      modelId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, xunxianCountDaily_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, xunxianCD_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, xunxianQuestId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, xunxianId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, modelId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, xunxianCountDaily_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, xunxianCD_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, xunxianQuestId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, xunxianId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, modelId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.Xunxian parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.Xunxian parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.Xunxian parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.Xunxian parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.Xunxian parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.Xunxian parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.Xunxian parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.Xunxian parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.Xunxian parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.Xunxian parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.Xunxian prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Xunxian}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.XunxianOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_Xunxian_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_Xunxian_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.Xunxian.class, myudfs.Common.Xunxian.Builder.class);
      }

      // Construct using myudfs.Common.Xunxian.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        xunxianCountDaily_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        xunxianCD_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        xunxianQuestId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        xunxianId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        modelId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_Xunxian_descriptor;
      }

      public myudfs.Common.Xunxian getDefaultInstanceForType() {
        return myudfs.Common.Xunxian.getDefaultInstance();
      }

      public myudfs.Common.Xunxian build() {
        myudfs.Common.Xunxian result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.Xunxian buildPartial() {
        myudfs.Common.Xunxian result = new myudfs.Common.Xunxian(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.xunxianCountDaily_ = xunxianCountDaily_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.xunxianCD_ = xunxianCD_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.xunxianQuestId_ = xunxianQuestId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.xunxianId_ = xunxianId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.modelId_ = modelId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.Xunxian) {
          return mergeFrom((myudfs.Common.Xunxian)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.Xunxian other) {
        if (other == myudfs.Common.Xunxian.getDefaultInstance()) return this;
        if (other.hasXunxianCountDaily()) {
          setXunxianCountDaily(other.getXunxianCountDaily());
        }
        if (other.hasXunxianCD()) {
          setXunxianCD(other.getXunxianCD());
        }
        if (other.hasXunxianQuestId()) {
          setXunxianQuestId(other.getXunxianQuestId());
        }
        if (other.hasXunxianId()) {
          setXunxianId(other.getXunxianId());
        }
        if (other.hasModelId()) {
          setModelId(other.getModelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.Xunxian parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.Xunxian) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 xunxianCountDaily = 1;
      private int xunxianCountDaily_ ;
      /**
       * <code>optional int32 xunxianCountDaily = 1;</code>
       *
       * <pre>
       * 寻仙捉妖每日挑战次数
       * </pre>
       */
      public boolean hasXunxianCountDaily() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 xunxianCountDaily = 1;</code>
       *
       * <pre>
       * 寻仙捉妖每日挑战次数
       * </pre>
       */
      public int getXunxianCountDaily() {
        return xunxianCountDaily_;
      }
      /**
       * <code>optional int32 xunxianCountDaily = 1;</code>
       *
       * <pre>
       * 寻仙捉妖每日挑战次数
       * </pre>
       */
      public Builder setXunxianCountDaily(int value) {
        bitField0_ |= 0x00000001;
        xunxianCountDaily_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xunxianCountDaily = 1;</code>
       *
       * <pre>
       * 寻仙捉妖每日挑战次数
       * </pre>
       */
      public Builder clearXunxianCountDaily() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xunxianCountDaily_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 xunxianCD = 2;
      private long xunxianCD_ ;
      /**
       * <code>optional uint64 xunxianCD = 2;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的cd时间
       * </pre>
       */
      public boolean hasXunxianCD() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 xunxianCD = 2;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的cd时间
       * </pre>
       */
      public long getXunxianCD() {
        return xunxianCD_;
      }
      /**
       * <code>optional uint64 xunxianCD = 2;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的cd时间
       * </pre>
       */
      public Builder setXunxianCD(long value) {
        bitField0_ |= 0x00000002;
        xunxianCD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 xunxianCD = 2;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的cd时间
       * </pre>
       */
      public Builder clearXunxianCD() {
        bitField0_ = (bitField0_ & ~0x00000002);
        xunxianCD_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 xunxianQuestId = 3;
      private int xunxianQuestId_ ;
      /**
       * <code>optional int32 xunxianQuestId = 3;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的关卡id
       * </pre>
       */
      public boolean hasXunxianQuestId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 xunxianQuestId = 3;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的关卡id
       * </pre>
       */
      public int getXunxianQuestId() {
        return xunxianQuestId_;
      }
      /**
       * <code>optional int32 xunxianQuestId = 3;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的关卡id
       * </pre>
       */
      public Builder setXunxianQuestId(int value) {
        bitField0_ |= 0x00000004;
        xunxianQuestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xunxianQuestId = 3;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的关卡id
       * </pre>
       */
      public Builder clearXunxianQuestId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        xunxianQuestId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xunxianId = 4;
      private int xunxianId_ ;
      /**
       * <code>optional int32 xunxianId = 4;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的id
       * </pre>
       */
      public boolean hasXunxianId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 xunxianId = 4;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的id
       * </pre>
       */
      public int getXunxianId() {
        return xunxianId_;
      }
      /**
       * <code>optional int32 xunxianId = 4;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的id
       * </pre>
       */
      public Builder setXunxianId(int value) {
        bitField0_ |= 0x00000008;
        xunxianId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xunxianId = 4;</code>
       *
       * <pre>
       * 下一次寻仙捉妖的id
       * </pre>
       */
      public Builder clearXunxianId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        xunxianId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 modelId = 5;
      private int modelId_ ;
      /**
       * <code>optional int32 modelId = 5;</code>
       *
       * <pre>
       * 配置表里的模型ID
       * </pre>
       */
      public boolean hasModelId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 modelId = 5;</code>
       *
       * <pre>
       * 配置表里的模型ID
       * </pre>
       */
      public int getModelId() {
        return modelId_;
      }
      /**
       * <code>optional int32 modelId = 5;</code>
       *
       * <pre>
       * 配置表里的模型ID
       * </pre>
       */
      public Builder setModelId(int value) {
        bitField0_ |= 0x00000010;
        modelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 modelId = 5;</code>
       *
       * <pre>
       * 配置表里的模型ID
       * </pre>
       */
      public Builder clearModelId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        modelId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Xunxian)
    }

    static {
      defaultInstance = new Xunxian(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Xunxian)
  }

  public interface TestTimeMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int64 times = 1;
    /**
     * <code>repeated int64 times = 1;</code>
     */
    java.util.List<java.lang.Long> getTimesList();
    /**
     * <code>repeated int64 times = 1;</code>
     */
    int getTimesCount();
    /**
     * <code>repeated int64 times = 1;</code>
     */
    long getTimes(int index);
  }
  /**
   * Protobuf type {@code TestTimeMessage}
   */
  public static final class TestTimeMessage extends
      com.google.protobuf.GeneratedMessage
      implements TestTimeMessageOrBuilder {
    // Use TestTimeMessage.newBuilder() to construct.
    private TestTimeMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TestTimeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TestTimeMessage defaultInstance;
    public static TestTimeMessage getDefaultInstance() {
      return defaultInstance;
    }

    public TestTimeMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TestTimeMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                times_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              times_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                times_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                times_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          times_ = java.util.Collections.unmodifiableList(times_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_TestTimeMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_TestTimeMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.TestTimeMessage.class, myudfs.Common.TestTimeMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<TestTimeMessage> PARSER =
        new com.google.protobuf.AbstractParser<TestTimeMessage>() {
      public TestTimeMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestTimeMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TestTimeMessage> getParserForType() {
      return PARSER;
    }

    // repeated int64 times = 1;
    public static final int TIMES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> times_;
    /**
     * <code>repeated int64 times = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getTimesList() {
      return times_;
    }
    /**
     * <code>repeated int64 times = 1;</code>
     */
    public int getTimesCount() {
      return times_.size();
    }
    /**
     * <code>repeated int64 times = 1;</code>
     */
    public long getTimes(int index) {
      return times_.get(index);
    }

    private void initFields() {
      times_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < times_.size(); i++) {
        output.writeInt64(1, times_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < times_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(times_.get(i));
        }
        size += dataSize;
        size += 1 * getTimesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.TestTimeMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.TestTimeMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.TestTimeMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.TestTimeMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.TestTimeMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.TestTimeMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.TestTimeMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.TestTimeMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.TestTimeMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.TestTimeMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.TestTimeMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TestTimeMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.TestTimeMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_TestTimeMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_TestTimeMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.TestTimeMessage.class, myudfs.Common.TestTimeMessage.Builder.class);
      }

      // Construct using myudfs.Common.TestTimeMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_TestTimeMessage_descriptor;
      }

      public myudfs.Common.TestTimeMessage getDefaultInstanceForType() {
        return myudfs.Common.TestTimeMessage.getDefaultInstance();
      }

      public myudfs.Common.TestTimeMessage build() {
        myudfs.Common.TestTimeMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.TestTimeMessage buildPartial() {
        myudfs.Common.TestTimeMessage result = new myudfs.Common.TestTimeMessage(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          times_ = java.util.Collections.unmodifiableList(times_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.times_ = times_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.TestTimeMessage) {
          return mergeFrom((myudfs.Common.TestTimeMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.TestTimeMessage other) {
        if (other == myudfs.Common.TestTimeMessage.getDefaultInstance()) return this;
        if (!other.times_.isEmpty()) {
          if (times_.isEmpty()) {
            times_ = other.times_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTimesIsMutable();
            times_.addAll(other.times_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.TestTimeMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.TestTimeMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int64 times = 1;
      private java.util.List<java.lang.Long> times_ = java.util.Collections.emptyList();
      private void ensureTimesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          times_ = new java.util.ArrayList<java.lang.Long>(times_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 times = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getTimesList() {
        return java.util.Collections.unmodifiableList(times_);
      }
      /**
       * <code>repeated int64 times = 1;</code>
       */
      public int getTimesCount() {
        return times_.size();
      }
      /**
       * <code>repeated int64 times = 1;</code>
       */
      public long getTimes(int index) {
        return times_.get(index);
      }
      /**
       * <code>repeated int64 times = 1;</code>
       */
      public Builder setTimes(
          int index, long value) {
        ensureTimesIsMutable();
        times_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 times = 1;</code>
       */
      public Builder addTimes(long value) {
        ensureTimesIsMutable();
        times_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 times = 1;</code>
       */
      public Builder addAllTimes(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTimesIsMutable();
        super.addAll(values, times_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 times = 1;</code>
       */
      public Builder clearTimes() {
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TestTimeMessage)
    }

    static {
      defaultInstance = new TestTimeMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TestTimeMessage)
  }

  public interface BenchmarkMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated string infos = 1;
    /**
     * <code>repeated string infos = 1;</code>
     */
    java.util.List<java.lang.String>
    getInfosList();
    /**
     * <code>repeated string infos = 1;</code>
     */
    int getInfosCount();
    /**
     * <code>repeated string infos = 1;</code>
     */
    java.lang.String getInfos(int index);
    /**
     * <code>repeated string infos = 1;</code>
     */
    com.google.protobuf.ByteString
        getInfosBytes(int index);
  }
  /**
   * Protobuf type {@code BenchmarkMessage}
   */
  public static final class BenchmarkMessage extends
      com.google.protobuf.GeneratedMessage
      implements BenchmarkMessageOrBuilder {
    // Use BenchmarkMessage.newBuilder() to construct.
    private BenchmarkMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BenchmarkMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BenchmarkMessage defaultInstance;
    public static BenchmarkMessage getDefaultInstance() {
      return defaultInstance;
    }

    public BenchmarkMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BenchmarkMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                infos_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              infos_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = new com.google.protobuf.UnmodifiableLazyStringList(infos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_BenchmarkMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_BenchmarkMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.BenchmarkMessage.class, myudfs.Common.BenchmarkMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<BenchmarkMessage> PARSER =
        new com.google.protobuf.AbstractParser<BenchmarkMessage>() {
      public BenchmarkMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BenchmarkMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BenchmarkMessage> getParserForType() {
      return PARSER;
    }

    // repeated string infos = 1;
    public static final int INFOS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList infos_;
    /**
     * <code>repeated string infos = 1;</code>
     */
    public java.util.List<java.lang.String>
        getInfosList() {
      return infos_;
    }
    /**
     * <code>repeated string infos = 1;</code>
     */
    public int getInfosCount() {
      return infos_.size();
    }
    /**
     * <code>repeated string infos = 1;</code>
     */
    public java.lang.String getInfos(int index) {
      return infos_.get(index);
    }
    /**
     * <code>repeated string infos = 1;</code>
     */
    public com.google.protobuf.ByteString
        getInfosBytes(int index) {
      return infos_.getByteString(index);
    }

    private void initFields() {
      infos_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < infos_.size(); i++) {
        output.writeBytes(1, infos_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < infos_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(infos_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getInfosList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.BenchmarkMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.BenchmarkMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.BenchmarkMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.BenchmarkMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.BenchmarkMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.BenchmarkMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.BenchmarkMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.BenchmarkMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.BenchmarkMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.BenchmarkMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.BenchmarkMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BenchmarkMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.BenchmarkMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_BenchmarkMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_BenchmarkMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.BenchmarkMessage.class, myudfs.Common.BenchmarkMessage.Builder.class);
      }

      // Construct using myudfs.Common.BenchmarkMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        infos_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_BenchmarkMessage_descriptor;
      }

      public myudfs.Common.BenchmarkMessage getDefaultInstanceForType() {
        return myudfs.Common.BenchmarkMessage.getDefaultInstance();
      }

      public myudfs.Common.BenchmarkMessage build() {
        myudfs.Common.BenchmarkMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.BenchmarkMessage buildPartial() {
        myudfs.Common.BenchmarkMessage result = new myudfs.Common.BenchmarkMessage(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = new com.google.protobuf.UnmodifiableLazyStringList(
              infos_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.infos_ = infos_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.BenchmarkMessage) {
          return mergeFrom((myudfs.Common.BenchmarkMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.BenchmarkMessage other) {
        if (other == myudfs.Common.BenchmarkMessage.getDefaultInstance()) return this;
        if (!other.infos_.isEmpty()) {
          if (infos_.isEmpty()) {
            infos_ = other.infos_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInfosIsMutable();
            infos_.addAll(other.infos_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.BenchmarkMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.BenchmarkMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated string infos = 1;
      private com.google.protobuf.LazyStringList infos_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = new com.google.protobuf.LazyStringArrayList(infos_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public java.util.List<java.lang.String>
          getInfosList() {
        return java.util.Collections.unmodifiableList(infos_);
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public int getInfosCount() {
        return infos_.size();
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public java.lang.String getInfos(int index) {
        return infos_.get(index);
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public com.google.protobuf.ByteString
          getInfosBytes(int index) {
        return infos_.getByteString(index);
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public Builder setInfos(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfosIsMutable();
        infos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public Builder addInfos(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfosIsMutable();
        infos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public Builder addAllInfos(
          java.lang.Iterable<java.lang.String> values) {
        ensureInfosIsMutable();
        super.addAll(values, infos_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public Builder clearInfos() {
        infos_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string infos = 1;</code>
       */
      public Builder addInfosBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfosIsMutable();
        infos_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BenchmarkMessage)
    }

    static {
      defaultInstance = new BenchmarkMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BenchmarkMessage)
  }

  public interface SecurityCodeFreezeItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .SecurityCodeFreezeState freezeState = 1;
    /**
     * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
     *
     * <pre>
     * 冻结状态
     * </pre>
     */
    boolean hasFreezeState();
    /**
     * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
     *
     * <pre>
     * 冻结状态
     * </pre>
     */
    myudfs.Common.SecurityCodeFreezeState getFreezeState();

    // optional uint64 freezeCountdown = 2;
    /**
     * <code>optional uint64 freezeCountdown = 2;</code>
     *
     * <pre>
     * 冻结倒计时
     * </pre>
     */
    boolean hasFreezeCountdown();
    /**
     * <code>optional uint64 freezeCountdown = 2;</code>
     *
     * <pre>
     * 冻结倒计时
     * </pre>
     */
    long getFreezeCountdown();

    // optional uint64 freezeEndTime = 3;
    /**
     * <code>optional uint64 freezeEndTime = 3;</code>
     *
     * <pre>
     * 冻结结束时间
     * </pre>
     */
    boolean hasFreezeEndTime();
    /**
     * <code>optional uint64 freezeEndTime = 3;</code>
     *
     * <pre>
     * 冻结结束时间
     * </pre>
     */
    long getFreezeEndTime();
  }
  /**
   * Protobuf type {@code SecurityCodeFreezeItem}
   *
   * <pre>
   * 安全码冻结信息
   * </pre>
   */
  public static final class SecurityCodeFreezeItem extends
      com.google.protobuf.GeneratedMessage
      implements SecurityCodeFreezeItemOrBuilder {
    // Use SecurityCodeFreezeItem.newBuilder() to construct.
    private SecurityCodeFreezeItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SecurityCodeFreezeItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SecurityCodeFreezeItem defaultInstance;
    public static SecurityCodeFreezeItem getDefaultInstance() {
      return defaultInstance;
    }

    public SecurityCodeFreezeItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SecurityCodeFreezeItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              myudfs.Common.SecurityCodeFreezeState value = myudfs.Common.SecurityCodeFreezeState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                freezeState_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              freezeCountdown_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              freezeEndTime_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_SecurityCodeFreezeItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_SecurityCodeFreezeItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.SecurityCodeFreezeItem.class, myudfs.Common.SecurityCodeFreezeItem.Builder.class);
    }

    public static com.google.protobuf.Parser<SecurityCodeFreezeItem> PARSER =
        new com.google.protobuf.AbstractParser<SecurityCodeFreezeItem>() {
      public SecurityCodeFreezeItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SecurityCodeFreezeItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SecurityCodeFreezeItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .SecurityCodeFreezeState freezeState = 1;
    public static final int FREEZESTATE_FIELD_NUMBER = 1;
    private myudfs.Common.SecurityCodeFreezeState freezeState_;
    /**
     * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
     *
     * <pre>
     * 冻结状态
     * </pre>
     */
    public boolean hasFreezeState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
     *
     * <pre>
     * 冻结状态
     * </pre>
     */
    public myudfs.Common.SecurityCodeFreezeState getFreezeState() {
      return freezeState_;
    }

    // optional uint64 freezeCountdown = 2;
    public static final int FREEZECOUNTDOWN_FIELD_NUMBER = 2;
    private long freezeCountdown_;
    /**
     * <code>optional uint64 freezeCountdown = 2;</code>
     *
     * <pre>
     * 冻结倒计时
     * </pre>
     */
    public boolean hasFreezeCountdown() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 freezeCountdown = 2;</code>
     *
     * <pre>
     * 冻结倒计时
     * </pre>
     */
    public long getFreezeCountdown() {
      return freezeCountdown_;
    }

    // optional uint64 freezeEndTime = 3;
    public static final int FREEZEENDTIME_FIELD_NUMBER = 3;
    private long freezeEndTime_;
    /**
     * <code>optional uint64 freezeEndTime = 3;</code>
     *
     * <pre>
     * 冻结结束时间
     * </pre>
     */
    public boolean hasFreezeEndTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 freezeEndTime = 3;</code>
     *
     * <pre>
     * 冻结结束时间
     * </pre>
     */
    public long getFreezeEndTime() {
      return freezeEndTime_;
    }

    private void initFields() {
      freezeState_ = myudfs.Common.SecurityCodeFreezeState.UNFREEZE;
      freezeCountdown_ = 0L;
      freezeEndTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, freezeState_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, freezeCountdown_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, freezeEndTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, freezeState_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, freezeCountdown_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, freezeEndTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.SecurityCodeFreezeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.SecurityCodeFreezeItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SecurityCodeFreezeItem}
     *
     * <pre>
     * 安全码冻结信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.SecurityCodeFreezeItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_SecurityCodeFreezeItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_SecurityCodeFreezeItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.SecurityCodeFreezeItem.class, myudfs.Common.SecurityCodeFreezeItem.Builder.class);
      }

      // Construct using myudfs.Common.SecurityCodeFreezeItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        freezeState_ = myudfs.Common.SecurityCodeFreezeState.UNFREEZE;
        bitField0_ = (bitField0_ & ~0x00000001);
        freezeCountdown_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        freezeEndTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_SecurityCodeFreezeItem_descriptor;
      }

      public myudfs.Common.SecurityCodeFreezeItem getDefaultInstanceForType() {
        return myudfs.Common.SecurityCodeFreezeItem.getDefaultInstance();
      }

      public myudfs.Common.SecurityCodeFreezeItem build() {
        myudfs.Common.SecurityCodeFreezeItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.SecurityCodeFreezeItem buildPartial() {
        myudfs.Common.SecurityCodeFreezeItem result = new myudfs.Common.SecurityCodeFreezeItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.freezeState_ = freezeState_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freezeCountdown_ = freezeCountdown_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.freezeEndTime_ = freezeEndTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.SecurityCodeFreezeItem) {
          return mergeFrom((myudfs.Common.SecurityCodeFreezeItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.SecurityCodeFreezeItem other) {
        if (other == myudfs.Common.SecurityCodeFreezeItem.getDefaultInstance()) return this;
        if (other.hasFreezeState()) {
          setFreezeState(other.getFreezeState());
        }
        if (other.hasFreezeCountdown()) {
          setFreezeCountdown(other.getFreezeCountdown());
        }
        if (other.hasFreezeEndTime()) {
          setFreezeEndTime(other.getFreezeEndTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.SecurityCodeFreezeItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.SecurityCodeFreezeItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .SecurityCodeFreezeState freezeState = 1;
      private myudfs.Common.SecurityCodeFreezeState freezeState_ = myudfs.Common.SecurityCodeFreezeState.UNFREEZE;
      /**
       * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
       *
       * <pre>
       * 冻结状态
       * </pre>
       */
      public boolean hasFreezeState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
       *
       * <pre>
       * 冻结状态
       * </pre>
       */
      public myudfs.Common.SecurityCodeFreezeState getFreezeState() {
        return freezeState_;
      }
      /**
       * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
       *
       * <pre>
       * 冻结状态
       * </pre>
       */
      public Builder setFreezeState(myudfs.Common.SecurityCodeFreezeState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        freezeState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SecurityCodeFreezeState freezeState = 1;</code>
       *
       * <pre>
       * 冻结状态
       * </pre>
       */
      public Builder clearFreezeState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        freezeState_ = myudfs.Common.SecurityCodeFreezeState.UNFREEZE;
        onChanged();
        return this;
      }

      // optional uint64 freezeCountdown = 2;
      private long freezeCountdown_ ;
      /**
       * <code>optional uint64 freezeCountdown = 2;</code>
       *
       * <pre>
       * 冻结倒计时
       * </pre>
       */
      public boolean hasFreezeCountdown() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 freezeCountdown = 2;</code>
       *
       * <pre>
       * 冻结倒计时
       * </pre>
       */
      public long getFreezeCountdown() {
        return freezeCountdown_;
      }
      /**
       * <code>optional uint64 freezeCountdown = 2;</code>
       *
       * <pre>
       * 冻结倒计时
       * </pre>
       */
      public Builder setFreezeCountdown(long value) {
        bitField0_ |= 0x00000002;
        freezeCountdown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 freezeCountdown = 2;</code>
       *
       * <pre>
       * 冻结倒计时
       * </pre>
       */
      public Builder clearFreezeCountdown() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freezeCountdown_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 freezeEndTime = 3;
      private long freezeEndTime_ ;
      /**
       * <code>optional uint64 freezeEndTime = 3;</code>
       *
       * <pre>
       * 冻结结束时间
       * </pre>
       */
      public boolean hasFreezeEndTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 freezeEndTime = 3;</code>
       *
       * <pre>
       * 冻结结束时间
       * </pre>
       */
      public long getFreezeEndTime() {
        return freezeEndTime_;
      }
      /**
       * <code>optional uint64 freezeEndTime = 3;</code>
       *
       * <pre>
       * 冻结结束时间
       * </pre>
       */
      public Builder setFreezeEndTime(long value) {
        bitField0_ |= 0x00000004;
        freezeEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 freezeEndTime = 3;</code>
       *
       * <pre>
       * 冻结结束时间
       * </pre>
       */
      public Builder clearFreezeEndTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        freezeEndTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SecurityCodeFreezeItem)
    }

    static {
      defaultInstance = new SecurityCodeFreezeItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SecurityCodeFreezeItem)
  }

  public interface SecurityCodeItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string securityCode = 1;
    /**
     * <code>optional string securityCode = 1;</code>
     *
     * <pre>
     * 安全码
     * </pre>
     */
    boolean hasSecurityCode();
    /**
     * <code>optional string securityCode = 1;</code>
     *
     * <pre>
     * 安全码
     * </pre>
     */
    java.lang.String getSecurityCode();
    /**
     * <code>optional string securityCode = 1;</code>
     *
     * <pre>
     * 安全码
     * </pre>
     */
    com.google.protobuf.ByteString
        getSecurityCodeBytes();

    // optional bool isEnableSecurityCode = 2;
    /**
     * <code>optional bool isEnableSecurityCode = 2;</code>
     *
     * <pre>
     * 是否启用安全码
     * </pre>
     */
    boolean hasIsEnableSecurityCode();
    /**
     * <code>optional bool isEnableSecurityCode = 2;</code>
     *
     * <pre>
     * 是否启用安全码
     * </pre>
     */
    boolean getIsEnableSecurityCode();

    // optional .SecurityCodeFreezeItem freezeItem = 3;
    /**
     * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
     *
     * <pre>
     * 冻结信息
     * </pre>
     */
    boolean hasFreezeItem();
    /**
     * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
     *
     * <pre>
     * 冻结信息
     * </pre>
     */
    myudfs.Common.SecurityCodeFreezeItem getFreezeItem();
    /**
     * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
     *
     * <pre>
     * 冻结信息
     * </pre>
     */
    myudfs.Common.SecurityCodeFreezeItemOrBuilder getFreezeItemOrBuilder();

    // optional int32 inputErrorCounts = 4;
    /**
     * <code>optional int32 inputErrorCounts = 4;</code>
     *
     * <pre>
     * 安全密码连续输入错误次数
     * </pre>
     */
    boolean hasInputErrorCounts();
    /**
     * <code>optional int32 inputErrorCounts = 4;</code>
     *
     * <pre>
     * 安全密码连续输入错误次数
     * </pre>
     */
    int getInputErrorCounts();

    // optional bool hasInputCorrectCode = 5;
    /**
     * <code>optional bool hasInputCorrectCode = 5;</code>
     *
     * <pre>
     * 是否已输入过正确的安全密码
     * </pre>
     */
    boolean hasHasInputCorrectCode();
    /**
     * <code>optional bool hasInputCorrectCode = 5;</code>
     *
     * <pre>
     * 是否已输入过正确的安全密码
     * </pre>
     */
    boolean getHasInputCorrectCode();
  }
  /**
   * Protobuf type {@code SecurityCodeItem}
   *
   * <pre>
   * 安全密码信息
   * </pre>
   */
  public static final class SecurityCodeItem extends
      com.google.protobuf.GeneratedMessage
      implements SecurityCodeItemOrBuilder {
    // Use SecurityCodeItem.newBuilder() to construct.
    private SecurityCodeItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SecurityCodeItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SecurityCodeItem defaultInstance;
    public static SecurityCodeItem getDefaultInstance() {
      return defaultInstance;
    }

    public SecurityCodeItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SecurityCodeItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              securityCode_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isEnableSecurityCode_ = input.readBool();
              break;
            }
            case 26: {
              myudfs.Common.SecurityCodeFreezeItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = freezeItem_.toBuilder();
              }
              freezeItem_ = input.readMessage(myudfs.Common.SecurityCodeFreezeItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freezeItem_);
                freezeItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              inputErrorCounts_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hasInputCorrectCode_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_SecurityCodeItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_SecurityCodeItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.SecurityCodeItem.class, myudfs.Common.SecurityCodeItem.Builder.class);
    }

    public static com.google.protobuf.Parser<SecurityCodeItem> PARSER =
        new com.google.protobuf.AbstractParser<SecurityCodeItem>() {
      public SecurityCodeItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SecurityCodeItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SecurityCodeItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string securityCode = 1;
    public static final int SECURITYCODE_FIELD_NUMBER = 1;
    private java.lang.Object securityCode_;
    /**
     * <code>optional string securityCode = 1;</code>
     *
     * <pre>
     * 安全码
     * </pre>
     */
    public boolean hasSecurityCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string securityCode = 1;</code>
     *
     * <pre>
     * 安全码
     * </pre>
     */
    public java.lang.String getSecurityCode() {
      java.lang.Object ref = securityCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          securityCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string securityCode = 1;</code>
     *
     * <pre>
     * 安全码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSecurityCodeBytes() {
      java.lang.Object ref = securityCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        securityCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool isEnableSecurityCode = 2;
    public static final int ISENABLESECURITYCODE_FIELD_NUMBER = 2;
    private boolean isEnableSecurityCode_;
    /**
     * <code>optional bool isEnableSecurityCode = 2;</code>
     *
     * <pre>
     * 是否启用安全码
     * </pre>
     */
    public boolean hasIsEnableSecurityCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool isEnableSecurityCode = 2;</code>
     *
     * <pre>
     * 是否启用安全码
     * </pre>
     */
    public boolean getIsEnableSecurityCode() {
      return isEnableSecurityCode_;
    }

    // optional .SecurityCodeFreezeItem freezeItem = 3;
    public static final int FREEZEITEM_FIELD_NUMBER = 3;
    private myudfs.Common.SecurityCodeFreezeItem freezeItem_;
    /**
     * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
     *
     * <pre>
     * 冻结信息
     * </pre>
     */
    public boolean hasFreezeItem() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
     *
     * <pre>
     * 冻结信息
     * </pre>
     */
    public myudfs.Common.SecurityCodeFreezeItem getFreezeItem() {
      return freezeItem_;
    }
    /**
     * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
     *
     * <pre>
     * 冻结信息
     * </pre>
     */
    public myudfs.Common.SecurityCodeFreezeItemOrBuilder getFreezeItemOrBuilder() {
      return freezeItem_;
    }

    // optional int32 inputErrorCounts = 4;
    public static final int INPUTERRORCOUNTS_FIELD_NUMBER = 4;
    private int inputErrorCounts_;
    /**
     * <code>optional int32 inputErrorCounts = 4;</code>
     *
     * <pre>
     * 安全密码连续输入错误次数
     * </pre>
     */
    public boolean hasInputErrorCounts() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 inputErrorCounts = 4;</code>
     *
     * <pre>
     * 安全密码连续输入错误次数
     * </pre>
     */
    public int getInputErrorCounts() {
      return inputErrorCounts_;
    }

    // optional bool hasInputCorrectCode = 5;
    public static final int HASINPUTCORRECTCODE_FIELD_NUMBER = 5;
    private boolean hasInputCorrectCode_;
    /**
     * <code>optional bool hasInputCorrectCode = 5;</code>
     *
     * <pre>
     * 是否已输入过正确的安全密码
     * </pre>
     */
    public boolean hasHasInputCorrectCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool hasInputCorrectCode = 5;</code>
     *
     * <pre>
     * 是否已输入过正确的安全密码
     * </pre>
     */
    public boolean getHasInputCorrectCode() {
      return hasInputCorrectCode_;
    }

    private void initFields() {
      securityCode_ = "";
      isEnableSecurityCode_ = false;
      freezeItem_ = myudfs.Common.SecurityCodeFreezeItem.getDefaultInstance();
      inputErrorCounts_ = 0;
      hasInputCorrectCode_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSecurityCodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isEnableSecurityCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, freezeItem_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, inputErrorCounts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hasInputCorrectCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSecurityCodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isEnableSecurityCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, freezeItem_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, inputErrorCounts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hasInputCorrectCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.SecurityCodeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.SecurityCodeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.SecurityCodeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.SecurityCodeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.SecurityCodeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.SecurityCodeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.SecurityCodeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.SecurityCodeItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SecurityCodeItem}
     *
     * <pre>
     * 安全密码信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.SecurityCodeItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_SecurityCodeItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_SecurityCodeItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.SecurityCodeItem.class, myudfs.Common.SecurityCodeItem.Builder.class);
      }

      // Construct using myudfs.Common.SecurityCodeItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFreezeItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        securityCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        isEnableSecurityCode_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (freezeItemBuilder_ == null) {
          freezeItem_ = myudfs.Common.SecurityCodeFreezeItem.getDefaultInstance();
        } else {
          freezeItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        inputErrorCounts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        hasInputCorrectCode_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_SecurityCodeItem_descriptor;
      }

      public myudfs.Common.SecurityCodeItem getDefaultInstanceForType() {
        return myudfs.Common.SecurityCodeItem.getDefaultInstance();
      }

      public myudfs.Common.SecurityCodeItem build() {
        myudfs.Common.SecurityCodeItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.SecurityCodeItem buildPartial() {
        myudfs.Common.SecurityCodeItem result = new myudfs.Common.SecurityCodeItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.securityCode_ = securityCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isEnableSecurityCode_ = isEnableSecurityCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (freezeItemBuilder_ == null) {
          result.freezeItem_ = freezeItem_;
        } else {
          result.freezeItem_ = freezeItemBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.inputErrorCounts_ = inputErrorCounts_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hasInputCorrectCode_ = hasInputCorrectCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.SecurityCodeItem) {
          return mergeFrom((myudfs.Common.SecurityCodeItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.SecurityCodeItem other) {
        if (other == myudfs.Common.SecurityCodeItem.getDefaultInstance()) return this;
        if (other.hasSecurityCode()) {
          bitField0_ |= 0x00000001;
          securityCode_ = other.securityCode_;
          onChanged();
        }
        if (other.hasIsEnableSecurityCode()) {
          setIsEnableSecurityCode(other.getIsEnableSecurityCode());
        }
        if (other.hasFreezeItem()) {
          mergeFreezeItem(other.getFreezeItem());
        }
        if (other.hasInputErrorCounts()) {
          setInputErrorCounts(other.getInputErrorCounts());
        }
        if (other.hasHasInputCorrectCode()) {
          setHasInputCorrectCode(other.getHasInputCorrectCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.SecurityCodeItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.SecurityCodeItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string securityCode = 1;
      private java.lang.Object securityCode_ = "";
      /**
       * <code>optional string securityCode = 1;</code>
       *
       * <pre>
       * 安全码
       * </pre>
       */
      public boolean hasSecurityCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string securityCode = 1;</code>
       *
       * <pre>
       * 安全码
       * </pre>
       */
      public java.lang.String getSecurityCode() {
        java.lang.Object ref = securityCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          securityCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string securityCode = 1;</code>
       *
       * <pre>
       * 安全码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSecurityCodeBytes() {
        java.lang.Object ref = securityCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          securityCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string securityCode = 1;</code>
       *
       * <pre>
       * 安全码
       * </pre>
       */
      public Builder setSecurityCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        securityCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string securityCode = 1;</code>
       *
       * <pre>
       * 安全码
       * </pre>
       */
      public Builder clearSecurityCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        securityCode_ = getDefaultInstance().getSecurityCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string securityCode = 1;</code>
       *
       * <pre>
       * 安全码
       * </pre>
       */
      public Builder setSecurityCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        securityCode_ = value;
        onChanged();
        return this;
      }

      // optional bool isEnableSecurityCode = 2;
      private boolean isEnableSecurityCode_ ;
      /**
       * <code>optional bool isEnableSecurityCode = 2;</code>
       *
       * <pre>
       * 是否启用安全码
       * </pre>
       */
      public boolean hasIsEnableSecurityCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool isEnableSecurityCode = 2;</code>
       *
       * <pre>
       * 是否启用安全码
       * </pre>
       */
      public boolean getIsEnableSecurityCode() {
        return isEnableSecurityCode_;
      }
      /**
       * <code>optional bool isEnableSecurityCode = 2;</code>
       *
       * <pre>
       * 是否启用安全码
       * </pre>
       */
      public Builder setIsEnableSecurityCode(boolean value) {
        bitField0_ |= 0x00000002;
        isEnableSecurityCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEnableSecurityCode = 2;</code>
       *
       * <pre>
       * 是否启用安全码
       * </pre>
       */
      public Builder clearIsEnableSecurityCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isEnableSecurityCode_ = false;
        onChanged();
        return this;
      }

      // optional .SecurityCodeFreezeItem freezeItem = 3;
      private myudfs.Common.SecurityCodeFreezeItem freezeItem_ = myudfs.Common.SecurityCodeFreezeItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.SecurityCodeFreezeItem, myudfs.Common.SecurityCodeFreezeItem.Builder, myudfs.Common.SecurityCodeFreezeItemOrBuilder> freezeItemBuilder_;
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public boolean hasFreezeItem() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public myudfs.Common.SecurityCodeFreezeItem getFreezeItem() {
        if (freezeItemBuilder_ == null) {
          return freezeItem_;
        } else {
          return freezeItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public Builder setFreezeItem(myudfs.Common.SecurityCodeFreezeItem value) {
        if (freezeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freezeItem_ = value;
          onChanged();
        } else {
          freezeItemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public Builder setFreezeItem(
          myudfs.Common.SecurityCodeFreezeItem.Builder builderForValue) {
        if (freezeItemBuilder_ == null) {
          freezeItem_ = builderForValue.build();
          onChanged();
        } else {
          freezeItemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public Builder mergeFreezeItem(myudfs.Common.SecurityCodeFreezeItem value) {
        if (freezeItemBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              freezeItem_ != myudfs.Common.SecurityCodeFreezeItem.getDefaultInstance()) {
            freezeItem_ =
              myudfs.Common.SecurityCodeFreezeItem.newBuilder(freezeItem_).mergeFrom(value).buildPartial();
          } else {
            freezeItem_ = value;
          }
          onChanged();
        } else {
          freezeItemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public Builder clearFreezeItem() {
        if (freezeItemBuilder_ == null) {
          freezeItem_ = myudfs.Common.SecurityCodeFreezeItem.getDefaultInstance();
          onChanged();
        } else {
          freezeItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public myudfs.Common.SecurityCodeFreezeItem.Builder getFreezeItemBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFreezeItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      public myudfs.Common.SecurityCodeFreezeItemOrBuilder getFreezeItemOrBuilder() {
        if (freezeItemBuilder_ != null) {
          return freezeItemBuilder_.getMessageOrBuilder();
        } else {
          return freezeItem_;
        }
      }
      /**
       * <code>optional .SecurityCodeFreezeItem freezeItem = 3;</code>
       *
       * <pre>
       * 冻结信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.SecurityCodeFreezeItem, myudfs.Common.SecurityCodeFreezeItem.Builder, myudfs.Common.SecurityCodeFreezeItemOrBuilder> 
          getFreezeItemFieldBuilder() {
        if (freezeItemBuilder_ == null) {
          freezeItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.SecurityCodeFreezeItem, myudfs.Common.SecurityCodeFreezeItem.Builder, myudfs.Common.SecurityCodeFreezeItemOrBuilder>(
                  freezeItem_,
                  getParentForChildren(),
                  isClean());
          freezeItem_ = null;
        }
        return freezeItemBuilder_;
      }

      // optional int32 inputErrorCounts = 4;
      private int inputErrorCounts_ ;
      /**
       * <code>optional int32 inputErrorCounts = 4;</code>
       *
       * <pre>
       * 安全密码连续输入错误次数
       * </pre>
       */
      public boolean hasInputErrorCounts() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 inputErrorCounts = 4;</code>
       *
       * <pre>
       * 安全密码连续输入错误次数
       * </pre>
       */
      public int getInputErrorCounts() {
        return inputErrorCounts_;
      }
      /**
       * <code>optional int32 inputErrorCounts = 4;</code>
       *
       * <pre>
       * 安全密码连续输入错误次数
       * </pre>
       */
      public Builder setInputErrorCounts(int value) {
        bitField0_ |= 0x00000008;
        inputErrorCounts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inputErrorCounts = 4;</code>
       *
       * <pre>
       * 安全密码连续输入错误次数
       * </pre>
       */
      public Builder clearInputErrorCounts() {
        bitField0_ = (bitField0_ & ~0x00000008);
        inputErrorCounts_ = 0;
        onChanged();
        return this;
      }

      // optional bool hasInputCorrectCode = 5;
      private boolean hasInputCorrectCode_ ;
      /**
       * <code>optional bool hasInputCorrectCode = 5;</code>
       *
       * <pre>
       * 是否已输入过正确的安全密码
       * </pre>
       */
      public boolean hasHasInputCorrectCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool hasInputCorrectCode = 5;</code>
       *
       * <pre>
       * 是否已输入过正确的安全密码
       * </pre>
       */
      public boolean getHasInputCorrectCode() {
        return hasInputCorrectCode_;
      }
      /**
       * <code>optional bool hasInputCorrectCode = 5;</code>
       *
       * <pre>
       * 是否已输入过正确的安全密码
       * </pre>
       */
      public Builder setHasInputCorrectCode(boolean value) {
        bitField0_ |= 0x00000010;
        hasInputCorrectCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasInputCorrectCode = 5;</code>
       *
       * <pre>
       * 是否已输入过正确的安全密码
       * </pre>
       */
      public Builder clearHasInputCorrectCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hasInputCorrectCode_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SecurityCodeItem)
    }

    static {
      defaultInstance = new SecurityCodeItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SecurityCodeItem)
  }

  public interface ArenaTeamItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .MapItem4 arenaCardHuFaGroup = 1;
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem4> 
        getArenaCardHuFaGroupList();
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    myudfs.Common.MapItem4 getArenaCardHuFaGroup(int index);
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    int getArenaCardHuFaGroupCount();
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItem4OrBuilder> 
        getArenaCardHuFaGroupOrBuilderList();
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    myudfs.Common.MapItem4OrBuilder getArenaCardHuFaGroupOrBuilder(
        int index);

    // repeated int32 arenaCardGroupFight = 2;
    /**
     * <code>repeated int32 arenaCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    java.util.List<java.lang.Integer> getArenaCardGroupFightList();
    /**
     * <code>repeated int32 arenaCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getArenaCardGroupFightCount();
    /**
     * <code>repeated int32 arenaCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getArenaCardGroupFight(int index);
  }
  /**
   * Protobuf type {@code ArenaTeamItem}
   *
   * <pre>
   * 竞技场队伍信息
   * </pre>
   */
  public static final class ArenaTeamItem extends
      com.google.protobuf.GeneratedMessage
      implements ArenaTeamItemOrBuilder {
    // Use ArenaTeamItem.newBuilder() to construct.
    private ArenaTeamItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ArenaTeamItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ArenaTeamItem defaultInstance;
    public static ArenaTeamItem getDefaultInstance() {
      return defaultInstance;
    }

    public ArenaTeamItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ArenaTeamItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                arenaCardHuFaGroup_ = new java.util.ArrayList<myudfs.Common.MapItem4>();
                mutable_bitField0_ |= 0x00000001;
              }
              arenaCardHuFaGroup_.add(input.readMessage(myudfs.Common.MapItem4.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                arenaCardGroupFight_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              arenaCardGroupFight_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                arenaCardGroupFight_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                arenaCardGroupFight_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          arenaCardHuFaGroup_ = java.util.Collections.unmodifiableList(arenaCardHuFaGroup_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          arenaCardGroupFight_ = java.util.Collections.unmodifiableList(arenaCardGroupFight_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ArenaTeamItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ArenaTeamItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ArenaTeamItem.class, myudfs.Common.ArenaTeamItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ArenaTeamItem> PARSER =
        new com.google.protobuf.AbstractParser<ArenaTeamItem>() {
      public ArenaTeamItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArenaTeamItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ArenaTeamItem> getParserForType() {
      return PARSER;
    }

    // repeated .MapItem4 arenaCardHuFaGroup = 1;
    public static final int ARENACARDHUFAGROUP_FIELD_NUMBER = 1;
    private java.util.List<myudfs.Common.MapItem4> arenaCardHuFaGroup_;
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem4> getArenaCardHuFaGroupList() {
      return arenaCardHuFaGroup_;
    }
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItem4OrBuilder> 
        getArenaCardHuFaGroupOrBuilderList() {
      return arenaCardHuFaGroup_;
    }
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public int getArenaCardHuFaGroupCount() {
      return arenaCardHuFaGroup_.size();
    }
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public myudfs.Common.MapItem4 getArenaCardHuFaGroup(int index) {
      return arenaCardHuFaGroup_.get(index);
    }
    /**
     * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
     *
     * <pre>
     *竞技场护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public myudfs.Common.MapItem4OrBuilder getArenaCardHuFaGroupOrBuilder(
        int index) {
      return arenaCardHuFaGroup_.get(index);
    }

    // repeated int32 arenaCardGroupFight = 2;
    public static final int ARENACARDGROUPFIGHT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> arenaCardGroupFight_;
    /**
     * <code>repeated int32 arenaCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getArenaCardGroupFightList() {
      return arenaCardGroupFight_;
    }
    /**
     * <code>repeated int32 arenaCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getArenaCardGroupFightCount() {
      return arenaCardGroupFight_.size();
    }
    /**
     * <code>repeated int32 arenaCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getArenaCardGroupFight(int index) {
      return arenaCardGroupFight_.get(index);
    }

    private void initFields() {
      arenaCardHuFaGroup_ = java.util.Collections.emptyList();
      arenaCardGroupFight_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < arenaCardHuFaGroup_.size(); i++) {
        output.writeMessage(1, arenaCardHuFaGroup_.get(i));
      }
      for (int i = 0; i < arenaCardGroupFight_.size(); i++) {
        output.writeInt32(2, arenaCardGroupFight_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < arenaCardHuFaGroup_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, arenaCardHuFaGroup_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < arenaCardGroupFight_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(arenaCardGroupFight_.get(i));
        }
        size += dataSize;
        size += 1 * getArenaCardGroupFightList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ArenaTeamItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ArenaTeamItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ArenaTeamItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ArenaTeamItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ArenaTeamItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ArenaTeamItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ArenaTeamItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ArenaTeamItem}
     *
     * <pre>
     * 竞技场队伍信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ArenaTeamItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ArenaTeamItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ArenaTeamItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ArenaTeamItem.class, myudfs.Common.ArenaTeamItem.Builder.class);
      }

      // Construct using myudfs.Common.ArenaTeamItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getArenaCardHuFaGroupFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (arenaCardHuFaGroupBuilder_ == null) {
          arenaCardHuFaGroup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          arenaCardHuFaGroupBuilder_.clear();
        }
        arenaCardGroupFight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ArenaTeamItem_descriptor;
      }

      public myudfs.Common.ArenaTeamItem getDefaultInstanceForType() {
        return myudfs.Common.ArenaTeamItem.getDefaultInstance();
      }

      public myudfs.Common.ArenaTeamItem build() {
        myudfs.Common.ArenaTeamItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ArenaTeamItem buildPartial() {
        myudfs.Common.ArenaTeamItem result = new myudfs.Common.ArenaTeamItem(this);
        int from_bitField0_ = bitField0_;
        if (arenaCardHuFaGroupBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            arenaCardHuFaGroup_ = java.util.Collections.unmodifiableList(arenaCardHuFaGroup_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.arenaCardHuFaGroup_ = arenaCardHuFaGroup_;
        } else {
          result.arenaCardHuFaGroup_ = arenaCardHuFaGroupBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          arenaCardGroupFight_ = java.util.Collections.unmodifiableList(arenaCardGroupFight_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.arenaCardGroupFight_ = arenaCardGroupFight_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ArenaTeamItem) {
          return mergeFrom((myudfs.Common.ArenaTeamItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ArenaTeamItem other) {
        if (other == myudfs.Common.ArenaTeamItem.getDefaultInstance()) return this;
        if (arenaCardHuFaGroupBuilder_ == null) {
          if (!other.arenaCardHuFaGroup_.isEmpty()) {
            if (arenaCardHuFaGroup_.isEmpty()) {
              arenaCardHuFaGroup_ = other.arenaCardHuFaGroup_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureArenaCardHuFaGroupIsMutable();
              arenaCardHuFaGroup_.addAll(other.arenaCardHuFaGroup_);
            }
            onChanged();
          }
        } else {
          if (!other.arenaCardHuFaGroup_.isEmpty()) {
            if (arenaCardHuFaGroupBuilder_.isEmpty()) {
              arenaCardHuFaGroupBuilder_.dispose();
              arenaCardHuFaGroupBuilder_ = null;
              arenaCardHuFaGroup_ = other.arenaCardHuFaGroup_;
              bitField0_ = (bitField0_ & ~0x00000001);
              arenaCardHuFaGroupBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getArenaCardHuFaGroupFieldBuilder() : null;
            } else {
              arenaCardHuFaGroupBuilder_.addAllMessages(other.arenaCardHuFaGroup_);
            }
          }
        }
        if (!other.arenaCardGroupFight_.isEmpty()) {
          if (arenaCardGroupFight_.isEmpty()) {
            arenaCardGroupFight_ = other.arenaCardGroupFight_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureArenaCardGroupFightIsMutable();
            arenaCardGroupFight_.addAll(other.arenaCardGroupFight_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ArenaTeamItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ArenaTeamItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .MapItem4 arenaCardHuFaGroup = 1;
      private java.util.List<myudfs.Common.MapItem4> arenaCardHuFaGroup_ =
        java.util.Collections.emptyList();
      private void ensureArenaCardHuFaGroupIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          arenaCardHuFaGroup_ = new java.util.ArrayList<myudfs.Common.MapItem4>(arenaCardHuFaGroup_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem4, myudfs.Common.MapItem4.Builder, myudfs.Common.MapItem4OrBuilder> arenaCardHuFaGroupBuilder_;

      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem4> getArenaCardHuFaGroupList() {
        if (arenaCardHuFaGroupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(arenaCardHuFaGroup_);
        } else {
          return arenaCardHuFaGroupBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public int getArenaCardHuFaGroupCount() {
        if (arenaCardHuFaGroupBuilder_ == null) {
          return arenaCardHuFaGroup_.size();
        } else {
          return arenaCardHuFaGroupBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4 getArenaCardHuFaGroup(int index) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          return arenaCardHuFaGroup_.get(index);
        } else {
          return arenaCardHuFaGroupBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder setArenaCardHuFaGroup(
          int index, myudfs.Common.MapItem4 value) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaCardHuFaGroupIsMutable();
          arenaCardHuFaGroup_.set(index, value);
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder setArenaCardHuFaGroup(
          int index, myudfs.Common.MapItem4.Builder builderForValue) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          ensureArenaCardHuFaGroupIsMutable();
          arenaCardHuFaGroup_.set(index, builderForValue.build());
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addArenaCardHuFaGroup(myudfs.Common.MapItem4 value) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaCardHuFaGroupIsMutable();
          arenaCardHuFaGroup_.add(value);
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addArenaCardHuFaGroup(
          int index, myudfs.Common.MapItem4 value) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaCardHuFaGroupIsMutable();
          arenaCardHuFaGroup_.add(index, value);
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addArenaCardHuFaGroup(
          myudfs.Common.MapItem4.Builder builderForValue) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          ensureArenaCardHuFaGroupIsMutable();
          arenaCardHuFaGroup_.add(builderForValue.build());
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addArenaCardHuFaGroup(
          int index, myudfs.Common.MapItem4.Builder builderForValue) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          ensureArenaCardHuFaGroupIsMutable();
          arenaCardHuFaGroup_.add(index, builderForValue.build());
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addAllArenaCardHuFaGroup(
          java.lang.Iterable<? extends myudfs.Common.MapItem4> values) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          ensureArenaCardHuFaGroupIsMutable();
          super.addAll(values, arenaCardHuFaGroup_);
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder clearArenaCardHuFaGroup() {
        if (arenaCardHuFaGroupBuilder_ == null) {
          arenaCardHuFaGroup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder removeArenaCardHuFaGroup(int index) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          ensureArenaCardHuFaGroupIsMutable();
          arenaCardHuFaGroup_.remove(index);
          onChanged();
        } else {
          arenaCardHuFaGroupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4.Builder getArenaCardHuFaGroupBuilder(
          int index) {
        return getArenaCardHuFaGroupFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4OrBuilder getArenaCardHuFaGroupOrBuilder(
          int index) {
        if (arenaCardHuFaGroupBuilder_ == null) {
          return arenaCardHuFaGroup_.get(index);  } else {
          return arenaCardHuFaGroupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItem4OrBuilder> 
           getArenaCardHuFaGroupOrBuilderList() {
        if (arenaCardHuFaGroupBuilder_ != null) {
          return arenaCardHuFaGroupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(arenaCardHuFaGroup_);
        }
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4.Builder addArenaCardHuFaGroupBuilder() {
        return getArenaCardHuFaGroupFieldBuilder().addBuilder(
            myudfs.Common.MapItem4.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4.Builder addArenaCardHuFaGroupBuilder(
          int index) {
        return getArenaCardHuFaGroupFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem4.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem4 arenaCardHuFaGroup = 1;</code>
       *
       * <pre>
       *竞技场护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem4.Builder> 
           getArenaCardHuFaGroupBuilderList() {
        return getArenaCardHuFaGroupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem4, myudfs.Common.MapItem4.Builder, myudfs.Common.MapItem4OrBuilder> 
          getArenaCardHuFaGroupFieldBuilder() {
        if (arenaCardHuFaGroupBuilder_ == null) {
          arenaCardHuFaGroupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem4, myudfs.Common.MapItem4.Builder, myudfs.Common.MapItem4OrBuilder>(
                  arenaCardHuFaGroup_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          arenaCardHuFaGroup_ = null;
        }
        return arenaCardHuFaGroupBuilder_;
      }

      // repeated int32 arenaCardGroupFight = 2;
      private java.util.List<java.lang.Integer> arenaCardGroupFight_ = java.util.Collections.emptyList();
      private void ensureArenaCardGroupFightIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          arenaCardGroupFight_ = new java.util.ArrayList<java.lang.Integer>(arenaCardGroupFight_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 arenaCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getArenaCardGroupFightList() {
        return java.util.Collections.unmodifiableList(arenaCardGroupFight_);
      }
      /**
       * <code>repeated int32 arenaCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getArenaCardGroupFightCount() {
        return arenaCardGroupFight_.size();
      }
      /**
       * <code>repeated int32 arenaCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getArenaCardGroupFight(int index) {
        return arenaCardGroupFight_.get(index);
      }
      /**
       * <code>repeated int32 arenaCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder setArenaCardGroupFight(
          int index, int value) {
        ensureArenaCardGroupFightIsMutable();
        arenaCardGroupFight_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 arenaCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addArenaCardGroupFight(int value) {
        ensureArenaCardGroupFightIsMutable();
        arenaCardGroupFight_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 arenaCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addAllArenaCardGroupFight(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureArenaCardGroupFightIsMutable();
        super.addAll(values, arenaCardGroupFight_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 arenaCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder clearArenaCardGroupFight() {
        arenaCardGroupFight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ArenaTeamItem)
    }

    static {
      defaultInstance = new ArenaTeamItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ArenaTeamItem)
  }

  public interface ArenaTeamCardGroupMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PlayerItem playerItem = 1;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    boolean hasPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItem getPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder();
  }
  /**
   * Protobuf type {@code ArenaTeamCardGroupMessage}
   *
   * <pre>
   * 竞技场队伍卡组消息
   * </pre>
   */
  public static final class ArenaTeamCardGroupMessage extends
      com.google.protobuf.GeneratedMessage
      implements ArenaTeamCardGroupMessageOrBuilder {
    // Use ArenaTeamCardGroupMessage.newBuilder() to construct.
    private ArenaTeamCardGroupMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ArenaTeamCardGroupMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ArenaTeamCardGroupMessage defaultInstance;
    public static ArenaTeamCardGroupMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ArenaTeamCardGroupMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ArenaTeamCardGroupMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              myudfs.Common.PlayerItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerItem_.toBuilder();
              }
              playerItem_ = input.readMessage(myudfs.Common.PlayerItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerItem_);
                playerItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_ArenaTeamCardGroupMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_ArenaTeamCardGroupMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.ArenaTeamCardGroupMessage.class, myudfs.Common.ArenaTeamCardGroupMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ArenaTeamCardGroupMessage> PARSER =
        new com.google.protobuf.AbstractParser<ArenaTeamCardGroupMessage>() {
      public ArenaTeamCardGroupMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArenaTeamCardGroupMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ArenaTeamCardGroupMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PlayerItem playerItem = 1;
    public static final int PLAYERITEM_FIELD_NUMBER = 1;
    private myudfs.Common.PlayerItem playerItem_;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public boolean hasPlayerItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItem getPlayerItem() {
      return playerItem_;
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
      return playerItem_;
    }

    private void initFields() {
      playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerItem_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerItem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.ArenaTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.ArenaTeamCardGroupMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ArenaTeamCardGroupMessage}
     *
     * <pre>
     * 竞技场队伍卡组消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.ArenaTeamCardGroupMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_ArenaTeamCardGroupMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_ArenaTeamCardGroupMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.ArenaTeamCardGroupMessage.class, myudfs.Common.ArenaTeamCardGroupMessage.Builder.class);
      }

      // Construct using myudfs.Common.ArenaTeamCardGroupMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_ArenaTeamCardGroupMessage_descriptor;
      }

      public myudfs.Common.ArenaTeamCardGroupMessage getDefaultInstanceForType() {
        return myudfs.Common.ArenaTeamCardGroupMessage.getDefaultInstance();
      }

      public myudfs.Common.ArenaTeamCardGroupMessage build() {
        myudfs.Common.ArenaTeamCardGroupMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.ArenaTeamCardGroupMessage buildPartial() {
        myudfs.Common.ArenaTeamCardGroupMessage result = new myudfs.Common.ArenaTeamCardGroupMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerItemBuilder_ == null) {
          result.playerItem_ = playerItem_;
        } else {
          result.playerItem_ = playerItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.ArenaTeamCardGroupMessage) {
          return mergeFrom((myudfs.Common.ArenaTeamCardGroupMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.ArenaTeamCardGroupMessage other) {
        if (other == myudfs.Common.ArenaTeamCardGroupMessage.getDefaultInstance()) return this;
        if (other.hasPlayerItem()) {
          mergePlayerItem(other.getPlayerItem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.ArenaTeamCardGroupMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.ArenaTeamCardGroupMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PlayerItem playerItem = 1;
      private myudfs.Common.PlayerItem playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> playerItemBuilder_;
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public boolean hasPlayerItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem getPlayerItem() {
        if (playerItemBuilder_ == null) {
          return playerItem_;
        } else {
          return playerItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerItem_ = value;
          onChanged();
        } else {
          playerItemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(
          myudfs.Common.PlayerItem.Builder builderForValue) {
        if (playerItemBuilder_ == null) {
          playerItem_ = builderForValue.build();
          onChanged();
        } else {
          playerItemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder mergePlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerItem_ != myudfs.Common.PlayerItem.getDefaultInstance()) {
            playerItem_ =
              myudfs.Common.PlayerItem.newBuilder(playerItem_).mergeFrom(value).buildPartial();
          } else {
            playerItem_ = value;
          }
          onChanged();
        } else {
          playerItemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder clearPlayerItem() {
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
          onChanged();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem.Builder getPlayerItemBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
        if (playerItemBuilder_ != null) {
          return playerItemBuilder_.getMessageOrBuilder();
        } else {
          return playerItem_;
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> 
          getPlayerItemFieldBuilder() {
        if (playerItemBuilder_ == null) {
          playerItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder>(
                  playerItem_,
                  getParentForChildren(),
                  isClean());
          playerItem_ = null;
        }
        return playerItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ArenaTeamCardGroupMessage)
    }

    static {
      defaultInstance = new ArenaTeamCardGroupMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ArenaTeamCardGroupMessage)
  }

  public interface PlayerEscortItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 escortTimes = 1;
    /**
     * <code>optional int32 escortTimes = 1;</code>
     *
     * <pre>
     * 押镖次数
     * </pre>
     */
    boolean hasEscortTimes();
    /**
     * <code>optional int32 escortTimes = 1;</code>
     *
     * <pre>
     * 押镖次数
     * </pre>
     */
    int getEscortTimes();

    // optional int32 robTimes = 2;
    /**
     * <code>optional int32 robTimes = 2;</code>
     *
     * <pre>
     * 抢宝次数
     * </pre>
     */
    boolean hasRobTimes();
    /**
     * <code>optional int32 robTimes = 2;</code>
     *
     * <pre>
     * 抢宝次数
     * </pre>
     */
    int getRobTimes();

    // optional int32 buyEscortTimes = 3;
    /**
     * <code>optional int32 buyEscortTimes = 3;</code>
     *
     * <pre>
     * 购买的押镖次数
     * </pre>
     */
    boolean hasBuyEscortTimes();
    /**
     * <code>optional int32 buyEscortTimes = 3;</code>
     *
     * <pre>
     * 购买的押镖次数
     * </pre>
     */
    int getBuyEscortTimes();

    // optional int32 buyRobTimes = 4;
    /**
     * <code>optional int32 buyRobTimes = 4;</code>
     *
     * <pre>
     * 购买的抢宝次数
     * </pre>
     */
    boolean hasBuyRobTimes();
    /**
     * <code>optional int32 buyRobTimes = 4;</code>
     *
     * <pre>
     * 购买的抢宝次数
     * </pre>
     */
    int getBuyRobTimes();

    // optional uint64 robStartCDTime = 5;
    /**
     * <code>optional uint64 robStartCDTime = 5;</code>
     *
     * <pre>
     * 抢宝CD开始时间
     * </pre>
     */
    boolean hasRobStartCDTime();
    /**
     * <code>optional uint64 robStartCDTime = 5;</code>
     *
     * <pre>
     * 抢宝CD开始时间
     * </pre>
     */
    long getRobStartCDTime();

    // optional int64 slfEscortShipId = 6;
    /**
     * <code>optional int64 slfEscortShipId = 6;</code>
     *
     * <pre>
     * 自己押运的宝船id
     * </pre>
     */
    boolean hasSlfEscortShipId();
    /**
     * <code>optional int64 slfEscortShipId = 6;</code>
     *
     * <pre>
     * 自己押运的宝船id
     * </pre>
     */
    long getSlfEscortShipId();

    // optional int32 slfEscortShipCfgId = 7;
    /**
     * <code>optional int32 slfEscortShipCfgId = 7;</code>
     *
     * <pre>
     * 押运的宝船配置id
     * </pre>
     */
    boolean hasSlfEscortShipCfgId();
    /**
     * <code>optional int32 slfEscortShipCfgId = 7;</code>
     *
     * <pre>
     * 押运的宝船配置id
     * </pre>
     */
    int getSlfEscortShipCfgId();

    // optional int32 refreshShipTimes = 8;
    /**
     * <code>optional int32 refreshShipTimes = 8;</code>
     *
     * <pre>
     * 刷新宝船的次数
     * </pre>
     */
    boolean hasRefreshShipTimes();
    /**
     * <code>optional int32 refreshShipTimes = 8;</code>
     *
     * <pre>
     * 刷新宝船的次数
     * </pre>
     */
    int getRefreshShipTimes();

    // optional bool canEscort = 9;
    /**
     * <code>optional bool canEscort = 9;</code>
     *
     * <pre>
     * 是否可押镖,该条件用来客户端判断红叹号的条件
     * </pre>
     */
    boolean hasCanEscort();
    /**
     * <code>optional bool canEscort = 9;</code>
     *
     * <pre>
     * 是否可押镖,该条件用来客户端判断红叹号的条件
     * </pre>
     */
    boolean getCanEscort();
  }
  /**
   * Protobuf type {@code PlayerEscortItem}
   *
   * <pre>
   * 玩家押镖信息
   * </pre>
   */
  public static final class PlayerEscortItem extends
      com.google.protobuf.GeneratedMessage
      implements PlayerEscortItemOrBuilder {
    // Use PlayerEscortItem.newBuilder() to construct.
    private PlayerEscortItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerEscortItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerEscortItem defaultInstance;
    public static PlayerEscortItem getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerEscortItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerEscortItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              escortTimes_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              robTimes_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              buyEscortTimes_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              buyRobTimes_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              robStartCDTime_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              slfEscortShipId_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              slfEscortShipCfgId_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              refreshShipTimes_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              canEscort_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_PlayerEscortItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_PlayerEscortItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.PlayerEscortItem.class, myudfs.Common.PlayerEscortItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerEscortItem> PARSER =
        new com.google.protobuf.AbstractParser<PlayerEscortItem>() {
      public PlayerEscortItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerEscortItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerEscortItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 escortTimes = 1;
    public static final int ESCORTTIMES_FIELD_NUMBER = 1;
    private int escortTimes_;
    /**
     * <code>optional int32 escortTimes = 1;</code>
     *
     * <pre>
     * 押镖次数
     * </pre>
     */
    public boolean hasEscortTimes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 escortTimes = 1;</code>
     *
     * <pre>
     * 押镖次数
     * </pre>
     */
    public int getEscortTimes() {
      return escortTimes_;
    }

    // optional int32 robTimes = 2;
    public static final int ROBTIMES_FIELD_NUMBER = 2;
    private int robTimes_;
    /**
     * <code>optional int32 robTimes = 2;</code>
     *
     * <pre>
     * 抢宝次数
     * </pre>
     */
    public boolean hasRobTimes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 robTimes = 2;</code>
     *
     * <pre>
     * 抢宝次数
     * </pre>
     */
    public int getRobTimes() {
      return robTimes_;
    }

    // optional int32 buyEscortTimes = 3;
    public static final int BUYESCORTTIMES_FIELD_NUMBER = 3;
    private int buyEscortTimes_;
    /**
     * <code>optional int32 buyEscortTimes = 3;</code>
     *
     * <pre>
     * 购买的押镖次数
     * </pre>
     */
    public boolean hasBuyEscortTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 buyEscortTimes = 3;</code>
     *
     * <pre>
     * 购买的押镖次数
     * </pre>
     */
    public int getBuyEscortTimes() {
      return buyEscortTimes_;
    }

    // optional int32 buyRobTimes = 4;
    public static final int BUYROBTIMES_FIELD_NUMBER = 4;
    private int buyRobTimes_;
    /**
     * <code>optional int32 buyRobTimes = 4;</code>
     *
     * <pre>
     * 购买的抢宝次数
     * </pre>
     */
    public boolean hasBuyRobTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 buyRobTimes = 4;</code>
     *
     * <pre>
     * 购买的抢宝次数
     * </pre>
     */
    public int getBuyRobTimes() {
      return buyRobTimes_;
    }

    // optional uint64 robStartCDTime = 5;
    public static final int ROBSTARTCDTIME_FIELD_NUMBER = 5;
    private long robStartCDTime_;
    /**
     * <code>optional uint64 robStartCDTime = 5;</code>
     *
     * <pre>
     * 抢宝CD开始时间
     * </pre>
     */
    public boolean hasRobStartCDTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 robStartCDTime = 5;</code>
     *
     * <pre>
     * 抢宝CD开始时间
     * </pre>
     */
    public long getRobStartCDTime() {
      return robStartCDTime_;
    }

    // optional int64 slfEscortShipId = 6;
    public static final int SLFESCORTSHIPID_FIELD_NUMBER = 6;
    private long slfEscortShipId_;
    /**
     * <code>optional int64 slfEscortShipId = 6;</code>
     *
     * <pre>
     * 自己押运的宝船id
     * </pre>
     */
    public boolean hasSlfEscortShipId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 slfEscortShipId = 6;</code>
     *
     * <pre>
     * 自己押运的宝船id
     * </pre>
     */
    public long getSlfEscortShipId() {
      return slfEscortShipId_;
    }

    // optional int32 slfEscortShipCfgId = 7;
    public static final int SLFESCORTSHIPCFGID_FIELD_NUMBER = 7;
    private int slfEscortShipCfgId_;
    /**
     * <code>optional int32 slfEscortShipCfgId = 7;</code>
     *
     * <pre>
     * 押运的宝船配置id
     * </pre>
     */
    public boolean hasSlfEscortShipCfgId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 slfEscortShipCfgId = 7;</code>
     *
     * <pre>
     * 押运的宝船配置id
     * </pre>
     */
    public int getSlfEscortShipCfgId() {
      return slfEscortShipCfgId_;
    }

    // optional int32 refreshShipTimes = 8;
    public static final int REFRESHSHIPTIMES_FIELD_NUMBER = 8;
    private int refreshShipTimes_;
    /**
     * <code>optional int32 refreshShipTimes = 8;</code>
     *
     * <pre>
     * 刷新宝船的次数
     * </pre>
     */
    public boolean hasRefreshShipTimes() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 refreshShipTimes = 8;</code>
     *
     * <pre>
     * 刷新宝船的次数
     * </pre>
     */
    public int getRefreshShipTimes() {
      return refreshShipTimes_;
    }

    // optional bool canEscort = 9;
    public static final int CANESCORT_FIELD_NUMBER = 9;
    private boolean canEscort_;
    /**
     * <code>optional bool canEscort = 9;</code>
     *
     * <pre>
     * 是否可押镖,该条件用来客户端判断红叹号的条件
     * </pre>
     */
    public boolean hasCanEscort() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool canEscort = 9;</code>
     *
     * <pre>
     * 是否可押镖,该条件用来客户端判断红叹号的条件
     * </pre>
     */
    public boolean getCanEscort() {
      return canEscort_;
    }

    private void initFields() {
      escortTimes_ = 0;
      robTimes_ = 0;
      buyEscortTimes_ = 0;
      buyRobTimes_ = 0;
      robStartCDTime_ = 0L;
      slfEscortShipId_ = 0L;
      slfEscortShipCfgId_ = 0;
      refreshShipTimes_ = 0;
      canEscort_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, escortTimes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, robTimes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, buyEscortTimes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, buyRobTimes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, robStartCDTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, slfEscortShipId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, slfEscortShipCfgId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, refreshShipTimes_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, canEscort_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, escortTimes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, robTimes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, buyEscortTimes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, buyRobTimes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, robStartCDTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, slfEscortShipId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, slfEscortShipCfgId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, refreshShipTimes_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, canEscort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.PlayerEscortItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PlayerEscortItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PlayerEscortItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.PlayerEscortItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.PlayerEscortItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PlayerEscortItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PlayerEscortItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.PlayerEscortItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.PlayerEscortItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.PlayerEscortItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.PlayerEscortItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerEscortItem}
     *
     * <pre>
     * 玩家押镖信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.PlayerEscortItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_PlayerEscortItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_PlayerEscortItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.PlayerEscortItem.class, myudfs.Common.PlayerEscortItem.Builder.class);
      }

      // Construct using myudfs.Common.PlayerEscortItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        escortTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        robTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        buyEscortTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        buyRobTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        robStartCDTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        slfEscortShipId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        slfEscortShipCfgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        refreshShipTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        canEscort_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_PlayerEscortItem_descriptor;
      }

      public myudfs.Common.PlayerEscortItem getDefaultInstanceForType() {
        return myudfs.Common.PlayerEscortItem.getDefaultInstance();
      }

      public myudfs.Common.PlayerEscortItem build() {
        myudfs.Common.PlayerEscortItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.PlayerEscortItem buildPartial() {
        myudfs.Common.PlayerEscortItem result = new myudfs.Common.PlayerEscortItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.escortTimes_ = escortTimes_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.robTimes_ = robTimes_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.buyEscortTimes_ = buyEscortTimes_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.buyRobTimes_ = buyRobTimes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.robStartCDTime_ = robStartCDTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.slfEscortShipId_ = slfEscortShipId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.slfEscortShipCfgId_ = slfEscortShipCfgId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.refreshShipTimes_ = refreshShipTimes_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.canEscort_ = canEscort_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.PlayerEscortItem) {
          return mergeFrom((myudfs.Common.PlayerEscortItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.PlayerEscortItem other) {
        if (other == myudfs.Common.PlayerEscortItem.getDefaultInstance()) return this;
        if (other.hasEscortTimes()) {
          setEscortTimes(other.getEscortTimes());
        }
        if (other.hasRobTimes()) {
          setRobTimes(other.getRobTimes());
        }
        if (other.hasBuyEscortTimes()) {
          setBuyEscortTimes(other.getBuyEscortTimes());
        }
        if (other.hasBuyRobTimes()) {
          setBuyRobTimes(other.getBuyRobTimes());
        }
        if (other.hasRobStartCDTime()) {
          setRobStartCDTime(other.getRobStartCDTime());
        }
        if (other.hasSlfEscortShipId()) {
          setSlfEscortShipId(other.getSlfEscortShipId());
        }
        if (other.hasSlfEscortShipCfgId()) {
          setSlfEscortShipCfgId(other.getSlfEscortShipCfgId());
        }
        if (other.hasRefreshShipTimes()) {
          setRefreshShipTimes(other.getRefreshShipTimes());
        }
        if (other.hasCanEscort()) {
          setCanEscort(other.getCanEscort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.PlayerEscortItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.PlayerEscortItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 escortTimes = 1;
      private int escortTimes_ ;
      /**
       * <code>optional int32 escortTimes = 1;</code>
       *
       * <pre>
       * 押镖次数
       * </pre>
       */
      public boolean hasEscortTimes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 escortTimes = 1;</code>
       *
       * <pre>
       * 押镖次数
       * </pre>
       */
      public int getEscortTimes() {
        return escortTimes_;
      }
      /**
       * <code>optional int32 escortTimes = 1;</code>
       *
       * <pre>
       * 押镖次数
       * </pre>
       */
      public Builder setEscortTimes(int value) {
        bitField0_ |= 0x00000001;
        escortTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 escortTimes = 1;</code>
       *
       * <pre>
       * 押镖次数
       * </pre>
       */
      public Builder clearEscortTimes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        escortTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 robTimes = 2;
      private int robTimes_ ;
      /**
       * <code>optional int32 robTimes = 2;</code>
       *
       * <pre>
       * 抢宝次数
       * </pre>
       */
      public boolean hasRobTimes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 robTimes = 2;</code>
       *
       * <pre>
       * 抢宝次数
       * </pre>
       */
      public int getRobTimes() {
        return robTimes_;
      }
      /**
       * <code>optional int32 robTimes = 2;</code>
       *
       * <pre>
       * 抢宝次数
       * </pre>
       */
      public Builder setRobTimes(int value) {
        bitField0_ |= 0x00000002;
        robTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 robTimes = 2;</code>
       *
       * <pre>
       * 抢宝次数
       * </pre>
       */
      public Builder clearRobTimes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        robTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 buyEscortTimes = 3;
      private int buyEscortTimes_ ;
      /**
       * <code>optional int32 buyEscortTimes = 3;</code>
       *
       * <pre>
       * 购买的押镖次数
       * </pre>
       */
      public boolean hasBuyEscortTimes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 buyEscortTimes = 3;</code>
       *
       * <pre>
       * 购买的押镖次数
       * </pre>
       */
      public int getBuyEscortTimes() {
        return buyEscortTimes_;
      }
      /**
       * <code>optional int32 buyEscortTimes = 3;</code>
       *
       * <pre>
       * 购买的押镖次数
       * </pre>
       */
      public Builder setBuyEscortTimes(int value) {
        bitField0_ |= 0x00000004;
        buyEscortTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buyEscortTimes = 3;</code>
       *
       * <pre>
       * 购买的押镖次数
       * </pre>
       */
      public Builder clearBuyEscortTimes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        buyEscortTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 buyRobTimes = 4;
      private int buyRobTimes_ ;
      /**
       * <code>optional int32 buyRobTimes = 4;</code>
       *
       * <pre>
       * 购买的抢宝次数
       * </pre>
       */
      public boolean hasBuyRobTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 buyRobTimes = 4;</code>
       *
       * <pre>
       * 购买的抢宝次数
       * </pre>
       */
      public int getBuyRobTimes() {
        return buyRobTimes_;
      }
      /**
       * <code>optional int32 buyRobTimes = 4;</code>
       *
       * <pre>
       * 购买的抢宝次数
       * </pre>
       */
      public Builder setBuyRobTimes(int value) {
        bitField0_ |= 0x00000008;
        buyRobTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buyRobTimes = 4;</code>
       *
       * <pre>
       * 购买的抢宝次数
       * </pre>
       */
      public Builder clearBuyRobTimes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        buyRobTimes_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 robStartCDTime = 5;
      private long robStartCDTime_ ;
      /**
       * <code>optional uint64 robStartCDTime = 5;</code>
       *
       * <pre>
       * 抢宝CD开始时间
       * </pre>
       */
      public boolean hasRobStartCDTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 robStartCDTime = 5;</code>
       *
       * <pre>
       * 抢宝CD开始时间
       * </pre>
       */
      public long getRobStartCDTime() {
        return robStartCDTime_;
      }
      /**
       * <code>optional uint64 robStartCDTime = 5;</code>
       *
       * <pre>
       * 抢宝CD开始时间
       * </pre>
       */
      public Builder setRobStartCDTime(long value) {
        bitField0_ |= 0x00000010;
        robStartCDTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 robStartCDTime = 5;</code>
       *
       * <pre>
       * 抢宝CD开始时间
       * </pre>
       */
      public Builder clearRobStartCDTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        robStartCDTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 slfEscortShipId = 6;
      private long slfEscortShipId_ ;
      /**
       * <code>optional int64 slfEscortShipId = 6;</code>
       *
       * <pre>
       * 自己押运的宝船id
       * </pre>
       */
      public boolean hasSlfEscortShipId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 slfEscortShipId = 6;</code>
       *
       * <pre>
       * 自己押运的宝船id
       * </pre>
       */
      public long getSlfEscortShipId() {
        return slfEscortShipId_;
      }
      /**
       * <code>optional int64 slfEscortShipId = 6;</code>
       *
       * <pre>
       * 自己押运的宝船id
       * </pre>
       */
      public Builder setSlfEscortShipId(long value) {
        bitField0_ |= 0x00000020;
        slfEscortShipId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 slfEscortShipId = 6;</code>
       *
       * <pre>
       * 自己押运的宝船id
       * </pre>
       */
      public Builder clearSlfEscortShipId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        slfEscortShipId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 slfEscortShipCfgId = 7;
      private int slfEscortShipCfgId_ ;
      /**
       * <code>optional int32 slfEscortShipCfgId = 7;</code>
       *
       * <pre>
       * 押运的宝船配置id
       * </pre>
       */
      public boolean hasSlfEscortShipCfgId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 slfEscortShipCfgId = 7;</code>
       *
       * <pre>
       * 押运的宝船配置id
       * </pre>
       */
      public int getSlfEscortShipCfgId() {
        return slfEscortShipCfgId_;
      }
      /**
       * <code>optional int32 slfEscortShipCfgId = 7;</code>
       *
       * <pre>
       * 押运的宝船配置id
       * </pre>
       */
      public Builder setSlfEscortShipCfgId(int value) {
        bitField0_ |= 0x00000040;
        slfEscortShipCfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slfEscortShipCfgId = 7;</code>
       *
       * <pre>
       * 押运的宝船配置id
       * </pre>
       */
      public Builder clearSlfEscortShipCfgId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        slfEscortShipCfgId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 refreshShipTimes = 8;
      private int refreshShipTimes_ ;
      /**
       * <code>optional int32 refreshShipTimes = 8;</code>
       *
       * <pre>
       * 刷新宝船的次数
       * </pre>
       */
      public boolean hasRefreshShipTimes() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 refreshShipTimes = 8;</code>
       *
       * <pre>
       * 刷新宝船的次数
       * </pre>
       */
      public int getRefreshShipTimes() {
        return refreshShipTimes_;
      }
      /**
       * <code>optional int32 refreshShipTimes = 8;</code>
       *
       * <pre>
       * 刷新宝船的次数
       * </pre>
       */
      public Builder setRefreshShipTimes(int value) {
        bitField0_ |= 0x00000080;
        refreshShipTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 refreshShipTimes = 8;</code>
       *
       * <pre>
       * 刷新宝船的次数
       * </pre>
       */
      public Builder clearRefreshShipTimes() {
        bitField0_ = (bitField0_ & ~0x00000080);
        refreshShipTimes_ = 0;
        onChanged();
        return this;
      }

      // optional bool canEscort = 9;
      private boolean canEscort_ ;
      /**
       * <code>optional bool canEscort = 9;</code>
       *
       * <pre>
       * 是否可押镖,该条件用来客户端判断红叹号的条件
       * </pre>
       */
      public boolean hasCanEscort() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool canEscort = 9;</code>
       *
       * <pre>
       * 是否可押镖,该条件用来客户端判断红叹号的条件
       * </pre>
       */
      public boolean getCanEscort() {
        return canEscort_;
      }
      /**
       * <code>optional bool canEscort = 9;</code>
       *
       * <pre>
       * 是否可押镖,该条件用来客户端判断红叹号的条件
       * </pre>
       */
      public Builder setCanEscort(boolean value) {
        bitField0_ |= 0x00000100;
        canEscort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool canEscort = 9;</code>
       *
       * <pre>
       * 是否可押镖,该条件用来客户端判断红叹号的条件
       * </pre>
       */
      public Builder clearCanEscort() {
        bitField0_ = (bitField0_ & ~0x00000100);
        canEscort_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerEscortItem)
    }

    static {
      defaultInstance = new PlayerEscortItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerEscortItem)
  }

  public interface EscortTeamCardGroupMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PlayerItem playerItem = 1;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    boolean hasPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItem getPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder();
  }
  /**
   * Protobuf type {@code EscortTeamCardGroupMessage}
   *
   * <pre>
   * 押镖队伍卡组消息
   * </pre>
   */
  public static final class EscortTeamCardGroupMessage extends
      com.google.protobuf.GeneratedMessage
      implements EscortTeamCardGroupMessageOrBuilder {
    // Use EscortTeamCardGroupMessage.newBuilder() to construct.
    private EscortTeamCardGroupMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EscortTeamCardGroupMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EscortTeamCardGroupMessage defaultInstance;
    public static EscortTeamCardGroupMessage getDefaultInstance() {
      return defaultInstance;
    }

    public EscortTeamCardGroupMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EscortTeamCardGroupMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              myudfs.Common.PlayerItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerItem_.toBuilder();
              }
              playerItem_ = input.readMessage(myudfs.Common.PlayerItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerItem_);
                playerItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_EscortTeamCardGroupMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_EscortTeamCardGroupMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.EscortTeamCardGroupMessage.class, myudfs.Common.EscortTeamCardGroupMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<EscortTeamCardGroupMessage> PARSER =
        new com.google.protobuf.AbstractParser<EscortTeamCardGroupMessage>() {
      public EscortTeamCardGroupMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EscortTeamCardGroupMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EscortTeamCardGroupMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PlayerItem playerItem = 1;
    public static final int PLAYERITEM_FIELD_NUMBER = 1;
    private myudfs.Common.PlayerItem playerItem_;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public boolean hasPlayerItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItem getPlayerItem() {
      return playerItem_;
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
      return playerItem_;
    }

    private void initFields() {
      playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerItem_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerItem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.EscortTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.EscortTeamCardGroupMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EscortTeamCardGroupMessage}
     *
     * <pre>
     * 押镖队伍卡组消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.EscortTeamCardGroupMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_EscortTeamCardGroupMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_EscortTeamCardGroupMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.EscortTeamCardGroupMessage.class, myudfs.Common.EscortTeamCardGroupMessage.Builder.class);
      }

      // Construct using myudfs.Common.EscortTeamCardGroupMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_EscortTeamCardGroupMessage_descriptor;
      }

      public myudfs.Common.EscortTeamCardGroupMessage getDefaultInstanceForType() {
        return myudfs.Common.EscortTeamCardGroupMessage.getDefaultInstance();
      }

      public myudfs.Common.EscortTeamCardGroupMessage build() {
        myudfs.Common.EscortTeamCardGroupMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.EscortTeamCardGroupMessage buildPartial() {
        myudfs.Common.EscortTeamCardGroupMessage result = new myudfs.Common.EscortTeamCardGroupMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerItemBuilder_ == null) {
          result.playerItem_ = playerItem_;
        } else {
          result.playerItem_ = playerItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.EscortTeamCardGroupMessage) {
          return mergeFrom((myudfs.Common.EscortTeamCardGroupMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.EscortTeamCardGroupMessage other) {
        if (other == myudfs.Common.EscortTeamCardGroupMessage.getDefaultInstance()) return this;
        if (other.hasPlayerItem()) {
          mergePlayerItem(other.getPlayerItem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.EscortTeamCardGroupMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.EscortTeamCardGroupMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PlayerItem playerItem = 1;
      private myudfs.Common.PlayerItem playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> playerItemBuilder_;
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public boolean hasPlayerItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem getPlayerItem() {
        if (playerItemBuilder_ == null) {
          return playerItem_;
        } else {
          return playerItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerItem_ = value;
          onChanged();
        } else {
          playerItemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(
          myudfs.Common.PlayerItem.Builder builderForValue) {
        if (playerItemBuilder_ == null) {
          playerItem_ = builderForValue.build();
          onChanged();
        } else {
          playerItemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder mergePlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerItem_ != myudfs.Common.PlayerItem.getDefaultInstance()) {
            playerItem_ =
              myudfs.Common.PlayerItem.newBuilder(playerItem_).mergeFrom(value).buildPartial();
          } else {
            playerItem_ = value;
          }
          onChanged();
        } else {
          playerItemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder clearPlayerItem() {
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
          onChanged();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem.Builder getPlayerItemBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
        if (playerItemBuilder_ != null) {
          return playerItemBuilder_.getMessageOrBuilder();
        } else {
          return playerItem_;
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> 
          getPlayerItemFieldBuilder() {
        if (playerItemBuilder_ == null) {
          playerItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder>(
                  playerItem_,
                  getParentForChildren(),
                  isClean());
          playerItem_ = null;
        }
        return playerItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:EscortTeamCardGroupMessage)
    }

    static {
      defaultInstance = new EscortTeamCardGroupMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EscortTeamCardGroupMessage)
  }

  public interface DFTeamItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .MapItem4 dFCardHuFaGroup = 1;
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    java.util.List<myudfs.Common.MapItem4> 
        getDFCardHuFaGroupList();
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    myudfs.Common.MapItem4 getDFCardHuFaGroup(int index);
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    int getDFCardHuFaGroupCount();
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    java.util.List<? extends myudfs.Common.MapItem4OrBuilder> 
        getDFCardHuFaGroupOrBuilderList();
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    myudfs.Common.MapItem4OrBuilder getDFCardHuFaGroupOrBuilder(
        int index);

    // repeated int32 dFCardGroupFight = 2;
    /**
     * <code>repeated int32 dFCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    java.util.List<java.lang.Integer> getDFCardGroupFightList();
    /**
     * <code>repeated int32 dFCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getDFCardGroupFightCount();
    /**
     * <code>repeated int32 dFCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    int getDFCardGroupFight(int index);
  }
  /**
   * Protobuf type {@code DFTeamItem}
   *
   * <pre>
   * 斗法队伍信息
   * </pre>
   */
  public static final class DFTeamItem extends
      com.google.protobuf.GeneratedMessage
      implements DFTeamItemOrBuilder {
    // Use DFTeamItem.newBuilder() to construct.
    private DFTeamItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DFTeamItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DFTeamItem defaultInstance;
    public static DFTeamItem getDefaultInstance() {
      return defaultInstance;
    }

    public DFTeamItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DFTeamItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dFCardHuFaGroup_ = new java.util.ArrayList<myudfs.Common.MapItem4>();
                mutable_bitField0_ |= 0x00000001;
              }
              dFCardHuFaGroup_.add(input.readMessage(myudfs.Common.MapItem4.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                dFCardGroupFight_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              dFCardGroupFight_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                dFCardGroupFight_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                dFCardGroupFight_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dFCardHuFaGroup_ = java.util.Collections.unmodifiableList(dFCardHuFaGroup_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          dFCardGroupFight_ = java.util.Collections.unmodifiableList(dFCardGroupFight_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_DFTeamItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_DFTeamItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.DFTeamItem.class, myudfs.Common.DFTeamItem.Builder.class);
    }

    public static com.google.protobuf.Parser<DFTeamItem> PARSER =
        new com.google.protobuf.AbstractParser<DFTeamItem>() {
      public DFTeamItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DFTeamItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DFTeamItem> getParserForType() {
      return PARSER;
    }

    // repeated .MapItem4 dFCardHuFaGroup = 1;
    public static final int DFCARDHUFAGROUP_FIELD_NUMBER = 1;
    private java.util.List<myudfs.Common.MapItem4> dFCardHuFaGroup_;
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public java.util.List<myudfs.Common.MapItem4> getDFCardHuFaGroupList() {
      return dFCardHuFaGroup_;
    }
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public java.util.List<? extends myudfs.Common.MapItem4OrBuilder> 
        getDFCardHuFaGroupOrBuilderList() {
      return dFCardHuFaGroup_;
    }
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public int getDFCardHuFaGroupCount() {
      return dFCardHuFaGroup_.size();
    }
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public myudfs.Common.MapItem4 getDFCardHuFaGroup(int index) {
      return dFCardHuFaGroup_.get(index);
    }
    /**
     * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
     *
     * <pre>
     *斗法护法卡组,key-卡牌id value-护法列表
     * </pre>
     */
    public myudfs.Common.MapItem4OrBuilder getDFCardHuFaGroupOrBuilder(
        int index) {
      return dFCardHuFaGroup_.get(index);
    }

    // repeated int32 dFCardGroupFight = 2;
    public static final int DFCARDGROUPFIGHT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> dFCardGroupFight_;
    /**
     * <code>repeated int32 dFCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDFCardGroupFightList() {
      return dFCardGroupFight_;
    }
    /**
     * <code>repeated int32 dFCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getDFCardGroupFightCount() {
      return dFCardGroupFight_.size();
    }
    /**
     * <code>repeated int32 dFCardGroupFight = 2;</code>
     *
     * <pre>
     *战前卡组与自己的卡组对应关系
     * </pre>
     */
    public int getDFCardGroupFight(int index) {
      return dFCardGroupFight_.get(index);
    }

    private void initFields() {
      dFCardHuFaGroup_ = java.util.Collections.emptyList();
      dFCardGroupFight_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < dFCardHuFaGroup_.size(); i++) {
        output.writeMessage(1, dFCardHuFaGroup_.get(i));
      }
      for (int i = 0; i < dFCardGroupFight_.size(); i++) {
        output.writeInt32(2, dFCardGroupFight_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dFCardHuFaGroup_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dFCardHuFaGroup_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dFCardGroupFight_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dFCardGroupFight_.get(i));
        }
        size += dataSize;
        size += 1 * getDFCardGroupFightList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.DFTeamItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DFTeamItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DFTeamItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.DFTeamItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.DFTeamItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DFTeamItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DFTeamItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.DFTeamItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.DFTeamItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.DFTeamItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.DFTeamItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DFTeamItem}
     *
     * <pre>
     * 斗法队伍信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.DFTeamItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_DFTeamItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_DFTeamItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.DFTeamItem.class, myudfs.Common.DFTeamItem.Builder.class);
      }

      // Construct using myudfs.Common.DFTeamItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDFCardHuFaGroupFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (dFCardHuFaGroupBuilder_ == null) {
          dFCardHuFaGroup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dFCardHuFaGroupBuilder_.clear();
        }
        dFCardGroupFight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_DFTeamItem_descriptor;
      }

      public myudfs.Common.DFTeamItem getDefaultInstanceForType() {
        return myudfs.Common.DFTeamItem.getDefaultInstance();
      }

      public myudfs.Common.DFTeamItem build() {
        myudfs.Common.DFTeamItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.DFTeamItem buildPartial() {
        myudfs.Common.DFTeamItem result = new myudfs.Common.DFTeamItem(this);
        int from_bitField0_ = bitField0_;
        if (dFCardHuFaGroupBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dFCardHuFaGroup_ = java.util.Collections.unmodifiableList(dFCardHuFaGroup_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dFCardHuFaGroup_ = dFCardHuFaGroup_;
        } else {
          result.dFCardHuFaGroup_ = dFCardHuFaGroupBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          dFCardGroupFight_ = java.util.Collections.unmodifiableList(dFCardGroupFight_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dFCardGroupFight_ = dFCardGroupFight_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.DFTeamItem) {
          return mergeFrom((myudfs.Common.DFTeamItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.DFTeamItem other) {
        if (other == myudfs.Common.DFTeamItem.getDefaultInstance()) return this;
        if (dFCardHuFaGroupBuilder_ == null) {
          if (!other.dFCardHuFaGroup_.isEmpty()) {
            if (dFCardHuFaGroup_.isEmpty()) {
              dFCardHuFaGroup_ = other.dFCardHuFaGroup_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDFCardHuFaGroupIsMutable();
              dFCardHuFaGroup_.addAll(other.dFCardHuFaGroup_);
            }
            onChanged();
          }
        } else {
          if (!other.dFCardHuFaGroup_.isEmpty()) {
            if (dFCardHuFaGroupBuilder_.isEmpty()) {
              dFCardHuFaGroupBuilder_.dispose();
              dFCardHuFaGroupBuilder_ = null;
              dFCardHuFaGroup_ = other.dFCardHuFaGroup_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dFCardHuFaGroupBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDFCardHuFaGroupFieldBuilder() : null;
            } else {
              dFCardHuFaGroupBuilder_.addAllMessages(other.dFCardHuFaGroup_);
            }
          }
        }
        if (!other.dFCardGroupFight_.isEmpty()) {
          if (dFCardGroupFight_.isEmpty()) {
            dFCardGroupFight_ = other.dFCardGroupFight_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDFCardGroupFightIsMutable();
            dFCardGroupFight_.addAll(other.dFCardGroupFight_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.DFTeamItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.DFTeamItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .MapItem4 dFCardHuFaGroup = 1;
      private java.util.List<myudfs.Common.MapItem4> dFCardHuFaGroup_ =
        java.util.Collections.emptyList();
      private void ensureDFCardHuFaGroupIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dFCardHuFaGroup_ = new java.util.ArrayList<myudfs.Common.MapItem4>(dFCardHuFaGroup_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem4, myudfs.Common.MapItem4.Builder, myudfs.Common.MapItem4OrBuilder> dFCardHuFaGroupBuilder_;

      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem4> getDFCardHuFaGroupList() {
        if (dFCardHuFaGroupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dFCardHuFaGroup_);
        } else {
          return dFCardHuFaGroupBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public int getDFCardHuFaGroupCount() {
        if (dFCardHuFaGroupBuilder_ == null) {
          return dFCardHuFaGroup_.size();
        } else {
          return dFCardHuFaGroupBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4 getDFCardHuFaGroup(int index) {
        if (dFCardHuFaGroupBuilder_ == null) {
          return dFCardHuFaGroup_.get(index);
        } else {
          return dFCardHuFaGroupBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder setDFCardHuFaGroup(
          int index, myudfs.Common.MapItem4 value) {
        if (dFCardHuFaGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDFCardHuFaGroupIsMutable();
          dFCardHuFaGroup_.set(index, value);
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder setDFCardHuFaGroup(
          int index, myudfs.Common.MapItem4.Builder builderForValue) {
        if (dFCardHuFaGroupBuilder_ == null) {
          ensureDFCardHuFaGroupIsMutable();
          dFCardHuFaGroup_.set(index, builderForValue.build());
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addDFCardHuFaGroup(myudfs.Common.MapItem4 value) {
        if (dFCardHuFaGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDFCardHuFaGroupIsMutable();
          dFCardHuFaGroup_.add(value);
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addDFCardHuFaGroup(
          int index, myudfs.Common.MapItem4 value) {
        if (dFCardHuFaGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDFCardHuFaGroupIsMutable();
          dFCardHuFaGroup_.add(index, value);
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addDFCardHuFaGroup(
          myudfs.Common.MapItem4.Builder builderForValue) {
        if (dFCardHuFaGroupBuilder_ == null) {
          ensureDFCardHuFaGroupIsMutable();
          dFCardHuFaGroup_.add(builderForValue.build());
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addDFCardHuFaGroup(
          int index, myudfs.Common.MapItem4.Builder builderForValue) {
        if (dFCardHuFaGroupBuilder_ == null) {
          ensureDFCardHuFaGroupIsMutable();
          dFCardHuFaGroup_.add(index, builderForValue.build());
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder addAllDFCardHuFaGroup(
          java.lang.Iterable<? extends myudfs.Common.MapItem4> values) {
        if (dFCardHuFaGroupBuilder_ == null) {
          ensureDFCardHuFaGroupIsMutable();
          super.addAll(values, dFCardHuFaGroup_);
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder clearDFCardHuFaGroup() {
        if (dFCardHuFaGroupBuilder_ == null) {
          dFCardHuFaGroup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public Builder removeDFCardHuFaGroup(int index) {
        if (dFCardHuFaGroupBuilder_ == null) {
          ensureDFCardHuFaGroupIsMutable();
          dFCardHuFaGroup_.remove(index);
          onChanged();
        } else {
          dFCardHuFaGroupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4.Builder getDFCardHuFaGroupBuilder(
          int index) {
        return getDFCardHuFaGroupFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4OrBuilder getDFCardHuFaGroupOrBuilder(
          int index) {
        if (dFCardHuFaGroupBuilder_ == null) {
          return dFCardHuFaGroup_.get(index);  } else {
          return dFCardHuFaGroupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public java.util.List<? extends myudfs.Common.MapItem4OrBuilder> 
           getDFCardHuFaGroupOrBuilderList() {
        if (dFCardHuFaGroupBuilder_ != null) {
          return dFCardHuFaGroupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dFCardHuFaGroup_);
        }
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4.Builder addDFCardHuFaGroupBuilder() {
        return getDFCardHuFaGroupFieldBuilder().addBuilder(
            myudfs.Common.MapItem4.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public myudfs.Common.MapItem4.Builder addDFCardHuFaGroupBuilder(
          int index) {
        return getDFCardHuFaGroupFieldBuilder().addBuilder(
            index, myudfs.Common.MapItem4.getDefaultInstance());
      }
      /**
       * <code>repeated .MapItem4 dFCardHuFaGroup = 1;</code>
       *
       * <pre>
       *斗法护法卡组,key-卡牌id value-护法列表
       * </pre>
       */
      public java.util.List<myudfs.Common.MapItem4.Builder> 
           getDFCardHuFaGroupBuilderList() {
        return getDFCardHuFaGroupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.MapItem4, myudfs.Common.MapItem4.Builder, myudfs.Common.MapItem4OrBuilder> 
          getDFCardHuFaGroupFieldBuilder() {
        if (dFCardHuFaGroupBuilder_ == null) {
          dFCardHuFaGroupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.MapItem4, myudfs.Common.MapItem4.Builder, myudfs.Common.MapItem4OrBuilder>(
                  dFCardHuFaGroup_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dFCardHuFaGroup_ = null;
        }
        return dFCardHuFaGroupBuilder_;
      }

      // repeated int32 dFCardGroupFight = 2;
      private java.util.List<java.lang.Integer> dFCardGroupFight_ = java.util.Collections.emptyList();
      private void ensureDFCardGroupFightIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dFCardGroupFight_ = new java.util.ArrayList<java.lang.Integer>(dFCardGroupFight_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 dFCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDFCardGroupFightList() {
        return java.util.Collections.unmodifiableList(dFCardGroupFight_);
      }
      /**
       * <code>repeated int32 dFCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getDFCardGroupFightCount() {
        return dFCardGroupFight_.size();
      }
      /**
       * <code>repeated int32 dFCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public int getDFCardGroupFight(int index) {
        return dFCardGroupFight_.get(index);
      }
      /**
       * <code>repeated int32 dFCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder setDFCardGroupFight(
          int index, int value) {
        ensureDFCardGroupFightIsMutable();
        dFCardGroupFight_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dFCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addDFCardGroupFight(int value) {
        ensureDFCardGroupFightIsMutable();
        dFCardGroupFight_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dFCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder addAllDFCardGroupFight(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDFCardGroupFightIsMutable();
        super.addAll(values, dFCardGroupFight_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dFCardGroupFight = 2;</code>
       *
       * <pre>
       *战前卡组与自己的卡组对应关系
       * </pre>
       */
      public Builder clearDFCardGroupFight() {
        dFCardGroupFight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DFTeamItem)
    }

    static {
      defaultInstance = new DFTeamItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DFTeamItem)
  }

  public interface BuyEscortNumMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PlayerItem playerItem = 1;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    boolean hasPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItem getPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder();
  }
  /**
   * Protobuf type {@code BuyEscortNumMessage}
   */
  public static final class BuyEscortNumMessage extends
      com.google.protobuf.GeneratedMessage
      implements BuyEscortNumMessageOrBuilder {
    // Use BuyEscortNumMessage.newBuilder() to construct.
    private BuyEscortNumMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BuyEscortNumMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BuyEscortNumMessage defaultInstance;
    public static BuyEscortNumMessage getDefaultInstance() {
      return defaultInstance;
    }

    public BuyEscortNumMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BuyEscortNumMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              myudfs.Common.PlayerItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerItem_.toBuilder();
              }
              playerItem_ = input.readMessage(myudfs.Common.PlayerItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerItem_);
                playerItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_BuyEscortNumMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_BuyEscortNumMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.BuyEscortNumMessage.class, myudfs.Common.BuyEscortNumMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<BuyEscortNumMessage> PARSER =
        new com.google.protobuf.AbstractParser<BuyEscortNumMessage>() {
      public BuyEscortNumMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuyEscortNumMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BuyEscortNumMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PlayerItem playerItem = 1;
    public static final int PLAYERITEM_FIELD_NUMBER = 1;
    private myudfs.Common.PlayerItem playerItem_;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public boolean hasPlayerItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItem getPlayerItem() {
      return playerItem_;
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
      return playerItem_;
    }

    private void initFields() {
      playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerItem_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerItem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.BuyEscortNumMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.BuyEscortNumMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.BuyEscortNumMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.BuyEscortNumMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.BuyEscortNumMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.BuyEscortNumMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.BuyEscortNumMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.BuyEscortNumMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.BuyEscortNumMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.BuyEscortNumMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.BuyEscortNumMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BuyEscortNumMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.BuyEscortNumMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_BuyEscortNumMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_BuyEscortNumMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.BuyEscortNumMessage.class, myudfs.Common.BuyEscortNumMessage.Builder.class);
      }

      // Construct using myudfs.Common.BuyEscortNumMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_BuyEscortNumMessage_descriptor;
      }

      public myudfs.Common.BuyEscortNumMessage getDefaultInstanceForType() {
        return myudfs.Common.BuyEscortNumMessage.getDefaultInstance();
      }

      public myudfs.Common.BuyEscortNumMessage build() {
        myudfs.Common.BuyEscortNumMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.BuyEscortNumMessage buildPartial() {
        myudfs.Common.BuyEscortNumMessage result = new myudfs.Common.BuyEscortNumMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerItemBuilder_ == null) {
          result.playerItem_ = playerItem_;
        } else {
          result.playerItem_ = playerItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.BuyEscortNumMessage) {
          return mergeFrom((myudfs.Common.BuyEscortNumMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.BuyEscortNumMessage other) {
        if (other == myudfs.Common.BuyEscortNumMessage.getDefaultInstance()) return this;
        if (other.hasPlayerItem()) {
          mergePlayerItem(other.getPlayerItem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.BuyEscortNumMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.BuyEscortNumMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PlayerItem playerItem = 1;
      private myudfs.Common.PlayerItem playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> playerItemBuilder_;
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public boolean hasPlayerItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem getPlayerItem() {
        if (playerItemBuilder_ == null) {
          return playerItem_;
        } else {
          return playerItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerItem_ = value;
          onChanged();
        } else {
          playerItemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(
          myudfs.Common.PlayerItem.Builder builderForValue) {
        if (playerItemBuilder_ == null) {
          playerItem_ = builderForValue.build();
          onChanged();
        } else {
          playerItemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder mergePlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerItem_ != myudfs.Common.PlayerItem.getDefaultInstance()) {
            playerItem_ =
              myudfs.Common.PlayerItem.newBuilder(playerItem_).mergeFrom(value).buildPartial();
          } else {
            playerItem_ = value;
          }
          onChanged();
        } else {
          playerItemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder clearPlayerItem() {
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
          onChanged();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem.Builder getPlayerItemBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
        if (playerItemBuilder_ != null) {
          return playerItemBuilder_.getMessageOrBuilder();
        } else {
          return playerItem_;
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> 
          getPlayerItemFieldBuilder() {
        if (playerItemBuilder_ == null) {
          playerItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder>(
                  playerItem_,
                  getParentForChildren(),
                  isClean());
          playerItem_ = null;
        }
        return playerItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BuyEscortNumMessage)
    }

    static {
      defaultInstance = new BuyEscortNumMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BuyEscortNumMessage)
  }

  public interface BuyRobNumMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PlayerItem playerItem = 1;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    boolean hasPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItem getPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder();
  }
  /**
   * Protobuf type {@code BuyRobNumMessage}
   */
  public static final class BuyRobNumMessage extends
      com.google.protobuf.GeneratedMessage
      implements BuyRobNumMessageOrBuilder {
    // Use BuyRobNumMessage.newBuilder() to construct.
    private BuyRobNumMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BuyRobNumMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BuyRobNumMessage defaultInstance;
    public static BuyRobNumMessage getDefaultInstance() {
      return defaultInstance;
    }

    public BuyRobNumMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BuyRobNumMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              myudfs.Common.PlayerItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerItem_.toBuilder();
              }
              playerItem_ = input.readMessage(myudfs.Common.PlayerItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerItem_);
                playerItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_BuyRobNumMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_BuyRobNumMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.BuyRobNumMessage.class, myudfs.Common.BuyRobNumMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<BuyRobNumMessage> PARSER =
        new com.google.protobuf.AbstractParser<BuyRobNumMessage>() {
      public BuyRobNumMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuyRobNumMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BuyRobNumMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PlayerItem playerItem = 1;
    public static final int PLAYERITEM_FIELD_NUMBER = 1;
    private myudfs.Common.PlayerItem playerItem_;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public boolean hasPlayerItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItem getPlayerItem() {
      return playerItem_;
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
      return playerItem_;
    }

    private void initFields() {
      playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerItem_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerItem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.BuyRobNumMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.BuyRobNumMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.BuyRobNumMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.BuyRobNumMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.BuyRobNumMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.BuyRobNumMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.BuyRobNumMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.BuyRobNumMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.BuyRobNumMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.BuyRobNumMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.BuyRobNumMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BuyRobNumMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.BuyRobNumMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_BuyRobNumMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_BuyRobNumMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.BuyRobNumMessage.class, myudfs.Common.BuyRobNumMessage.Builder.class);
      }

      // Construct using myudfs.Common.BuyRobNumMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_BuyRobNumMessage_descriptor;
      }

      public myudfs.Common.BuyRobNumMessage getDefaultInstanceForType() {
        return myudfs.Common.BuyRobNumMessage.getDefaultInstance();
      }

      public myudfs.Common.BuyRobNumMessage build() {
        myudfs.Common.BuyRobNumMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.BuyRobNumMessage buildPartial() {
        myudfs.Common.BuyRobNumMessage result = new myudfs.Common.BuyRobNumMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerItemBuilder_ == null) {
          result.playerItem_ = playerItem_;
        } else {
          result.playerItem_ = playerItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.BuyRobNumMessage) {
          return mergeFrom((myudfs.Common.BuyRobNumMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.BuyRobNumMessage other) {
        if (other == myudfs.Common.BuyRobNumMessage.getDefaultInstance()) return this;
        if (other.hasPlayerItem()) {
          mergePlayerItem(other.getPlayerItem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.BuyRobNumMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.BuyRobNumMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PlayerItem playerItem = 1;
      private myudfs.Common.PlayerItem playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> playerItemBuilder_;
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public boolean hasPlayerItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem getPlayerItem() {
        if (playerItemBuilder_ == null) {
          return playerItem_;
        } else {
          return playerItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerItem_ = value;
          onChanged();
        } else {
          playerItemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(
          myudfs.Common.PlayerItem.Builder builderForValue) {
        if (playerItemBuilder_ == null) {
          playerItem_ = builderForValue.build();
          onChanged();
        } else {
          playerItemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder mergePlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerItem_ != myudfs.Common.PlayerItem.getDefaultInstance()) {
            playerItem_ =
              myudfs.Common.PlayerItem.newBuilder(playerItem_).mergeFrom(value).buildPartial();
          } else {
            playerItem_ = value;
          }
          onChanged();
        } else {
          playerItemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder clearPlayerItem() {
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
          onChanged();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem.Builder getPlayerItemBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
        if (playerItemBuilder_ != null) {
          return playerItemBuilder_.getMessageOrBuilder();
        } else {
          return playerItem_;
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> 
          getPlayerItemFieldBuilder() {
        if (playerItemBuilder_ == null) {
          playerItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder>(
                  playerItem_,
                  getParentForChildren(),
                  isClean());
          playerItem_ = null;
        }
        return playerItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BuyRobNumMessage)
    }

    static {
      defaultInstance = new BuyRobNumMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BuyRobNumMessage)
  }

  public interface TempleTeamCardGroupMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PlayerItem playerItem = 1;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    boolean hasPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItem getPlayerItem();
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder();
  }
  /**
   * Protobuf type {@code TempleTeamCardGroupMessage}
   *
   * <pre>
   * 神殿队伍卡组消息
   * </pre>
   */
  public static final class TempleTeamCardGroupMessage extends
      com.google.protobuf.GeneratedMessage
      implements TempleTeamCardGroupMessageOrBuilder {
    // Use TempleTeamCardGroupMessage.newBuilder() to construct.
    private TempleTeamCardGroupMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TempleTeamCardGroupMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TempleTeamCardGroupMessage defaultInstance;
    public static TempleTeamCardGroupMessage getDefaultInstance() {
      return defaultInstance;
    }

    public TempleTeamCardGroupMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TempleTeamCardGroupMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              myudfs.Common.PlayerItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerItem_.toBuilder();
              }
              playerItem_ = input.readMessage(myudfs.Common.PlayerItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerItem_);
                playerItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_TempleTeamCardGroupMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_TempleTeamCardGroupMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.TempleTeamCardGroupMessage.class, myudfs.Common.TempleTeamCardGroupMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<TempleTeamCardGroupMessage> PARSER =
        new com.google.protobuf.AbstractParser<TempleTeamCardGroupMessage>() {
      public TempleTeamCardGroupMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TempleTeamCardGroupMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TempleTeamCardGroupMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PlayerItem playerItem = 1;
    public static final int PLAYERITEM_FIELD_NUMBER = 1;
    private myudfs.Common.PlayerItem playerItem_;
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public boolean hasPlayerItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItem getPlayerItem() {
      return playerItem_;
    }
    /**
     * <code>optional .PlayerItem playerItem = 1;</code>
     */
    public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
      return playerItem_;
    }

    private void initFields() {
      playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerItem_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerItem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.TempleTeamCardGroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.TempleTeamCardGroupMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TempleTeamCardGroupMessage}
     *
     * <pre>
     * 神殿队伍卡组消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.TempleTeamCardGroupMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_TempleTeamCardGroupMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_TempleTeamCardGroupMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.TempleTeamCardGroupMessage.class, myudfs.Common.TempleTeamCardGroupMessage.Builder.class);
      }

      // Construct using myudfs.Common.TempleTeamCardGroupMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_TempleTeamCardGroupMessage_descriptor;
      }

      public myudfs.Common.TempleTeamCardGroupMessage getDefaultInstanceForType() {
        return myudfs.Common.TempleTeamCardGroupMessage.getDefaultInstance();
      }

      public myudfs.Common.TempleTeamCardGroupMessage build() {
        myudfs.Common.TempleTeamCardGroupMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.TempleTeamCardGroupMessage buildPartial() {
        myudfs.Common.TempleTeamCardGroupMessage result = new myudfs.Common.TempleTeamCardGroupMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerItemBuilder_ == null) {
          result.playerItem_ = playerItem_;
        } else {
          result.playerItem_ = playerItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.TempleTeamCardGroupMessage) {
          return mergeFrom((myudfs.Common.TempleTeamCardGroupMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.TempleTeamCardGroupMessage other) {
        if (other == myudfs.Common.TempleTeamCardGroupMessage.getDefaultInstance()) return this;
        if (other.hasPlayerItem()) {
          mergePlayerItem(other.getPlayerItem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.TempleTeamCardGroupMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.TempleTeamCardGroupMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PlayerItem playerItem = 1;
      private myudfs.Common.PlayerItem playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> playerItemBuilder_;
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public boolean hasPlayerItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem getPlayerItem() {
        if (playerItemBuilder_ == null) {
          return playerItem_;
        } else {
          return playerItemBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerItem_ = value;
          onChanged();
        } else {
          playerItemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder setPlayerItem(
          myudfs.Common.PlayerItem.Builder builderForValue) {
        if (playerItemBuilder_ == null) {
          playerItem_ = builderForValue.build();
          onChanged();
        } else {
          playerItemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder mergePlayerItem(myudfs.Common.PlayerItem value) {
        if (playerItemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerItem_ != myudfs.Common.PlayerItem.getDefaultInstance()) {
            playerItem_ =
              myudfs.Common.PlayerItem.newBuilder(playerItem_).mergeFrom(value).buildPartial();
          } else {
            playerItem_ = value;
          }
          onChanged();
        } else {
          playerItemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public Builder clearPlayerItem() {
        if (playerItemBuilder_ == null) {
          playerItem_ = myudfs.Common.PlayerItem.getDefaultInstance();
          onChanged();
        } else {
          playerItemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItem.Builder getPlayerItemBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerItemFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      public myudfs.Common.PlayerItemOrBuilder getPlayerItemOrBuilder() {
        if (playerItemBuilder_ != null) {
          return playerItemBuilder_.getMessageOrBuilder();
        } else {
          return playerItem_;
        }
      }
      /**
       * <code>optional .PlayerItem playerItem = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder> 
          getPlayerItemFieldBuilder() {
        if (playerItemBuilder_ == null) {
          playerItemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              myudfs.Common.PlayerItem, myudfs.Common.PlayerItem.Builder, myudfs.Common.PlayerItemOrBuilder>(
                  playerItem_,
                  getParentForChildren(),
                  isClean());
          playerItem_ = null;
        }
        return playerItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:TempleTeamCardGroupMessage)
    }

    static {
      defaultInstance = new TempleTeamCardGroupMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TempleTeamCardGroupMessage)
  }

  public interface FabaoItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 fabaoId = 1;
    /**
     * <code>optional int32 fabaoId = 1;</code>
     */
    boolean hasFabaoId();
    /**
     * <code>optional int32 fabaoId = 1;</code>
     */
    int getFabaoId();

    // optional int32 qualityId = 2;
    /**
     * <code>optional int32 qualityId = 2;</code>
     */
    boolean hasQualityId();
    /**
     * <code>optional int32 qualityId = 2;</code>
     */
    int getQualityId();

    // optional int32 exp = 3;
    /**
     * <code>optional int32 exp = 3;</code>
     */
    boolean hasExp();
    /**
     * <code>optional int32 exp = 3;</code>
     */
    int getExp();

    // optional int32 lv = 4;
    /**
     * <code>optional int32 lv = 4;</code>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 4;</code>
     */
    int getLv();

    // repeated string shentongIds = 5;
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    java.util.List<java.lang.String>
    getShentongIdsList();
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    int getShentongIdsCount();
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    java.lang.String getShentongIds(int index);
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    com.google.protobuf.ByteString
        getShentongIdsBytes(int index);

    // repeated string skillIds = 6;
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    java.util.List<java.lang.String>
    getSkillIdsList();
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    int getSkillIdsCount();
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    java.lang.String getSkillIds(int index);
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    com.google.protobuf.ByteString
        getSkillIdsBytes(int index);

    // optional int32 hp = 7;
    /**
     * <code>optional int32 hp = 7;</code>
     */
    boolean hasHp();
    /**
     * <code>optional int32 hp = 7;</code>
     */
    int getHp();

    // optional int32 atk = 8;
    /**
     * <code>optional int32 atk = 8;</code>
     */
    boolean hasAtk();
    /**
     * <code>optional int32 atk = 8;</code>
     */
    int getAtk();

    // optional int32 def = 9;
    /**
     * <code>optional int32 def = 9;</code>
     */
    boolean hasDef();
    /**
     * <code>optional int32 def = 9;</code>
     */
    int getDef();

    // optional int32 magicAtk = 10;
    /**
     * <code>optional int32 magicAtk = 10;</code>
     */
    boolean hasMagicAtk();
    /**
     * <code>optional int32 magicAtk = 10;</code>
     */
    int getMagicAtk();

    // optional int32 magicDef = 11;
    /**
     * <code>optional int32 magicDef = 11;</code>
     */
    boolean hasMagicDef();
    /**
     * <code>optional int32 magicDef = 11;</code>
     */
    int getMagicDef();

    // optional int32 hit = 12;
    /**
     * <code>optional int32 hit = 12;</code>
     */
    boolean hasHit();
    /**
     * <code>optional int32 hit = 12;</code>
     */
    int getHit();

    // optional int32 agi = 13;
    /**
     * <code>optional int32 agi = 13;</code>
     */
    boolean hasAgi();
    /**
     * <code>optional int32 agi = 13;</code>
     */
    int getAgi();

    // optional int32 crit = 14;
    /**
     * <code>optional int32 crit = 14;</code>
     */
    boolean hasCrit();
    /**
     * <code>optional int32 crit = 14;</code>
     */
    int getCrit();

    // optional int32 ten = 15;
    /**
     * <code>optional int32 ten = 15;</code>
     */
    boolean hasTen();
    /**
     * <code>optional int32 ten = 15;</code>
     */
    int getTen();

    // optional int32 revenge = 16;
    /**
     * <code>optional int32 revenge = 16;</code>
     */
    boolean hasRevenge();
    /**
     * <code>optional int32 revenge = 16;</code>
     */
    int getRevenge();

    // optional int32 antiRevenge = 17;
    /**
     * <code>optional int32 antiRevenge = 17;</code>
     */
    boolean hasAntiRevenge();
    /**
     * <code>optional int32 antiRevenge = 17;</code>
     */
    int getAntiRevenge();

    // optional int32 doubleHit = 18;
    /**
     * <code>optional int32 doubleHit = 18;</code>
     */
    boolean hasDoubleHit();
    /**
     * <code>optional int32 doubleHit = 18;</code>
     */
    int getDoubleHit();

    // optional int32 antiDoubleHit = 19;
    /**
     * <code>optional int32 antiDoubleHit = 19;</code>
     */
    boolean hasAntiDoubleHit();
    /**
     * <code>optional int32 antiDoubleHit = 19;</code>
     */
    int getAntiDoubleHit();

    // optional int32 speed = 20;
    /**
     * <code>optional int32 speed = 20;</code>
     */
    boolean hasSpeed();
    /**
     * <code>optional int32 speed = 20;</code>
     */
    int getSpeed();

    // optional int32 tupoLv = 21;
    /**
     * <code>optional int32 tupoLv = 21;</code>
     */
    boolean hasTupoLv();
    /**
     * <code>optional int32 tupoLv = 21;</code>
     */
    int getTupoLv();
  }
  /**
   * Protobuf type {@code FabaoItem}
   */
  public static final class FabaoItem extends
      com.google.protobuf.GeneratedMessage
      implements FabaoItemOrBuilder {
    // Use FabaoItem.newBuilder() to construct.
    private FabaoItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FabaoItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FabaoItem defaultInstance;
    public static FabaoItem getDefaultInstance() {
      return defaultInstance;
    }

    public FabaoItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FabaoItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fabaoId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              qualityId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              exp_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lv_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                shentongIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              shentongIds_.add(input.readBytes());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                skillIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000020;
              }
              skillIds_.add(input.readBytes());
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              hp_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              atk_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              def_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              magicAtk_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              magicDef_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              hit_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              agi_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              crit_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              ten_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              revenge_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00004000;
              antiRevenge_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00008000;
              doubleHit_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00010000;
              antiDoubleHit_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00020000;
              speed_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00040000;
              tupoLv_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          shentongIds_ = new com.google.protobuf.UnmodifiableLazyStringList(shentongIds_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          skillIds_ = new com.google.protobuf.UnmodifiableLazyStringList(skillIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_FabaoItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_FabaoItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.FabaoItem.class, myudfs.Common.FabaoItem.Builder.class);
    }

    public static com.google.protobuf.Parser<FabaoItem> PARSER =
        new com.google.protobuf.AbstractParser<FabaoItem>() {
      public FabaoItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FabaoItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FabaoItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 fabaoId = 1;
    public static final int FABAOID_FIELD_NUMBER = 1;
    private int fabaoId_;
    /**
     * <code>optional int32 fabaoId = 1;</code>
     */
    public boolean hasFabaoId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 fabaoId = 1;</code>
     */
    public int getFabaoId() {
      return fabaoId_;
    }

    // optional int32 qualityId = 2;
    public static final int QUALITYID_FIELD_NUMBER = 2;
    private int qualityId_;
    /**
     * <code>optional int32 qualityId = 2;</code>
     */
    public boolean hasQualityId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 qualityId = 2;</code>
     */
    public int getQualityId() {
      return qualityId_;
    }

    // optional int32 exp = 3;
    public static final int EXP_FIELD_NUMBER = 3;
    private int exp_;
    /**
     * <code>optional int32 exp = 3;</code>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 exp = 3;</code>
     */
    public int getExp() {
      return exp_;
    }

    // optional int32 lv = 4;
    public static final int LV_FIELD_NUMBER = 4;
    private int lv_;
    /**
     * <code>optional int32 lv = 4;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 lv = 4;</code>
     */
    public int getLv() {
      return lv_;
    }

    // repeated string shentongIds = 5;
    public static final int SHENTONGIDS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList shentongIds_;
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    public java.util.List<java.lang.String>
        getShentongIdsList() {
      return shentongIds_;
    }
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    public int getShentongIdsCount() {
      return shentongIds_.size();
    }
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    public java.lang.String getShentongIds(int index) {
      return shentongIds_.get(index);
    }
    /**
     * <code>repeated string shentongIds = 5;</code>
     */
    public com.google.protobuf.ByteString
        getShentongIdsBytes(int index) {
      return shentongIds_.getByteString(index);
    }

    // repeated string skillIds = 6;
    public static final int SKILLIDS_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList skillIds_;
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    public java.util.List<java.lang.String>
        getSkillIdsList() {
      return skillIds_;
    }
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    public int getSkillIdsCount() {
      return skillIds_.size();
    }
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    public java.lang.String getSkillIds(int index) {
      return skillIds_.get(index);
    }
    /**
     * <code>repeated string skillIds = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSkillIdsBytes(int index) {
      return skillIds_.getByteString(index);
    }

    // optional int32 hp = 7;
    public static final int HP_FIELD_NUMBER = 7;
    private int hp_;
    /**
     * <code>optional int32 hp = 7;</code>
     */
    public boolean hasHp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hp = 7;</code>
     */
    public int getHp() {
      return hp_;
    }

    // optional int32 atk = 8;
    public static final int ATK_FIELD_NUMBER = 8;
    private int atk_;
    /**
     * <code>optional int32 atk = 8;</code>
     */
    public boolean hasAtk() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 atk = 8;</code>
     */
    public int getAtk() {
      return atk_;
    }

    // optional int32 def = 9;
    public static final int DEF_FIELD_NUMBER = 9;
    private int def_;
    /**
     * <code>optional int32 def = 9;</code>
     */
    public boolean hasDef() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 def = 9;</code>
     */
    public int getDef() {
      return def_;
    }

    // optional int32 magicAtk = 10;
    public static final int MAGICATK_FIELD_NUMBER = 10;
    private int magicAtk_;
    /**
     * <code>optional int32 magicAtk = 10;</code>
     */
    public boolean hasMagicAtk() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 magicAtk = 10;</code>
     */
    public int getMagicAtk() {
      return magicAtk_;
    }

    // optional int32 magicDef = 11;
    public static final int MAGICDEF_FIELD_NUMBER = 11;
    private int magicDef_;
    /**
     * <code>optional int32 magicDef = 11;</code>
     */
    public boolean hasMagicDef() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 magicDef = 11;</code>
     */
    public int getMagicDef() {
      return magicDef_;
    }

    // optional int32 hit = 12;
    public static final int HIT_FIELD_NUMBER = 12;
    private int hit_;
    /**
     * <code>optional int32 hit = 12;</code>
     */
    public boolean hasHit() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 hit = 12;</code>
     */
    public int getHit() {
      return hit_;
    }

    // optional int32 agi = 13;
    public static final int AGI_FIELD_NUMBER = 13;
    private int agi_;
    /**
     * <code>optional int32 agi = 13;</code>
     */
    public boolean hasAgi() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 agi = 13;</code>
     */
    public int getAgi() {
      return agi_;
    }

    // optional int32 crit = 14;
    public static final int CRIT_FIELD_NUMBER = 14;
    private int crit_;
    /**
     * <code>optional int32 crit = 14;</code>
     */
    public boolean hasCrit() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 crit = 14;</code>
     */
    public int getCrit() {
      return crit_;
    }

    // optional int32 ten = 15;
    public static final int TEN_FIELD_NUMBER = 15;
    private int ten_;
    /**
     * <code>optional int32 ten = 15;</code>
     */
    public boolean hasTen() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 ten = 15;</code>
     */
    public int getTen() {
      return ten_;
    }

    // optional int32 revenge = 16;
    public static final int REVENGE_FIELD_NUMBER = 16;
    private int revenge_;
    /**
     * <code>optional int32 revenge = 16;</code>
     */
    public boolean hasRevenge() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 revenge = 16;</code>
     */
    public int getRevenge() {
      return revenge_;
    }

    // optional int32 antiRevenge = 17;
    public static final int ANTIREVENGE_FIELD_NUMBER = 17;
    private int antiRevenge_;
    /**
     * <code>optional int32 antiRevenge = 17;</code>
     */
    public boolean hasAntiRevenge() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 antiRevenge = 17;</code>
     */
    public int getAntiRevenge() {
      return antiRevenge_;
    }

    // optional int32 doubleHit = 18;
    public static final int DOUBLEHIT_FIELD_NUMBER = 18;
    private int doubleHit_;
    /**
     * <code>optional int32 doubleHit = 18;</code>
     */
    public boolean hasDoubleHit() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 doubleHit = 18;</code>
     */
    public int getDoubleHit() {
      return doubleHit_;
    }

    // optional int32 antiDoubleHit = 19;
    public static final int ANTIDOUBLEHIT_FIELD_NUMBER = 19;
    private int antiDoubleHit_;
    /**
     * <code>optional int32 antiDoubleHit = 19;</code>
     */
    public boolean hasAntiDoubleHit() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 antiDoubleHit = 19;</code>
     */
    public int getAntiDoubleHit() {
      return antiDoubleHit_;
    }

    // optional int32 speed = 20;
    public static final int SPEED_FIELD_NUMBER = 20;
    private int speed_;
    /**
     * <code>optional int32 speed = 20;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 speed = 20;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    // optional int32 tupoLv = 21;
    public static final int TUPOLV_FIELD_NUMBER = 21;
    private int tupoLv_;
    /**
     * <code>optional int32 tupoLv = 21;</code>
     */
    public boolean hasTupoLv() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 tupoLv = 21;</code>
     */
    public int getTupoLv() {
      return tupoLv_;
    }

    private void initFields() {
      fabaoId_ = 0;
      qualityId_ = 0;
      exp_ = 0;
      lv_ = 0;
      shentongIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      skillIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      hp_ = 0;
      atk_ = 0;
      def_ = 0;
      magicAtk_ = 0;
      magicDef_ = 0;
      hit_ = 0;
      agi_ = 0;
      crit_ = 0;
      ten_ = 0;
      revenge_ = 0;
      antiRevenge_ = 0;
      doubleHit_ = 0;
      antiDoubleHit_ = 0;
      speed_ = 0;
      tupoLv_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fabaoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, qualityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, exp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, lv_);
      }
      for (int i = 0; i < shentongIds_.size(); i++) {
        output.writeBytes(5, shentongIds_.getByteString(i));
      }
      for (int i = 0; i < skillIds_.size(); i++) {
        output.writeBytes(6, skillIds_.getByteString(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, hp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, atk_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, def_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, magicAtk_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, magicDef_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, hit_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, agi_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(14, crit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(15, ten_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(16, revenge_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(17, antiRevenge_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(18, doubleHit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(19, antiDoubleHit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(20, speed_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(21, tupoLv_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fabaoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, qualityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, exp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, lv_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shentongIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(shentongIds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getShentongIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < skillIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(skillIds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSkillIdsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, hp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, atk_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, def_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, magicAtk_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, magicDef_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, hit_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, agi_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, crit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, ten_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, revenge_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, antiRevenge_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, doubleHit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, antiDoubleHit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, speed_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, tupoLv_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.FabaoItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FabaoItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FabaoItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.FabaoItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.FabaoItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FabaoItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FabaoItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.FabaoItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.FabaoItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.FabaoItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.FabaoItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FabaoItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.FabaoItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_FabaoItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_FabaoItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.FabaoItem.class, myudfs.Common.FabaoItem.Builder.class);
      }

      // Construct using myudfs.Common.FabaoItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fabaoId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        qualityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        shentongIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        skillIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        hp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        atk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        def_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        magicAtk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        magicDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        hit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        agi_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        crit_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        ten_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        revenge_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        antiRevenge_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        doubleHit_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        antiDoubleHit_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        tupoLv_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_FabaoItem_descriptor;
      }

      public myudfs.Common.FabaoItem getDefaultInstanceForType() {
        return myudfs.Common.FabaoItem.getDefaultInstance();
      }

      public myudfs.Common.FabaoItem build() {
        myudfs.Common.FabaoItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.FabaoItem buildPartial() {
        myudfs.Common.FabaoItem result = new myudfs.Common.FabaoItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fabaoId_ = fabaoId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.qualityId_ = qualityId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lv_ = lv_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          shentongIds_ = new com.google.protobuf.UnmodifiableLazyStringList(
              shentongIds_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.shentongIds_ = shentongIds_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          skillIds_ = new com.google.protobuf.UnmodifiableLazyStringList(
              skillIds_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.skillIds_ = skillIds_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hp_ = hp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.atk_ = atk_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.def_ = def_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.magicAtk_ = magicAtk_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.magicDef_ = magicDef_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.hit_ = hit_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.agi_ = agi_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.crit_ = crit_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.ten_ = ten_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.revenge_ = revenge_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.antiRevenge_ = antiRevenge_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.doubleHit_ = doubleHit_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.antiDoubleHit_ = antiDoubleHit_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tupoLv_ = tupoLv_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.FabaoItem) {
          return mergeFrom((myudfs.Common.FabaoItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.FabaoItem other) {
        if (other == myudfs.Common.FabaoItem.getDefaultInstance()) return this;
        if (other.hasFabaoId()) {
          setFabaoId(other.getFabaoId());
        }
        if (other.hasQualityId()) {
          setQualityId(other.getQualityId());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (!other.shentongIds_.isEmpty()) {
          if (shentongIds_.isEmpty()) {
            shentongIds_ = other.shentongIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureShentongIdsIsMutable();
            shentongIds_.addAll(other.shentongIds_);
          }
          onChanged();
        }
        if (!other.skillIds_.isEmpty()) {
          if (skillIds_.isEmpty()) {
            skillIds_ = other.skillIds_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSkillIdsIsMutable();
            skillIds_.addAll(other.skillIds_);
          }
          onChanged();
        }
        if (other.hasHp()) {
          setHp(other.getHp());
        }
        if (other.hasAtk()) {
          setAtk(other.getAtk());
        }
        if (other.hasDef()) {
          setDef(other.getDef());
        }
        if (other.hasMagicAtk()) {
          setMagicAtk(other.getMagicAtk());
        }
        if (other.hasMagicDef()) {
          setMagicDef(other.getMagicDef());
        }
        if (other.hasHit()) {
          setHit(other.getHit());
        }
        if (other.hasAgi()) {
          setAgi(other.getAgi());
        }
        if (other.hasCrit()) {
          setCrit(other.getCrit());
        }
        if (other.hasTen()) {
          setTen(other.getTen());
        }
        if (other.hasRevenge()) {
          setRevenge(other.getRevenge());
        }
        if (other.hasAntiRevenge()) {
          setAntiRevenge(other.getAntiRevenge());
        }
        if (other.hasDoubleHit()) {
          setDoubleHit(other.getDoubleHit());
        }
        if (other.hasAntiDoubleHit()) {
          setAntiDoubleHit(other.getAntiDoubleHit());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasTupoLv()) {
          setTupoLv(other.getTupoLv());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.FabaoItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.FabaoItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 fabaoId = 1;
      private int fabaoId_ ;
      /**
       * <code>optional int32 fabaoId = 1;</code>
       */
      public boolean hasFabaoId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 fabaoId = 1;</code>
       */
      public int getFabaoId() {
        return fabaoId_;
      }
      /**
       * <code>optional int32 fabaoId = 1;</code>
       */
      public Builder setFabaoId(int value) {
        bitField0_ |= 0x00000001;
        fabaoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fabaoId = 1;</code>
       */
      public Builder clearFabaoId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fabaoId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 qualityId = 2;
      private int qualityId_ ;
      /**
       * <code>optional int32 qualityId = 2;</code>
       */
      public boolean hasQualityId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 qualityId = 2;</code>
       */
      public int getQualityId() {
        return qualityId_;
      }
      /**
       * <code>optional int32 qualityId = 2;</code>
       */
      public Builder setQualityId(int value) {
        bitField0_ |= 0x00000002;
        qualityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qualityId = 2;</code>
       */
      public Builder clearQualityId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        qualityId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 exp = 3;
      private int exp_ ;
      /**
       * <code>optional int32 exp = 3;</code>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 exp = 3;</code>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional int32 exp = 3;</code>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000004;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exp = 3;</code>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        exp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lv = 4;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 4;</code>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 lv = 4;</code>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 4;</code>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000008;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 4;</code>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lv_ = 0;
        onChanged();
        return this;
      }

      // repeated string shentongIds = 5;
      private com.google.protobuf.LazyStringList shentongIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureShentongIdsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          shentongIds_ = new com.google.protobuf.LazyStringArrayList(shentongIds_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public java.util.List<java.lang.String>
          getShentongIdsList() {
        return java.util.Collections.unmodifiableList(shentongIds_);
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public int getShentongIdsCount() {
        return shentongIds_.size();
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public java.lang.String getShentongIds(int index) {
        return shentongIds_.get(index);
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public com.google.protobuf.ByteString
          getShentongIdsBytes(int index) {
        return shentongIds_.getByteString(index);
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public Builder setShentongIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureShentongIdsIsMutable();
        shentongIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public Builder addShentongIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureShentongIdsIsMutable();
        shentongIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public Builder addAllShentongIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureShentongIdsIsMutable();
        super.addAll(values, shentongIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public Builder clearShentongIds() {
        shentongIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string shentongIds = 5;</code>
       */
      public Builder addShentongIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureShentongIdsIsMutable();
        shentongIds_.add(value);
        onChanged();
        return this;
      }

      // repeated string skillIds = 6;
      private com.google.protobuf.LazyStringList skillIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSkillIdsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          skillIds_ = new com.google.protobuf.LazyStringArrayList(skillIds_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public java.util.List<java.lang.String>
          getSkillIdsList() {
        return java.util.Collections.unmodifiableList(skillIds_);
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public int getSkillIdsCount() {
        return skillIds_.size();
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public java.lang.String getSkillIds(int index) {
        return skillIds_.get(index);
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSkillIdsBytes(int index) {
        return skillIds_.getByteString(index);
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public Builder setSkillIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSkillIdsIsMutable();
        skillIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public Builder addSkillIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSkillIdsIsMutable();
        skillIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public Builder addAllSkillIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureSkillIdsIsMutable();
        super.addAll(values, skillIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public Builder clearSkillIds() {
        skillIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skillIds = 6;</code>
       */
      public Builder addSkillIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSkillIdsIsMutable();
        skillIds_.add(value);
        onChanged();
        return this;
      }

      // optional int32 hp = 7;
      private int hp_ ;
      /**
       * <code>optional int32 hp = 7;</code>
       */
      public boolean hasHp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 hp = 7;</code>
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <code>optional int32 hp = 7;</code>
       */
      public Builder setHp(int value) {
        bitField0_ |= 0x00000040;
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hp = 7;</code>
       */
      public Builder clearHp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        hp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 atk = 8;
      private int atk_ ;
      /**
       * <code>optional int32 atk = 8;</code>
       */
      public boolean hasAtk() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 atk = 8;</code>
       */
      public int getAtk() {
        return atk_;
      }
      /**
       * <code>optional int32 atk = 8;</code>
       */
      public Builder setAtk(int value) {
        bitField0_ |= 0x00000080;
        atk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 atk = 8;</code>
       */
      public Builder clearAtk() {
        bitField0_ = (bitField0_ & ~0x00000080);
        atk_ = 0;
        onChanged();
        return this;
      }

      // optional int32 def = 9;
      private int def_ ;
      /**
       * <code>optional int32 def = 9;</code>
       */
      public boolean hasDef() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 def = 9;</code>
       */
      public int getDef() {
        return def_;
      }
      /**
       * <code>optional int32 def = 9;</code>
       */
      public Builder setDef(int value) {
        bitField0_ |= 0x00000100;
        def_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 def = 9;</code>
       */
      public Builder clearDef() {
        bitField0_ = (bitField0_ & ~0x00000100);
        def_ = 0;
        onChanged();
        return this;
      }

      // optional int32 magicAtk = 10;
      private int magicAtk_ ;
      /**
       * <code>optional int32 magicAtk = 10;</code>
       */
      public boolean hasMagicAtk() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 magicAtk = 10;</code>
       */
      public int getMagicAtk() {
        return magicAtk_;
      }
      /**
       * <code>optional int32 magicAtk = 10;</code>
       */
      public Builder setMagicAtk(int value) {
        bitField0_ |= 0x00000200;
        magicAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 magicAtk = 10;</code>
       */
      public Builder clearMagicAtk() {
        bitField0_ = (bitField0_ & ~0x00000200);
        magicAtk_ = 0;
        onChanged();
        return this;
      }

      // optional int32 magicDef = 11;
      private int magicDef_ ;
      /**
       * <code>optional int32 magicDef = 11;</code>
       */
      public boolean hasMagicDef() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 magicDef = 11;</code>
       */
      public int getMagicDef() {
        return magicDef_;
      }
      /**
       * <code>optional int32 magicDef = 11;</code>
       */
      public Builder setMagicDef(int value) {
        bitField0_ |= 0x00000400;
        magicDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 magicDef = 11;</code>
       */
      public Builder clearMagicDef() {
        bitField0_ = (bitField0_ & ~0x00000400);
        magicDef_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hit = 12;
      private int hit_ ;
      /**
       * <code>optional int32 hit = 12;</code>
       */
      public boolean hasHit() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 hit = 12;</code>
       */
      public int getHit() {
        return hit_;
      }
      /**
       * <code>optional int32 hit = 12;</code>
       */
      public Builder setHit(int value) {
        bitField0_ |= 0x00000800;
        hit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hit = 12;</code>
       */
      public Builder clearHit() {
        bitField0_ = (bitField0_ & ~0x00000800);
        hit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 agi = 13;
      private int agi_ ;
      /**
       * <code>optional int32 agi = 13;</code>
       */
      public boolean hasAgi() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 agi = 13;</code>
       */
      public int getAgi() {
        return agi_;
      }
      /**
       * <code>optional int32 agi = 13;</code>
       */
      public Builder setAgi(int value) {
        bitField0_ |= 0x00001000;
        agi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 agi = 13;</code>
       */
      public Builder clearAgi() {
        bitField0_ = (bitField0_ & ~0x00001000);
        agi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 crit = 14;
      private int crit_ ;
      /**
       * <code>optional int32 crit = 14;</code>
       */
      public boolean hasCrit() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 crit = 14;</code>
       */
      public int getCrit() {
        return crit_;
      }
      /**
       * <code>optional int32 crit = 14;</code>
       */
      public Builder setCrit(int value) {
        bitField0_ |= 0x00002000;
        crit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 crit = 14;</code>
       */
      public Builder clearCrit() {
        bitField0_ = (bitField0_ & ~0x00002000);
        crit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ten = 15;
      private int ten_ ;
      /**
       * <code>optional int32 ten = 15;</code>
       */
      public boolean hasTen() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 ten = 15;</code>
       */
      public int getTen() {
        return ten_;
      }
      /**
       * <code>optional int32 ten = 15;</code>
       */
      public Builder setTen(int value) {
        bitField0_ |= 0x00004000;
        ten_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ten = 15;</code>
       */
      public Builder clearTen() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ten_ = 0;
        onChanged();
        return this;
      }

      // optional int32 revenge = 16;
      private int revenge_ ;
      /**
       * <code>optional int32 revenge = 16;</code>
       */
      public boolean hasRevenge() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 revenge = 16;</code>
       */
      public int getRevenge() {
        return revenge_;
      }
      /**
       * <code>optional int32 revenge = 16;</code>
       */
      public Builder setRevenge(int value) {
        bitField0_ |= 0x00008000;
        revenge_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 revenge = 16;</code>
       */
      public Builder clearRevenge() {
        bitField0_ = (bitField0_ & ~0x00008000);
        revenge_ = 0;
        onChanged();
        return this;
      }

      // optional int32 antiRevenge = 17;
      private int antiRevenge_ ;
      /**
       * <code>optional int32 antiRevenge = 17;</code>
       */
      public boolean hasAntiRevenge() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 antiRevenge = 17;</code>
       */
      public int getAntiRevenge() {
        return antiRevenge_;
      }
      /**
       * <code>optional int32 antiRevenge = 17;</code>
       */
      public Builder setAntiRevenge(int value) {
        bitField0_ |= 0x00010000;
        antiRevenge_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 antiRevenge = 17;</code>
       */
      public Builder clearAntiRevenge() {
        bitField0_ = (bitField0_ & ~0x00010000);
        antiRevenge_ = 0;
        onChanged();
        return this;
      }

      // optional int32 doubleHit = 18;
      private int doubleHit_ ;
      /**
       * <code>optional int32 doubleHit = 18;</code>
       */
      public boolean hasDoubleHit() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 doubleHit = 18;</code>
       */
      public int getDoubleHit() {
        return doubleHit_;
      }
      /**
       * <code>optional int32 doubleHit = 18;</code>
       */
      public Builder setDoubleHit(int value) {
        bitField0_ |= 0x00020000;
        doubleHit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 doubleHit = 18;</code>
       */
      public Builder clearDoubleHit() {
        bitField0_ = (bitField0_ & ~0x00020000);
        doubleHit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 antiDoubleHit = 19;
      private int antiDoubleHit_ ;
      /**
       * <code>optional int32 antiDoubleHit = 19;</code>
       */
      public boolean hasAntiDoubleHit() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 antiDoubleHit = 19;</code>
       */
      public int getAntiDoubleHit() {
        return antiDoubleHit_;
      }
      /**
       * <code>optional int32 antiDoubleHit = 19;</code>
       */
      public Builder setAntiDoubleHit(int value) {
        bitField0_ |= 0x00040000;
        antiDoubleHit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 antiDoubleHit = 19;</code>
       */
      public Builder clearAntiDoubleHit() {
        bitField0_ = (bitField0_ & ~0x00040000);
        antiDoubleHit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed = 20;
      private int speed_ ;
      /**
       * <code>optional int32 speed = 20;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 speed = 20;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 speed = 20;</code>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00080000;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed = 20;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00080000);
        speed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tupoLv = 21;
      private int tupoLv_ ;
      /**
       * <code>optional int32 tupoLv = 21;</code>
       */
      public boolean hasTupoLv() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 tupoLv = 21;</code>
       */
      public int getTupoLv() {
        return tupoLv_;
      }
      /**
       * <code>optional int32 tupoLv = 21;</code>
       */
      public Builder setTupoLv(int value) {
        bitField0_ |= 0x00100000;
        tupoLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tupoLv = 21;</code>
       */
      public Builder clearTupoLv() {
        bitField0_ = (bitField0_ & ~0x00100000);
        tupoLv_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FabaoItem)
    }

    static {
      defaultInstance = new FabaoItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FabaoItem)
  }

  public interface CustomPushItemMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .CustomPushItem activities = 1;
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    java.util.List<myudfs.Common.CustomPushItem> 
        getActivitiesList();
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    myudfs.Common.CustomPushItem getActivities(int index);
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    int getActivitiesCount();
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    java.util.List<? extends myudfs.Common.CustomPushItemOrBuilder> 
        getActivitiesOrBuilderList();
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    myudfs.Common.CustomPushItemOrBuilder getActivitiesOrBuilder(
        int index);

    // optional uint64 accountId = 2;
    /**
     * <code>optional uint64 accountId = 2;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint64 accountId = 2;</code>
     */
    long getAccountId();

    // optional uint64 roleId = 3;
    /**
     * <code>optional uint64 roleId = 3;</code>
     */
    boolean hasRoleId();
    /**
     * <code>optional uint64 roleId = 3;</code>
     */
    long getRoleId();

    // optional uint32 dbname = 4;
    /**
     * <code>optional uint32 dbname = 4;</code>
     */
    boolean hasDbname();
    /**
     * <code>optional uint32 dbname = 4;</code>
     */
    int getDbname();

    // optional uint32 money = 5;
    /**
     * <code>optional uint32 money = 5;</code>
     */
    boolean hasMoney();
    /**
     * <code>optional uint32 money = 5;</code>
     */
    int getMoney();

    // optional uint64 endTime = 6;
    /**
     * <code>optional uint64 endTime = 6;</code>
     */
    boolean hasEndTime();
    /**
     * <code>optional uint64 endTime = 6;</code>
     */
    long getEndTime();

    // optional uint64 beginTime = 7;
    /**
     * <code>optional uint64 beginTime = 7;</code>
     */
    boolean hasBeginTime();
    /**
     * <code>optional uint64 beginTime = 7;</code>
     */
    long getBeginTime();

    // optional uint64 validTime = 8;
    /**
     * <code>optional uint64 validTime = 8;</code>
     */
    boolean hasValidTime();
    /**
     * <code>optional uint64 validTime = 8;</code>
     */
    long getValidTime();

    // optional uint64 activityId = 9;
    /**
     * <code>optional uint64 activityId = 9;</code>
     */
    boolean hasActivityId();
    /**
     * <code>optional uint64 activityId = 9;</code>
     */
    long getActivityId();

    // optional uint64 rechargeMoney = 10;
    /**
     * <code>optional uint64 rechargeMoney = 10;</code>
     */
    boolean hasRechargeMoney();
    /**
     * <code>optional uint64 rechargeMoney = 10;</code>
     */
    long getRechargeMoney();
  }
  /**
   * Protobuf type {@code CustomPushItemMessage}
   */
  public static final class CustomPushItemMessage extends
      com.google.protobuf.GeneratedMessage
      implements CustomPushItemMessageOrBuilder {
    // Use CustomPushItemMessage.newBuilder() to construct.
    private CustomPushItemMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CustomPushItemMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CustomPushItemMessage defaultInstance;
    public static CustomPushItemMessage getDefaultInstance() {
      return defaultInstance;
    }

    public CustomPushItemMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CustomPushItemMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                activities_ = new java.util.ArrayList<myudfs.Common.CustomPushItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              activities_.add(input.readMessage(myudfs.Common.CustomPushItem.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              roleId_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              dbname_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              money_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              endTime_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              beginTime_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              validTime_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              activityId_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              rechargeMoney_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          activities_ = java.util.Collections.unmodifiableList(activities_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_CustomPushItemMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_CustomPushItemMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.CustomPushItemMessage.class, myudfs.Common.CustomPushItemMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<CustomPushItemMessage> PARSER =
        new com.google.protobuf.AbstractParser<CustomPushItemMessage>() {
      public CustomPushItemMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CustomPushItemMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CustomPushItemMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .CustomPushItem activities = 1;
    public static final int ACTIVITIES_FIELD_NUMBER = 1;
    private java.util.List<myudfs.Common.CustomPushItem> activities_;
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    public java.util.List<myudfs.Common.CustomPushItem> getActivitiesList() {
      return activities_;
    }
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    public java.util.List<? extends myudfs.Common.CustomPushItemOrBuilder> 
        getActivitiesOrBuilderList() {
      return activities_;
    }
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    public int getActivitiesCount() {
      return activities_.size();
    }
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    public myudfs.Common.CustomPushItem getActivities(int index) {
      return activities_.get(index);
    }
    /**
     * <code>repeated .CustomPushItem activities = 1;</code>
     */
    public myudfs.Common.CustomPushItemOrBuilder getActivitiesOrBuilder(
        int index) {
      return activities_.get(index);
    }

    // optional uint64 accountId = 2;
    public static final int ACCOUNTID_FIELD_NUMBER = 2;
    private long accountId_;
    /**
     * <code>optional uint64 accountId = 2;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 accountId = 2;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional uint64 roleId = 3;
    public static final int ROLEID_FIELD_NUMBER = 3;
    private long roleId_;
    /**
     * <code>optional uint64 roleId = 3;</code>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 roleId = 3;</code>
     */
    public long getRoleId() {
      return roleId_;
    }

    // optional uint32 dbname = 4;
    public static final int DBNAME_FIELD_NUMBER = 4;
    private int dbname_;
    /**
     * <code>optional uint32 dbname = 4;</code>
     */
    public boolean hasDbname() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 dbname = 4;</code>
     */
    public int getDbname() {
      return dbname_;
    }

    // optional uint32 money = 5;
    public static final int MONEY_FIELD_NUMBER = 5;
    private int money_;
    /**
     * <code>optional uint32 money = 5;</code>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 money = 5;</code>
     */
    public int getMoney() {
      return money_;
    }

    // optional uint64 endTime = 6;
    public static final int ENDTIME_FIELD_NUMBER = 6;
    private long endTime_;
    /**
     * <code>optional uint64 endTime = 6;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 endTime = 6;</code>
     */
    public long getEndTime() {
      return endTime_;
    }

    // optional uint64 beginTime = 7;
    public static final int BEGINTIME_FIELD_NUMBER = 7;
    private long beginTime_;
    /**
     * <code>optional uint64 beginTime = 7;</code>
     */
    public boolean hasBeginTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 beginTime = 7;</code>
     */
    public long getBeginTime() {
      return beginTime_;
    }

    // optional uint64 validTime = 8;
    public static final int VALIDTIME_FIELD_NUMBER = 8;
    private long validTime_;
    /**
     * <code>optional uint64 validTime = 8;</code>
     */
    public boolean hasValidTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 validTime = 8;</code>
     */
    public long getValidTime() {
      return validTime_;
    }

    // optional uint64 activityId = 9;
    public static final int ACTIVITYID_FIELD_NUMBER = 9;
    private long activityId_;
    /**
     * <code>optional uint64 activityId = 9;</code>
     */
    public boolean hasActivityId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 activityId = 9;</code>
     */
    public long getActivityId() {
      return activityId_;
    }

    // optional uint64 rechargeMoney = 10;
    public static final int RECHARGEMONEY_FIELD_NUMBER = 10;
    private long rechargeMoney_;
    /**
     * <code>optional uint64 rechargeMoney = 10;</code>
     */
    public boolean hasRechargeMoney() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 rechargeMoney = 10;</code>
     */
    public long getRechargeMoney() {
      return rechargeMoney_;
    }

    private void initFields() {
      activities_ = java.util.Collections.emptyList();
      accountId_ = 0L;
      roleId_ = 0L;
      dbname_ = 0;
      money_ = 0;
      endTime_ = 0L;
      beginTime_ = 0L;
      validTime_ = 0L;
      activityId_ = 0L;
      rechargeMoney_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < activities_.size(); i++) {
        output.writeMessage(1, activities_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(2, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, roleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, dbname_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, money_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(6, endTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(7, beginTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(8, validTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(9, activityId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(10, rechargeMoney_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < activities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, activities_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, roleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, dbname_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, money_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, endTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, beginTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, validTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, activityId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, rechargeMoney_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.CustomPushItemMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CustomPushItemMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItemMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CustomPushItemMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItemMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CustomPushItemMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItemMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.CustomPushItemMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItemMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CustomPushItemMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.CustomPushItemMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CustomPushItemMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.CustomPushItemMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_CustomPushItemMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_CustomPushItemMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.CustomPushItemMessage.class, myudfs.Common.CustomPushItemMessage.Builder.class);
      }

      // Construct using myudfs.Common.CustomPushItemMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActivitiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (activitiesBuilder_ == null) {
          activities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          activitiesBuilder_.clear();
        }
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        roleId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        dbname_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        money_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        beginTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        validTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        activityId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        rechargeMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_CustomPushItemMessage_descriptor;
      }

      public myudfs.Common.CustomPushItemMessage getDefaultInstanceForType() {
        return myudfs.Common.CustomPushItemMessage.getDefaultInstance();
      }

      public myudfs.Common.CustomPushItemMessage build() {
        myudfs.Common.CustomPushItemMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.CustomPushItemMessage buildPartial() {
        myudfs.Common.CustomPushItemMessage result = new myudfs.Common.CustomPushItemMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (activitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            activities_ = java.util.Collections.unmodifiableList(activities_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.activities_ = activities_;
        } else {
          result.activities_ = activitiesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roleId_ = roleId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dbname_ = dbname_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.beginTime_ = beginTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.validTime_ = validTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.activityId_ = activityId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rechargeMoney_ = rechargeMoney_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.CustomPushItemMessage) {
          return mergeFrom((myudfs.Common.CustomPushItemMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.CustomPushItemMessage other) {
        if (other == myudfs.Common.CustomPushItemMessage.getDefaultInstance()) return this;
        if (activitiesBuilder_ == null) {
          if (!other.activities_.isEmpty()) {
            if (activities_.isEmpty()) {
              activities_ = other.activities_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureActivitiesIsMutable();
              activities_.addAll(other.activities_);
            }
            onChanged();
          }
        } else {
          if (!other.activities_.isEmpty()) {
            if (activitiesBuilder_.isEmpty()) {
              activitiesBuilder_.dispose();
              activitiesBuilder_ = null;
              activities_ = other.activities_;
              bitField0_ = (bitField0_ & ~0x00000001);
              activitiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActivitiesFieldBuilder() : null;
            } else {
              activitiesBuilder_.addAllMessages(other.activities_);
            }
          }
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasDbname()) {
          setDbname(other.getDbname());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasBeginTime()) {
          setBeginTime(other.getBeginTime());
        }
        if (other.hasValidTime()) {
          setValidTime(other.getValidTime());
        }
        if (other.hasActivityId()) {
          setActivityId(other.getActivityId());
        }
        if (other.hasRechargeMoney()) {
          setRechargeMoney(other.getRechargeMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.CustomPushItemMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.CustomPushItemMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .CustomPushItem activities = 1;
      private java.util.List<myudfs.Common.CustomPushItem> activities_ =
        java.util.Collections.emptyList();
      private void ensureActivitiesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          activities_ = new java.util.ArrayList<myudfs.Common.CustomPushItem>(activities_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CustomPushItem, myudfs.Common.CustomPushItem.Builder, myudfs.Common.CustomPushItemOrBuilder> activitiesBuilder_;

      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public java.util.List<myudfs.Common.CustomPushItem> getActivitiesList() {
        if (activitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(activities_);
        } else {
          return activitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public int getActivitiesCount() {
        if (activitiesBuilder_ == null) {
          return activities_.size();
        } else {
          return activitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public myudfs.Common.CustomPushItem getActivities(int index) {
        if (activitiesBuilder_ == null) {
          return activities_.get(index);
        } else {
          return activitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder setActivities(
          int index, myudfs.Common.CustomPushItem value) {
        if (activitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivitiesIsMutable();
          activities_.set(index, value);
          onChanged();
        } else {
          activitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder setActivities(
          int index, myudfs.Common.CustomPushItem.Builder builderForValue) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.set(index, builderForValue.build());
          onChanged();
        } else {
          activitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder addActivities(myudfs.Common.CustomPushItem value) {
        if (activitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivitiesIsMutable();
          activities_.add(value);
          onChanged();
        } else {
          activitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder addActivities(
          int index, myudfs.Common.CustomPushItem value) {
        if (activitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivitiesIsMutable();
          activities_.add(index, value);
          onChanged();
        } else {
          activitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder addActivities(
          myudfs.Common.CustomPushItem.Builder builderForValue) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.add(builderForValue.build());
          onChanged();
        } else {
          activitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder addActivities(
          int index, myudfs.Common.CustomPushItem.Builder builderForValue) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.add(index, builderForValue.build());
          onChanged();
        } else {
          activitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder addAllActivities(
          java.lang.Iterable<? extends myudfs.Common.CustomPushItem> values) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          super.addAll(values, activities_);
          onChanged();
        } else {
          activitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder clearActivities() {
        if (activitiesBuilder_ == null) {
          activities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          activitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public Builder removeActivities(int index) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.remove(index);
          onChanged();
        } else {
          activitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public myudfs.Common.CustomPushItem.Builder getActivitiesBuilder(
          int index) {
        return getActivitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public myudfs.Common.CustomPushItemOrBuilder getActivitiesOrBuilder(
          int index) {
        if (activitiesBuilder_ == null) {
          return activities_.get(index);  } else {
          return activitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public java.util.List<? extends myudfs.Common.CustomPushItemOrBuilder> 
           getActivitiesOrBuilderList() {
        if (activitiesBuilder_ != null) {
          return activitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(activities_);
        }
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public myudfs.Common.CustomPushItem.Builder addActivitiesBuilder() {
        return getActivitiesFieldBuilder().addBuilder(
            myudfs.Common.CustomPushItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public myudfs.Common.CustomPushItem.Builder addActivitiesBuilder(
          int index) {
        return getActivitiesFieldBuilder().addBuilder(
            index, myudfs.Common.CustomPushItem.getDefaultInstance());
      }
      /**
       * <code>repeated .CustomPushItem activities = 1;</code>
       */
      public java.util.List<myudfs.Common.CustomPushItem.Builder> 
           getActivitiesBuilderList() {
        return getActivitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          myudfs.Common.CustomPushItem, myudfs.Common.CustomPushItem.Builder, myudfs.Common.CustomPushItemOrBuilder> 
          getActivitiesFieldBuilder() {
        if (activitiesBuilder_ == null) {
          activitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              myudfs.Common.CustomPushItem, myudfs.Common.CustomPushItem.Builder, myudfs.Common.CustomPushItemOrBuilder>(
                  activities_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          activities_ = null;
        }
        return activitiesBuilder_;
      }

      // optional uint64 accountId = 2;
      private long accountId_ ;
      /**
       * <code>optional uint64 accountId = 2;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 accountId = 2;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint64 accountId = 2;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000002;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 accountId = 2;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 roleId = 3;
      private long roleId_ ;
      /**
       * <code>optional uint64 roleId = 3;</code>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 roleId = 3;</code>
       */
      public long getRoleId() {
        return roleId_;
      }
      /**
       * <code>optional uint64 roleId = 3;</code>
       */
      public Builder setRoleId(long value) {
        bitField0_ |= 0x00000004;
        roleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 roleId = 3;</code>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roleId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 dbname = 4;
      private int dbname_ ;
      /**
       * <code>optional uint32 dbname = 4;</code>
       */
      public boolean hasDbname() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 dbname = 4;</code>
       */
      public int getDbname() {
        return dbname_;
      }
      /**
       * <code>optional uint32 dbname = 4;</code>
       */
      public Builder setDbname(int value) {
        bitField0_ |= 0x00000008;
        dbname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dbname = 4;</code>
       */
      public Builder clearDbname() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dbname_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 money = 5;
      private int money_ ;
      /**
       * <code>optional uint32 money = 5;</code>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 money = 5;</code>
       */
      public int getMoney() {
        return money_;
      }
      /**
       * <code>optional uint32 money = 5;</code>
       */
      public Builder setMoney(int value) {
        bitField0_ |= 0x00000010;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 money = 5;</code>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00000010);
        money_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 endTime = 6;
      private long endTime_ ;
      /**
       * <code>optional uint64 endTime = 6;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 endTime = 6;</code>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional uint64 endTime = 6;</code>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000020;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 endTime = 6;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 beginTime = 7;
      private long beginTime_ ;
      /**
       * <code>optional uint64 beginTime = 7;</code>
       */
      public boolean hasBeginTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 beginTime = 7;</code>
       */
      public long getBeginTime() {
        return beginTime_;
      }
      /**
       * <code>optional uint64 beginTime = 7;</code>
       */
      public Builder setBeginTime(long value) {
        bitField0_ |= 0x00000040;
        beginTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 beginTime = 7;</code>
       */
      public Builder clearBeginTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        beginTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 validTime = 8;
      private long validTime_ ;
      /**
       * <code>optional uint64 validTime = 8;</code>
       */
      public boolean hasValidTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 validTime = 8;</code>
       */
      public long getValidTime() {
        return validTime_;
      }
      /**
       * <code>optional uint64 validTime = 8;</code>
       */
      public Builder setValidTime(long value) {
        bitField0_ |= 0x00000080;
        validTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 validTime = 8;</code>
       */
      public Builder clearValidTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        validTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 activityId = 9;
      private long activityId_ ;
      /**
       * <code>optional uint64 activityId = 9;</code>
       */
      public boolean hasActivityId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 activityId = 9;</code>
       */
      public long getActivityId() {
        return activityId_;
      }
      /**
       * <code>optional uint64 activityId = 9;</code>
       */
      public Builder setActivityId(long value) {
        bitField0_ |= 0x00000100;
        activityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 activityId = 9;</code>
       */
      public Builder clearActivityId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        activityId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 rechargeMoney = 10;
      private long rechargeMoney_ ;
      /**
       * <code>optional uint64 rechargeMoney = 10;</code>
       */
      public boolean hasRechargeMoney() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 rechargeMoney = 10;</code>
       */
      public long getRechargeMoney() {
        return rechargeMoney_;
      }
      /**
       * <code>optional uint64 rechargeMoney = 10;</code>
       */
      public Builder setRechargeMoney(long value) {
        bitField0_ |= 0x00000200;
        rechargeMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 rechargeMoney = 10;</code>
       */
      public Builder clearRechargeMoney() {
        bitField0_ = (bitField0_ & ~0x00000200);
        rechargeMoney_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CustomPushItemMessage)
    }

    static {
      defaultInstance = new CustomPushItemMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CustomPushItemMessage)
  }

  public interface CustomPushItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 itemId = 1;
    /**
     * <code>optional uint32 itemId = 1;</code>
     */
    boolean hasItemId();
    /**
     * <code>optional uint32 itemId = 1;</code>
     */
    int getItemId();

    // optional uint32 itemType = 2;
    /**
     * <code>optional uint32 itemType = 2;</code>
     */
    boolean hasItemType();
    /**
     * <code>optional uint32 itemType = 2;</code>
     */
    int getItemType();

    // optional uint32 cnt = 3;
    /**
     * <code>optional uint32 cnt = 3;</code>
     */
    boolean hasCnt();
    /**
     * <code>optional uint32 cnt = 3;</code>
     */
    int getCnt();

    // optional string itemIdStr = 4;
    /**
     * <code>optional string itemIdStr = 4;</code>
     */
    boolean hasItemIdStr();
    /**
     * <code>optional string itemIdStr = 4;</code>
     */
    java.lang.String getItemIdStr();
    /**
     * <code>optional string itemIdStr = 4;</code>
     */
    com.google.protobuf.ByteString
        getItemIdStrBytes();
  }
  /**
   * Protobuf type {@code CustomPushItem}
   */
  public static final class CustomPushItem extends
      com.google.protobuf.GeneratedMessage
      implements CustomPushItemOrBuilder {
    // Use CustomPushItem.newBuilder() to construct.
    private CustomPushItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CustomPushItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CustomPushItem defaultInstance;
    public static CustomPushItem getDefaultInstance() {
      return defaultInstance;
    }

    public CustomPushItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CustomPushItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemType_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cnt_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              itemIdStr_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return myudfs.Common.internal_static_CustomPushItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return myudfs.Common.internal_static_CustomPushItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              myudfs.Common.CustomPushItem.class, myudfs.Common.CustomPushItem.Builder.class);
    }

    public static com.google.protobuf.Parser<CustomPushItem> PARSER =
        new com.google.protobuf.AbstractParser<CustomPushItem>() {
      public CustomPushItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CustomPushItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CustomPushItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 itemId = 1;
    public static final int ITEMID_FIELD_NUMBER = 1;
    private int itemId_;
    /**
     * <code>optional uint32 itemId = 1;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 itemId = 1;</code>
     */
    public int getItemId() {
      return itemId_;
    }

    // optional uint32 itemType = 2;
    public static final int ITEMTYPE_FIELD_NUMBER = 2;
    private int itemType_;
    /**
     * <code>optional uint32 itemType = 2;</code>
     */
    public boolean hasItemType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 itemType = 2;</code>
     */
    public int getItemType() {
      return itemType_;
    }

    // optional uint32 cnt = 3;
    public static final int CNT_FIELD_NUMBER = 3;
    private int cnt_;
    /**
     * <code>optional uint32 cnt = 3;</code>
     */
    public boolean hasCnt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 cnt = 3;</code>
     */
    public int getCnt() {
      return cnt_;
    }

    // optional string itemIdStr = 4;
    public static final int ITEMIDSTR_FIELD_NUMBER = 4;
    private java.lang.Object itemIdStr_;
    /**
     * <code>optional string itemIdStr = 4;</code>
     */
    public boolean hasItemIdStr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string itemIdStr = 4;</code>
     */
    public java.lang.String getItemIdStr() {
      java.lang.Object ref = itemIdStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemIdStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string itemIdStr = 4;</code>
     */
    public com.google.protobuf.ByteString
        getItemIdStrBytes() {
      java.lang.Object ref = itemIdStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemIdStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      itemId_ = 0;
      itemType_ = 0;
      cnt_ = 0;
      itemIdStr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, itemType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, cnt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getItemIdStrBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cnt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getItemIdStrBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static myudfs.Common.CustomPushItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CustomPushItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static myudfs.Common.CustomPushItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CustomPushItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static myudfs.Common.CustomPushItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static myudfs.Common.CustomPushItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static myudfs.Common.CustomPushItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(myudfs.Common.CustomPushItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CustomPushItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements myudfs.Common.CustomPushItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return myudfs.Common.internal_static_CustomPushItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return myudfs.Common.internal_static_CustomPushItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                myudfs.Common.CustomPushItem.class, myudfs.Common.CustomPushItem.Builder.class);
      }

      // Construct using myudfs.Common.CustomPushItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        itemIdStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return myudfs.Common.internal_static_CustomPushItem_descriptor;
      }

      public myudfs.Common.CustomPushItem getDefaultInstanceForType() {
        return myudfs.Common.CustomPushItem.getDefaultInstance();
      }

      public myudfs.Common.CustomPushItem build() {
        myudfs.Common.CustomPushItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public myudfs.Common.CustomPushItem buildPartial() {
        myudfs.Common.CustomPushItem result = new myudfs.Common.CustomPushItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemType_ = itemType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cnt_ = cnt_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.itemIdStr_ = itemIdStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof myudfs.Common.CustomPushItem) {
          return mergeFrom((myudfs.Common.CustomPushItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(myudfs.Common.CustomPushItem other) {
        if (other == myudfs.Common.CustomPushItem.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasItemType()) {
          setItemType(other.getItemType());
        }
        if (other.hasCnt()) {
          setCnt(other.getCnt());
        }
        if (other.hasItemIdStr()) {
          bitField0_ |= 0x00000008;
          itemIdStr_ = other.itemIdStr_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        myudfs.Common.CustomPushItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (myudfs.Common.CustomPushItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 itemId = 1;
      private int itemId_ ;
      /**
       * <code>optional uint32 itemId = 1;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 itemId = 1;</code>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>optional uint32 itemId = 1;</code>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 itemId = 1;</code>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 itemType = 2;
      private int itemType_ ;
      /**
       * <code>optional uint32 itemType = 2;</code>
       */
      public boolean hasItemType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 itemType = 2;</code>
       */
      public int getItemType() {
        return itemType_;
      }
      /**
       * <code>optional uint32 itemType = 2;</code>
       */
      public Builder setItemType(int value) {
        bitField0_ |= 0x00000002;
        itemType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 itemType = 2;</code>
       */
      public Builder clearItemType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 cnt = 3;
      private int cnt_ ;
      /**
       * <code>optional uint32 cnt = 3;</code>
       */
      public boolean hasCnt() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 cnt = 3;</code>
       */
      public int getCnt() {
        return cnt_;
      }
      /**
       * <code>optional uint32 cnt = 3;</code>
       */
      public Builder setCnt(int value) {
        bitField0_ |= 0x00000004;
        cnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cnt = 3;</code>
       */
      public Builder clearCnt() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cnt_ = 0;
        onChanged();
        return this;
      }

      // optional string itemIdStr = 4;
      private java.lang.Object itemIdStr_ = "";
      /**
       * <code>optional string itemIdStr = 4;</code>
       */
      public boolean hasItemIdStr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string itemIdStr = 4;</code>
       */
      public java.lang.String getItemIdStr() {
        java.lang.Object ref = itemIdStr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          itemIdStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string itemIdStr = 4;</code>
       */
      public com.google.protobuf.ByteString
          getItemIdStrBytes() {
        java.lang.Object ref = itemIdStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemIdStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string itemIdStr = 4;</code>
       */
      public Builder setItemIdStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        itemIdStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string itemIdStr = 4;</code>
       */
      public Builder clearItemIdStr() {
        bitField0_ = (bitField0_ & ~0x00000008);
        itemIdStr_ = getDefaultInstance().getItemIdStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string itemIdStr = 4;</code>
       */
      public Builder setItemIdStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        itemIdStr_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CustomPushItem)
    }

    static {
      defaultInstance = new CustomPushItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CustomPushItem)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CardItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CardItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CardPosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CardPosition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapItem2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapItem2_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapItem3_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapItem3_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapDateItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapDateItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapItem4_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapItem4_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapItem6_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapItem6_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FriendItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FriendItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FriendChangeItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FriendChangeItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FriendDetailItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FriendDetailItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiuDaoEnemyItemList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiuDaoEnemyItemList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiuDaoEnemyItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiuDaoEnemyItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PieceItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PieceItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DoubleReward_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DoubleReward_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HongbaoActivityMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HongbaoActivityMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZhuanPanItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZhuanPanItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PayReward_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PayReward_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_YunyingActivity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_YunyingActivity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TrainItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HuFaItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HuFaItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Items_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Items_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_QuestItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_QuestItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EquipmentItems_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EquipmentItems_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MailEncourage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MailEncourage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PvpFightResultItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PvpFightResultItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ShenTongItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ShenTongItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MissionItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MissionItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ServerListMessageItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ServerListMessageItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_VipPlayersItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_VipPlayersItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PvpExchangeItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PvpExchangeItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ShenMoItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ShenMoItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DaliyMissionItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DaliyMissionItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ActivityItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ActivityItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LoginActivity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LoginActivity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ActivityRewardItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ActivityRewardItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RewardItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RewardItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ChatItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ChatItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PvpFightPlayerItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PvpFightPlayerItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PvpFailFightResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PvpFailFightResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerGangItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerGangItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DFPlayerInfoMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DFPlayerInfoMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MailSendMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MailSendMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DFTeamCardGroupMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DFTeamCardGroupMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Xunxian_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Xunxian_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TestTimeMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TestTimeMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BenchmarkMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BenchmarkMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SecurityCodeFreezeItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SecurityCodeFreezeItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SecurityCodeItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SecurityCodeItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ArenaTeamItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ArenaTeamItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ArenaTeamCardGroupMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ArenaTeamCardGroupMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerEscortItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerEscortItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EscortTeamCardGroupMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EscortTeamCardGroupMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DFTeamItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DFTeamItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BuyEscortNumMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BuyEscortNumMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BuyRobNumMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BuyRobNumMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TempleTeamCardGroupMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TempleTeamCardGroupMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FabaoItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FabaoItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CustomPushItemMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CustomPushItemMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CustomPushItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CustomPushItem_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014common.proto\"\224\007\n\010CardItem\022\n\n\002id\030\001 \001(\003\022" +
      "\016\n\006cardId\030\002 \001(\005\022\n\n\002lv\030\003 \001(\005\022\r\n\005stage\030\004 \001" +
      "(\005\022\014\n\004date\030\005 \001(\004\022\017\n\007trainHp\030\006 \001(\005\022\020\n\010tra" +
      "inAtk\030\007 \001(\005\022\020\n\010trainDef\030\010 \001(\005\022\025\n\rtrainMa" +
      "gicAtk\030\t \001(\005\022\025\n\rtrainMagicDef\030\n \001(\005\022\030\n\020t" +
      "rainSuccessRate\030\013 \001(\005\022\033\n\tcardSlots\030\014 \003(\013" +
      "2\010.MapItem\022#\n\nequipments\030\016 \003(\0132\017.Equipme" +
      "ntItems\022 \n\tshenTongs\030\017 \003(\0132\r.ShenTongIte" +
      "m\022\020\n\010zhanFaId\030\020 \001(\005\022\025\n\rfreshZhanFaId\030\021 \001" +
      "(\005\022\025\n\rleaderSkillLv\030\022 \001(\005\022\n\n\002hp\030\023 \001(\005\022\013\n",
      "\003atk\030\024 \001(\005\022\013\n\003def\030\025 \001(\005\022\020\n\010magicAtk\030\026 \001(" +
      "\005\022\020\n\010magicDef\030\027 \001(\005\022\013\n\003hit\030\030 \001(\005\022\013\n\003agi\030" +
      "\031 \001(\005\022\014\n\004crit\030\032 \001(\005\022\013\n\003ten\030\033 \001(\005\022\017\n\007reve" +
      "nge\030\034 \001(\005\022\023\n\013antiRevenge\030\035 \001(\005\022\021\n\tdouble" +
      "Hit\030\036 \001(\005\022\025\n\rantiDoubleHit\030\037 \001(\005\022\r\n\005spee" +
      "d\030  \001(\005\022\020\n\010cardStar\030! \001(\005\022\023\n\013battleScore" +
      "\030\" \001(\005\022\033\n\010huFaItem\030# \001(\0132\t.HuFaItem\022\r\n\005s" +
      "tNum\030$ \001(\005\022\r\n\005hfNum\030% \001(\005\022\020\n\010liuDaoHp\030& " +
      "\001(\005\022\023\n\013liuDaoMaxHp\030\' \001(\005\022\026\n\016hasEnterLiuD" +
      "ao\030( \001(\010\022\026\n\016critDamageRate\030) \001(\005\022\016\n\006lead",
      "er\030* \001(\010\022\017\n\007quality\030+ \001(\005\022\033\n\023shentongRet" +
      "urnHunyu\030, \001(\005\022\022\n\notherHunyu\030- \001(\005\022\013\n\003ex" +
      "p\030. \001(\005\022\031\n\005fabao\030/ \001(\0132\n.FabaoItem\022\021\n\tca" +
      "rdStage\0300 \001(\005\"\'\n\014CardPosition\022\013\n\003pos\030\001 \001" +
      "(\005\022\n\n\002id\030\002 \001(\003\"%\n\007MapItem\022\013\n\003key\030\001 \001(\003\022\r" +
      "\n\005value\030\002 \001(\005\"&\n\010MapItem2\022\013\n\003key\030\001 \001(\003\022\r" +
      "\n\005value\030\002 \003(\005\"&\n\010MapItem3\022\013\n\003key\030\001 \001(\003\022\r" +
      "\n\005value\030\002 \003(\t\"(\n\013MapDateItem\022\013\n\003key\030\001 \001(" +
      "\005\022\014\n\004date\030\002 \001(\004\"&\n\010MapItem4\022\013\n\003key\030\001 \001(\003" +
      "\022\r\n\005value\030\002 \003(\003\"&\n\010MapItem6\022\013\n\003key\030\001 \001(\005",
      "\022\r\n\005value\030\002 \001(\005\"{\n\nFriendItem\022\n\n\002id\030\001 \001(" +
      "\003\022\014\n\004name\030\002 \001(\t\022\n\n\002lv\030\003 \001(\005\022\027\n\004card\030\004 \001(" +
      "\0132\t.CardItem\022\014\n\004date\030\005 \001(\004\022\013\n\003vip\030\006 \001(\005\022" +
      "\023\n\013battleScore\030\007 \001(\005\"?\n\020FriendChangeItem" +
      "\022\023\n\013newFriendId\030\001 \001(\003\022\026\n\016deleteFriendId\030" +
      "\002 \001(\003\"\317\001\n\020FriendDetailItem\022\n\n\002id\030\001 \001(\003\022\014" +
      "\n\004name\030\002 \001(\t\022\n\n\002lv\030\003 \001(\005\022\017\n\007qiuYuan\030\005 \001(" +
      "\005\022\030\n\005cards\030\006 \003(\0132\t.CardItem\022\014\n\004date\030\007 \001(" +
      "\004\022\023\n\013battleScore\030\010 \001(\005\022\026\n\016receiveStamina" +
      "\030\t \003(\003\022\021\n\tloginTime\030\n \001(\004\022\017\n\007zhuzhen\030\013 \001",
      "(\004\022\013\n\003vip\030\014 \001(\005\"8\n\023LiuDaoEnemyItemList\022!" +
      "\n\007enemies\030\001 \003(\0132\020.LiuDaoEnemyItem\"\256\001\n\017Li" +
      "uDaoEnemyItem\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022" +
      "\n\n\002lv\030\003 \001(\005\022\030\n\005cards\030\006 \003(\0132\t.CardItem\022\021\n" +
      "\tcardGroup\030\007 \003(\003\022\026\n\016fightCardGroup\030\010 \003(\005" +
      "\022\013\n\003vip\030\t \001(\005\022\023\n\013battleScore\030\n \001(\005\022\016\n\006mi" +
      "rror\030\013 \001(\010\"$\n\tPieceItem\022\n\n\002id\030\001 \001(\005\022\013\n\003n" +
      "um\030\002 \001(\005\"\2723\n\nPlayerItem\022\n\n\002id\030\001 \001(\003\022\014\n\004n" +
      "ame\030\002 \001(\t\022\n\n\002lv\030\003 \001(\005\022\013\n\003exp\030\004 \001(\005\022\017\n\007da" +
      "oXing\030\005 \001(\005\022\013\n\003vip\030\006 \001(\005\022\014\n\004gold\030\007 \001(\003\022\021",
      "\n\tshengWang\030\010 \001(\005\022\020\n\010xianYuan\030\t \001(\005\022\026\n\016b" +
      "agsUnlockGold\030\n \001(\005\022\017\n\007stamina\030\013 \001(\005\022\016\n\006" +
      "spirit\030\014 \001(\005\022\023\n\013friendsCost\030\022 \001(\005\022\026\n\016tra" +
      "inFreeRenew\030\023 \001(\005\022\031\n\021receiveStaminaNum\030\024" +
      " \001(\003\022 \n\016todayQuestNums\030\025 \003(\0132\010.MapItem\022$" +
      "\n\022todayQuestRestNums\030\026 \003(\0132\010.MapItem\022\025\n\r" +
      "donateStamina\030\030 \003(\003\022\026\n\016receiveStamina\030\031 " +
      "\003(\003\022\023\n\013staminaDate\030\032 \001(\004\022\020\n\010friendId\030\033 \003" +
      "(\003\022\021\n\tloginDate\030\034 \001(\004\022\022\n\nonlineTime\030\035 \001(" +
      "\004\022\030\n\020bagsUnlockGoldCd\030\036 \001(\004\022\014\n\004coin\030\037 \001(",
      "\003\022\036\n\014moonStarItem\030  \003(\0132\010.MapItem\022\036\n\014mag" +
      "icWeapons\030! \003(\0132\010.MapItem\022\"\n\014drawCardDat" +
      "e\030$ \003(\0132\014.MapDateItem\022\020\n\010firstPay\030% \001(\005\022" +
      "\023\n\013firstPayIds\030& \003(\005\022\022\n\nspiritDate\030\' \001(\004" +
      "\022\024\n\014worshipTimes\030( \001(\005\022\022\n\nworshipIds\030) \003" +
      "(\003\022\026\n\016gainRewardTime\030* \001(\004\022\025\n\rexchangeTi" +
      "mes\030+ \003(\005\022\r\n\005mails\030, \003(\003\022\024\n\014mailFinished" +
      "\030- \003(\003\022\023\n\013mailDeleted\030. \003(\003\022+\n\016pvpFightR" +
      "esult\030/ \003(\0132\023.PvpFightResultItem\022\022\n\nbuyS" +
      "tamina\0300 \001(\005\022\021\n\tbuySpirit\0301 \001(\005\022\017\n\007pvpWi",
      "ns\0302 \001(\005\022\033\n\tshopItems\0305 \003(\0132\010.MapItem\022\021\n" +
      "\tloginDays\0306 \001(\005\022\036\n\010missions\0307 \003(\0132\014.Mis" +
      "sionItem\022\016\n\006silver\0308 \001(\003\022\030\n\005cards\0309 \003(\0132" +
      "\t.CardItem\022\021\n\tcardGroup\030: \003(\003\022\032\n\006pieces\030" +
      "; \003(\0132\n.PieceItem\022\025\n\005items\030< \003(\0132\006.Items" +
      "\022\030\n\005hufas\030= \003(\0132\t.HuFaItem\022\032\n\006trains\030> \003" +
      "(\0132\n.TrainItem\022\032\n\006quests\030@ \003(\0132\n.QuestIt" +
      "em\022\026\n\016cardGroupFight\030A \003(\005\022\030\n\020magicWeapo" +
      "nGroup\030B \003(\005\022\026\n\016rewardLastTime\030D \001(\004\022\024\n\014" +
      "pvpWinReward\030E \003(\005\022\023\n\013loginReward\030F \003(\005\022",
      "\031\n\021pvpFightNumReward\030G \003(\005\022\026\n\016drawCardRe" +
      "ward\030H \003(\005\022\026\n\016gainBuyStamina\030I \001(\004\022\033\n\023ga" +
      "inBuySpiritReward\030J \001(\004\022\031\n\021gainQiuYuanRe" +
      "ward\030K \003(\005\022\026\n\016gainLvUpReward\030L \003(\005\022\031\n\021ga" +
      "inChapterReward\030M \003(\005\022\035\n\025gainChapterStar" +
      "Reward\030O \003(\005\022\033\n\023gainFriendNumReward\030P \003(" +
      "\005\022\026\n\016gainCardReward\030Q \003(\005\022\026\n\016gainItemRew" +
      "ard\030R \003(\005\022\030\n\020gainEveryDayTili\030S \001(\004\022\030\n\020g" +
      "ainEveryDayGold\030T \001(\004\022\027\n\017receiveXianYuan" +
      "\030U \001(\005\022\025\n\rdrawCardTimes\030W \001(\005\022\026\n\016pvpFigh",
      "tWinNum\030X \001(\005\022\026\n\016multiLoginDays\030Y \001(\005\022\024\n" +
      "\014totalPayGold\030Z \001(\003\022\033\n\023amountPaymentRewa" +
      "rd\030[ \003(\005\022#\n\rmissionsDaily\030] \003(\0132\014.Missio" +
      "nItem\022\027\n\017pvpNewFightFlag\030^ \001(\010\022\017\n\007qiuyua" +
      "n\030_ \001(\005\022\023\n\013qiuyuanGold\030` \001(\005\022\017\n\007newMail\030" +
      "a \001(\010\022\021\n\tpvpWinNum\030b \001(\005\022\026\n\016firstPayRewa" +
      "rd\030c \001(\010\022\020\n\010vipGifts\030d \003(\005\022\021\n\tvipReward\030" +
      "e \001(\010\022\017\n\007vipCard\030f \001(\005\022\034\n\nvipAllGift\030g \003" +
      "(\0132\010.MapItem\022\022\n\nguideIndex\030h \001(\005\022\021\n\tisQi" +
      "anDao\030i \001(\010\022\031\n\007qianDao\030j \001(\0132\010.MapItem\022\023",
      "\n\013battleIndex\030k \001(\005\022\026\n\016caishenCoinNum\030l " +
      "\001(\005\022\031\n\021triggerGuideIndex\030m \003(\005\022\031\n\021chapte" +
      "rEasyReward\030n \003(\005\022\033\n\023chapterNormalReward" +
      "\030o \003(\005\022\031\n\021chapterHardReward\030p \003(\005\022\032\n\022act" +
      "ivityEasyReward\030q \003(\005\022\025\n\rcardEffectNum\030r" +
      " \001(\005\022\026\n\016baoXiangReward\030s \003(\005\022\027\n\017newFrien" +
      "dInvite\030t \001(\005\022\031\n\021yunyouRefreshTime\030u \001(\003" +
      "\022\023\n\013yunyouItems\030v \003(\005\022\020\n\010lvReward\030w \001(\005\022" +
      "\022\n\nqiuBaoDate\030x \001(\003\022\023\n\013qiuBaoTimes\030y \001(\005" +
      "\022\032\n\010itemTask\030z \003(\0132\010.MapItem\022\032\n\010cardTask",
      "\030{ \003(\0132\010.MapItem\022\031\n\021collectCardReward\030| " +
      "\003(\005\022\022\n\ncardReward\030} \003(\005\022\022\n\nitemReward\030~ " +
      "\003(\005\022\031\n\007vipNums\030\177 \003(\0132\010.MapItem\022\031\n\020firstP" +
      "ayExtraIds\030\200\001 \003(\005\022\032\n\021assetBundle_State\030\201" +
      "\001 \001(\005\022\017\n\006userId\030\202\001 \001(\003\022\021\n\010serverId\030\203\001 \001(" +
      "\005\022\021\n\010username\030\204\001 \001(\t\022+\n\020pvpExchangeItems" +
      "\030\205\001 \003(\0132\020.PvpExchangeItem\022\016\n\005hunyu\030\206\001 \001(" +
      "\005\022\025\n\014firstDrawIds\030\207\001 \003(\005\022\021\n\010openDate\030\210\001 " +
      "\001(\004\022#\n\020todyTastePantaos\030\211\001 \003(\0132\010.MapItem" +
      "\022\024\n\013battleScore\030\212\001 \001(\005\022\017\n\006lingLi\030\213\001 \001(\005\022",
      "\022\n\tbuyLingli\030\214\001 \001(\005\022\023\n\nlingLiDate\030\215\001 \001(\004" +
      "\022\026\n\rshenMoDuiHuan\030\227\001 \003(\005\022\026\n\rbuyShenMoIte" +
      "m\030\230\001 \003(\005\022\017\n\006xiuWei\030\231\001 \001(\005\022\025\n\014hasPvpRewar" +
      "d\030\232\001 \001(\010\022\017\n\006gongDe\030\233\001 \001(\003\022\025\n\014gongDeRewar" +
      "d\030\234\001 \003(\005\022\021\n\010rankRise\030\235\001 \001(\005\022\r\n\004rank\030\236\001 \001" +
      "(\003\022\033\n\010drawCard\030\237\001 \003(\0132\010.MapItem\022\021\n\010hufaO" +
      "pen\030\240\001 \001(\010\022\031\n\020caishenSilverNum\030\241\001 \001(\005\022\030\n" +
      "\017drawCardReward2\030\242\001 \001(\010\022\024\n\013playerPrefs\030\243" +
      "\001 \003(\t\022&\n\nmissionMap\030\244\001 \003(\0132\021.DaliyMissio" +
      "nItem\022\023\n\nmissionNum\030\245\001 \001(\005\022\022\n\tyunyouNum\030",
      "\246\001 \001(\005\022\027\n\016pvpExchangeNum\030\247\001 \001(\005\022\022\n\tfrien" +
      "dNum\030\250\001 \001(\005\022\030\n\017clearShenMoItem\030\253\001 \001(\010\022\026\n" +
      "\rrefreshHour24\030\254\001 \001(\010\022\014\n\003pay\030\255\001 \001(\010\022\021\n\010i" +
      "sShutUp\030\256\001 \001(\010\022\023\n\nshutUpDate\030\257\001 \001(\004\022\022\n\ts" +
      "hutUpEnd\030\260\001 \001(\004\022$\n\014activityItem\030\261\001 \003(\0132\r" +
      ".ActivityItem\022\036\n\tpayReward\030\262\001 \003(\0132\n.PayR" +
      "eward\022\023\n\nyunYouTime\030\263\001 \001(\005\022\026\n\rpvpChangeT" +
      "ime\030\264\001 \001(\005\022\031\n\020shenMoChangeTime\030\265\001 \001(\005\022\022\n" +
      "\tshenMoNum\030\266\001 \001(\005\022\024\n\013itemLvUpNum\030\267\001 \001(\005\022" +
      "\024\n\013cardLvUpNum\030\270\001 \001(\005\022\024\n\013shenTongNum\030\271\001 ",
      "\001(\005\022\021\n\010skillNum\030\272\001 \001(\005\022\020\n\007huFaNum\030\273\001 \001(\005" +
      "\022\023\n\nxiuLianNum\030\274\001 \001(\005\022\023\n\nchangeName\030\275\001 \001" +
      "(\005\022\027\n\016chengjiuReward\030\276\001 \003(\005\022\034\n\023fenXiangR" +
      "ewardTimes\030\277\001 \001(\005\022\031\n\020weiXinFirstShare\030\300\001" +
      " \001(\010\022\023\n\nweiXinOpen\030\301\001 \001(\010\022\023\n\nxilianOpen\030" +
      "\302\001 \001(\010\022\022\n\tpvpWinMax\030\303\001 \001(\005\022\023\n\ninviteCode" +
      "\030\304\001 \001(\t\022\022\n\tinviteNum\030\305\001 \001(\005\022\022\n\tinviterId" +
      "\030\306\001 \001(\003\022\036\n\025clearFirstPayExtraIds\030\307\001 \001(\010\022" +
      "!\n\rloginActivity\030\310\001 \001(\0132\t.MapItem3\022\023\n\nch" +
      "oukaQuan\030\311\001 \001(\005\022\027\n\016shenJiangScore\030\316\001 \001(\005",
      "\022\034\n\023shenJiangTotalScore\030\317\001 \001(\005\022\026\n\rshenJi" +
      "angRank\030\320\001 \001(\005\022\030\n\017inviteNumReward\030\321\001 \003(\005" +
      "\022\024\n\013yuanshenBox\030\322\001 \003(\t\022\027\n\004boxs\030\323\001 \003(\0132\010." +
      "MapItem\022\031\n\006buyBox\030\324\001 \003(\0132\010.MapItem\022\021\n\010zh" +
      "uanpan\030\325\001 \001(\005\022\024\n\013sevenReward\030\326\001 \003(\005\022\022\n\tp" +
      "layerNum\030\327\001 \003(\005\022\021\n\010rewardId\030\330\001 \003(\005\022\025\n\014in" +
      "viteReward\030\331\001 \001(\010\022\020\n\007lingHun\030\332\001 \001(\003\022\031\n\020l" +
      "iuDaoDuiHuanIds\030\333\001 \003(\005\022\036\n\025liuDaoDuiHuanI" +
      "dsBuyed\030\334\001 \003(\005\022\031\n\020liuDaoChangeTime\030\335\001 \001(" +
      "\005\022\036\n\025liuDaoBaoXiangOpenNum\030\336\001 \001(\005\022\027\n\016vip",
      "CardAllLift\030\342\001 \001(\005\022\031\n\020vipAllLifeReward\030\343" +
      "\001 \001(\010\022\030\n\017cardGroupLiuDao\030\344\001 \003(\003\022\035\n\024cardG" +
      "roupFightLiuDao\030\345\001 \003(\005\022\037\n\014drawCardFree\030\346" +
      "\001 \003(\0132\010.MapItem\022\035\n\024liudaoEnterHeroLimit\030" +
      "\347\001 \001(\005\022\026\n\rtodayQuestNum\030\350\001 \001(\005\022\017\n\006cardId" +
      "\030\351\001 \001(\005\022\031\n\020enterLiuDaoTimes\030\352\001 \001(\005\022\020\n\007xu" +
      "nshan\030\353\001 \001(\005\022\027\n\016dailyLeftTimes\030\354\001 \001(\005\022\026\n" +
      "\rdailyBuyTimes\030\201\002 \001(\005\022\023\n\nnextCDTime\030\202\002 \001" +
      "(\003\022\021\n\010shouHuId\030\203\002 \001(\005\022\026\n\rcancelCDTimes\030\204" +
      "\002 \001(\005\022\023\n\nxunshanStr\030\205\002 \003(\005\022\"\n\010gangInfo\030\206",
      "\002 \001(\0132\017.PlayerGangItem\022\021\n\010hasDFBet\030\207\002 \001(" +
      "\010\022\037\n\014gangExchange\030\210\002 \003(\0132\010.MapItem\022!\n\030ga" +
      "ngRefreshExchangeTimes\030\211\002 \001(\005\022 \n\ndfTeamI" +
      "nfo\030\212\002 \001(\0132\013.DFTeamItem\022\035\n\024vipDailyGiftB" +
      "uyCount\030\213\002 \001(\005\022\026\n\rtrialsDFTimes\030\214\002 \001(\005\022\020" +
      "\n\007dfBetId\030\215\002 \001(\003\022\032\n\007xunxian\030\216\002 \001(\0132\010.Xun" +
      "xian\022\024\n\013auctionType\030\217\002 \001(\005\022,\n\020securityCo" +
      "deItem\030\220\002 \001(\0132\021.SecurityCodeItem\022\022\n\tlogi" +
      "n1100\030\221\002 \001(\010\022\031\n\020isShowDFInMainUI\030\222\002 \001(\010\022" +
      "\032\n\021isVipUpByPlayerLv\030\223\002 \001(\010\0222\n\020hongbaoAc",
      "tivitys\030\224\002 \001(\0132\027.HongbaoActivityMessage\022" +
      "\034\n\023isOpenedBoxEveryDay\030\225\002 \001(\010\022\024\n\013admobSw" +
      "itch\030\226\002 \001(\010\022&\n\rarenaTeamInfo\030\230\002 \001(\0132\016.Ar" +
      "enaTeamItem\022\032\n\021sectionGuideIndex\030\231\002 \001(\005\022" +
      "\022\n\tjiaoYiBuy\030\232\002 \001(\005\022\023\n\njiaoYiSale\030\233\002 \001(\005" +
      "\022\031\n\020dailyLongGongBox\030\234\002 \001(\005\022\024\n\013dailyLiuD" +
      "ao\030\235\002 \001(\005\022&\n\nescortItem\030\236\002 \001(\0132\021.PlayerE" +
      "scortItem\022$\n\016escortTeamInfo\030\237\002 \001(\0132\013.DFT" +
      "eamItem\022\021\n\010position\030\240\002 \001(\005\022$\n\016shenMoTeam" +
      "Item\030\241\002 \001(\0132\013.DFTeamItem\022!\n\013pvpTeamItem\030",
      "\242\002 \001(\0132\013.DFTeamItem\022 \n\nfbTeamItem\030\243\002 \001(\013" +
      "2\013.DFTeamItem\022\034\n\023gangModifyNameTimes\030\244\002 " +
      "\001(\005\022\033\n\022startTime_MultiExp\030\245\002 \001(\004\022\031\n\020endT" +
      "ime_MultiExp\030\246\002 \001(\004\022\r\n\004rate\030\247\002 \001(\005\022\021\n\010ne" +
      "xtTime\030\250\002 \001(\003\022\036\n\025liuDaoEnemyStartIndex\030\251" +
      "\002 \001(\005\022\034\n\023liuDaoEnemyEndIndex\030\252\002 \001(\005\022\022\n\tr" +
      "ewardIds\030\253\002 \003(\005\022\036\n\025liuDaoSweepHaveReward" +
      "\030\254\002 \001(\005\022\'\n\022exchangeItemReward\030\255\002 \003(\0132\n.P" +
      "ayReward\022!\n\030templeDayRemainSeekTimes\030\256\002 " +
      "\001(\005\022 \n\ntempleTeam\030\257\002 \001(\0132\013.DFTeamItem\022$\n",
      "\014doubleReward\030\260\002 \003(\0132\r.DoubleReward\0223\n\030s" +
      "henmoRankActivityReward\030\261\002 \001(\0132\020.Yunying" +
      "Activity\0222\n\027arenaRankActivityReward\030\262\002 \001" +
      "(\0132\020.YunyingActivity\0224\n\031openBoxRankActiv" +
      "ityReward\030\263\002 \001(\0132\020.YunyingActivity\022\035\n\024te" +
      "mpleCultivateCards\030\264\002 \003(\003\022\033\n\022jingYanDanC" +
      "ostGold\030\265\002 \001(\005\022\032\n\021cardExpDeclineNum\030\266\002 \001" +
      "(\005\022\022\n\trankValue\030\267\002 \001(\005\022\027\n\016hasTempleEvent" +
      "\030\270\002 \001(\010\022\024\n\013redPacketId\030\271\002 \001(\005\022\025\n\014redPack" +
      "etNum\030\272\002 \001(\005\0226\n\025customPushItemMessage\030\273\002",
      " \001(\0132\026.CustomPushItemMessage\022\025\n\014zhuanPan" +
      "Nums\030\274\002 \001(\005\022\030\n\017zhuanPanOpenIds\030\275\002 \003(\005\"n\n" +
      "\014DoubleReward\022\021\n\tstartDate\030\001 \001(\004\022\017\n\007endD" +
      "ate\030\002 \001(\004\022\014\n\004rate\030\003 \001(\005\022\014\n\004type\030\004 \003(\005\022\r\n" +
      "\005title\030\005 \001(\t\022\017\n\007content\030\006 \001(\t\"b\n\026Hongbao" +
      "ActivityMessage\022\021\n\tstartTime\030\001 \001(\004\022\017\n\007en" +
      "dTime\030\002 \001(\004\022\022\n\ndecription\030\003 \001(\t\022\020\n\010ownMo" +
      "ney\030\004 \001(\005\"K\n\014ZhuanPanItem\022\n\n\002lv\030\001 \001(\005\022\013\n" +
      "\003vip\030\002 \001(\005\022\021\n\tbeginDate\030\003 \001(\004\022\017\n\007endDate" +
      "\030\004 \001(\004\"B\n\tPayReward\022\n\n\002id\030\001 \001(\t\022\014\n\004gold\030",
      "\002 \001(\005\022\r\n\005times\030\003 \001(\005\022\014\n\004gain\030\004 \001(\005\"V\n\017Yu" +
      "nyingActivity\022\n\n\002id\030\001 \001(\t\022\014\n\004gold\030\002 \001(\005\022" +
      "\r\n\005times\030\003 \001(\005\022\014\n\004gain\030\004 \001(\005\022\014\n\004type\030\005 \001" +
      "(\005\"=\n\tTrainItem\022\021\n\ttrainType\030\001 \001(\005\022\017\n\007qu" +
      "ality\030\002 \001(\005\022\014\n\004used\030\003 \001(\010\"\241\001\n\010HuFaItem\022\r" +
      "\n\005cards\030\001 \003(\003\022\020\n\010quality1\030\002 \001(\005\022\020\n\010quali" +
      "ty2\030\003 \001(\005\022\020\n\010quality3\030\004 \001(\005\022\020\n\010quality4\030" +
      "\005 \001(\005\022\016\n\006addon1\030\006 \001(\005\022\016\n\006addon2\030\007 \001(\005\022\016\n" +
      "\006addon3\030\010 \001(\005\022\016\n\006addon4\030\t \001(\005\"\336\001\n\005Items\022" +
      "\n\n\002id\030\001 \001(\003\022\016\n\006itemid\030\002 \001(\005\022\n\n\002lv\030\003 \001(\005\022",
      "\013\n\003num\030\005 \001(\005\022\025\n\radvancedTimes\030\006 \001(\005\022\"\n\020f" +
      "englingProperty\030\007 \003(\0132\010.MapItem\022\017\n\007usedN" +
      "um\030\010 \001(\005\022\020\n\010isLocked\030\t \001(\005\022\"\n\020flLockedPr" +
      "operty\030\n \003(\0132\010.MapItem\022\020\n\010ownTimes\030\013 \001(\004" +
      "\022\014\n\004type\030\014 \001(\005\"5\n\tQuestItem\022\n\n\002id\030\001 \001(\005\022" +
      "\014\n\004star\030\002 \001(\005\022\016\n\006starId\030\003 \003(\005\"@\n\016Equipme" +
      "ntItems\022\031\n\021equipmentPosition\030\001 \001(\005\022\023\n\013eq" +
      "uipmentId\030\002 \001(\003\"\356\002\n\rMailEncourage\022\014\n\004gol" +
      "d\030\001 \001(\005\022\017\n\007stamina\030\002 \001(\005\022\016\n\006spirit\030\003 \001(\005" +
      "\022\017\n\007quility\030\004 \001(\005\022\013\n\003num\030\005 \001(\005\022\021\n\tshengW",
      "ang\030\006 \001(\005\022\020\n\010xianYuan\030\007 \001(\005\022\017\n\007daoxing\030\010" +
      " \001(\005\022\014\n\004coin\030\033 \001(\005\022\016\n\006silver\030\034 \001(\005\022\017\n\007vi" +
      "pGold\030\035 \001(\005\022\016\n\006xiuWei\030\036 \001(\005\022\016\n\006lingli\030\037 " +
      "\001(\005\022\022\n\nchoukaQuan\030  \001(\005\022\r\n\005hunyu\030! \001(\005\022\017" +
      "\n\007lingHun\030\" \001(\005\022 \n\rcardSignItems\030\' \003(\0132\t" +
      ".MapItem6\022\030\n\005items\030( \003(\0132\t.MapItem6\022\033\n\010b" +
      "oxItems\030) \003(\0132\t.MapItem6\"\335\001\n\022PvpFightRes" +
      "ultItem\022\014\n\004type\030\001 \001(\005\022\022\n\ntargetName\030\002 \001(" +
      "\t\022\r\n\005floor\030\003 \001(\005\022\014\n\004gold\030\004 \001(\005\022\021\n\tshengW" +
      "ang\030\005 \001(\005\022\023\n\013targetFloor\030\006 \001(\005\022\014\n\004date\030\007",
      " \001(\004\022\020\n\010targetId\030\010 \001(\003\022\014\n\004coin\030\t \001(\005\022\020\n\010" +
      "resultId\030\n \001(\003\022 \n\030displayFightResultButt" +
      "on\030\013 \001(\010\"s\n\014ShenTongItem\022\n\n\002id\030\001 \001(\005\022\013\n\003" +
      "exp\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\022\023\n\013expMultiple\030" +
      "\004 \001(\005\022\021\n\tavailable\030\005 \001(\010\022\023\n\013isTiansheng\030" +
      "\006 \001(\010\"\206\001\n\013MissionItem\022\n\n\002id\030\001 \001(\005\022\016\n\006sta" +
      "tus\030\002 \001(\005\022\024\n\014dialogShowed\030\003 \001(\010\022\026\n\016targe" +
      "tFinished\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\022\016\n\006aimNum\030" +
      "\006 \001(\005\022\017\n\007guideId\030\007 \001(\t\"}\n\025ServerListMess" +
      "ageItem\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\n\n\002ip\030",
      "\003 \001(\t\022\014\n\004port\030\004 \001(\005\022\016\n\006status\030\005 \001(\005\022\017\n\007t" +
      "uiJian\030\006 \001(\005\022\017\n\007isLogin\030\007 \001(\010\".\n\016VipPlay" +
      "ersItem\022\034\n\nvipPlayers\030\001 \003(\0132\010.MapItem\"\320\001" +
      "\n\017PvpExchangeItem\022\n\n\002id\030\001 \001(\005\022\022\n\ncostCre" +
      "dit\030\002 \001(\005\022\022\n\nrewardCard\030\003 \001(\005\022\025\n\rrewardC" +
      "ardNum\030\004 \001(\005\022\022\n\nrewardItem\030\005 \001(\005\022\025\n\rrewa" +
      "rdItemNum\030\006 \001(\005\022\031\n\021rewardMagicWeapon\030\007 \001" +
      "(\005\022\034\n\024rewardMagicWeaponNum\030\010 \001(\005\022\016\n\006sell" +
      "ed\030\t \001(\010\"\213\003\n\nShenMoItem\022\n\n\002id\030\001 \001(\003\022\020\n\010s" +
      "henMoId\030\002 \001(\005\022\n\n\002hp\030\003 \001(\005\022\r\n\005maxHp\030\004 \001(\005",
      "\022\022\n\nescapeDate\030\005 \001(\004\022\014\n\004name\030\006 \001(\t\022\020\n\010pl" +
      "ayerId\030\007 \001(\003\022\n\n\002lv\030\010 \001(\005\022\r\n\005share\030\t \001(\010\022" +
      "\025\n\rcardConfigIds\030\n \003(\005\022\024\n\014finderReward\030\013" +
      " \001(\010\022\024\n\014maxDmgReward\030\014 \001(\010\022\024\n\014killerRewa" +
      "rd\030\r \001(\010\022\025\n\rfinderReward2\030\016 \001(\010\022\025\n\rmaxDm" +
      "gReward2\030\017 \001(\010\022\025\n\rkillerReward2\030\020 \001(\010\022\030\n" +
      "\020playerNameKiller\030\021 \001(\t\022\020\n\010attacked\030\022 \001(" +
      "\010\022\024\n\014attackReward\030\023 \001(\010\022\025\n\rattackReward2" +
      "\030\024 \001(\010\"7\n\020DaliyMissionItem\022\020\n\010rewardId\030\001" +
      " \001(\005\022\021\n\tcontentId\030\002 \003(\005\"\246\002\n\014ActivityItem",
      "\022\014\n\004type\030\001 \001(\005\022\017\n\007content\030\002 \001(\t\022\021\n\tbegin" +
      "Date\030\003 \001(\004\022\017\n\007endDate\030\004 \001(\004\022\'\n\nrewardIte" +
      "m\030\005 \003(\0132\023.ActivityRewardItem\022\n\n\002id\030\006 \001(\005" +
      "\022\n\n\002lv\030\007 \001(\005\022\013\n\003vip\030\010 \001(\005\022\r\n\005title\030\t \001(\t" +
      "\022\r\n\005model\030\n \001(\t\022\014\n\004name\030\013 \001(\t\022,\n\017timesRe" +
      "wardItem\030\014 \003(\0132\023.ActivityRewardItem\022+\n\016o" +
      "nlyRewardItem\030\r \003(\0132\023.ActivityRewardItem" +
      "\"\225\001\n\rLoginActivity\022\014\n\004type\030\001 \001(\005\022\017\n\007cont" +
      "ent\030\002 \001(\t\022\021\n\tbeginDate\030\003 \001(\004\022\017\n\007endDate\030" +
      "\004 \001(\004\022\n\n\002id\030\006 \001(\005\022\n\n\002lv\030\007 \001(\005\022\013\n\003vip\030\010 \001",
      "(\005\022\r\n\005title\030\t \001(\t\022\r\n\005model\030\n \001(\t\"\261\001\n\022Act" +
      "ivityRewardItem\022\n\n\002id\030\001 \001(\t\022\020\n\010goalGold\030" +
      "\002 \001(\005\022\r\n\005title\030\003 \001(\t\022\r\n\005times\030\004 \001(\005\022\036\n\tp" +
      "rotoData\030\005 \003(\0132\013.RewardItem\022\016\n\006status\030\006 " +
      "\001(\005\022\021\n\tnotValide\030\007 \001(\010\022\034\n\007consume\030\010 \003(\0132" +
      "\013.RewardItem\"3\n\nRewardItem\022\014\n\004type\030\001 \001(\005" +
      "\022\n\n\002id\030\002 \001(\005\022\013\n\003num\030\003 \001(\005\"b\n\010ChatItem\022\n\n" +
      "\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\017\n\007content\030\003 \001(\t" +
      "\022\013\n\003vip\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\022\020\n\010chatDate\030" +
      "\006 \001(\004\"\324\002\n\022PvpFightPlayerItem\022\n\n\002id\030\001 \001(\003",
      "\022\014\n\004name\030\002 \001(\t\022\r\n\005floor\030\003 \001(\005\022\016\n\006cardId\030" +
      "\004 \001(\005\022\023\n\013battleScore\030\005 \001(\005\022\n\n\002lv\030\006 \001(\005\022\024" +
      "\n\014worshiptimes\030\007 \001(\005\022\017\n\007pvpWins\030\010 \001(\005\022\030\n" +
      "\020pvpFightTotalNum\030\t \001(\005\022\026\n\016pvpFightWinNu" +
      "m\030\n \001(\005\022\026\n\016rewardLastTime\030\013 \001(\003\022\027\n\017rewar" +
      "dShengWang\030\014 \001(\005\022\013\n\003vip\030\r \001(\005\022\022\n\nrewardC" +
      "oin\030\016 \001(\005\022\021\n\tfloorDate\030\017 \001(\004\022&\n\tpvpResul" +
      "t\030\020 \003(\0132\023.PvpFailFightResult\"[\n\022PvpFailF" +
      "ightResult\022\020\n\010resultId\030\001 \001(\003\022\022\n\nattackNa" +
      "me\030\002 \001(\t\022\014\n\004type\030\003 \001(\005\022\021\n\tfightDate\030\004 \001(",
      "\004\"\214\001\n\016PlayerGangItem\022\020\n\010gangName\030\001 \001(\t\022\037" +
      "\n\010position\030\002 \001(\0162\r.GangPosition\022\014\n\004fund\030" +
      "\003 \001(\005\022\023\n\013hasNewEvent\030\004 \001(\010\022\016\n\006gangId\030\005 \001" +
      "(\003\022\024\n\014exitGangTime\030\006 \001(\004\"\331\003\n\023DFPlayerInf" +
      "oMessage\022\016\n\006roleId\030\001 \001(\003\022\022\n\ntrialsRank\030\002" +
      " \001(\005\022\024\n\014trialsPoints\030\003 \001(\005\022\020\n\010roleName\030\004" +
      " \001(\t\022\035\n\005group\030\005 \001(\0162\016.DFTrialsGroup\022\r\n\005v" +
      "ipLv\030\006 \001(\005\022\017\n\007totalZL\030\007 \001(\005\022\020\n\010gangName\030" +
      "\010 \001(\t\022\025\n\rtrialsDFTimes\030\t \001(\005\022\036\n\026trialsFr" +
      "eeRefreshTimes\030\n \001(\005\022\027\n\005stage\030\013 \001(\0162\010.DF",
      "Stage\022\025\n\rdfVipBuyTimes\030\014 \001(\005\022\020\n\010hasBeted" +
      "\030\r \001(\010\022\027\n\017buyRefreshTimes\030\016 \001(\005\022\020\n\010betTi" +
      "mes\030\017 \001(\005\022\020\n\010betPlays\030\020 \003(\003\022\027\n\017promoteWi" +
      "nTimes\030\021 \001(\005\022\026\n\016trialsRivalIds\030\022 \003(\003\022\027\n\017" +
      "leaderCardCfgId\030\023 \001(\005\022\023\n\013championNum\030\024 \001" +
      "(\005\022\020\n\010uniqueId\030\025 \001(\003\"9\n\017MailSendMessage\022" +
      "\021\n\treceivers\030\001 \003(\003\022\023\n\013mailContent\030\002 \001(\t\"" +
      "9\n\026DFTeamCardGroupMessage\022\037\n\nplayerItem\030" +
      "\001 \001(\0132\013.PlayerItem\"s\n\007Xunxian\022\031\n\021xunxian" +
      "CountDaily\030\001 \001(\005\022\021\n\txunxianCD\030\002 \001(\004\022\026\n\016x",
      "unxianQuestId\030\003 \001(\005\022\021\n\txunxianId\030\004 \001(\005\022\017" +
      "\n\007modelId\030\005 \001(\005\" \n\017TestTimeMessage\022\r\n\005ti" +
      "mes\030\001 \003(\003\"!\n\020BenchmarkMessage\022\r\n\005infos\030\001" +
      " \003(\t\"w\n\026SecurityCodeFreezeItem\022-\n\013freeze" +
      "State\030\001 \001(\0162\030.SecurityCodeFreezeState\022\027\n" +
      "\017freezeCountdown\030\002 \001(\004\022\025\n\rfreezeEndTime\030" +
      "\003 \001(\004\"\252\001\n\020SecurityCodeItem\022\024\n\014securityCo" +
      "de\030\001 \001(\t\022\034\n\024isEnableSecurityCode\030\002 \001(\010\022+" +
      "\n\nfreezeItem\030\003 \001(\0132\027.SecurityCodeFreezeI" +
      "tem\022\030\n\020inputErrorCounts\030\004 \001(\005\022\033\n\023hasInpu",
      "tCorrectCode\030\005 \001(\010\"S\n\rArenaTeamItem\022%\n\022a" +
      "renaCardHuFaGroup\030\001 \003(\0132\t.MapItem4\022\033\n\023ar" +
      "enaCardGroupFight\030\002 \003(\005\"<\n\031ArenaTeamCard" +
      "GroupMessage\022\037\n\nplayerItem\030\001 \001(\0132\013.Playe" +
      "rItem\"\340\001\n\020PlayerEscortItem\022\023\n\013escortTime" +
      "s\030\001 \001(\005\022\020\n\010robTimes\030\002 \001(\005\022\026\n\016buyEscortTi" +
      "mes\030\003 \001(\005\022\023\n\013buyRobTimes\030\004 \001(\005\022\026\n\016robSta" +
      "rtCDTime\030\005 \001(\004\022\027\n\017slfEscortShipId\030\006 \001(\003\022" +
      "\032\n\022slfEscortShipCfgId\030\007 \001(\005\022\030\n\020refreshSh" +
      "ipTimes\030\010 \001(\005\022\021\n\tcanEscort\030\t \001(\010\"=\n\032Esco",
      "rtTeamCardGroupMessage\022\037\n\nplayerItem\030\001 \001" +
      "(\0132\013.PlayerItem\"J\n\nDFTeamItem\022\"\n\017dFCardH" +
      "uFaGroup\030\001 \003(\0132\t.MapItem4\022\030\n\020dFCardGroup" +
      "Fight\030\002 \003(\005\"6\n\023BuyEscortNumMessage\022\037\n\npl" +
      "ayerItem\030\001 \001(\0132\013.PlayerItem\"3\n\020BuyRobNum" +
      "Message\022\037\n\nplayerItem\030\001 \001(\0132\013.PlayerItem" +
      "\"=\n\032TempleTeamCardGroupMessage\022\037\n\nplayer" +
      "Item\030\001 \001(\0132\013.PlayerItem\"\335\002\n\tFabaoItem\022\017\n" +
      "\007fabaoId\030\001 \001(\005\022\021\n\tqualityId\030\002 \001(\005\022\013\n\003exp" +
      "\030\003 \001(\005\022\n\n\002lv\030\004 \001(\005\022\023\n\013shentongIds\030\005 \003(\t\022",
      "\020\n\010skillIds\030\006 \003(\t\022\n\n\002hp\030\007 \001(\005\022\013\n\003atk\030\010 \001" +
      "(\005\022\013\n\003def\030\t \001(\005\022\020\n\010magicAtk\030\n \001(\005\022\020\n\010mag" +
      "icDef\030\013 \001(\005\022\013\n\003hit\030\014 \001(\005\022\013\n\003agi\030\r \001(\005\022\014\n" +
      "\004crit\030\016 \001(\005\022\013\n\003ten\030\017 \001(\005\022\017\n\007revenge\030\020 \001(" +
      "\005\022\023\n\013antiRevenge\030\021 \001(\005\022\021\n\tdoubleHit\030\022 \001(" +
      "\005\022\025\n\rantiDoubleHit\030\023 \001(\005\022\r\n\005speed\030\024 \001(\005\022" +
      "\016\n\006tupoLv\030\025 \001(\005\"\340\001\n\025CustomPushItemMessag" +
      "e\022#\n\nactivities\030\001 \003(\0132\017.CustomPushItem\022\021" +
      "\n\taccountId\030\002 \001(\004\022\016\n\006roleId\030\003 \001(\004\022\016\n\006dbn" +
      "ame\030\004 \001(\r\022\r\n\005money\030\005 \001(\r\022\017\n\007endTime\030\006 \001(",
      "\004\022\021\n\tbeginTime\030\007 \001(\004\022\021\n\tvalidTime\030\010 \001(\004\022" +
      "\022\n\nactivityId\030\t \001(\004\022\025\n\rrechargeMoney\030\n \001" +
      "(\004\"R\n\016CustomPushItem\022\016\n\006itemId\030\001 \001(\r\022\020\n\010" +
      "itemType\030\002 \001(\r\022\013\n\003cnt\030\003 \001(\r\022\021\n\titemIdStr" +
      "\030\004 \001(\t*Y\n\014GangPosition\022\026\n\022GANG_POSITION_" +
      "BOSS\020\001\022\027\n\023GANG_POSITION_ELDER\020\002\022\030\n\024GANG_" +
      "POSITION_MEMBER\020\003*\253\001\n\007DFStage\022 \n\034STAGE_N" +
      "OT_START_NO_CHAMPIONS\020\000\022\023\n\017STAGE_NOT_STA" +
      "RT\020\001\022\020\n\014STAGE_TRIALS\020\002\022\017\n\013STAGE_TOP32\020\003\022" +
      "\017\n\013STAGE_TOP16\020\004\022\016\n\nSTAGE_TOP8\020\005\022\024\n\020STAG",
      "E_SEMI_FINAL\020\006\022\017\n\013STAGE_FINAL\020\007*C\n\rDFTri" +
      "alsGroup\022\013\n\007GROUP_A\020\001\022\013\n\007GROUP_B\020\002\022\013\n\007GR" +
      "OUP_C\020\003\022\013\n\007GROUP_D\020\004*V\n\027SecurityCodeFree" +
      "zeState\022\014\n\010UNFREEZE\020\000\022\025\n\021FREEZE_CLEAR_CO" +
      "DE\020\001\022\026\n\022FREEZE_INPUT_ERROR\020\002*\213\001\n\nArenaSt" +
      "age\022\017\n\013NOT_STARTED\020\001\022\022\n\016START_TEAM_SET\020\002" +
      "\022\026\n\022START_SEEK_PARTNER\020\003\022\024\n\020START_SEEK_R" +
      "IVAL\020\004\022\017\n\013START_FIGHT\020\005\022\031\n\025START_SEEK_NE" +
      "XT_RIVAL\020\006B\010\n\006myudfs"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_CardItem_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_CardItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CardItem_descriptor,
              new java.lang.String[] { "Id", "CardId", "Lv", "Stage", "Date", "TrainHp", "TrainAtk", "TrainDef", "TrainMagicAtk", "TrainMagicDef", "TrainSuccessRate", "CardSlots", "Equipments", "ShenTongs", "ZhanFaId", "FreshZhanFaId", "LeaderSkillLv", "Hp", "Atk", "Def", "MagicAtk", "MagicDef", "Hit", "Agi", "Crit", "Ten", "Revenge", "AntiRevenge", "DoubleHit", "AntiDoubleHit", "Speed", "CardStar", "BattleScore", "HuFaItem", "StNum", "HfNum", "LiuDaoHp", "LiuDaoMaxHp", "HasEnterLiuDao", "CritDamageRate", "Leader", "Quality", "ShentongReturnHunyu", "OtherHunyu", "Exp", "Fabao", "CardStage", });
          internal_static_CardPosition_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_CardPosition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CardPosition_descriptor,
              new java.lang.String[] { "Pos", "Id", });
          internal_static_MapItem_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_MapItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapItem_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_MapItem2_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_MapItem2_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapItem2_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_MapItem3_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_MapItem3_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapItem3_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_MapDateItem_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_MapDateItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapDateItem_descriptor,
              new java.lang.String[] { "Key", "Date", });
          internal_static_MapItem4_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_MapItem4_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapItem4_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_MapItem6_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_MapItem6_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapItem6_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_FriendItem_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_FriendItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FriendItem_descriptor,
              new java.lang.String[] { "Id", "Name", "Lv", "Card", "Date", "Vip", "BattleScore", });
          internal_static_FriendChangeItem_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_FriendChangeItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FriendChangeItem_descriptor,
              new java.lang.String[] { "NewFriendId", "DeleteFriendId", });
          internal_static_FriendDetailItem_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_FriendDetailItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FriendDetailItem_descriptor,
              new java.lang.String[] { "Id", "Name", "Lv", "QiuYuan", "Cards", "Date", "BattleScore", "ReceiveStamina", "LoginTime", "Zhuzhen", "Vip", });
          internal_static_LiuDaoEnemyItemList_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_LiuDaoEnemyItemList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiuDaoEnemyItemList_descriptor,
              new java.lang.String[] { "Enemies", });
          internal_static_LiuDaoEnemyItem_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_LiuDaoEnemyItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiuDaoEnemyItem_descriptor,
              new java.lang.String[] { "Id", "Name", "Lv", "Cards", "CardGroup", "FightCardGroup", "Vip", "BattleScore", "Mirror", });
          internal_static_PieceItem_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_PieceItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PieceItem_descriptor,
              new java.lang.String[] { "Id", "Num", });
          internal_static_PlayerItem_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_PlayerItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerItem_descriptor,
              new java.lang.String[] { "Id", "Name", "Lv", "Exp", "DaoXing", "Vip", "Gold", "ShengWang", "XianYuan", "BagsUnlockGold", "Stamina", "Spirit", "FriendsCost", "TrainFreeRenew", "ReceiveStaminaNum", "TodayQuestNums", "TodayQuestRestNums", "DonateStamina", "ReceiveStamina", "StaminaDate", "FriendId", "LoginDate", "OnlineTime", "BagsUnlockGoldCd", "Coin", "MoonStarItem", "MagicWeapons", "DrawCardDate", "FirstPay", "FirstPayIds", "SpiritDate", "WorshipTimes", "WorshipIds", "GainRewardTime", "ExchangeTimes", "Mails", "MailFinished", "MailDeleted", "PvpFightResult", "BuyStamina", "BuySpirit", "PvpWins", "ShopItems", "LoginDays", "Missions", "Silver", "Cards", "CardGroup", "Pieces", "Items", "Hufas", "Trains", "Quests", "CardGroupFight", "MagicWeaponGroup", "RewardLastTime", "PvpWinReward", "LoginReward", "PvpFightNumReward", "DrawCardReward", "GainBuyStamina", "GainBuySpiritReward", "GainQiuYuanReward", "GainLvUpReward", "GainChapterReward", "GainChapterStarReward", "GainFriendNumReward", "GainCardReward", "GainItemReward", "GainEveryDayTili", "GainEveryDayGold", "ReceiveXianYuan", "DrawCardTimes", "PvpFightWinNum", "MultiLoginDays", "TotalPayGold", "AmountPaymentReward", "MissionsDaily", "PvpNewFightFlag", "Qiuyuan", "QiuyuanGold", "NewMail", "PvpWinNum", "FirstPayReward", "VipGifts", "VipReward", "VipCard", "VipAllGift", "GuideIndex", "IsQianDao", "QianDao", "BattleIndex", "CaishenCoinNum", "TriggerGuideIndex", "ChapterEasyReward", "ChapterNormalReward", "ChapterHardReward", "ActivityEasyReward", "CardEffectNum", "BaoXiangReward", "NewFriendInvite", "YunyouRefreshTime", "YunyouItems", "LvReward", "QiuBaoDate", "QiuBaoTimes", "ItemTask", "CardTask", "CollectCardReward", "CardReward", "ItemReward", "VipNums", "FirstPayExtraIds", "AssetBundleState", "UserId", "ServerId", "Username", "PvpExchangeItems", "Hunyu", "FirstDrawIds", "OpenDate", "TodyTastePantaos", "BattleScore", "LingLi", "BuyLingli", "LingLiDate", "ShenMoDuiHuan", "BuyShenMoItem", "XiuWei", "HasPvpReward", "GongDe", "GongDeReward", "RankRise", "Rank", "DrawCard", "HufaOpen", "CaishenSilverNum", "DrawCardReward2", "PlayerPrefs", "MissionMap", "MissionNum", "YunyouNum", "PvpExchangeNum", "FriendNum", "ClearShenMoItem", "RefreshHour24", "Pay", "IsShutUp", "ShutUpDate", "ShutUpEnd", "ActivityItem", "PayReward", "YunYouTime", "PvpChangeTime", "ShenMoChangeTime", "ShenMoNum", "ItemLvUpNum", "CardLvUpNum", "ShenTongNum", "SkillNum", "HuFaNum", "XiuLianNum", "ChangeName", "ChengjiuReward", "FenXiangRewardTimes", "WeiXinFirstShare", "WeiXinOpen", "XilianOpen", "PvpWinMax", "InviteCode", "InviteNum", "InviterId", "ClearFirstPayExtraIds", "LoginActivity", "ChoukaQuan", "ShenJiangScore", "ShenJiangTotalScore", "ShenJiangRank", "InviteNumReward", "YuanshenBox", "Boxs", "BuyBox", "Zhuanpan", "SevenReward", "PlayerNum", "RewardId", "InviteReward", "LingHun", "LiuDaoDuiHuanIds", "LiuDaoDuiHuanIdsBuyed", "LiuDaoChangeTime", "LiuDaoBaoXiangOpenNum", "VipCardAllLift", "VipAllLifeReward", "CardGroupLiuDao", "CardGroupFightLiuDao", "DrawCardFree", "LiudaoEnterHeroLimit", "TodayQuestNum", "CardId", "EnterLiuDaoTimes", "Xunshan", "DailyLeftTimes", "DailyBuyTimes", "NextCDTime", "ShouHuId", "CancelCDTimes", "XunshanStr", "GangInfo", "HasDFBet", "GangExchange", "GangRefreshExchangeTimes", "DfTeamInfo", "VipDailyGiftBuyCount", "TrialsDFTimes", "DfBetId", "Xunxian", "AuctionType", "SecurityCodeItem", "Login1100", "IsShowDFInMainUI", "IsVipUpByPlayerLv", "HongbaoActivitys", "IsOpenedBoxEveryDay", "AdmobSwitch", "ArenaTeamInfo", "SectionGuideIndex", "JiaoYiBuy", "JiaoYiSale", "DailyLongGongBox", "DailyLiuDao", "EscortItem", "EscortTeamInfo", "Position", "ShenMoTeamItem", "PvpTeamItem", "FbTeamItem", "GangModifyNameTimes", "StartTimeMultiExp", "EndTimeMultiExp", "Rate", "NextTime", "LiuDaoEnemyStartIndex", "LiuDaoEnemyEndIndex", "RewardIds", "LiuDaoSweepHaveReward", "ExchangeItemReward", "TempleDayRemainSeekTimes", "TempleTeam", "DoubleReward", "ShenmoRankActivityReward", "ArenaRankActivityReward", "OpenBoxRankActivityReward", "TempleCultivateCards", "JingYanDanCostGold", "CardExpDeclineNum", "RankValue", "HasTempleEvent", "RedPacketId", "RedPacketNum", "CustomPushItemMessage", "ZhuanPanNums", "ZhuanPanOpenIds", });
          internal_static_DoubleReward_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_DoubleReward_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DoubleReward_descriptor,
              new java.lang.String[] { "StartDate", "EndDate", "Rate", "Type", "Title", "Content", });
          internal_static_HongbaoActivityMessage_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_HongbaoActivityMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HongbaoActivityMessage_descriptor,
              new java.lang.String[] { "StartTime", "EndTime", "Decription", "OwnMoney", });
          internal_static_ZhuanPanItem_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_ZhuanPanItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZhuanPanItem_descriptor,
              new java.lang.String[] { "Lv", "Vip", "BeginDate", "EndDate", });
          internal_static_PayReward_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_PayReward_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PayReward_descriptor,
              new java.lang.String[] { "Id", "Gold", "Times", "Gain", });
          internal_static_YunyingActivity_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_YunyingActivity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_YunyingActivity_descriptor,
              new java.lang.String[] { "Id", "Gold", "Times", "Gain", "Type", });
          internal_static_TrainItem_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_TrainItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TrainItem_descriptor,
              new java.lang.String[] { "TrainType", "Quality", "Used", });
          internal_static_HuFaItem_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_HuFaItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HuFaItem_descriptor,
              new java.lang.String[] { "Cards", "Quality1", "Quality2", "Quality3", "Quality4", "Addon1", "Addon2", "Addon3", "Addon4", });
          internal_static_Items_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_Items_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Items_descriptor,
              new java.lang.String[] { "Id", "Itemid", "Lv", "Num", "AdvancedTimes", "FenglingProperty", "UsedNum", "IsLocked", "FlLockedProperty", "OwnTimes", "Type", });
          internal_static_QuestItem_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_QuestItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_QuestItem_descriptor,
              new java.lang.String[] { "Id", "Star", "StarId", });
          internal_static_EquipmentItems_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_EquipmentItems_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EquipmentItems_descriptor,
              new java.lang.String[] { "EquipmentPosition", "EquipmentId", });
          internal_static_MailEncourage_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_MailEncourage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MailEncourage_descriptor,
              new java.lang.String[] { "Gold", "Stamina", "Spirit", "Quility", "Num", "ShengWang", "XianYuan", "Daoxing", "Coin", "Silver", "VipGold", "XiuWei", "Lingli", "ChoukaQuan", "Hunyu", "LingHun", "CardSignItems", "Items", "BoxItems", });
          internal_static_PvpFightResultItem_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_PvpFightResultItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PvpFightResultItem_descriptor,
              new java.lang.String[] { "Type", "TargetName", "Floor", "Gold", "ShengWang", "TargetFloor", "Date", "TargetId", "Coin", "ResultId", "DisplayFightResultButton", });
          internal_static_ShenTongItem_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_ShenTongItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ShenTongItem_descriptor,
              new java.lang.String[] { "Id", "Exp", "Index", "ExpMultiple", "Available", "IsTiansheng", });
          internal_static_MissionItem_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_MissionItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MissionItem_descriptor,
              new java.lang.String[] { "Id", "Status", "DialogShowed", "TargetFinished", "Type", "AimNum", "GuideId", });
          internal_static_ServerListMessageItem_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_ServerListMessageItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ServerListMessageItem_descriptor,
              new java.lang.String[] { "Id", "Name", "Ip", "Port", "Status", "TuiJian", "IsLogin", });
          internal_static_VipPlayersItem_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_VipPlayersItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_VipPlayersItem_descriptor,
              new java.lang.String[] { "VipPlayers", });
          internal_static_PvpExchangeItem_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_PvpExchangeItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PvpExchangeItem_descriptor,
              new java.lang.String[] { "Id", "CostCredit", "RewardCard", "RewardCardNum", "RewardItem", "RewardItemNum", "RewardMagicWeapon", "RewardMagicWeaponNum", "Selled", });
          internal_static_ShenMoItem_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_ShenMoItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ShenMoItem_descriptor,
              new java.lang.String[] { "Id", "ShenMoId", "Hp", "MaxHp", "EscapeDate", "Name", "PlayerId", "Lv", "Share", "CardConfigIds", "FinderReward", "MaxDmgReward", "KillerReward", "FinderReward2", "MaxDmgReward2", "KillerReward2", "PlayerNameKiller", "Attacked", "AttackReward", "AttackReward2", });
          internal_static_DaliyMissionItem_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_DaliyMissionItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DaliyMissionItem_descriptor,
              new java.lang.String[] { "RewardId", "ContentId", });
          internal_static_ActivityItem_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_ActivityItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ActivityItem_descriptor,
              new java.lang.String[] { "Type", "Content", "BeginDate", "EndDate", "RewardItem", "Id", "Lv", "Vip", "Title", "Model", "Name", "TimesRewardItem", "OnlyRewardItem", });
          internal_static_LoginActivity_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_LoginActivity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LoginActivity_descriptor,
              new java.lang.String[] { "Type", "Content", "BeginDate", "EndDate", "Id", "Lv", "Vip", "Title", "Model", });
          internal_static_ActivityRewardItem_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_ActivityRewardItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ActivityRewardItem_descriptor,
              new java.lang.String[] { "Id", "GoalGold", "Title", "Times", "ProtoData", "Status", "NotValide", "Consume", });
          internal_static_RewardItem_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_RewardItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RewardItem_descriptor,
              new java.lang.String[] { "Type", "Id", "Num", });
          internal_static_ChatItem_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_ChatItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ChatItem_descriptor,
              new java.lang.String[] { "Id", "Name", "Content", "Vip", "Type", "ChatDate", });
          internal_static_PvpFightPlayerItem_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_PvpFightPlayerItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PvpFightPlayerItem_descriptor,
              new java.lang.String[] { "Id", "Name", "Floor", "CardId", "BattleScore", "Lv", "Worshiptimes", "PvpWins", "PvpFightTotalNum", "PvpFightWinNum", "RewardLastTime", "RewardShengWang", "Vip", "RewardCoin", "FloorDate", "PvpResult", });
          internal_static_PvpFailFightResult_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_PvpFailFightResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PvpFailFightResult_descriptor,
              new java.lang.String[] { "ResultId", "AttackName", "Type", "FightDate", });
          internal_static_PlayerGangItem_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_PlayerGangItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerGangItem_descriptor,
              new java.lang.String[] { "GangName", "Position", "Fund", "HasNewEvent", "GangId", "ExitGangTime", });
          internal_static_DFPlayerInfoMessage_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_DFPlayerInfoMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DFPlayerInfoMessage_descriptor,
              new java.lang.String[] { "RoleId", "TrialsRank", "TrialsPoints", "RoleName", "Group", "VipLv", "TotalZL", "GangName", "TrialsDFTimes", "TrialsFreeRefreshTimes", "Stage", "DfVipBuyTimes", "HasBeted", "BuyRefreshTimes", "BetTimes", "BetPlays", "PromoteWinTimes", "TrialsRivalIds", "LeaderCardCfgId", "ChampionNum", "UniqueId", });
          internal_static_MailSendMessage_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_MailSendMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MailSendMessage_descriptor,
              new java.lang.String[] { "Receivers", "MailContent", });
          internal_static_DFTeamCardGroupMessage_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_DFTeamCardGroupMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DFTeamCardGroupMessage_descriptor,
              new java.lang.String[] { "PlayerItem", });
          internal_static_Xunxian_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_Xunxian_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Xunxian_descriptor,
              new java.lang.String[] { "XunxianCountDaily", "XunxianCD", "XunxianQuestId", "XunxianId", "ModelId", });
          internal_static_TestTimeMessage_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_TestTimeMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TestTimeMessage_descriptor,
              new java.lang.String[] { "Times", });
          internal_static_BenchmarkMessage_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_BenchmarkMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BenchmarkMessage_descriptor,
              new java.lang.String[] { "Infos", });
          internal_static_SecurityCodeFreezeItem_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_SecurityCodeFreezeItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SecurityCodeFreezeItem_descriptor,
              new java.lang.String[] { "FreezeState", "FreezeCountdown", "FreezeEndTime", });
          internal_static_SecurityCodeItem_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_SecurityCodeItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SecurityCodeItem_descriptor,
              new java.lang.String[] { "SecurityCode", "IsEnableSecurityCode", "FreezeItem", "InputErrorCounts", "HasInputCorrectCode", });
          internal_static_ArenaTeamItem_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_ArenaTeamItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ArenaTeamItem_descriptor,
              new java.lang.String[] { "ArenaCardHuFaGroup", "ArenaCardGroupFight", });
          internal_static_ArenaTeamCardGroupMessage_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_ArenaTeamCardGroupMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ArenaTeamCardGroupMessage_descriptor,
              new java.lang.String[] { "PlayerItem", });
          internal_static_PlayerEscortItem_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_PlayerEscortItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerEscortItem_descriptor,
              new java.lang.String[] { "EscortTimes", "RobTimes", "BuyEscortTimes", "BuyRobTimes", "RobStartCDTime", "SlfEscortShipId", "SlfEscortShipCfgId", "RefreshShipTimes", "CanEscort", });
          internal_static_EscortTeamCardGroupMessage_descriptor =
            getDescriptor().getMessageTypes().get(53);
          internal_static_EscortTeamCardGroupMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EscortTeamCardGroupMessage_descriptor,
              new java.lang.String[] { "PlayerItem", });
          internal_static_DFTeamItem_descriptor =
            getDescriptor().getMessageTypes().get(54);
          internal_static_DFTeamItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DFTeamItem_descriptor,
              new java.lang.String[] { "DFCardHuFaGroup", "DFCardGroupFight", });
          internal_static_BuyEscortNumMessage_descriptor =
            getDescriptor().getMessageTypes().get(55);
          internal_static_BuyEscortNumMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BuyEscortNumMessage_descriptor,
              new java.lang.String[] { "PlayerItem", });
          internal_static_BuyRobNumMessage_descriptor =
            getDescriptor().getMessageTypes().get(56);
          internal_static_BuyRobNumMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BuyRobNumMessage_descriptor,
              new java.lang.String[] { "PlayerItem", });
          internal_static_TempleTeamCardGroupMessage_descriptor =
            getDescriptor().getMessageTypes().get(57);
          internal_static_TempleTeamCardGroupMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TempleTeamCardGroupMessage_descriptor,
              new java.lang.String[] { "PlayerItem", });
          internal_static_FabaoItem_descriptor =
            getDescriptor().getMessageTypes().get(58);
          internal_static_FabaoItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FabaoItem_descriptor,
              new java.lang.String[] { "FabaoId", "QualityId", "Exp", "Lv", "ShentongIds", "SkillIds", "Hp", "Atk", "Def", "MagicAtk", "MagicDef", "Hit", "Agi", "Crit", "Ten", "Revenge", "AntiRevenge", "DoubleHit", "AntiDoubleHit", "Speed", "TupoLv", });
          internal_static_CustomPushItemMessage_descriptor =
            getDescriptor().getMessageTypes().get(59);
          internal_static_CustomPushItemMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CustomPushItemMessage_descriptor,
              new java.lang.String[] { "Activities", "AccountId", "RoleId", "Dbname", "Money", "EndTime", "BeginTime", "ValidTime", "ActivityId", "RechargeMoney", });
          internal_static_CustomPushItem_descriptor =
            getDescriptor().getMessageTypes().get(60);
          internal_static_CustomPushItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CustomPushItem_descriptor,
              new java.lang.String[] { "ItemId", "ItemType", "Cnt", "ItemIdStr", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
